{
  "version": 3,
  "sources": ["../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/parser/utils.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/constants.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/error.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/parse_utf8.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/utils/latin.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/utils/node_byte_utils.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/utils/web_byte_utils.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/utils/byte_utils.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/bson_value.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/utils/number_utils.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/binary.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/code.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/db_ref.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/utils/string_utils.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/long.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/decimal128.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/double.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/int_32.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/max_key.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/min_key.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/objectid.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/parser/calculate_size.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/regexp.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/symbol.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/timestamp.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/parser/deserializer.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/parser/serializer.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/extended_json.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/parser/on_demand/parse_to_elements.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/parser/on_demand/index.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/bson/src/bson.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/bson.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/error.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/read_preference.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/common.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/server_selection.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/wire_protocol/constants.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/constants.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/read_concern.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/wire_protocol/on_demand/document.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/wire_protocol/responses.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/write_concern.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/utils.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/timeout.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/operation.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/execute_operation.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/mongo_logger.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/mongo_types.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/get_more.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/kill_cursors.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/delete.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/bulk_write.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/insert.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/update.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/bulk/common.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/bulk/ordered.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/bulk/unordered.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/aggregate.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cursor/aggregation_cursor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/count.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sort.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/find.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cursor/find_cursor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/indexes.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cursor/list_indexes_cursor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cursor/list_search_indexes_cursor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/distinct.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/drop.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/estimated_document_count.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/find_and_modify.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/is_capped.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/options_operation.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/rename.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/search_indexes/create.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/search_indexes/drop.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/search_indexes/update.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/collection.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cursor/change_stream_cursor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/list_collections.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cursor/list_collections_cursor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/run_command.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cursor/run_command_cursor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/collections.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/create_collection.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/profiling_level.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/remove_user.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/set_profiling_level.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/stats.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/db.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/change_stream.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/deps.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/auth_provider.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/gssapi.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/providers.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongo_credentials.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/webidl-conversions/lib/index.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/utils.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/punycode/punycode.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/tr46/lib/regexes.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/tr46/lib/mappingTable.json", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/tr46/lib/statusMapping.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/tr46/index.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/infra.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/encoding.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/percent-encoding.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/url-state-machine.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/urlencoded.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/Function.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URLSearchParams-impl.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URLSearchParams.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URL-impl.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URL.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/webidl2js-wrapper.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/index.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/src/redact.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb-connection-string-url/src/index.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/package.json", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/handshake/client_metadata.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/commands.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/wire_protocol/compression.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/crypto_callbacks.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/errors.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/aws_temporary_credentials.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/providers/aws.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/providers/azure.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/providers/gcp.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/providers/index.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/state_machine.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/client_encryption.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/mongocryptd_manager.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/client-side-encryption/auto_encrypter.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/encrypter.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/metrics.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/server_description.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/topology_description.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/wire_protocol/shared.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/transactions.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sessions.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/command_monitoring_events.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/stream_description.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/wire_protocol/on_data.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/connection.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/connect.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/events.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/connection_pool_events.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/errors.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/connection_pool.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/server.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/monitor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/connection_string.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_aws.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/command_builders.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/machine_workflow.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/azure_machine_workflow.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/gcp_machine_workflow.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/k8s_machine_workflow.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/token_cache.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/token_machine_workflow.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/callback_workflow.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/automated_callback_workflow.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/mongodb_oidc/human_callback_workflow.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/plain.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/@mongodb-js/saslprep/src/index.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/memory-pager/index.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/sparse-bitfield/index.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/@mongodb-js/saslprep/src/memory-code-points.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/@mongodb-js/saslprep/src/code-points-data.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/@mongodb-js/saslprep/src/node.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/scram.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cmap/auth/x509.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/mongo_client_auth_providers.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/beta.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/client_bulk_write/client_bulk_write.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cursor/client_bulk_write_cursor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/client_bulk_write/command_builder.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/client_bulk_write/results_merger.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/client_bulk_write/executor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/server_selection_events.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/srv_polling.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/sdam/topology.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/mongo_client.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/resource_management.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/cursor/abstract_cursor.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/explain.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/command.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/list_databases.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/operations/validate_collection.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/admin.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/gridfs/download.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/gridfs/upload.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/gridfs/index.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/mongodb/src/index.ts", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/webidl-conversions/lib/index.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/whatwg-url/lib/utils.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/tr46/lib/mappingTable.json", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/tr46/index.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/whatwg-url/lib/url-state-machine.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/whatwg-url/lib/URL-impl.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/whatwg-url/lib/URL.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/whatwg-url/lib/public-api.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/node_modules/node-fetch/lib/index.js", "../../../../../../Users/Cameron/Websites/Shakes/shakespeare-yt/netlify/functions/fetchData.ts"],
  "sourceRoot": "/var/folders/hp/lk0ctgwn6b5707f7zrz4zfs40000gp/T/tmp-6840-kALR4EAvRREI",
  "sourcesContent": ["const TypedArrayPrototypeGetSymbolToStringTag = (() => {\n  // Type check system lovingly referenced from:\n  // https://github.com/nodejs/node/blob/7450332339ed40481f470df2a3014e2ec355d8d8/lib/internal/util/types.js#L13-L15\n  // eslint-disable-next-line @typescript-eslint/unbound-method -- the intention is to call this method with a bound value\n  const g = Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(Uint8Array.prototype),\n    Symbol.toStringTag\n  )!.get!;\n\n  return (value: unknown) => g.call(value);\n})();\n\nexport function isUint8Array(value: unknown): value is Uint8Array {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\n}\n\nexport function isAnyArrayBuffer(value: unknown): value is ArrayBuffer {\n  return (\n    typeof value === 'object' &&\n    value != null &&\n    Symbol.toStringTag in value &&\n    (value[Symbol.toStringTag] === 'ArrayBuffer' ||\n      value[Symbol.toStringTag] === 'SharedArrayBuffer')\n  );\n}\n\nexport function isRegExp(regexp: unknown): regexp is RegExp {\n  return regexp instanceof RegExp || Object.prototype.toString.call(regexp) === '[object RegExp]';\n}\n\nexport function isMap(value: unknown): value is Map<unknown, unknown> {\n  return (\n    typeof value === 'object' &&\n    value != null &&\n    Symbol.toStringTag in value &&\n    value[Symbol.toStringTag] === 'Map'\n  );\n}\n\nexport function isDate(date: unknown): date is Date {\n  return date instanceof Date || Object.prototype.toString.call(date) === '[object Date]';\n}\n\nexport type InspectFn = (x: unknown, options?: unknown) => string;\nexport function defaultInspect(x: unknown, _options?: unknown): string {\n  return JSON.stringify(x, (k: string, v: unknown) => {\n    if (typeof v === 'bigint') {\n      return { $numberLong: `${v}` };\n    } else if (isMap(v)) {\n      return Object.fromEntries(v);\n    }\n    return v;\n  });\n}\n\n/** @internal */\ntype StylizeFunction = (x: string, style: string) => string;\n/** @internal */\nexport function getStylizeFunction(options?: unknown): StylizeFunction | undefined {\n  const stylizeExists =\n    options != null &&\n    typeof options === 'object' &&\n    'stylize' in options &&\n    typeof options.stylize === 'function';\n\n  if (stylizeExists) {\n    return options.stylize as StylizeFunction;\n  }\n}\n", "/** @internal */\nexport const BSON_MAJOR_VERSION = 6;\n\n/** @internal */\nexport const BSON_VERSION_SYMBOL = Symbol.for('@@mdb.bson.version');\n\n/** @internal */\nexport const BSON_INT32_MAX = 0x7fffffff;\n/** @internal */\nexport const BSON_INT32_MIN = -0x80000000;\n/** @internal */\nexport const BSON_INT64_MAX = Math.pow(2, 63) - 1;\n/** @internal */\nexport const BSON_INT64_MIN = -Math.pow(2, 63);\n\n/**\n * Any integer up to 2^53 can be precisely represented by a double.\n * @internal\n */\nexport const JS_INT_MAX = Math.pow(2, 53);\n\n/**\n * Any integer down to -2^53 can be precisely represented by a double.\n * @internal\n */\nexport const JS_INT_MIN = -Math.pow(2, 53);\n\n/** Number BSON Type @internal */\nexport const BSON_DATA_NUMBER = 1;\n\n/** String BSON Type @internal */\nexport const BSON_DATA_STRING = 2;\n\n/** Object BSON Type @internal */\nexport const BSON_DATA_OBJECT = 3;\n\n/** Array BSON Type @internal */\nexport const BSON_DATA_ARRAY = 4;\n\n/** Binary BSON Type @internal */\nexport const BSON_DATA_BINARY = 5;\n\n/** Binary BSON Type @internal */\nexport const BSON_DATA_UNDEFINED = 6;\n\n/** ObjectId BSON Type @internal */\nexport const BSON_DATA_OID = 7;\n\n/** Boolean BSON Type @internal */\nexport const BSON_DATA_BOOLEAN = 8;\n\n/** Date BSON Type @internal */\nexport const BSON_DATA_DATE = 9;\n\n/** null BSON Type @internal */\nexport const BSON_DATA_NULL = 10;\n\n/** RegExp BSON Type @internal */\nexport const BSON_DATA_REGEXP = 11;\n\n/** Code BSON Type @internal */\nexport const BSON_DATA_DBPOINTER = 12;\n\n/** Code BSON Type @internal */\nexport const BSON_DATA_CODE = 13;\n\n/** Symbol BSON Type @internal */\nexport const BSON_DATA_SYMBOL = 14;\n\n/** Code with Scope BSON Type @internal */\nexport const BSON_DATA_CODE_W_SCOPE = 15;\n\n/** 32 bit Integer BSON Type @internal */\nexport const BSON_DATA_INT = 16;\n\n/** Timestamp BSON Type @internal */\nexport const BSON_DATA_TIMESTAMP = 17;\n\n/** Long BSON Type @internal */\nexport const BSON_DATA_LONG = 18;\n\n/** Decimal128 BSON Type @internal */\nexport const BSON_DATA_DECIMAL128 = 19;\n\n/** MinKey BSON Type @internal */\nexport const BSON_DATA_MIN_KEY = 0xff;\n\n/** MaxKey BSON Type @internal */\nexport const BSON_DATA_MAX_KEY = 0x7f;\n\n/** Binary Default Type @internal */\nexport const BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/** Binary Function Type @internal */\nexport const BSON_BINARY_SUBTYPE_FUNCTION = 1;\n\n/** Binary Byte Array Type @internal */\nexport const BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n\n/** Binary Deprecated UUID Type @deprecated Please use BSON_BINARY_SUBTYPE_UUID_NEW @internal */\nexport const BSON_BINARY_SUBTYPE_UUID = 3;\n\n/** Binary UUID Type @internal */\nexport const BSON_BINARY_SUBTYPE_UUID_NEW = 4;\n\n/** Binary MD5 Type @internal */\nexport const BSON_BINARY_SUBTYPE_MD5 = 5;\n\n/** Encrypted BSON type @internal */\nexport const BSON_BINARY_SUBTYPE_ENCRYPTED = 6;\n\n/** Column BSON type @internal */\nexport const BSON_BINARY_SUBTYPE_COLUMN = 7;\n\n/** Sensitive BSON type @internal */\nexport const BSON_BINARY_SUBTYPE_SENSITIVE = 8;\n\n/** Binary User Defined Type @internal */\nexport const BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n/** @public */\nexport const BSONType = Object.freeze({\n  double: 1,\n  string: 2,\n  object: 3,\n  array: 4,\n  binData: 5,\n  undefined: 6,\n  objectId: 7,\n  bool: 8,\n  date: 9,\n  null: 10,\n  regex: 11,\n  dbPointer: 12,\n  javascript: 13,\n  symbol: 14,\n  javascriptWithScope: 15,\n  int: 16,\n  timestamp: 17,\n  long: 18,\n  decimal: 19,\n  minKey: -1,\n  maxKey: 127\n} as const);\n\n/** @public */\nexport type BSONType = (typeof BSONType)[keyof typeof BSONType];\n", "import { BSON_MAJOR_VERSION } from './constants';\n\n/**\n * @public\n * @category Error\n *\n * `BSONError` objects are thrown when BSON encounters an error.\n *\n * This is the parent class for all the other errors thrown by this library.\n */\nexport class BSONError extends Error {\n  /**\n   * @internal\n   * The underlying algorithm for isBSONError may change to improve how strict it is\n   * about determining if an input is a BSONError. But it must remain backwards compatible\n   * with previous minors & patches of the current major version.\n   */\n  protected get bsonError(): true {\n    return true;\n  }\n\n  override get name(): string {\n    return 'BSONError';\n  }\n\n  constructor(message: string, options?: { cause?: unknown }) {\n    super(message, options);\n  }\n\n  /**\n   * @public\n   *\n   * All errors thrown from the BSON library inherit from `BSONError`.\n   * This method can assist with determining if an error originates from the BSON library\n   * even if it does not pass an `instanceof` check against this class' constructor.\n   *\n   * @param value - any javascript value that needs type checking\n   */\n  public static isBSONError(value: unknown): value is BSONError {\n    return (\n      value != null &&\n      typeof value === 'object' &&\n      'bsonError' in value &&\n      value.bsonError === true &&\n      // Do not access the following properties, just check existence\n      'name' in value &&\n      'message' in value &&\n      'stack' in value\n    );\n  }\n}\n\n/**\n * @public\n * @category Error\n */\nexport class BSONVersionError extends BSONError {\n  get name(): 'BSONVersionError' {\n    return 'BSONVersionError';\n  }\n\n  constructor() {\n    super(`Unsupported BSON version, bson types must be from bson ${BSON_MAJOR_VERSION}.x.x`);\n  }\n}\n\n/**\n * @public\n * @category Error\n *\n * An error generated when BSON functions encounter an unexpected input\n * or reaches an unexpected/invalid internal state\n *\n */\nexport class BSONRuntimeError extends BSONError {\n  get name(): 'BSONRuntimeError' {\n    return 'BSONRuntimeError';\n  }\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * @public\n * @category Error\n *\n * @experimental\n *\n * An error generated when BSON bytes are invalid.\n * Reports the offset the parser was able to reach before encountering the error.\n */\nexport class BSONOffsetError extends BSONError {\n  public get name(): 'BSONOffsetError' {\n    return 'BSONOffsetError';\n  }\n\n  public offset: number;\n\n  constructor(message: string, offset: number, options?: { cause?: unknown }) {\n    super(`${message}. offset: ${offset}`, options);\n    this.offset = offset;\n  }\n}\n", "import { BSONError } from './error';\n\ntype TextDecoder = {\n  readonly encoding: string;\n  readonly fatal: boolean;\n  readonly ignoreBOM: boolean;\n  decode(input?: Uint8Array): string;\n};\ntype TextDecoderConstructor = {\n  new (label: 'utf8', options: { fatal: boolean; ignoreBOM?: boolean }): TextDecoder;\n};\n\n// parse utf8 globals\ndeclare const TextDecoder: TextDecoderConstructor;\nlet TextDecoderFatal: TextDecoder;\nlet TextDecoderNonFatal: TextDecoder;\n\n/**\n * Determines if the passed in bytes are valid utf8\n * @param bytes - An array of 8-bit bytes. Must be indexable and have length property\n * @param start - The index to start validating\n * @param end - The index to end validating\n */\nexport function parseUtf8(buffer: Uint8Array, start: number, end: number, fatal: boolean): string {\n  if (fatal) {\n    TextDecoderFatal ??= new TextDecoder('utf8', { fatal: true });\n    try {\n      return TextDecoderFatal.decode(buffer.subarray(start, end));\n    } catch (cause) {\n      throw new BSONError('Invalid UTF-8 string in BSON document', { cause });\n    }\n  }\n  TextDecoderNonFatal ??= new TextDecoder('utf8', { fatal: false });\n  return TextDecoderNonFatal.decode(buffer.subarray(start, end));\n}\n", "/**\n * This function is an optimization for small basic latin strings.\n * @internal\n * @remarks\n * ### Important characteristics:\n * - If the uint8array or distance between start and end is 0 this function returns an empty string\n * - If the byteLength of the string is 1, 2, or 3 we invoke String.fromCharCode and manually offset into the buffer\n * - If the byteLength of the string is less than or equal to 20 an array of bytes is built and `String.fromCharCode.apply` is called with the result\n * - If any byte exceeds 128 this function returns null\n *\n * @param uint8array - A sequence of bytes that may contain basic latin characters\n * @param start - The start index from which to search the uint8array\n * @param end - The index to stop searching the uint8array\n * @returns string if all bytes are within the basic latin range, otherwise null\n */\nexport function tryReadBasicLatin(\n  uint8array: Uint8Array,\n  start: number,\n  end: number\n): string | null {\n  if (uint8array.length === 0) {\n    return '';\n  }\n\n  const stringByteLength = end - start;\n  if (stringByteLength === 0) {\n    return '';\n  }\n\n  if (stringByteLength > 20) {\n    return null;\n  }\n\n  if (stringByteLength === 1 && uint8array[start] < 128) {\n    return String.fromCharCode(uint8array[start]);\n  }\n\n  if (stringByteLength === 2 && uint8array[start] < 128 && uint8array[start + 1] < 128) {\n    return String.fromCharCode(uint8array[start]) + String.fromCharCode(uint8array[start + 1]);\n  }\n\n  if (\n    stringByteLength === 3 &&\n    uint8array[start] < 128 &&\n    uint8array[start + 1] < 128 &&\n    uint8array[start + 2] < 128\n  ) {\n    return (\n      String.fromCharCode(uint8array[start]) +\n      String.fromCharCode(uint8array[start + 1]) +\n      String.fromCharCode(uint8array[start + 2])\n    );\n  }\n\n  const latinBytes = [];\n  for (let i = start; i < end; i++) {\n    const byte = uint8array[i];\n    if (byte > 127) {\n      return null;\n    }\n    latinBytes.push(byte);\n  }\n\n  return String.fromCharCode(...latinBytes);\n}\n\n/**\n * This function is an optimization for writing small basic latin strings.\n * @internal\n * @remarks\n * ### Important characteristics:\n * - If the string length is 0 return 0, do not perform any work\n * - If a string is longer than 25 code units return null\n * - If any code unit exceeds 128 this function returns null\n *\n * @param destination - The uint8array to serialize the string to\n * @param source - The string to turn into UTF-8 bytes if it fits in the basic latin range\n * @param offset - The position in the destination to begin writing bytes to\n * @returns the number of bytes written to destination if all code units are below 128, otherwise null\n */\nexport function tryWriteBasicLatin(\n  destination: Uint8Array,\n  source: string,\n  offset: number\n): number | null {\n  if (source.length === 0) return 0;\n\n  if (source.length > 25) return null;\n\n  if (destination.length - offset < source.length) return null;\n\n  for (\n    let charOffset = 0, destinationOffset = offset;\n    charOffset < source.length;\n    charOffset++, destinationOffset++\n  ) {\n    const char = source.charCodeAt(charOffset);\n    if (char > 127) return null;\n\n    destination[destinationOffset] = char;\n  }\n\n  return source.length;\n}\n", "import { BSONError } from '../error';\nimport { parseUtf8 } from '../parse_utf8';\nimport { tryReadBasicLatin, tryWriteBasicLatin } from './latin';\n\ntype NodeJsEncoding = 'base64' | 'hex' | 'utf8' | 'binary';\ntype NodeJsBuffer = ArrayBufferView &\n  Uint8Array & {\n    write(string: string, offset: number, length: undefined, encoding: 'utf8'): number;\n    copy(target: Uint8Array, targetStart: number, sourceStart: number, sourceEnd: number): number;\n    toString: (this: Uint8Array, encoding: NodeJsEncoding, start?: number, end?: number) => string;\n    equals: (this: Uint8Array, other: Uint8Array) => boolean;\n    swap32: (this: NodeJsBuffer) => NodeJsBuffer;\n  };\ntype NodeJsBufferConstructor = Omit<Uint8ArrayConstructor, 'from'> & {\n  alloc: (size: number) => NodeJsBuffer;\n  allocUnsafe: (size: number) => NodeJsBuffer;\n  from(array: number[]): NodeJsBuffer;\n  from(array: Uint8Array): NodeJsBuffer;\n  from(array: ArrayBuffer): NodeJsBuffer;\n  from(array: ArrayBuffer, byteOffset: number, byteLength: number): NodeJsBuffer;\n  from(base64: string, encoding: NodeJsEncoding): NodeJsBuffer;\n  byteLength(input: string, encoding: 'utf8'): number;\n  isBuffer(value: unknown): value is NodeJsBuffer;\n};\n\n// This can be nullish, but we gate the nodejs functions on being exported whether or not this exists\n// Node.js global\ndeclare const Buffer: NodeJsBufferConstructor;\ndeclare const require: (mod: 'crypto') => { randomBytes: (byteLength: number) => Uint8Array };\n\n/** @internal */\nexport function nodejsMathRandomBytes(byteLength: number) {\n  return nodeJsByteUtils.fromNumberArray(\n    Array.from({ length: byteLength }, () => Math.floor(Math.random() * 256))\n  );\n}\n\n/**\n * @internal\n * WARNING: REQUIRE WILL BE REWRITTEN\n *\n * This code is carefully used by require_rewriter.mjs any modifications must be reflected in the plugin.\n *\n * @remarks\n * \"crypto\" is the only dependency BSON needs. This presents a problem for creating a bundle of the BSON library\n * in an es module format that can be used both on the browser and in Node.js. In Node.js when BSON is imported as\n * an es module, there will be no global require function defined, making the code below fallback to the much less desireable math.random bytes.\n * In order to make our es module bundle work as expected on Node.js we need to change this `require()` to a dynamic import, and the dynamic\n * import must be top-level awaited since es modules are async. So we rely on a custom rollup plugin to seek out the following lines of code\n * and replace `require` with `await import` and the IIFE line (`nodejsRandomBytes = (() => { ... })()`) with `nodejsRandomBytes = await (async () => { ... })()`\n * when generating an es module bundle.\n */\nconst nodejsRandomBytes: (byteLength: number) => Uint8Array = (() => {\n  try {\n    return require('crypto').randomBytes;\n  } catch {\n    return nodejsMathRandomBytes;\n  }\n})();\n\n/** @internal */\nexport const nodeJsByteUtils = {\n  toLocalBufferType(potentialBuffer: Uint8Array | NodeJsBuffer | ArrayBuffer): NodeJsBuffer {\n    if (Buffer.isBuffer(potentialBuffer)) {\n      return potentialBuffer;\n    }\n\n    if (ArrayBuffer.isView(potentialBuffer)) {\n      return Buffer.from(\n        potentialBuffer.buffer,\n        potentialBuffer.byteOffset,\n        potentialBuffer.byteLength\n      );\n    }\n\n    const stringTag =\n      potentialBuffer?.[Symbol.toStringTag] ?? Object.prototype.toString.call(potentialBuffer);\n    if (\n      stringTag === 'ArrayBuffer' ||\n      stringTag === 'SharedArrayBuffer' ||\n      stringTag === '[object ArrayBuffer]' ||\n      stringTag === '[object SharedArrayBuffer]'\n    ) {\n      return Buffer.from(potentialBuffer);\n    }\n\n    throw new BSONError(`Cannot create Buffer from the passed potentialBuffer.`);\n  },\n\n  allocate(size: number): NodeJsBuffer {\n    return Buffer.alloc(size);\n  },\n\n  allocateUnsafe(size: number): NodeJsBuffer {\n    return Buffer.allocUnsafe(size);\n  },\n\n  equals(a: Uint8Array, b: Uint8Array): boolean {\n    return nodeJsByteUtils.toLocalBufferType(a).equals(b);\n  },\n\n  fromNumberArray(array: number[]): NodeJsBuffer {\n    return Buffer.from(array);\n  },\n\n  fromBase64(base64: string): NodeJsBuffer {\n    return Buffer.from(base64, 'base64');\n  },\n\n  toBase64(buffer: Uint8Array): string {\n    return nodeJsByteUtils.toLocalBufferType(buffer).toString('base64');\n  },\n\n  /** **Legacy** binary strings are an outdated method of data transfer. Do not add public API support for interpreting this format */\n  fromISO88591(codePoints: string): NodeJsBuffer {\n    return Buffer.from(codePoints, 'binary');\n  },\n\n  /** **Legacy** binary strings are an outdated method of data transfer. Do not add public API support for interpreting this format */\n  toISO88591(buffer: Uint8Array): string {\n    return nodeJsByteUtils.toLocalBufferType(buffer).toString('binary');\n  },\n\n  fromHex(hex: string): NodeJsBuffer {\n    return Buffer.from(hex, 'hex');\n  },\n\n  toHex(buffer: Uint8Array): string {\n    return nodeJsByteUtils.toLocalBufferType(buffer).toString('hex');\n  },\n\n  toUTF8(buffer: Uint8Array, start: number, end: number, fatal: boolean): string {\n    const basicLatin = end - start <= 20 ? tryReadBasicLatin(buffer, start, end) : null;\n    if (basicLatin != null) {\n      return basicLatin;\n    }\n\n    const string = nodeJsByteUtils.toLocalBufferType(buffer).toString('utf8', start, end);\n    if (fatal) {\n      for (let i = 0; i < string.length; i++) {\n        if (string.charCodeAt(i) === 0xfffd) {\n          parseUtf8(buffer, start, end, true);\n          break;\n        }\n      }\n    }\n    return string;\n  },\n\n  utf8ByteLength(input: string): number {\n    return Buffer.byteLength(input, 'utf8');\n  },\n\n  encodeUTF8Into(buffer: Uint8Array, source: string, byteOffset: number): number {\n    const latinBytesWritten = tryWriteBasicLatin(buffer, source, byteOffset);\n    if (latinBytesWritten != null) {\n      return latinBytesWritten;\n    }\n\n    return nodeJsByteUtils.toLocalBufferType(buffer).write(source, byteOffset, undefined, 'utf8');\n  },\n\n  randomBytes: nodejsRandomBytes,\n\n  swap32(buffer: Uint8Array): NodeJsBuffer {\n    return nodeJsByteUtils.toLocalBufferType(buffer).swap32();\n  }\n};\n", "import { BSONError } from '../error';\nimport { tryReadBasicLatin } from './latin';\nimport { parseUtf8 } from '../parse_utf8';\n\ntype TextDecoder = {\n  readonly encoding: string;\n  readonly fatal: boolean;\n  readonly ignoreBOM: boolean;\n  decode(input?: Uint8Array): string;\n};\ntype TextDecoderConstructor = {\n  new (label: 'utf8', options: { fatal: boolean; ignoreBOM?: boolean }): TextDecoder;\n};\n\ntype TextEncoder = {\n  readonly encoding: string;\n  encode(input?: string): Uint8Array;\n};\ntype TextEncoderConstructor = {\n  new (): TextEncoder;\n};\n\n// Web global\ndeclare const TextDecoder: TextDecoderConstructor;\ndeclare const TextEncoder: TextEncoderConstructor;\ndeclare const atob: (base64: string) => string;\ndeclare const btoa: (binary: string) => string;\n\ntype ArrayBufferViewWithTag = ArrayBufferView & {\n  [Symbol.toStringTag]?: string;\n};\n\nfunction isReactNative() {\n  const { navigator } = globalThis as { navigator?: { product?: string } };\n  return typeof navigator === 'object' && navigator.product === 'ReactNative';\n}\n\n/** @internal */\nexport function webMathRandomBytes(byteLength: number) {\n  if (byteLength < 0) {\n    throw new RangeError(`The argument 'byteLength' is invalid. Received ${byteLength}`);\n  }\n  return webByteUtils.fromNumberArray(\n    Array.from({ length: byteLength }, () => Math.floor(Math.random() * 256))\n  );\n}\n\n/** @internal */\nconst webRandomBytes: (byteLength: number) => Uint8Array = (() => {\n  const { crypto } = globalThis as {\n    crypto?: { getRandomValues?: (space: Uint8Array) => Uint8Array };\n  };\n  if (crypto != null && typeof crypto.getRandomValues === 'function') {\n    return (byteLength: number) => {\n      // @ts-expect-error: crypto.getRandomValues cannot actually be null here\n      // You cannot separate getRandomValues from crypto (need to have this === crypto)\n      return crypto.getRandomValues(webByteUtils.allocate(byteLength));\n    };\n  } else {\n    if (isReactNative()) {\n      const { console } = globalThis as { console?: { warn?: (message: string) => void } };\n      console?.warn?.(\n        'BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.'\n      );\n    }\n    return webMathRandomBytes;\n  }\n})();\n\nconst HEX_DIGIT = /(\\d|[a-f])/i;\n\n/** @internal */\nexport const webByteUtils = {\n  toLocalBufferType(\n    potentialUint8array: Uint8Array | ArrayBufferViewWithTag | ArrayBuffer\n  ): Uint8Array {\n    const stringTag =\n      potentialUint8array?.[Symbol.toStringTag] ??\n      Object.prototype.toString.call(potentialUint8array);\n\n    if (stringTag === 'Uint8Array') {\n      return potentialUint8array as Uint8Array;\n    }\n\n    if (ArrayBuffer.isView(potentialUint8array)) {\n      return new Uint8Array(\n        potentialUint8array.buffer.slice(\n          potentialUint8array.byteOffset,\n          potentialUint8array.byteOffset + potentialUint8array.byteLength\n        )\n      );\n    }\n\n    if (\n      stringTag === 'ArrayBuffer' ||\n      stringTag === 'SharedArrayBuffer' ||\n      stringTag === '[object ArrayBuffer]' ||\n      stringTag === '[object SharedArrayBuffer]'\n    ) {\n      return new Uint8Array(potentialUint8array);\n    }\n\n    throw new BSONError(`Cannot make a Uint8Array from passed potentialBuffer.`);\n  },\n\n  allocate(size: number): Uint8Array {\n    if (typeof size !== 'number') {\n      throw new TypeError(`The \"size\" argument must be of type number. Received ${String(size)}`);\n    }\n    return new Uint8Array(size);\n  },\n\n  allocateUnsafe(size: number): Uint8Array {\n    return webByteUtils.allocate(size);\n  },\n\n  equals(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.byteLength !== b.byteLength) {\n      return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  fromNumberArray(array: number[]): Uint8Array {\n    return Uint8Array.from(array);\n  },\n\n  fromBase64(base64: string): Uint8Array {\n    return Uint8Array.from(atob(base64), c => c.charCodeAt(0));\n  },\n\n  toBase64(uint8array: Uint8Array): string {\n    return btoa(webByteUtils.toISO88591(uint8array));\n  },\n\n  /** **Legacy** binary strings are an outdated method of data transfer. Do not add public API support for interpreting this format */\n  fromISO88591(codePoints: string): Uint8Array {\n    return Uint8Array.from(codePoints, c => c.charCodeAt(0) & 0xff);\n  },\n\n  /** **Legacy** binary strings are an outdated method of data transfer. Do not add public API support for interpreting this format */\n  toISO88591(uint8array: Uint8Array): string {\n    return Array.from(Uint16Array.from(uint8array), b => String.fromCharCode(b)).join('');\n  },\n\n  fromHex(hex: string): Uint8Array {\n    const evenLengthHex = hex.length % 2 === 0 ? hex : hex.slice(0, hex.length - 1);\n    const buffer = [];\n\n    for (let i = 0; i < evenLengthHex.length; i += 2) {\n      const firstDigit = evenLengthHex[i];\n      const secondDigit = evenLengthHex[i + 1];\n\n      if (!HEX_DIGIT.test(firstDigit)) {\n        break;\n      }\n      if (!HEX_DIGIT.test(secondDigit)) {\n        break;\n      }\n\n      const hexDigit = Number.parseInt(`${firstDigit}${secondDigit}`, 16);\n      buffer.push(hexDigit);\n    }\n\n    return Uint8Array.from(buffer);\n  },\n\n  toHex(uint8array: Uint8Array): string {\n    return Array.from(uint8array, byte => byte.toString(16).padStart(2, '0')).join('');\n  },\n\n  toUTF8(uint8array: Uint8Array, start: number, end: number, fatal: boolean): string {\n    const basicLatin = end - start <= 20 ? tryReadBasicLatin(uint8array, start, end) : null;\n    if (basicLatin != null) {\n      return basicLatin;\n    }\n\n    return parseUtf8(uint8array, start, end, fatal);\n  },\n\n  utf8ByteLength(input: string): number {\n    return new TextEncoder().encode(input).byteLength;\n  },\n\n  encodeUTF8Into(uint8array: Uint8Array, source: string, byteOffset: number): number {\n    const bytes = new TextEncoder().encode(source);\n    uint8array.set(bytes, byteOffset);\n    return bytes.byteLength;\n  },\n\n  randomBytes: webRandomBytes,\n\n  swap32(buffer: Uint8Array): Uint8Array {\n    if (buffer.length % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits');\n    }\n\n    for (let i = 0; i < buffer.length; i += 4) {\n      const byte0 = buffer[i];\n      const byte1 = buffer[i + 1];\n      const byte2 = buffer[i + 2];\n      const byte3 = buffer[i + 3];\n      buffer[i] = byte3;\n      buffer[i + 1] = byte2;\n      buffer[i + 2] = byte1;\n      buffer[i + 3] = byte0;\n    }\n\n    return buffer;\n  }\n};\n", "import { nodeJsByteUtils } from './node_byte_utils';\nimport { webByteUtils } from './web_byte_utils';\n\n/**\n * @public\n * @experimental\n *\n * A collection of functions that help work with data in a Uint8Array.\n * ByteUtils is configured at load time to use Node.js or Web based APIs for the internal implementations.\n */\nexport type ByteUtils = {\n  /** Transforms the input to an instance of Buffer if running on node, otherwise Uint8Array */\n  toLocalBufferType: (buffer: Uint8Array | ArrayBufferView | ArrayBuffer) => Uint8Array;\n  /** Create empty space of size */\n  allocate: (size: number) => Uint8Array;\n  /** Create empty space of size, use pooled memory when available */\n  allocateUnsafe: (size: number) => Uint8Array;\n  /** Check if two Uint8Arrays are deep equal */\n  equals: (a: Uint8Array, b: Uint8Array) => boolean;\n  /** Check if two Uint8Arrays are deep equal */\n  fromNumberArray: (array: number[]) => Uint8Array;\n  /** Create a Uint8Array from a base64 string */\n  fromBase64: (base64: string) => Uint8Array;\n  /** Create a base64 string from bytes */\n  toBase64: (buffer: Uint8Array) => string;\n  /** **Legacy** binary strings are an outdated method of data transfer. Do not add public API support for interpreting this format */\n  fromISO88591: (codePoints: string) => Uint8Array;\n  /** **Legacy** binary strings are an outdated method of data transfer. Do not add public API support for interpreting this format */\n  toISO88591: (buffer: Uint8Array) => string;\n  /** Create a Uint8Array from a hex string */\n  fromHex: (hex: string) => Uint8Array;\n  /** Create a lowercase hex string from bytes */\n  toHex: (buffer: Uint8Array) => string;\n  /** Create a string from utf8 code units, fatal=true will throw an error if UTF-8 bytes are invalid, fatal=false will insert replacement characters */\n  toUTF8: (buffer: Uint8Array, start: number, end: number, fatal: boolean) => string;\n  /** Get the utf8 code unit count from a string if it were to be transformed to utf8 */\n  utf8ByteLength: (input: string) => number;\n  /** Encode UTF8 bytes generated from `source` string into `destination` at byteOffset. Returns the number of bytes encoded. */\n  encodeUTF8Into: (destination: Uint8Array, source: string, byteOffset: number) => number;\n  /** Generate a Uint8Array filled with random bytes with byteLength */\n  randomBytes: (byteLength: number) => Uint8Array;\n  /** Interprets `buffer` as an array of 32-bit values and swaps the byte order in-place. */\n  swap32: (buffer: Uint8Array) => Uint8Array;\n};\n\ndeclare const Buffer: { new (): unknown; prototype?: { _isBuffer?: boolean } } | undefined;\n\n/**\n * Check that a global Buffer exists that is a function and\n * does not have a '_isBuffer' property defined on the prototype\n * (this is to prevent using the npm buffer)\n */\nconst hasGlobalBuffer = typeof Buffer === 'function' && Buffer.prototype?._isBuffer !== true;\n\n/**\n * This is the only ByteUtils that should be used across the rest of the BSON library.\n *\n * The type annotation is important here, it asserts that each of the platform specific\n * utils implementations are compatible with the common one.\n *\n * @internal\n */\nexport const ByteUtils: ByteUtils = hasGlobalBuffer ? nodeJsByteUtils : webByteUtils;\n", "import { BSON_MAJOR_VERSION } from './constants';\nimport { type InspectFn } from './parser/utils';\nimport { BSON_VERSION_SYMBOL } from './constants';\n\n/** @public */\nexport abstract class BSONValue {\n  /** @public */\n  public abstract get _bsontype(): string;\n\n  /** @internal */\n  get [BSON_VERSION_SYMBOL](): typeof BSON_MAJOR_VERSION {\n    return BSON_MAJOR_VERSION;\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')](\n    depth?: number,\n    options?: unknown,\n    inspect?: InspectFn\n  ): string {\n    return this.inspect(depth, options, inspect);\n  }\n\n  /**\n   * @public\n   * Prints a human-readable string of BSON value information\n   * If invoked manually without node.js.inspect function, this will default to a modified JSON.stringify\n   */\n  public abstract inspect(depth?: number, options?: unknown, inspect?: InspectFn): string;\n\n  /** @internal */\n  abstract toExtendedJSON(): unknown;\n}\n", "const FLOAT = new Float64Array(1);\nconst FLOAT_BYTES = new Uint8Array(FLOAT.buffer, 0, 8);\n\nFLOAT[0] = -1;\n// Little endian [0, 0, 0, 0, 0, 0,  240, 191]\n// Big endian    [191, 240, 0, 0, 0, 0, 0, 0]\nconst isBigEndian = FLOAT_BYTES[7] === 0;\n\n/**\n * @experimental\n * @public\n *\n * A collection of functions that get or set various numeric types and bit widths from a Uint8Array.\n */\nexport type NumberUtils = {\n  /** Is true if the current system is big endian. */\n  isBigEndian: boolean;\n  /**\n   * Parses a signed int32 at offset. Throws a `RangeError` if value is negative.\n   */\n  getNonnegativeInt32LE: (source: Uint8Array, offset: number) => number;\n  getInt32LE: (source: Uint8Array, offset: number) => number;\n  getUint32LE: (source: Uint8Array, offset: number) => number;\n  getUint32BE: (source: Uint8Array, offset: number) => number;\n  getBigInt64LE: (source: Uint8Array, offset: number) => bigint;\n  getFloat64LE: (source: Uint8Array, offset: number) => number;\n  setInt32BE: (destination: Uint8Array, offset: number, value: number) => 4;\n  setInt32LE: (destination: Uint8Array, offset: number, value: number) => 4;\n  setBigInt64LE: (destination: Uint8Array, offset: number, value: bigint) => 8;\n  setFloat64LE: (destination: Uint8Array, offset: number, value: number) => 8;\n};\n\n/**\n * Number parsing and serializing utilities.\n *\n * @experimental\n * @public\n */\nexport const NumberUtils: NumberUtils = {\n  isBigEndian,\n\n  getNonnegativeInt32LE(source: Uint8Array, offset: number): number {\n    if (source[offset + 3] > 127) {\n      throw new RangeError(`Size cannot be negative at offset: ${offset}`);\n    }\n    return (\n      source[offset] |\n      (source[offset + 1] << 8) |\n      (source[offset + 2] << 16) |\n      (source[offset + 3] << 24)\n    );\n  },\n\n  /** Reads a little-endian 32-bit integer from source */\n  getInt32LE(source: Uint8Array, offset: number): number {\n    return (\n      source[offset] |\n      (source[offset + 1] << 8) |\n      (source[offset + 2] << 16) |\n      (source[offset + 3] << 24)\n    );\n  },\n\n  /** Reads a little-endian 32-bit unsigned integer from source */\n  getUint32LE(source: Uint8Array, offset: number): number {\n    return (\n      source[offset] +\n      source[offset + 1] * 256 +\n      source[offset + 2] * 65536 +\n      source[offset + 3] * 16777216\n    );\n  },\n\n  /** Reads a big-endian 32-bit integer from source */\n  getUint32BE(source: Uint8Array, offset: number): number {\n    return (\n      source[offset + 3] +\n      source[offset + 2] * 256 +\n      source[offset + 1] * 65536 +\n      source[offset] * 16777216\n    );\n  },\n\n  /** Reads a little-endian 64-bit integer from source */\n  getBigInt64LE(source: Uint8Array, offset: number): bigint {\n    // eslint-disable-next-line no-restricted-globals\n    const hi = BigInt(\n      source[offset + 4] +\n        source[offset + 5] * 256 +\n        source[offset + 6] * 65536 +\n        (source[offset + 7] << 24)\n    ); // Overflow\n\n    // eslint-disable-next-line no-restricted-globals\n    const lo = BigInt(\n      source[offset] +\n        source[offset + 1] * 256 +\n        source[offset + 2] * 65536 +\n        source[offset + 3] * 16777216\n    );\n    // eslint-disable-next-line no-restricted-globals\n    return (hi << BigInt(32)) + lo;\n  },\n\n  /** Reads a little-endian 64-bit float from source */\n  getFloat64LE: isBigEndian\n    ? (source: Uint8Array, offset: number) => {\n        FLOAT_BYTES[7] = source[offset];\n        FLOAT_BYTES[6] = source[offset + 1];\n        FLOAT_BYTES[5] = source[offset + 2];\n        FLOAT_BYTES[4] = source[offset + 3];\n        FLOAT_BYTES[3] = source[offset + 4];\n        FLOAT_BYTES[2] = source[offset + 5];\n        FLOAT_BYTES[1] = source[offset + 6];\n        FLOAT_BYTES[0] = source[offset + 7];\n        return FLOAT[0];\n      }\n    : (source: Uint8Array, offset: number) => {\n        FLOAT_BYTES[0] = source[offset];\n        FLOAT_BYTES[1] = source[offset + 1];\n        FLOAT_BYTES[2] = source[offset + 2];\n        FLOAT_BYTES[3] = source[offset + 3];\n        FLOAT_BYTES[4] = source[offset + 4];\n        FLOAT_BYTES[5] = source[offset + 5];\n        FLOAT_BYTES[6] = source[offset + 6];\n        FLOAT_BYTES[7] = source[offset + 7];\n        return FLOAT[0];\n      },\n\n  /** Writes a big-endian 32-bit integer to destination, can be signed or unsigned */\n  setInt32BE(destination: Uint8Array, offset: number, value: number): 4 {\n    destination[offset + 3] = value;\n    value >>>= 8;\n    destination[offset + 2] = value;\n    value >>>= 8;\n    destination[offset + 1] = value;\n    value >>>= 8;\n    destination[offset] = value;\n    return 4;\n  },\n\n  /** Writes a little-endian 32-bit integer to destination, can be signed or unsigned */\n  setInt32LE(destination: Uint8Array, offset: number, value: number): 4 {\n    destination[offset] = value;\n    value >>>= 8;\n    destination[offset + 1] = value;\n    value >>>= 8;\n    destination[offset + 2] = value;\n    value >>>= 8;\n    destination[offset + 3] = value;\n    return 4;\n  },\n\n  /** Write a little-endian 64-bit integer to source */\n  setBigInt64LE(destination: Uint8Array, offset: number, value: bigint): 8 {\n    /* eslint-disable-next-line no-restricted-globals -- This is allowed here as useBigInt64=true */\n    const mask32bits = BigInt(0xffff_ffff);\n\n    /** lower 32 bits */\n    let lo = Number(value & mask32bits);\n    destination[offset] = lo;\n    lo >>= 8;\n    destination[offset + 1] = lo;\n    lo >>= 8;\n    destination[offset + 2] = lo;\n    lo >>= 8;\n    destination[offset + 3] = lo;\n\n    /*\n       eslint-disable-next-line no-restricted-globals\n       -- This is allowed here as useBigInt64=true\n\n       upper 32 bits\n     */\n    let hi = Number((value >> BigInt(32)) & mask32bits);\n    destination[offset + 4] = hi;\n    hi >>= 8;\n    destination[offset + 5] = hi;\n    hi >>= 8;\n    destination[offset + 6] = hi;\n    hi >>= 8;\n    destination[offset + 7] = hi;\n\n    return 8;\n  },\n\n  /** Writes a little-endian 64-bit float to destination */\n  setFloat64LE: isBigEndian\n    ? (destination: Uint8Array, offset: number, value: number) => {\n        FLOAT[0] = value;\n        destination[offset] = FLOAT_BYTES[7];\n        destination[offset + 1] = FLOAT_BYTES[6];\n        destination[offset + 2] = FLOAT_BYTES[5];\n        destination[offset + 3] = FLOAT_BYTES[4];\n        destination[offset + 4] = FLOAT_BYTES[3];\n        destination[offset + 5] = FLOAT_BYTES[2];\n        destination[offset + 6] = FLOAT_BYTES[1];\n        destination[offset + 7] = FLOAT_BYTES[0];\n        return 8;\n      }\n    : (destination: Uint8Array, offset: number, value: number) => {\n        FLOAT[0] = value;\n        destination[offset] = FLOAT_BYTES[0];\n        destination[offset + 1] = FLOAT_BYTES[1];\n        destination[offset + 2] = FLOAT_BYTES[2];\n        destination[offset + 3] = FLOAT_BYTES[3];\n        destination[offset + 4] = FLOAT_BYTES[4];\n        destination[offset + 5] = FLOAT_BYTES[5];\n        destination[offset + 6] = FLOAT_BYTES[6];\n        destination[offset + 7] = FLOAT_BYTES[7];\n        return 8;\n      }\n};\n", "import { type InspectFn, defaultInspect, isAnyArrayBuffer, isUint8Array } from './parser/utils';\nimport type { EJSONOptions } from './extended_json';\nimport { BSONError } from './error';\nimport { BSON_BINARY_SUBTYPE_UUID_NEW } from './constants';\nimport { ByteUtils } from './utils/byte_utils';\nimport { BSONValue } from './bson_value';\nimport { NumberUtils } from './utils/number_utils';\n\n/** @public */\nexport type BinarySequence = Uint8Array | number[];\n\n/** @public */\nexport interface BinaryExtendedLegacy {\n  $type: string;\n  $binary: string;\n}\n\n/** @public */\nexport interface BinaryExtended {\n  $binary: {\n    subType: string;\n    base64: string;\n  };\n}\n\n/**\n * A class representation of the BSON Binary type.\n * @public\n * @category BSONType\n */\nexport class Binary extends BSONValue {\n  get _bsontype(): 'Binary' {\n    return 'Binary';\n  }\n\n  /**\n   * Binary default subtype\n   * @internal\n   */\n  private static readonly BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n  /** Initial buffer default size */\n  static readonly BUFFER_SIZE = 256;\n  /** Default BSON type */\n  static readonly SUBTYPE_DEFAULT = 0;\n  /** Function BSON type */\n  static readonly SUBTYPE_FUNCTION = 1;\n  /** Byte Array BSON type */\n  static readonly SUBTYPE_BYTE_ARRAY = 2;\n  /** Deprecated UUID BSON type @deprecated Please use SUBTYPE_UUID */\n  static readonly SUBTYPE_UUID_OLD = 3;\n  /** UUID BSON type */\n  static readonly SUBTYPE_UUID = 4;\n  /** MD5 BSON type */\n  static readonly SUBTYPE_MD5 = 5;\n  /** Encrypted BSON type */\n  static readonly SUBTYPE_ENCRYPTED = 6;\n  /** Column BSON type */\n  static readonly SUBTYPE_COLUMN = 7;\n  /** Sensitive BSON type */\n  static readonly SUBTYPE_SENSITIVE = 8;\n  /** Vector BSON type */\n  static readonly SUBTYPE_VECTOR = 9;\n  /** User BSON type */\n  static readonly SUBTYPE_USER_DEFINED = 128;\n\n  /** datatype of a Binary Vector (subtype: 9) */\n  static readonly VECTOR_TYPE = Object.freeze({\n    Int8: 0x03,\n    Float32: 0x27,\n    PackedBit: 0x10\n  } as const);\n\n  /**\n   * The bytes of the Binary value.\n   *\n   * The format of a Binary value in BSON is defined as:\n   * ```txt\n   * binary\t::= int32 subtype (byte*)\n   * ```\n   *\n   * This `buffer` is the \"(byte*)\" segment.\n   *\n   * Unless the value is subtype 2, then deserialize will read the first 4 bytes as an int32 and set this to the remaining bytes.\n   *\n   * ```txt\n   * binary\t::= int32 unsigned_byte(2) int32 (byte*)\n   * ```\n   *\n   * @see https://bsonspec.org/spec.html\n   */\n  public buffer: Uint8Array;\n  /**\n   * The binary subtype.\n   *\n   * Current defined values are:\n   *\n   * - `unsigned_byte(0)` Generic binary subtype\n   * - `unsigned_byte(1)` Function\n   * - `unsigned_byte(2)` Binary (Deprecated)\n   * - `unsigned_byte(3)` UUID (Deprecated)\n   * - `unsigned_byte(4)` UUID\n   * - `unsigned_byte(5)` MD5\n   * - `unsigned_byte(6)` Encrypted BSON value\n   * - `unsigned_byte(7)` Compressed BSON column\n   * - `unsigned_byte(8)` Sensitive\n   * - `unsigned_byte(9)` Vector\n   * - `unsigned_byte(128)` - `unsigned_byte(255)` User defined\n   */\n  public sub_type: number;\n  /**\n   * The Binary's `buffer` can be larger than the Binary's content.\n   * This property is used to determine where the content ends in the buffer.\n   */\n  public position: number;\n\n  /**\n   * Create a new Binary instance.\n   * @param buffer - a buffer object containing the binary data.\n   * @param subType - the option binary type.\n   */\n  constructor(buffer?: BinarySequence, subType?: number) {\n    super();\n    if (\n      !(buffer == null) &&\n      typeof buffer === 'string' &&\n      !ArrayBuffer.isView(buffer) &&\n      !isAnyArrayBuffer(buffer) &&\n      !Array.isArray(buffer)\n    ) {\n      throw new BSONError('Binary can only be constructed from Uint8Array or number[]');\n    }\n\n    this.sub_type = subType ?? Binary.BSON_BINARY_SUBTYPE_DEFAULT;\n\n    if (buffer == null) {\n      // create an empty binary buffer\n      this.buffer = ByteUtils.allocate(Binary.BUFFER_SIZE);\n      this.position = 0;\n    } else {\n      this.buffer = Array.isArray(buffer)\n        ? ByteUtils.fromNumberArray(buffer)\n        : ByteUtils.toLocalBufferType(buffer);\n      this.position = this.buffer.byteLength;\n    }\n  }\n\n  /**\n   * Updates this binary with byte_value.\n   *\n   * @param byteValue - a single byte we wish to write.\n   */\n  put(byteValue: string | number | Uint8Array | number[]): void {\n    // If it's a string and a has more than one character throw an error\n    if (typeof byteValue === 'string' && byteValue.length !== 1) {\n      throw new BSONError('only accepts single character String');\n    } else if (typeof byteValue !== 'number' && byteValue.length !== 1)\n      throw new BSONError('only accepts single character Uint8Array or Array');\n\n    // Decode the byte value once\n    let decodedByte: number;\n    if (typeof byteValue === 'string') {\n      decodedByte = byteValue.charCodeAt(0);\n    } else if (typeof byteValue === 'number') {\n      decodedByte = byteValue;\n    } else {\n      decodedByte = byteValue[0];\n    }\n\n    if (decodedByte < 0 || decodedByte > 255) {\n      throw new BSONError('only accepts number in a valid unsigned byte range 0-255');\n    }\n\n    if (this.buffer.byteLength > this.position) {\n      this.buffer[this.position++] = decodedByte;\n    } else {\n      const newSpace = ByteUtils.allocate(Binary.BUFFER_SIZE + this.buffer.length);\n      newSpace.set(this.buffer, 0);\n      this.buffer = newSpace;\n      this.buffer[this.position++] = decodedByte;\n    }\n  }\n\n  /**\n   * Writes a buffer to the binary.\n   *\n   * @param sequence - a string or buffer to be written to the Binary BSON object.\n   * @param offset - specify the binary of where to write the content.\n   */\n  write(sequence: BinarySequence, offset: number): void {\n    offset = typeof offset === 'number' ? offset : this.position;\n\n    // If the buffer is to small let's extend the buffer\n    if (this.buffer.byteLength < offset + sequence.length) {\n      const newSpace = ByteUtils.allocate(this.buffer.byteLength + sequence.length);\n      newSpace.set(this.buffer, 0);\n\n      // Assign the new buffer\n      this.buffer = newSpace;\n    }\n\n    if (ArrayBuffer.isView(sequence)) {\n      this.buffer.set(ByteUtils.toLocalBufferType(sequence), offset);\n      this.position =\n        offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;\n    } else if (typeof sequence === 'string') {\n      throw new BSONError('input cannot be string');\n    }\n  }\n\n  /**\n   * Returns a view of **length** bytes starting at **position**.\n   *\n   * @param position - read from the given position in the Binary.\n   * @param length - the number of bytes to read.\n   */\n  read(position: number, length: number): Uint8Array {\n    length = length && length > 0 ? length : this.position;\n    const end = position + length;\n    return this.buffer.subarray(position, end > this.position ? this.position : end);\n  }\n\n  /** returns a view of the binary value as a Uint8Array */\n  value(): Uint8Array {\n    // Optimize to serialize for the situation where the data == size of buffer\n    return this.buffer.length === this.position\n      ? this.buffer\n      : this.buffer.subarray(0, this.position);\n  }\n\n  /** the length of the binary sequence */\n  length(): number {\n    return this.position;\n  }\n\n  toJSON(): string {\n    return ByteUtils.toBase64(this.buffer.subarray(0, this.position));\n  }\n\n  toString(encoding?: 'hex' | 'base64' | 'utf8' | 'utf-8'): string {\n    if (encoding === 'hex') return ByteUtils.toHex(this.buffer.subarray(0, this.position));\n    if (encoding === 'base64') return ByteUtils.toBase64(this.buffer.subarray(0, this.position));\n    if (encoding === 'utf8' || encoding === 'utf-8')\n      return ByteUtils.toUTF8(this.buffer, 0, this.position, false);\n    return ByteUtils.toUTF8(this.buffer, 0, this.position, false);\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): BinaryExtendedLegacy | BinaryExtended {\n    options = options || {};\n\n    if (this.sub_type === Binary.SUBTYPE_VECTOR) {\n      validateBinaryVector(this);\n    }\n\n    const base64String = ByteUtils.toBase64(this.buffer);\n\n    const subType = Number(this.sub_type).toString(16);\n    if (options.legacy) {\n      return {\n        $binary: base64String,\n        $type: subType.length === 1 ? '0' + subType : subType\n      };\n    }\n    return {\n      $binary: {\n        base64: base64String,\n        subType: subType.length === 1 ? '0' + subType : subType\n      }\n    };\n  }\n\n  toUUID(): UUID {\n    if (this.sub_type === Binary.SUBTYPE_UUID) {\n      return new UUID(this.buffer.subarray(0, this.position));\n    }\n\n    throw new BSONError(\n      `Binary sub_type \"${this.sub_type}\" is not supported for converting to UUID. Only \"${Binary.SUBTYPE_UUID}\" is currently supported.`\n    );\n  }\n\n  /** Creates an Binary instance from a hex digit string */\n  static createFromHexString(hex: string, subType?: number): Binary {\n    return new Binary(ByteUtils.fromHex(hex), subType);\n  }\n\n  /** Creates an Binary instance from a base64 string */\n  static createFromBase64(base64: string, subType?: number): Binary {\n    return new Binary(ByteUtils.fromBase64(base64), subType);\n  }\n\n  /** @internal */\n  static fromExtendedJSON(\n    doc: BinaryExtendedLegacy | BinaryExtended | UUIDExtended,\n    options?: EJSONOptions\n  ): Binary {\n    options = options || {};\n    let data: Uint8Array | undefined;\n    let type;\n    if ('$binary' in doc) {\n      if (options.legacy && typeof doc.$binary === 'string' && '$type' in doc) {\n        type = doc.$type ? parseInt(doc.$type, 16) : 0;\n        data = ByteUtils.fromBase64(doc.$binary);\n      } else {\n        if (typeof doc.$binary !== 'string') {\n          type = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;\n          data = ByteUtils.fromBase64(doc.$binary.base64);\n        }\n      }\n    } else if ('$uuid' in doc) {\n      type = 4;\n      data = UUID.bytesFromString(doc.$uuid);\n    }\n    if (!data) {\n      throw new BSONError(`Unexpected Binary Extended JSON format ${JSON.stringify(doc)}`);\n    }\n    return type === BSON_BINARY_SUBTYPE_UUID_NEW ? new UUID(data) : new Binary(data, type);\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    const base64 = ByteUtils.toBase64(this.buffer.subarray(0, this.position));\n    const base64Arg = inspect(base64, options);\n    const subTypeArg = inspect(this.sub_type, options);\n    return `Binary.createFromBase64(${base64Arg}, ${subTypeArg})`;\n  }\n\n  /**\n   * If this Binary represents a Int8 Vector (`binary.buffer[0] === Binary.VECTOR_TYPE.Int8`),\n   * returns a copy of the bytes in a new Int8Array.\n   *\n   * If the Binary is not a Vector, or the datatype is not Int8, an error is thrown.\n   */\n  public toInt8Array(): Int8Array {\n    if (this.sub_type !== Binary.SUBTYPE_VECTOR) {\n      throw new BSONError('Binary sub_type is not Vector');\n    }\n\n    if (this.buffer[0] !== Binary.VECTOR_TYPE.Int8) {\n      throw new BSONError('Binary datatype field is not Int8');\n    }\n\n    return new Int8Array(\n      this.buffer.buffer.slice(this.buffer.byteOffset + 2, this.buffer.byteOffset + this.position)\n    );\n  }\n\n  /**\n   * If this Binary represents a Float32 Vector (`binary.buffer[0] === Binary.VECTOR_TYPE.Float32`),\n   * returns a copy of the bytes in a new Float32Array.\n   *\n   * If the Binary is not a Vector, or the datatype is not Float32, an error is thrown.\n   */\n  public toFloat32Array(): Float32Array {\n    if (this.sub_type !== Binary.SUBTYPE_VECTOR) {\n      throw new BSONError('Binary sub_type is not Vector');\n    }\n\n    if (this.buffer[0] !== Binary.VECTOR_TYPE.Float32) {\n      throw new BSONError('Binary datatype field is not Float32');\n    }\n\n    const floatBytes = new Uint8Array(\n      this.buffer.buffer.slice(this.buffer.byteOffset + 2, this.buffer.byteOffset + this.position)\n    );\n\n    if (NumberUtils.isBigEndian) ByteUtils.swap32(floatBytes);\n\n    return new Float32Array(floatBytes.buffer);\n  }\n\n  /**\n   * If this Binary represents packed bit Vector (`binary.buffer[0] === Binary.VECTOR_TYPE.PackedBit`),\n   * returns a copy of the bytes that are packed bits.\n   *\n   * Use `toBits` to get the unpacked bits.\n   *\n   * If the Binary is not a Vector, or the datatype is not PackedBit, an error is thrown.\n   */\n  public toPackedBits(): Uint8Array {\n    if (this.sub_type !== Binary.SUBTYPE_VECTOR) {\n      throw new BSONError('Binary sub_type is not Vector');\n    }\n\n    if (this.buffer[0] !== Binary.VECTOR_TYPE.PackedBit) {\n      throw new BSONError('Binary datatype field is not packed bit');\n    }\n\n    return new Uint8Array(\n      this.buffer.buffer.slice(this.buffer.byteOffset + 2, this.buffer.byteOffset + this.position)\n    );\n  }\n\n  /**\n   * If this Binary represents a Packed bit Vector (`binary.buffer[0] === Binary.VECTOR_TYPE.PackedBit`),\n   * returns a copy of the bit unpacked into a new Int8Array.\n   *\n   * Use `toPackedBits` to get the bits still in packed form.\n   *\n   * If the Binary is not a Vector, or the datatype is not PackedBit, an error is thrown.\n   */\n  public toBits(): Int8Array {\n    if (this.sub_type !== Binary.SUBTYPE_VECTOR) {\n      throw new BSONError('Binary sub_type is not Vector');\n    }\n\n    if (this.buffer[0] !== Binary.VECTOR_TYPE.PackedBit) {\n      throw new BSONError('Binary datatype field is not packed bit');\n    }\n\n    const byteCount = this.length() - 2;\n    const bitCount = byteCount * 8 - this.buffer[1];\n    const bits = new Int8Array(bitCount);\n\n    for (let bitOffset = 0; bitOffset < bits.length; bitOffset++) {\n      const byteOffset = (bitOffset / 8) | 0;\n      const byte = this.buffer[byteOffset + 2];\n      const shift = 7 - (bitOffset % 8);\n      const bit = (byte >> shift) & 1;\n      bits[bitOffset] = bit;\n    }\n\n    return bits;\n  }\n\n  /**\n   * Constructs a Binary representing an Int8 Vector.\n   * @param array - The array to store as a view on the Binary class\n   */\n  public static fromInt8Array(array: Int8Array): Binary {\n    const buffer = ByteUtils.allocate(array.byteLength + 2);\n    buffer[0] = Binary.VECTOR_TYPE.Int8;\n    buffer[1] = 0;\n    const intBytes = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n    buffer.set(intBytes, 2);\n    return new this(buffer, this.SUBTYPE_VECTOR);\n  }\n\n  /** Constructs a Binary representing an Float32 Vector. */\n  public static fromFloat32Array(array: Float32Array): Binary {\n    const binaryBytes = ByteUtils.allocate(array.byteLength + 2);\n    binaryBytes[0] = Binary.VECTOR_TYPE.Float32;\n    binaryBytes[1] = 0;\n\n    const floatBytes = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n    binaryBytes.set(floatBytes, 2);\n\n    if (NumberUtils.isBigEndian) ByteUtils.swap32(new Uint8Array(binaryBytes.buffer, 2));\n\n    return new this(binaryBytes, this.SUBTYPE_VECTOR);\n  }\n\n  /**\n   * Constructs a Binary representing a packed bit Vector.\n   *\n   * Use `fromBits` to pack an array of 1s and 0s.\n   */\n  public static fromPackedBits(array: Uint8Array, padding = 0): Binary {\n    const buffer = ByteUtils.allocate(array.byteLength + 2);\n    buffer[0] = Binary.VECTOR_TYPE.PackedBit;\n    buffer[1] = padding;\n    buffer.set(array, 2);\n    return new this(buffer, this.SUBTYPE_VECTOR);\n  }\n\n  /**\n   * Constructs a Binary representing an Packed Bit Vector.\n   * @param array - The array of 1s and 0s to pack into the Binary instance\n   */\n  public static fromBits(bits: ArrayLike<number>): Binary {\n    const byteLength = (bits.length + 7) >>> 3; // ceil(bits.length / 8)\n    const bytes = new Uint8Array(byteLength + 2);\n    bytes[0] = Binary.VECTOR_TYPE.PackedBit;\n\n    const remainder = bits.length % 8;\n    bytes[1] = remainder === 0 ? 0 : 8 - remainder;\n\n    for (let bitOffset = 0; bitOffset < bits.length; bitOffset++) {\n      const byteOffset = bitOffset >>> 3; // floor(bitOffset / 8)\n      const bit = bits[bitOffset];\n\n      if (bit !== 0 && bit !== 1) {\n        throw new BSONError(\n          `Invalid bit value at ${bitOffset}: must be 0 or 1, found ${bits[bitOffset]}`\n        );\n      }\n\n      if (bit === 0) continue;\n\n      const shift = 7 - (bitOffset % 8);\n      bytes[byteOffset + 2] |= bit << shift;\n    }\n\n    return new this(bytes, Binary.SUBTYPE_VECTOR);\n  }\n}\n\nexport function validateBinaryVector(vector: Binary): void {\n  if (vector.sub_type !== Binary.SUBTYPE_VECTOR) return;\n\n  const size = vector.position;\n\n  // NOTE: Validation is only applied to **KNOWN** vector types\n  // If a new datatype is introduced, a future version of the library will need to add validation\n  const datatype = vector.buffer[0];\n\n  // NOTE: We do not enable noUncheckedIndexedAccess so TS believes this is always number\n  // a Binary vector may be empty, in which case the padding is undefined\n  // this possible value is tolerable for our validation checks\n  const padding: number | undefined = vector.buffer[1];\n\n  if (\n    (datatype === Binary.VECTOR_TYPE.Float32 || datatype === Binary.VECTOR_TYPE.Int8) &&\n    padding !== 0\n  ) {\n    throw new BSONError('Invalid Vector: padding must be zero for int8 and float32 vectors');\n  }\n\n  if (datatype === Binary.VECTOR_TYPE.PackedBit && padding !== 0 && size === 2) {\n    throw new BSONError(\n      'Invalid Vector: padding must be zero for packed bit vectors that are empty'\n    );\n  }\n\n  if (datatype === Binary.VECTOR_TYPE.PackedBit && padding > 7) {\n    throw new BSONError(\n      `Invalid Vector: padding must be a value between 0 and 7. found: ${padding}`\n    );\n  }\n}\n\n/** @public */\nexport type UUIDExtended = {\n  $uuid: string;\n};\n\nconst UUID_BYTE_LENGTH = 16;\nconst UUID_WITHOUT_DASHES = /^[0-9A-F]{32}$/i;\nconst UUID_WITH_DASHES = /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i;\n\n/**\n * A class representation of the BSON UUID type.\n * @public\n */\nexport class UUID extends Binary {\n  /**\n   * Create a UUID type\n   *\n   * When the argument to the constructor is omitted a random v4 UUID will be generated.\n   *\n   * @param input - Can be a 32 or 36 character hex string (dashes excluded/included) or a 16 byte binary Buffer.\n   */\n  constructor(input?: string | Uint8Array | UUID) {\n    let bytes: Uint8Array;\n    if (input == null) {\n      bytes = UUID.generate();\n    } else if (input instanceof UUID) {\n      bytes = ByteUtils.toLocalBufferType(new Uint8Array(input.buffer));\n    } else if (ArrayBuffer.isView(input) && input.byteLength === UUID_BYTE_LENGTH) {\n      bytes = ByteUtils.toLocalBufferType(input);\n    } else if (typeof input === 'string') {\n      bytes = UUID.bytesFromString(input);\n    } else {\n      throw new BSONError(\n        'Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).'\n      );\n    }\n    super(bytes, BSON_BINARY_SUBTYPE_UUID_NEW);\n  }\n\n  /**\n   * The UUID bytes\n   * @readonly\n   */\n  get id(): Uint8Array {\n    return this.buffer;\n  }\n\n  set id(value: Uint8Array) {\n    this.buffer = value;\n  }\n\n  /**\n   * Returns the UUID id as a 32 or 36 character hex string representation, excluding/including dashes (defaults to 36 character dash separated)\n   * @param includeDashes - should the string exclude dash-separators.\n   */\n  toHexString(includeDashes = true): string {\n    if (includeDashes) {\n      return [\n        ByteUtils.toHex(this.buffer.subarray(0, 4)),\n        ByteUtils.toHex(this.buffer.subarray(4, 6)),\n        ByteUtils.toHex(this.buffer.subarray(6, 8)),\n        ByteUtils.toHex(this.buffer.subarray(8, 10)),\n        ByteUtils.toHex(this.buffer.subarray(10, 16))\n      ].join('-');\n    }\n    return ByteUtils.toHex(this.buffer);\n  }\n\n  /**\n   * Converts the id into a 36 character (dashes included) hex string, unless a encoding is specified.\n   */\n  toString(encoding?: 'hex' | 'base64'): string {\n    if (encoding === 'hex') return ByteUtils.toHex(this.id);\n    if (encoding === 'base64') return ByteUtils.toBase64(this.id);\n    return this.toHexString();\n  }\n\n  /**\n   * Converts the id into its JSON string representation.\n   * A 36 character (dashes included) hex string in the format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n   */\n  toJSON(): string {\n    return this.toHexString();\n  }\n\n  /**\n   * Compares the equality of this UUID with `otherID`.\n   *\n   * @param otherId - UUID instance to compare against.\n   */\n  equals(otherId: string | Uint8Array | UUID): boolean {\n    if (!otherId) {\n      return false;\n    }\n\n    if (otherId instanceof UUID) {\n      return ByteUtils.equals(otherId.id, this.id);\n    }\n\n    try {\n      return ByteUtils.equals(new UUID(otherId).id, this.id);\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Creates a Binary instance from the current UUID.\n   */\n  toBinary(): Binary {\n    return new Binary(this.id, Binary.SUBTYPE_UUID);\n  }\n\n  /**\n   * Generates a populated buffer containing a v4 uuid\n   */\n  static generate(): Uint8Array {\n    const bytes = ByteUtils.randomBytes(UUID_BYTE_LENGTH);\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    // Kindly borrowed from https://github.com/uuidjs/uuid/blob/master/src/v4.js\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    return bytes;\n  }\n\n  /**\n   * Checks if a value is a valid bson UUID\n   * @param input - UUID, string or Buffer to validate.\n   */\n  static isValid(input: string | Uint8Array | UUID | Binary): boolean {\n    if (!input) {\n      return false;\n    }\n\n    if (typeof input === 'string') {\n      return UUID.isValidUUIDString(input);\n    }\n\n    if (isUint8Array(input)) {\n      return input.byteLength === UUID_BYTE_LENGTH;\n    }\n\n    return (\n      input._bsontype === 'Binary' &&\n      input.sub_type === this.SUBTYPE_UUID &&\n      input.buffer.byteLength === 16\n    );\n  }\n\n  /**\n   * Creates an UUID from a hex string representation of an UUID.\n   * @param hexString - 32 or 36 character hex string (dashes excluded/included).\n   */\n  static override createFromHexString(hexString: string): UUID {\n    const buffer = UUID.bytesFromString(hexString);\n    return new UUID(buffer);\n  }\n\n  /** Creates an UUID from a base64 string representation of an UUID. */\n  static override createFromBase64(base64: string): UUID {\n    return new UUID(ByteUtils.fromBase64(base64));\n  }\n\n  /** @internal */\n  static bytesFromString(representation: string) {\n    if (!UUID.isValidUUIDString(representation)) {\n      throw new BSONError(\n        'UUID string representation must be 32 hex digits or canonical hyphenated representation'\n      );\n    }\n    return ByteUtils.fromHex(representation.replace(/-/g, ''));\n  }\n\n  /**\n   * @internal\n   *\n   * Validates a string to be a hex digit sequence with or without dashes.\n   * The canonical hyphenated representation of a uuid is hex in 8-4-4-4-12 groups.\n   */\n  static isValidUUIDString(representation: string) {\n    return UUID_WITHOUT_DASHES.test(representation) || UUID_WITH_DASHES.test(representation);\n  }\n\n  /**\n   * Converts to a string representation of this Id.\n   *\n   * @returns return the 36 character hex string representation.\n   *\n   */\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    return `new UUID(${inspect(this.toHexString(), options)})`;\n  }\n}\n", "import type { Document } from './bson';\nimport { BSONValue } from './bson_value';\nimport { type InspectFn, defaultInspect } from './parser/utils';\n\n/** @public */\nexport interface CodeExtended {\n  $code: string;\n  $scope?: Document;\n}\n\n/**\n * A class representation of the BSON Code type.\n * @public\n * @category BSONType\n */\nexport class Code extends BSONValue {\n  get _bsontype(): 'Code' {\n    return 'Code';\n  }\n\n  code: string;\n\n  // a code instance having a null scope is what determines whether\n  // it is BSONType 0x0D (just code) / 0x0F (code with scope)\n  scope: Document | null;\n\n  /**\n   * @param code - a string or function.\n   * @param scope - an optional scope for the function.\n   */\n  constructor(code: string | Function, scope?: Document | null) {\n    super();\n    this.code = code.toString();\n    this.scope = scope ?? null;\n  }\n\n  toJSON(): { code: string; scope?: Document } {\n    if (this.scope != null) {\n      return { code: this.code, scope: this.scope };\n    }\n\n    return { code: this.code };\n  }\n\n  /** @internal */\n  toExtendedJSON(): CodeExtended {\n    if (this.scope) {\n      return { $code: this.code, $scope: this.scope };\n    }\n\n    return { $code: this.code };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: CodeExtended): Code {\n    return new Code(doc.$code, doc.$scope);\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    let parametersString = inspect(this.code, options);\n    const multiLineFn = parametersString.includes('\\n');\n    if (this.scope != null) {\n      parametersString += `,${multiLineFn ? '\\n' : ' '}${inspect(this.scope, options)}`;\n    }\n    const endingNewline = multiLineFn && this.scope === null;\n    return `new Code(${multiLineFn ? '\\n' : ''}${parametersString}${endingNewline ? '\\n' : ''})`;\n  }\n}\n", "import type { Document } from './bson';\nimport { BSONValue } from './bson_value';\nimport type { EJSONOptions } from './extended_json';\nimport type { ObjectId } from './objectid';\nimport { type InspectFn, defaultInspect } from './parser/utils';\n\n/** @public */\nexport interface DBRefLike {\n  $ref: string;\n  $id: ObjectId;\n  $db?: string;\n}\n\n/** @internal */\nexport function isDBRefLike(value: unknown): value is DBRefLike {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    '$id' in value &&\n    value.$id != null &&\n    '$ref' in value &&\n    typeof value.$ref === 'string' &&\n    // If '$db' is defined it MUST be a string, otherwise it should be absent\n    (!('$db' in value) || ('$db' in value && typeof value.$db === 'string'))\n  );\n}\n\n/**\n * A class representation of the BSON DBRef type.\n * @public\n * @category BSONType\n */\nexport class DBRef extends BSONValue {\n  get _bsontype(): 'DBRef' {\n    return 'DBRef';\n  }\n\n  collection!: string;\n  oid!: ObjectId;\n  db?: string;\n  fields!: Document;\n\n  /**\n   * @param collection - the collection name.\n   * @param oid - the reference ObjectId.\n   * @param db - optional db name, if omitted the reference is local to the current db.\n   */\n  constructor(collection: string, oid: ObjectId, db?: string, fields?: Document) {\n    super();\n    // check if namespace has been provided\n    const parts = collection.split('.');\n    if (parts.length === 2) {\n      db = parts.shift();\n      collection = parts.shift()!;\n    }\n\n    this.collection = collection;\n    this.oid = oid;\n    this.db = db;\n    this.fields = fields || {};\n  }\n\n  // Property provided for compatibility with the 1.x parser\n  // the 1.x parser used a \"namespace\" property, while 4.x uses \"collection\"\n\n  /** @internal */\n  get namespace(): string {\n    return this.collection;\n  }\n\n  set namespace(value: string) {\n    this.collection = value;\n  }\n\n  toJSON(): DBRefLike & Document {\n    const o = Object.assign(\n      {\n        $ref: this.collection,\n        $id: this.oid\n      },\n      this.fields\n    );\n\n    if (this.db != null) o.$db = this.db;\n    return o;\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): DBRefLike {\n    options = options || {};\n    let o: DBRefLike = {\n      $ref: this.collection,\n      $id: this.oid\n    };\n\n    if (options.legacy) {\n      return o;\n    }\n\n    if (this.db) o.$db = this.db;\n    o = Object.assign(o, this.fields);\n    return o;\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: DBRefLike): DBRef {\n    const copy = Object.assign({}, doc) as Partial<DBRefLike>;\n    delete copy.$ref;\n    delete copy.$id;\n    delete copy.$db;\n    return new DBRef(doc.$ref, doc.$id, doc.$db, copy);\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n\n    const args = [\n      inspect(this.namespace, options),\n      inspect(this.oid, options),\n      ...(this.db ? [inspect(this.db, options)] : []),\n      ...(Object.keys(this.fields).length > 0 ? [inspect(this.fields, options)] : [])\n    ];\n\n    args[1] = inspect === defaultInspect ? `new ObjectId(${args[1]})` : args[1];\n\n    return `new DBRef(${args.join(', ')})`;\n  }\n}\n", "/**\n * @internal\n * Removes leading zeros and explicit plus from textual representation of a number.\n */\nexport function removeLeadingZerosAndExplicitPlus(str: string): string {\n  if (str === '') {\n    return str;\n  }\n\n  let startIndex = 0;\n\n  const isNegative = str[startIndex] === '-';\n  const isExplicitlyPositive = str[startIndex] === '+';\n\n  if (isExplicitlyPositive || isNegative) {\n    startIndex += 1;\n  }\n\n  let foundInsignificantZero = false;\n\n  for (; startIndex < str.length && str[startIndex] === '0'; ++startIndex) {\n    foundInsignificantZero = true;\n  }\n\n  if (!foundInsignificantZero) {\n    return isExplicitlyPositive ? str.slice(1) : str;\n  }\n\n  return `${isNegative ? '-' : ''}${str.length === startIndex ? '0' : str.slice(startIndex)}`;\n}\n\n/**\n * @internal\n * Returns false for an string that contains invalid characters for its radix, else returns the original string.\n * @param str - The textual representation of the Long\n * @param radix - The radix in which the text is written (2-36), defaults to 10\n */\nexport function validateStringCharacters(str: string, radix?: number): false | string {\n  radix = radix ?? 10;\n  const validCharacters = '0123456789abcdefghijklmnopqrstuvwxyz'.slice(0, radix);\n  // regex is case insensitive and checks that each character within the string is one of the validCharacters\n  const regex = new RegExp(`[^-+${validCharacters}]`, 'i');\n  return regex.test(str) ? false : str;\n}\n", "import { BSONValue } from './bson_value';\nimport { BSONError } from './error';\nimport type { EJSONOptions } from './extended_json';\nimport { type InspectFn, defaultInspect } from './parser/utils';\nimport type { Timestamp } from './timestamp';\nimport * as StringUtils from './utils/string_utils';\n\ninterface LongWASMHelpers {\n  /** Gets the high bits of the last operation performed */\n  get_high(this: void): number;\n  div_u(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsDivisor: number,\n    highBitsDivisor: number\n  ): number;\n  div_s(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsDivisor: number,\n    highBitsDivisor: number\n  ): number;\n  rem_u(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsDivisor: number,\n    highBitsDivisor: number\n  ): number;\n  rem_s(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsDivisor: number,\n    highBitsDivisor: number\n  ): number;\n  mul(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsMultiplier: number,\n    highBitsMultiplier: number\n  ): number;\n}\n\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nlet wasm: LongWASMHelpers | undefined = undefined;\n\n/* We do not want to have to include DOM types just for this check */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const WebAssembly: any;\n\ntry {\n  wasm = new WebAssembly.Instance(\n    new WebAssembly.Module(\n      // prettier-ignore\n      new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])\n    ),\n    {}\n  ).exports as unknown as LongWASMHelpers;\n} catch {\n  // no wasm support\n}\n\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_24_DBL = 1 << 24;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n\n/** A cache of the Long representations of small integer values. */\nconst INT_CACHE: { [key: number]: Long } = {};\n\n/** A cache of the Long representations of small unsigned integer values. */\nconst UINT_CACHE: { [key: number]: Long } = {};\n\nconst MAX_INT64_STRING_LENGTH = 20;\n\nconst DECIMAL_REG_EX = /^(\\+?0|(\\+|-)?[1-9][0-9]*)$/;\n\n/** @public */\nexport interface LongExtended {\n  $numberLong: string;\n}\n\n/**\n * A class representing a 64-bit integer\n * @public\n * @category BSONType\n * @remarks\n * The internal representation of a long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16 bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n * Common constant values ZERO, ONE, NEG_ONE, etc. are found as static properties on this class.\n */\nexport class Long extends BSONValue {\n  get _bsontype(): 'Long' {\n    return 'Long';\n  }\n\n  /** An indicator used to reliably determine if an object is a Long or not. */\n  get __isLong__(): boolean {\n    return true;\n  }\n\n  /**\n   * The high 32 bits as a signed value.\n   */\n  high: number;\n\n  /**\n   * The low 32 bits as a signed value.\n   */\n  low: number;\n\n  /**\n   * Whether unsigned or not.\n   */\n  unsigned: boolean;\n\n  /**\n   * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n   *\n   * @param low - The low (signed) 32 bits of the long\n   * @param high - The high (signed) 32 bits of the long\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   */\n  constructor(low: number, high?: number, unsigned?: boolean);\n  /**\n   * Constructs a 64 bit two's-complement integer, given a bigint representation.\n   *\n   * @param value - BigInt representation of the long value\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   */\n  constructor(value: bigint, unsigned?: boolean);\n  /**\n   * Constructs a 64 bit two's-complement integer, given a string representation.\n   *\n   * @param value - String representation of the long value\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   */\n  constructor(value: string, unsigned?: boolean);\n  constructor(\n    lowOrValue: number | bigint | string = 0,\n    highOrUnsigned?: number | boolean,\n    unsigned?: boolean\n  ) {\n    super();\n    const unsignedBool = typeof highOrUnsigned === 'boolean' ? highOrUnsigned : Boolean(unsigned);\n    const high = typeof highOrUnsigned === 'number' ? highOrUnsigned : 0;\n    const res =\n      typeof lowOrValue === 'string'\n        ? Long.fromString(lowOrValue, unsignedBool)\n        : typeof lowOrValue === 'bigint'\n          ? Long.fromBigInt(lowOrValue, unsignedBool)\n          : { low: lowOrValue | 0, high: high | 0, unsigned: unsignedBool };\n    this.low = res.low;\n    this.high = res.high;\n    this.unsigned = res.unsigned;\n  }\n\n  static TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\n\n  /** Maximum unsigned value. */\n  static MAX_UNSIGNED_VALUE = Long.fromBits(0xffffffff | 0, 0xffffffff | 0, true);\n  /** Signed zero */\n  static ZERO = Long.fromInt(0);\n  /** Unsigned zero. */\n  static UZERO = Long.fromInt(0, true);\n  /** Signed one. */\n  static ONE = Long.fromInt(1);\n  /** Unsigned one. */\n  static UONE = Long.fromInt(1, true);\n  /** Signed negative one. */\n  static NEG_ONE = Long.fromInt(-1);\n  /** Maximum signed value. */\n  static MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\n  /** Minimum signed value. */\n  static MIN_VALUE = Long.fromBits(0, 0x80000000 | 0, false);\n\n  /**\n   * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits.\n   * Each is assumed to use 32 bits.\n   * @param lowBits - The low 32 bits\n   * @param highBits - The high 32 bits\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromBits(lowBits: number, highBits: number, unsigned?: boolean): Long {\n    return new Long(lowBits, highBits, unsigned);\n  }\n\n  /**\n   * Returns a Long representing the given 32 bit integer value.\n   * @param value - The 32 bit integer in question\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromInt(value: number, unsigned?: boolean): Long {\n    let obj, cachedObj, cache;\n    if (unsigned) {\n      value >>>= 0;\n      if ((cache = 0 <= value && value < 256)) {\n        cachedObj = UINT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n      obj = Long.fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n      if (cache) UINT_CACHE[value] = obj;\n      return obj;\n    } else {\n      value |= 0;\n      if ((cache = -128 <= value && value < 128)) {\n        cachedObj = INT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n      obj = Long.fromBits(value, value < 0 ? -1 : 0, false);\n      if (cache) INT_CACHE[value] = obj;\n      return obj;\n    }\n  }\n\n  /**\n   * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n   * @param value - The number in question\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromNumber(value: number, unsigned?: boolean): Long {\n    if (isNaN(value)) return unsigned ? Long.UZERO : Long.ZERO;\n    if (unsigned) {\n      if (value < 0) return Long.UZERO;\n      if (value >= TWO_PWR_64_DBL) return Long.MAX_UNSIGNED_VALUE;\n    } else {\n      if (value <= -TWO_PWR_63_DBL) return Long.MIN_VALUE;\n      if (value + 1 >= TWO_PWR_63_DBL) return Long.MAX_VALUE;\n    }\n    if (value < 0) return Long.fromNumber(-value, unsigned).neg();\n    return Long.fromBits(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n  }\n\n  /**\n   * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n   * @param value - The number in question\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromBigInt(value: bigint, unsigned?: boolean): Long {\n    // eslint-disable-next-line no-restricted-globals\n    const FROM_BIGINT_BIT_MASK = BigInt(0xffffffff);\n    // eslint-disable-next-line no-restricted-globals\n    const FROM_BIGINT_BIT_SHIFT = BigInt(32);\n    return new Long(\n      Number(value & FROM_BIGINT_BIT_MASK),\n      Number((value >> FROM_BIGINT_BIT_SHIFT) & FROM_BIGINT_BIT_MASK),\n      unsigned\n    );\n  }\n\n  /**\n   * @internal\n   * Returns a Long representation of the given string, written using the specified radix.\n   * Throws an error if `throwsError` is set to true and any of the following conditions are true:\n   *  - the string contains invalid characters for the given radix\n   *  - the string contains whitespace\n   * @param str - The textual representation of the Long\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @param radix - The radix in which the text is written (2-36), defaults to 10\n   * @returns The corresponding Long value\n   */\n  private static _fromString(str: string, unsigned: boolean, radix: number): Long {\n    if (str.length === 0) throw new BSONError('empty string');\n    if (radix < 2 || 36 < radix) throw new BSONError('radix');\n\n    let p;\n    if ((p = str.indexOf('-')) > 0) throw new BSONError('interior hyphen');\n    else if (p === 0) {\n      return Long._fromString(str.substring(1), unsigned, radix).neg();\n    }\n\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    const radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n    let result = Long.ZERO;\n    for (let i = 0; i < str.length; i += 8) {\n      const size = Math.min(8, str.length - i),\n        value = parseInt(str.substring(i, i + size), radix);\n      if (size < 8) {\n        const power = Long.fromNumber(Math.pow(radix, size));\n        result = result.mul(power).add(Long.fromNumber(value));\n      } else {\n        result = result.mul(radixToPower);\n        result = result.add(Long.fromNumber(value));\n      }\n    }\n    result.unsigned = unsigned;\n    return result;\n  }\n\n  /**\n   * Returns a signed Long representation of the given string, written using radix 10.\n   * Will throw an error if the given text is not exactly representable as a Long.\n   * Throws an error if any of the following conditions are true:\n   * - the string contains invalid characters for the radix 10\n   * - the string contains whitespace\n   * - the value the string represents is too large or too small to be a Long\n   * Unlike Long.fromString, this method does not coerce '+/-Infinity' and 'NaN' to Long.Zero\n   * @param str - The textual representation of the Long\n   * @returns The corresponding Long value\n   */\n  static fromStringStrict(str: string): Long;\n  /**\n   * Returns a Long representation of the given string, written using the radix 10.\n   * Will throw an error if the given parameters are not exactly representable as a Long.\n   * Throws an error if any of the following conditions are true:\n   * - the string contains invalid characters for the given radix\n   * - the string contains whitespace\n   * - the value the string represents is too large or too small to be a Long\n   * Unlike Long.fromString, this method does not coerce '+/-Infinity' and 'NaN' to Long.Zero\n   * @param str - The textual representation of the Long\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromStringStrict(str: string, unsigned?: boolean): Long;\n  /**\n   * Returns a signed Long representation of the given string, written using the specified radix.\n   * Will throw an error if the given parameters are not exactly representable as a Long.\n   * Throws an error if any of the following conditions are true:\n   * - the string contains invalid characters for the given radix\n   * - the string contains whitespace\n   * - the value the string represents is too large or too small to be a Long\n   * Unlike Long.fromString, this method does not coerce '+/-Infinity' and 'NaN' to Long.Zero\n   * @param str - The textual representation of the Long\n   * @param radix - The radix in which the text is written (2-36), defaults to 10\n   * @returns The corresponding Long value\n   */\n  static fromStringStrict(str: string, radix?: boolean): Long;\n  /**\n   * Returns a Long representation of the given string, written using the specified radix.\n   * Will throw an error if the given parameters are not exactly representable as a Long.\n   * Throws an error if any of the following conditions are true:\n   * - the string contains invalid characters for the given radix\n   * - the string contains whitespace\n   * - the value the string represents is too large or too small to be a Long\n   * Unlike Long.fromString, this method does not coerce '+/-Infinity' and 'NaN' to Long.Zero\n   * @param str - The textual representation of the Long\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @param radix - The radix in which the text is written (2-36), defaults to 10\n   * @returns The corresponding Long value\n   */\n  static fromStringStrict(str: string, unsigned?: boolean, radix?: number): Long;\n  static fromStringStrict(str: string, unsignedOrRadix?: boolean | number, radix?: number): Long {\n    let unsigned = false;\n    if (typeof unsignedOrRadix === 'number') {\n      // For goog.math.long compatibility\n      (radix = unsignedOrRadix), (unsignedOrRadix = false);\n    } else {\n      unsigned = !!unsignedOrRadix;\n    }\n    radix ??= 10;\n\n    if (str.trim() !== str) {\n      throw new BSONError(`Input: '${str}' contains leading and/or trailing whitespace`);\n    }\n    if (!StringUtils.validateStringCharacters(str, radix)) {\n      throw new BSONError(`Input: '${str}' contains invalid characters for radix: ${radix}`);\n    }\n\n    // remove leading zeros (for later string comparison and to make math faster)\n    const cleanedStr = StringUtils.removeLeadingZerosAndExplicitPlus(str);\n\n    // check roundtrip result\n    const result = Long._fromString(cleanedStr, unsigned, radix);\n    if (result.toString(radix).toLowerCase() !== cleanedStr.toLowerCase()) {\n      throw new BSONError(\n        `Input: ${str} is not representable as ${result.unsigned ? 'an unsigned' : 'a signed'} 64-bit Long ${radix != null ? `with radix: ${radix}` : ''}`\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Returns a signed Long representation of the given string, written using radix 10.\n   *\n   * If the input string is empty, this function will throw a BSONError.\n   *\n   * If input string does not have valid signed 64-bit Long representation, this method will return a coerced value:\n   * - inputs that overflow 64-bit signed long will be coerced to Long.MAX_VALUE and Long.MIN_VALUE respectively\n   * - 'NaN' or '+/-Infinity' are coerced to Long.ZERO\n   * - other invalid characters sequences have variable behavior\n   *\n   * @param str - The textual representation of the Long\n   * @returns The corresponding Long value\n   */\n  static fromString(str: string): Long;\n  /**\n   * Returns a signed Long representation of the given string, written using the provided radix.\n   *\n   * If the input string is empty or a provided radix is not within (2-36), this function will throw a BSONError.\n   *\n   * If input parameters do not have valid signed 64-bit Long representation, this method will return a coerced value:\n   * - inputs that overflow 64-bit signed long will be coerced to Long.MAX_VALUE and Long.MIN_VALUE respectively\n   * - if the radix is less than 24, 'NaN' is coerced to Long.ZERO\n   * - if the radix is less than 35, '+/-Infinity' inputs are coerced to Long.ZERO\n   * - other invalid characters sequences have variable behavior\n   * @param str - The textual representation of the Long\n   * @param radix - The radix in which the text is written (2-36), defaults to 10\n   * @returns The corresponding Long value\n   */\n  static fromString(str: string, radix?: number): Long;\n  /**\n   * Returns a Long representation of the given string, written using radix 10.\n   *\n   * If the input string is empty, this function will throw a BSONError.\n   *\n   * If input parameters do not have a valid 64-bit Long representation, this method will return a coerced value:\n   * - inputs that overflow 64-bit long will be coerced to max or min (if signed) values\n   * - if the radix is less than 24, 'NaN' is coerced to Long.ZERO\n   * - if the radix is less than 35, '+/-Infinity' inputs are coerced to Long.ZERO\n   * - other invalid characters sequences have variable behavior\n   * @param str - The textual representation of the Long\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromString(str: string, unsigned?: boolean): Long;\n  /**\n   * Returns a Long representation of the given string, written using the specified radix.\n   *\n   * If the input string is empty or a provided radix is not within (2-36), this function will throw a BSONError.\n   *\n   * If input parameters do not have a valid 64-bit Long representation, this method will return a coerced value:\n   * - inputs that overflow 64-bit long will be coerced to max or min (if signed) values\n   * - if the radix is less than 24, 'NaN' is coerced to Long.ZERO\n   * - if the radix is less than 35, '+/-Infinity' inputs are coerced to Long.ZERO\n   * - other invalid characters sequences have variable behavior\n   * @param str - The textual representation of the Long\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @param radix - The radix in which the text is written (2-36), defaults to 10\n   * @returns The corresponding Long value\n   */\n  static fromString(str: string, unsigned?: boolean, radix?: number): Long;\n  static fromString(str: string, unsignedOrRadix?: boolean | number, radix?: number): Long {\n    let unsigned = false;\n    if (typeof unsignedOrRadix === 'number') {\n      // For goog.math.long compatibility\n      (radix = unsignedOrRadix), (unsignedOrRadix = false);\n    } else {\n      unsigned = !!unsignedOrRadix;\n    }\n    radix ??= 10;\n    if (str === 'NaN' && radix < 24) {\n      // radix does not support n, so coerce to zero\n      return Long.ZERO;\n    } else if ((str === 'Infinity' || str === '+Infinity' || str === '-Infinity') && radix < 35) {\n      // radix does not support y, so coerce to zero\n      return Long.ZERO;\n    }\n    return Long._fromString(str, unsigned, radix);\n  }\n\n  /**\n   * Creates a Long from its byte representation.\n   * @param bytes - Byte representation\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @param le - Whether little or big endian, defaults to big endian\n   * @returns The corresponding Long value\n   */\n  static fromBytes(bytes: number[], unsigned?: boolean, le?: boolean): Long {\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n  }\n\n  /**\n   * Creates a Long from its little endian byte representation.\n   * @param bytes - Little endian byte representation\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromBytesLE(bytes: number[], unsigned?: boolean): Long {\n    return new Long(\n      bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24),\n      bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24),\n      unsigned\n    );\n  }\n\n  /**\n   * Creates a Long from its big endian byte representation.\n   * @param bytes - Big endian byte representation\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromBytesBE(bytes: number[], unsigned?: boolean): Long {\n    return new Long(\n      (bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7],\n      (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3],\n      unsigned\n    );\n  }\n\n  /**\n   * Tests if the specified object is a Long.\n   */\n  static isLong(value: unknown): value is Long {\n    return (\n      value != null &&\n      typeof value === 'object' &&\n      '__isLong__' in value &&\n      value.__isLong__ === true\n    );\n  }\n\n  /**\n   * Converts the specified value to a Long.\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   */\n  static fromValue(\n    val: number | string | { low: number; high: number; unsigned?: boolean },\n    unsigned?: boolean\n  ): Long {\n    if (typeof val === 'number') return Long.fromNumber(val, unsigned);\n    if (typeof val === 'string') return Long.fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return Long.fromBits(\n      val.low,\n      val.high,\n      typeof unsigned === 'boolean' ? unsigned : val.unsigned\n    );\n  }\n\n  /** Returns the sum of this and the specified Long. */\n  add(addend: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(addend)) addend = Long.fromValue(addend);\n\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n    const a48 = this.high >>> 16;\n    const a32 = this.high & 0xffff;\n    const a16 = this.low >>> 16;\n    const a00 = this.low & 0xffff;\n\n    const b48 = addend.high >>> 16;\n    const b32 = addend.high & 0xffff;\n    const b16 = addend.low >>> 16;\n    const b00 = addend.low & 0xffff;\n\n    let c48 = 0,\n      c32 = 0,\n      c16 = 0,\n      c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 + b48;\n    c48 &= 0xffff;\n    return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n  }\n\n  /**\n   * Returns the sum of this and the specified Long.\n   * @returns Sum\n   */\n  and(other: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n  }\n\n  /**\n   * Compares this Long's value with the specified's.\n   * @returns 0 if they are the same, 1 if the this is greater and -1 if the given one is greater\n   */\n  compare(other: string | number | Long | Timestamp): 0 | 1 | -1 {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.eq(other)) return 0;\n    const thisNeg = this.isNegative(),\n      otherNeg = other.isNegative();\n    if (thisNeg && !otherNeg) return -1;\n    if (!thisNeg && otherNeg) return 1;\n    // At this point the sign bits are the same\n    if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return other.high >>> 0 > this.high >>> 0 ||\n      (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n      ? -1\n      : 1;\n  }\n\n  /** This is an alias of {@link Long.compare} */\n  comp(other: string | number | Long | Timestamp): 0 | 1 | -1 {\n    return this.compare(other);\n  }\n\n  /**\n   * Returns this Long divided by the specified. The result is signed if this Long is signed or unsigned if this Long is unsigned.\n   * @returns Quotient\n   */\n  divide(divisor: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(divisor)) divisor = Long.fromValue(divisor);\n    if (divisor.isZero()) throw new BSONError('division by zero');\n\n    // use wasm support if present\n    if (wasm) {\n      // guard against signed division overflow: the largest\n      // negative number / -1 would be 1 larger than the largest\n      // positive number, due to two's complement.\n      if (\n        !this.unsigned &&\n        this.high === -0x80000000 &&\n        divisor.low === -1 &&\n        divisor.high === -1\n      ) {\n        // be consistent with non-wasm code path\n        return this;\n      }\n      const low = (this.unsigned ? wasm.div_u : wasm.div_s)(\n        this.low,\n        this.high,\n        divisor.low,\n        divisor.high\n      );\n      return Long.fromBits(low, wasm.get_high(), this.unsigned);\n    }\n\n    if (this.isZero()) return this.unsigned ? Long.UZERO : Long.ZERO;\n    let approx, rem, res;\n    if (!this.unsigned) {\n      // This section is only relevant for signed longs and is derived from the\n      // closure library as a whole.\n      if (this.eq(Long.MIN_VALUE)) {\n        if (divisor.eq(Long.ONE) || divisor.eq(Long.NEG_ONE)) return Long.MIN_VALUE;\n        // recall that -MIN_VALUE == MIN_VALUE\n        else if (divisor.eq(Long.MIN_VALUE)) return Long.ONE;\n        else {\n          // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n          const halfThis = this.shr(1);\n          approx = halfThis.div(divisor).shl(1);\n          if (approx.eq(Long.ZERO)) {\n            return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\n          } else {\n            rem = this.sub(divisor.mul(approx));\n            res = approx.add(rem.div(divisor));\n            return res;\n          }\n        }\n      } else if (divisor.eq(Long.MIN_VALUE)) return this.unsigned ? Long.UZERO : Long.ZERO;\n      if (this.isNegative()) {\n        if (divisor.isNegative()) return this.neg().div(divisor.neg());\n        return this.neg().div(divisor).neg();\n      } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n      res = Long.ZERO;\n    } else {\n      // The algorithm below has not been made for unsigned longs. It's therefore\n      // required to take special care of the MSB prior to running it.\n      if (!divisor.unsigned) divisor = divisor.toUnsigned();\n      if (divisor.gt(this)) return Long.UZERO;\n      if (divisor.gt(this.shru(1)))\n        // 15 >>> 1 = 7 ; with divisor = 8 ; true\n        return Long.UONE;\n      res = Long.UZERO;\n    }\n\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    rem = this;\n    while (rem.gte(divisor)) {\n      // Approximate the result of division. This may be a little greater or\n      // smaller than the actual value.\n      approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n\n      // We will tweak the approximate result by changing it in the 48-th digit or\n      // the smallest non-fractional digit, whichever is larger.\n      const log2 = Math.ceil(Math.log(approx) / Math.LN2);\n      const delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n      // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      let approxRes = Long.fromNumber(approx);\n      let approxRem = approxRes.mul(divisor);\n      while (approxRem.isNegative() || approxRem.gt(rem)) {\n        approx -= delta;\n        approxRes = Long.fromNumber(approx, this.unsigned);\n        approxRem = approxRes.mul(divisor);\n      }\n\n      // We know the answer can't be zero... and actually, zero would cause\n      // infinite recursion since we would make no progress.\n      if (approxRes.isZero()) approxRes = Long.ONE;\n\n      res = res.add(approxRes);\n      rem = rem.sub(approxRem);\n    }\n    return res;\n  }\n\n  /**This is an alias of {@link Long.divide} */\n  div(divisor: string | number | Long | Timestamp): Long {\n    return this.divide(divisor);\n  }\n\n  /**\n   * Tests if this Long's value equals the specified's.\n   * @param other - Other value\n   */\n  equals(other: string | number | Long | Timestamp): boolean {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)\n      return false;\n    return this.high === other.high && this.low === other.low;\n  }\n\n  /** This is an alias of {@link Long.equals} */\n  eq(other: string | number | Long | Timestamp): boolean {\n    return this.equals(other);\n  }\n\n  /** Gets the high 32 bits as a signed integer. */\n  getHighBits(): number {\n    return this.high;\n  }\n\n  /** Gets the high 32 bits as an unsigned integer. */\n  getHighBitsUnsigned(): number {\n    return this.high >>> 0;\n  }\n\n  /** Gets the low 32 bits as a signed integer. */\n  getLowBits(): number {\n    return this.low;\n  }\n\n  /** Gets the low 32 bits as an unsigned integer. */\n  getLowBitsUnsigned(): number {\n    return this.low >>> 0;\n  }\n\n  /** Gets the number of bits needed to represent the absolute value of this Long. */\n  getNumBitsAbs(): number {\n    if (this.isNegative()) {\n      // Unsigned Longs are never negative\n      return this.eq(Long.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n    }\n    const val = this.high !== 0 ? this.high : this.low;\n    let bit: number;\n    for (bit = 31; bit > 0; bit--) if ((val & (1 << bit)) !== 0) break;\n    return this.high !== 0 ? bit + 33 : bit + 1;\n  }\n\n  /** Tests if this Long's value is greater than the specified's. */\n  greaterThan(other: string | number | Long | Timestamp): boolean {\n    return this.comp(other) > 0;\n  }\n\n  /** This is an alias of {@link Long.greaterThan} */\n  gt(other: string | number | Long | Timestamp): boolean {\n    return this.greaterThan(other);\n  }\n\n  /** Tests if this Long's value is greater than or equal the specified's. */\n  greaterThanOrEqual(other: string | number | Long | Timestamp): boolean {\n    return this.comp(other) >= 0;\n  }\n\n  /** This is an alias of {@link Long.greaterThanOrEqual} */\n  gte(other: string | number | Long | Timestamp): boolean {\n    return this.greaterThanOrEqual(other);\n  }\n  /** This is an alias of {@link Long.greaterThanOrEqual} */\n  ge(other: string | number | Long | Timestamp): boolean {\n    return this.greaterThanOrEqual(other);\n  }\n\n  /** Tests if this Long's value is even. */\n  isEven(): boolean {\n    return (this.low & 1) === 0;\n  }\n\n  /** Tests if this Long's value is negative. */\n  isNegative(): boolean {\n    return !this.unsigned && this.high < 0;\n  }\n\n  /** Tests if this Long's value is odd. */\n  isOdd(): boolean {\n    return (this.low & 1) === 1;\n  }\n\n  /** Tests if this Long's value is positive. */\n  isPositive(): boolean {\n    return this.unsigned || this.high >= 0;\n  }\n\n  /** Tests if this Long's value equals zero. */\n  isZero(): boolean {\n    return this.high === 0 && this.low === 0;\n  }\n\n  /** Tests if this Long's value is less than the specified's. */\n  lessThan(other: string | number | Long | Timestamp): boolean {\n    return this.comp(other) < 0;\n  }\n\n  /** This is an alias of {@link Long#lessThan}. */\n  lt(other: string | number | Long | Timestamp): boolean {\n    return this.lessThan(other);\n  }\n\n  /** Tests if this Long's value is less than or equal the specified's. */\n  lessThanOrEqual(other: string | number | Long | Timestamp): boolean {\n    return this.comp(other) <= 0;\n  }\n\n  /** This is an alias of {@link Long.lessThanOrEqual} */\n  lte(other: string | number | Long | Timestamp): boolean {\n    return this.lessThanOrEqual(other);\n  }\n\n  /** Returns this Long modulo the specified. */\n  modulo(divisor: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(divisor)) divisor = Long.fromValue(divisor);\n\n    // use wasm support if present\n    if (wasm) {\n      const low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\n        this.low,\n        this.high,\n        divisor.low,\n        divisor.high\n      );\n      return Long.fromBits(low, wasm.get_high(), this.unsigned);\n    }\n\n    return this.sub(this.div(divisor).mul(divisor));\n  }\n\n  /** This is an alias of {@link Long.modulo} */\n  mod(divisor: string | number | Long | Timestamp): Long {\n    return this.modulo(divisor);\n  }\n  /** This is an alias of {@link Long.modulo} */\n  rem(divisor: string | number | Long | Timestamp): Long {\n    return this.modulo(divisor);\n  }\n\n  /**\n   * Returns the product of this and the specified Long.\n   * @param multiplier - Multiplier\n   * @returns Product\n   */\n  multiply(multiplier: string | number | Long | Timestamp): Long {\n    if (this.isZero()) return Long.ZERO;\n    if (!Long.isLong(multiplier)) multiplier = Long.fromValue(multiplier);\n\n    // use wasm support if present\n    if (wasm) {\n      const low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);\n      return Long.fromBits(low, wasm.get_high(), this.unsigned);\n    }\n\n    if (multiplier.isZero()) return Long.ZERO;\n    if (this.eq(Long.MIN_VALUE)) return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n    if (multiplier.eq(Long.MIN_VALUE)) return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n\n    if (this.isNegative()) {\n      if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());\n      else return this.neg().mul(multiplier).neg();\n    } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg();\n\n    // If both longs are small, use float multiplication\n    if (this.lt(Long.TWO_PWR_24) && multiplier.lt(Long.TWO_PWR_24))\n      return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n\n    const a48 = this.high >>> 16;\n    const a32 = this.high & 0xffff;\n    const a16 = this.low >>> 16;\n    const a00 = this.low & 0xffff;\n\n    const b48 = multiplier.high >>> 16;\n    const b32 = multiplier.high & 0xffff;\n    const b16 = multiplier.low >>> 16;\n    const b00 = multiplier.low & 0xffff;\n\n    let c48 = 0,\n      c32 = 0,\n      c16 = 0,\n      c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xffff;\n    return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n  }\n\n  /** This is an alias of {@link Long.multiply} */\n  mul(multiplier: string | number | Long | Timestamp): Long {\n    return this.multiply(multiplier);\n  }\n\n  /** Returns the Negation of this Long's value. */\n  negate(): Long {\n    if (!this.unsigned && this.eq(Long.MIN_VALUE)) return Long.MIN_VALUE;\n    return this.not().add(Long.ONE);\n  }\n\n  /** This is an alias of {@link Long.negate} */\n  neg(): Long {\n    return this.negate();\n  }\n\n  /** Returns the bitwise NOT of this Long. */\n  not(): Long {\n    return Long.fromBits(~this.low, ~this.high, this.unsigned);\n  }\n\n  /** Tests if this Long's value differs from the specified's. */\n  notEquals(other: string | number | Long | Timestamp): boolean {\n    return !this.equals(other);\n  }\n\n  /** This is an alias of {@link Long.notEquals} */\n  neq(other: string | number | Long | Timestamp): boolean {\n    return this.notEquals(other);\n  }\n  /** This is an alias of {@link Long.notEquals} */\n  ne(other: string | number | Long | Timestamp): boolean {\n    return this.notEquals(other);\n  }\n\n  /**\n   * Returns the bitwise OR of this Long and the specified.\n   */\n  or(other: number | string | Long): Long {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n  }\n\n  /**\n   * Returns this Long with bits shifted to the left by the given amount.\n   * @param numBits - Number of bits\n   * @returns Shifted Long\n   */\n  shiftLeft(numBits: number | Long): Long {\n    if (Long.isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    else if (numBits < 32)\n      return Long.fromBits(\n        this.low << numBits,\n        (this.high << numBits) | (this.low >>> (32 - numBits)),\n        this.unsigned\n      );\n    else return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\n  }\n\n  /** This is an alias of {@link Long.shiftLeft} */\n  shl(numBits: number | Long): Long {\n    return this.shiftLeft(numBits);\n  }\n\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount.\n   * @param numBits - Number of bits\n   * @returns Shifted Long\n   */\n  shiftRight(numBits: number | Long): Long {\n    if (Long.isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    else if (numBits < 32)\n      return Long.fromBits(\n        (this.low >>> numBits) | (this.high << (32 - numBits)),\n        this.high >> numBits,\n        this.unsigned\n      );\n    else return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n  }\n\n  /** This is an alias of {@link Long.shiftRight} */\n  shr(numBits: number | Long): Long {\n    return this.shiftRight(numBits);\n  }\n\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount.\n   * @param numBits - Number of bits\n   * @returns Shifted Long\n   */\n  shiftRightUnsigned(numBits: Long | number): Long {\n    if (Long.isLong(numBits)) numBits = numBits.toInt();\n    numBits &= 63;\n    if (numBits === 0) return this;\n    else {\n      const high = this.high;\n      if (numBits < 32) {\n        const low = this.low;\n        return Long.fromBits(\n          (low >>> numBits) | (high << (32 - numBits)),\n          high >>> numBits,\n          this.unsigned\n        );\n      } else if (numBits === 32) return Long.fromBits(high, 0, this.unsigned);\n      else return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\n    }\n  }\n\n  /** This is an alias of {@link Long.shiftRightUnsigned} */\n  shr_u(numBits: number | Long): Long {\n    return this.shiftRightUnsigned(numBits);\n  }\n  /** This is an alias of {@link Long.shiftRightUnsigned} */\n  shru(numBits: number | Long): Long {\n    return this.shiftRightUnsigned(numBits);\n  }\n\n  /**\n   * Returns the difference of this and the specified Long.\n   * @param subtrahend - Subtrahend\n   * @returns Difference\n   */\n  subtract(subtrahend: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(subtrahend)) subtrahend = Long.fromValue(subtrahend);\n    return this.add(subtrahend.neg());\n  }\n\n  /** This is an alias of {@link Long.subtract} */\n  sub(subtrahend: string | number | Long | Timestamp): Long {\n    return this.subtract(subtrahend);\n  }\n\n  /** Converts the Long to a 32 bit integer, assuming it is a 32 bit integer. */\n  toInt(): number {\n    return this.unsigned ? this.low >>> 0 : this.low;\n  }\n\n  /** Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa). */\n  toNumber(): number {\n    if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n  }\n\n  /** Converts the Long to a BigInt (arbitrary precision). */\n  toBigInt(): bigint {\n    // eslint-disable-next-line no-restricted-globals -- This is allowed here as it is explicitly requesting a bigint\n    return BigInt(this.toString());\n  }\n\n  /**\n   * Converts this Long to its byte representation.\n   * @param le - Whether little or big endian, defaults to big endian\n   * @returns Byte representation\n   */\n  toBytes(le?: boolean): number[] {\n    return le ? this.toBytesLE() : this.toBytesBE();\n  }\n\n  /**\n   * Converts this Long to its little endian byte representation.\n   * @returns Little endian byte representation\n   */\n  toBytesLE(): number[] {\n    const hi = this.high,\n      lo = this.low;\n    return [\n      lo & 0xff,\n      (lo >>> 8) & 0xff,\n      (lo >>> 16) & 0xff,\n      lo >>> 24,\n      hi & 0xff,\n      (hi >>> 8) & 0xff,\n      (hi >>> 16) & 0xff,\n      hi >>> 24\n    ];\n  }\n\n  /**\n   * Converts this Long to its big endian byte representation.\n   * @returns Big endian byte representation\n   */\n  toBytesBE(): number[] {\n    const hi = this.high,\n      lo = this.low;\n    return [\n      hi >>> 24,\n      (hi >>> 16) & 0xff,\n      (hi >>> 8) & 0xff,\n      hi & 0xff,\n      lo >>> 24,\n      (lo >>> 16) & 0xff,\n      (lo >>> 8) & 0xff,\n      lo & 0xff\n    ];\n  }\n\n  /**\n   * Converts this Long to signed.\n   */\n  toSigned(): Long {\n    if (!this.unsigned) return this;\n    return Long.fromBits(this.low, this.high, false);\n  }\n\n  /**\n   * Converts the Long to a string written in the specified radix.\n   * @param radix - Radix (2-36), defaults to 10\n   * @throws RangeError If `radix` is out of range\n   */\n  toString(radix?: number): string {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw new BSONError('radix');\n    if (this.isZero()) return '0';\n    if (this.isNegative()) {\n      // Unsigned Longs are never negative\n      if (this.eq(Long.MIN_VALUE)) {\n        // We need to change the Long value before it can be negated, so we remove\n        // the bottom-most digit in this base and then recurse to do the rest.\n        const radixLong = Long.fromNumber(radix),\n          div = this.div(radixLong),\n          rem1 = div.mul(radixLong).sub(this);\n        return div.toString(radix) + rem1.toInt().toString(radix);\n      } else return '-' + this.neg().toString(radix);\n    }\n\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    const radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let rem: Long = this;\n    let result = '';\n    while (true) {\n      const remDiv = rem.div(radixToPower);\n      const intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;\n      let digits = intval.toString(radix);\n      rem = remDiv;\n      if (rem.isZero()) {\n        return digits + result;\n      } else {\n        while (digits.length < 6) digits = '0' + digits;\n        result = '' + digits + result;\n      }\n    }\n  }\n\n  /** Converts this Long to unsigned. */\n  toUnsigned(): Long {\n    if (this.unsigned) return this;\n    return Long.fromBits(this.low, this.high, true);\n  }\n\n  /** Returns the bitwise XOR of this Long and the given one. */\n  xor(other: Long | number | string): Long {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n  }\n\n  /** This is an alias of {@link Long.isZero} */\n  eqz(): boolean {\n    return this.isZero();\n  }\n\n  /** This is an alias of {@link Long.lessThanOrEqual} */\n  le(other: string | number | Long | Timestamp): boolean {\n    return this.lessThanOrEqual(other);\n  }\n\n  /*\n   ****************************************************************\n   *                  BSON SPECIFIC ADDITIONS                     *\n   ****************************************************************\n   */\n  toExtendedJSON(options?: EJSONOptions): number | LongExtended {\n    if (options && options.relaxed) return this.toNumber();\n    return { $numberLong: this.toString() };\n  }\n  static fromExtendedJSON(\n    doc: { $numberLong: string },\n    options?: EJSONOptions\n  ): number | Long | bigint {\n    const { useBigInt64 = false, relaxed = true } = { ...options };\n\n    if (doc.$numberLong.length > MAX_INT64_STRING_LENGTH) {\n      throw new BSONError('$numberLong string is too long');\n    }\n\n    if (!DECIMAL_REG_EX.test(doc.$numberLong)) {\n      throw new BSONError(`$numberLong string \"${doc.$numberLong}\" is in an invalid format`);\n    }\n\n    if (useBigInt64) {\n      /* eslint-disable no-restricted-globals -- Can use BigInt here as useBigInt64=true */\n      const bigIntResult = BigInt(doc.$numberLong);\n      return BigInt.asIntN(64, bigIntResult);\n      /* eslint-enable */\n    }\n\n    const longResult = Long.fromString(doc.$numberLong);\n    if (relaxed) {\n      return longResult.toNumber();\n    }\n    return longResult;\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    const longVal = inspect(this.toString(), options);\n    const unsignedVal = this.unsigned ? `, ${inspect(this.unsigned, options)}` : '';\n    return `new Long(${longVal}${unsignedVal})`;\n  }\n}\n", "import { BSONValue } from './bson_value';\nimport { BSONError } from './error';\nimport { Long } from './long';\nimport { type InspectFn, defaultInspect, isUint8Array } from './parser/utils';\nimport { ByteUtils } from './utils/byte_utils';\n\nconst PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nconst PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nconst PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\n\nconst EXPONENT_MAX = 6111;\nconst EXPONENT_MIN = -6176;\nconst EXPONENT_BIAS = 6176;\nconst MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nconst NAN_BUFFER = ByteUtils.fromNumberArray(\n  [\n    0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n  ].reverse()\n);\n// Infinity value bits 32 bit values (due to lack of longs)\nconst INF_NEGATIVE_BUFFER = ByteUtils.fromNumberArray(\n  [\n    0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n  ].reverse()\n);\nconst INF_POSITIVE_BUFFER = ByteUtils.fromNumberArray(\n  [\n    0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n  ].reverse()\n);\n\nconst EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\n\n// Extract least significant 5 bits\nconst COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nconst EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nconst COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nconst COMBINATION_NAN = 31;\n\n// Detect if the value is a digit\nfunction isDigit(value: string): boolean {\n  return !isNaN(parseInt(value, 10));\n}\n\n// Divide two uint128 values\nfunction divideu128(value: { parts: [number, number, number, number] }) {\n  const DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  let _rem = Long.fromNumber(0);\n\n  if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for (let i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n}\n\n// Multiply two Long values and return the 128 bit value\nfunction multiply64x2(left: Long, right: Long): { high: Long; low: Long } {\n  if (!left && !right) {\n    return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n  }\n\n  const leftHigh = left.shiftRightUnsigned(32);\n  const leftLow = new Long(left.getLowBits(), 0);\n  const rightHigh = right.shiftRightUnsigned(32);\n  const rightLow = new Long(right.getLowBits(), 0);\n\n  let productHigh = leftHigh.multiply(rightHigh);\n  let productMid = leftHigh.multiply(rightLow);\n  const productMid2 = leftLow.multiply(rightHigh);\n  let productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n    .add(productMid2)\n    .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return { high: productHigh, low: productLow };\n}\n\nfunction lessThan(left: Long, right: Long): boolean {\n  // Make values unsigned\n  const uhleft = left.high >>> 0;\n  const uhright = right.high >>> 0;\n\n  // Compare high bits first\n  if (uhleft < uhright) {\n    return true;\n  } else if (uhleft === uhright) {\n    const ulleft = left.low >>> 0;\n    const ulright = right.low >>> 0;\n    if (ulleft < ulright) return true;\n  }\n\n  return false;\n}\n\nfunction invalidErr(string: string, message: string) {\n  throw new BSONError(`\"${string}\" is not a valid Decimal128 string - ${message}`);\n}\n\n/** @public */\nexport interface Decimal128Extended {\n  $numberDecimal: string;\n}\n\n/**\n * A class representation of the BSON Decimal128 type.\n * @public\n * @category BSONType\n */\nexport class Decimal128 extends BSONValue {\n  get _bsontype(): 'Decimal128' {\n    return 'Decimal128';\n  }\n\n  readonly bytes!: Uint8Array;\n\n  /**\n   * @param bytes - a buffer containing the raw Decimal128 bytes in little endian order,\n   *                or a string representation as returned by .toString()\n   */\n  constructor(bytes: Uint8Array | string) {\n    super();\n    if (typeof bytes === 'string') {\n      this.bytes = Decimal128.fromString(bytes).bytes;\n    } else if (bytes instanceof Uint8Array || isUint8Array(bytes)) {\n      if (bytes.byteLength !== 16) {\n        throw new BSONError('Decimal128 must take a Buffer of 16 bytes');\n      }\n      this.bytes = bytes;\n    } else {\n      throw new BSONError('Decimal128 must take a Buffer or string');\n    }\n  }\n\n  /**\n   * Create a Decimal128 instance from a string representation\n   *\n   * @param representation - a numeric string representation.\n   */\n  static fromString(representation: string): Decimal128 {\n    return Decimal128._fromString(representation, { allowRounding: false });\n  }\n\n  /**\n   * Create a Decimal128 instance from a string representation, allowing for rounding to 34\n   * significant digits\n   *\n   * @example Example of a number that will be rounded\n   * ```ts\n   * > let d = Decimal128.fromString('37.499999999999999196428571428571375')\n   * Uncaught:\n   * BSONError: \"37.499999999999999196428571428571375\" is not a valid Decimal128 string - inexact rounding\n   * at invalidErr (/home/wajames/js-bson/lib/bson.cjs:1402:11)\n   * at Decimal128.fromStringInternal (/home/wajames/js-bson/lib/bson.cjs:1633:25)\n   * at Decimal128.fromString (/home/wajames/js-bson/lib/bson.cjs:1424:27)\n   *\n   * > d = Decimal128.fromStringWithRounding('37.499999999999999196428571428571375')\n   * new Decimal128(\"37.49999999999999919642857142857138\")\n   * ```\n   * @param representation - a numeric string representation.\n   */\n  static fromStringWithRounding(representation: string): Decimal128 {\n    return Decimal128._fromString(representation, { allowRounding: true });\n  }\n\n  private static _fromString(representation: string, options: { allowRounding: boolean }) {\n    // Parse state tracking\n    let isNegative = false;\n    let sawSign = false;\n    let sawRadix = false;\n    let foundNonZero = false;\n\n    // Total number of significant digits (no leading or trailing zero)\n    let significantDigits = 0;\n    // Total number of significand digits read\n    let nDigitsRead = 0;\n    // Total number of digits (no leading zeros)\n    let nDigits = 0;\n    // The number of the digits after radix\n    let radixPosition = 0;\n    // The index of the first non-zero in *str*\n    let firstNonZero = 0;\n\n    // Digits Array\n    const digits = [0];\n    // The number of digits in digits\n    let nDigitsStored = 0;\n    // Insertion pointer for digits\n    let digitsInsert = 0;\n    // The index of the last digit\n    let lastDigit = 0;\n\n    // Exponent\n    let exponent = 0;\n    // The high 17 digits of the significand\n    let significandHigh = new Long(0, 0);\n    // The low 17 digits of the significand\n    let significandLow = new Long(0, 0);\n    // The biased exponent\n    let biasedExponent = 0;\n\n    // Read index\n    let index = 0;\n\n    // Naively prevent against REDOS attacks.\n    // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n    //       further gains.\n    if (representation.length >= 7000) {\n      throw new BSONError('' + representation + ' not a valid Decimal128 string');\n    }\n\n    // Results\n    const stringMatch = representation.match(PARSE_STRING_REGEXP);\n    const infMatch = representation.match(PARSE_INF_REGEXP);\n    const nanMatch = representation.match(PARSE_NAN_REGEXP);\n\n    // Validate the string\n    if ((!stringMatch && !infMatch && !nanMatch) || representation.length === 0) {\n      throw new BSONError('' + representation + ' not a valid Decimal128 string');\n    }\n\n    if (stringMatch) {\n      // full_match = stringMatch[0]\n      // sign = stringMatch[1]\n\n      const unsignedNumber = stringMatch[2];\n      // stringMatch[3] is undefined if a whole number (ex \"1\", 12\")\n      // but defined if a number w/ decimal in it (ex \"1.0, 12.2\")\n\n      const e = stringMatch[4];\n      const expSign = stringMatch[5];\n      const expNumber = stringMatch[6];\n\n      // they provided e, but didn't give an exponent number. for ex \"1e\"\n      if (e && expNumber === undefined) invalidErr(representation, 'missing exponent power');\n\n      // they provided e, but didn't give a number before it. for ex \"e1\"\n      if (e && unsignedNumber === undefined) invalidErr(representation, 'missing exponent base');\n\n      if (e === undefined && (expSign || expNumber)) {\n        invalidErr(representation, 'missing e before exponent');\n      }\n    }\n\n    // Get the negative or positive sign\n    if (representation[index] === '+' || representation[index] === '-') {\n      sawSign = true;\n      isNegative = representation[index++] === '-';\n    }\n\n    // Check if user passed Infinity or NaN\n    if (!isDigit(representation[index]) && representation[index] !== '.') {\n      if (representation[index] === 'i' || representation[index] === 'I') {\n        return new Decimal128(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER);\n      } else if (representation[index] === 'N') {\n        return new Decimal128(NAN_BUFFER);\n      }\n    }\n\n    // Read all the digits\n    while (isDigit(representation[index]) || representation[index] === '.') {\n      if (representation[index] === '.') {\n        if (sawRadix) invalidErr(representation, 'contains multiple periods');\n\n        sawRadix = true;\n        index = index + 1;\n        continue;\n      }\n\n      if (nDigitsStored < MAX_DIGITS) {\n        if (representation[index] !== '0' || foundNonZero) {\n          if (!foundNonZero) {\n            firstNonZero = nDigitsRead;\n          }\n\n          foundNonZero = true;\n\n          // Only store 34 digits\n          digits[digitsInsert++] = parseInt(representation[index], 10);\n          nDigitsStored = nDigitsStored + 1;\n        }\n      }\n\n      if (foundNonZero) nDigits = nDigits + 1;\n      if (sawRadix) radixPosition = radixPosition + 1;\n\n      nDigitsRead = nDigitsRead + 1;\n      index = index + 1;\n    }\n\n    if (sawRadix && !nDigitsRead)\n      throw new BSONError('' + representation + ' not a valid Decimal128 string');\n\n    // Read exponent if exists\n    if (representation[index] === 'e' || representation[index] === 'E') {\n      // Read exponent digits\n      const match = representation.substr(++index).match(EXPONENT_REGEX);\n\n      // No digits read\n      if (!match || !match[2]) return new Decimal128(NAN_BUFFER);\n\n      // Get exponent\n      exponent = parseInt(match[0], 10);\n\n      // Adjust the index\n      index = index + match[0].length;\n    }\n\n    // Return not a number\n    if (representation[index]) return new Decimal128(NAN_BUFFER);\n\n    // Done reading input\n    // Find first non-zero digit in digits\n    if (!nDigitsStored) {\n      digits[0] = 0;\n      nDigits = 1;\n      nDigitsStored = 1;\n      significantDigits = 0;\n    } else {\n      lastDigit = nDigitsStored - 1;\n      significantDigits = nDigits;\n      if (significantDigits !== 1) {\n        while (\n          representation[\n            firstNonZero + significantDigits - 1 + Number(sawSign) + Number(sawRadix)\n          ] === '0'\n        ) {\n          significantDigits = significantDigits - 1;\n        }\n      }\n    }\n\n    // Normalization of exponent\n    // Correct exponent based on radix position, and shift significand as needed\n    // to represent user input\n\n    // Overflow prevention\n    if (exponent <= radixPosition && radixPosition > exponent + (1 << 14)) {\n      exponent = EXPONENT_MIN;\n    } else {\n      exponent = exponent - radixPosition;\n    }\n\n    // Attempt to normalize the exponent\n    while (exponent > EXPONENT_MAX) {\n      // Shift exponent to significand and decrease\n      lastDigit = lastDigit + 1;\n      if (lastDigit >= MAX_DIGITS) {\n        // Check if we have a zero then just hard clamp, otherwise fail\n        if (significantDigits === 0) {\n          exponent = EXPONENT_MAX;\n          break;\n        }\n\n        invalidErr(representation, 'overflow');\n      }\n      exponent = exponent - 1;\n    }\n\n    if (options.allowRounding) {\n      while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n        // Shift last digit. can only do this if < significant digits than # stored.\n        if (lastDigit === 0 && significantDigits < nDigitsStored) {\n          exponent = EXPONENT_MIN;\n          significantDigits = 0;\n          break;\n        }\n\n        if (nDigitsStored < nDigits) {\n          // adjust to match digits not stored\n          nDigits = nDigits - 1;\n        } else {\n          // adjust to round\n          lastDigit = lastDigit - 1;\n        }\n\n        if (exponent < EXPONENT_MAX) {\n          exponent = exponent + 1;\n        } else {\n          // Check if we have a zero then just hard clamp, otherwise fail\n          const digitsString = digits.join('');\n          if (digitsString.match(/^0+$/)) {\n            exponent = EXPONENT_MAX;\n            break;\n          }\n          invalidErr(representation, 'overflow');\n        }\n      }\n\n      // Round\n      // We've normalized the exponent, but might still need to round.\n      if (lastDigit + 1 < significantDigits) {\n        let endOfString = nDigitsRead;\n\n        // If we have seen a radix point, 'string' is 1 longer than we have\n        // documented with ndigits_read, so inc the position of the first nonzero\n        // digit and the position that digits are read to.\n        if (sawRadix) {\n          firstNonZero = firstNonZero + 1;\n          endOfString = endOfString + 1;\n        }\n        // if negative, we need to increment again to account for - sign at start.\n        if (sawSign) {\n          firstNonZero = firstNonZero + 1;\n          endOfString = endOfString + 1;\n        }\n\n        const roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n        let roundBit = 0;\n\n        if (roundDigit >= 5) {\n          roundBit = 1;\n          if (roundDigit === 5) {\n            roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;\n            for (let i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n              if (parseInt(representation[i], 10)) {\n                roundBit = 1;\n                break;\n              }\n            }\n          }\n        }\n\n        if (roundBit) {\n          let dIdx = lastDigit;\n\n          for (; dIdx >= 0; dIdx--) {\n            if (++digits[dIdx] > 9) {\n              digits[dIdx] = 0;\n\n              // overflowed most significant digit\n              if (dIdx === 0) {\n                if (exponent < EXPONENT_MAX) {\n                  exponent = exponent + 1;\n                  digits[dIdx] = 1;\n                } else {\n                  return new Decimal128(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER);\n                }\n              }\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    } else {\n      while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n        // Shift last digit. can only do this if < significant digits than # stored.\n        if (lastDigit === 0) {\n          if (significantDigits === 0) {\n            exponent = EXPONENT_MIN;\n            break;\n          }\n\n          invalidErr(representation, 'exponent underflow');\n        }\n\n        if (nDigitsStored < nDigits) {\n          if (\n            representation[nDigits - 1 + Number(sawSign) + Number(sawRadix)] !== '0' &&\n            significantDigits !== 0\n          ) {\n            invalidErr(representation, 'inexact rounding');\n          }\n          // adjust to match digits not stored\n          nDigits = nDigits - 1;\n        } else {\n          if (digits[lastDigit] !== 0) {\n            invalidErr(representation, 'inexact rounding');\n          }\n          // adjust to round\n          lastDigit = lastDigit - 1;\n        }\n\n        if (exponent < EXPONENT_MAX) {\n          exponent = exponent + 1;\n        } else {\n          invalidErr(representation, 'overflow');\n        }\n      }\n\n      // Round\n      // We've normalized the exponent, but might still need to round.\n      if (lastDigit + 1 < significantDigits) {\n        // If we have seen a radix point, 'string' is 1 longer than we have\n        // documented with ndigits_read, so inc the position of the first nonzero\n        // digit and the position that digits are read to.\n        if (sawRadix) {\n          firstNonZero = firstNonZero + 1;\n        }\n        // if saw sign, we need to increment again to account for - or + sign at start.\n        if (sawSign) {\n          firstNonZero = firstNonZero + 1;\n        }\n\n        const roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n\n        if (roundDigit !== 0) {\n          invalidErr(representation, 'inexact rounding');\n        }\n      }\n    }\n\n    // Encode significand\n    // The high 17 digits of the significand\n    significandHigh = Long.fromNumber(0);\n    // The low 17 digits of the significand\n    significandLow = Long.fromNumber(0);\n\n    // read a zero\n    if (significantDigits === 0) {\n      significandHigh = Long.fromNumber(0);\n      significandLow = Long.fromNumber(0);\n    } else if (lastDigit < 17) {\n      let dIdx = 0;\n      significandLow = Long.fromNumber(digits[dIdx++]);\n      significandHigh = new Long(0, 0);\n\n      for (; dIdx <= lastDigit; dIdx++) {\n        significandLow = significandLow.multiply(Long.fromNumber(10));\n        significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n      }\n    } else {\n      let dIdx = 0;\n      significandHigh = Long.fromNumber(digits[dIdx++]);\n\n      for (; dIdx <= lastDigit - 17; dIdx++) {\n        significandHigh = significandHigh.multiply(Long.fromNumber(10));\n        significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n      }\n\n      significandLow = Long.fromNumber(digits[dIdx++]);\n\n      for (; dIdx <= lastDigit; dIdx++) {\n        significandLow = significandLow.multiply(Long.fromNumber(10));\n        significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n      }\n    }\n\n    const significand = multiply64x2(significandHigh, Long.fromString('100000000000000000'));\n    significand.low = significand.low.add(significandLow);\n\n    if (lessThan(significand.low, significandLow)) {\n      significand.high = significand.high.add(Long.fromNumber(1));\n    }\n\n    // Biased exponent\n    biasedExponent = exponent + EXPONENT_BIAS;\n    const dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n    // Encode combination, exponent, and significand.\n    if (\n      significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber(1))\n    ) {\n      // Encode '11' into bits 1 to 3\n      dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n      dec.high = dec.high.or(\n        Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47))\n      );\n      dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n    } else {\n      dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n      dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n    }\n\n    dec.low = significand.low;\n\n    // Encode sign\n    if (isNegative) {\n      dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n    }\n\n    // Encode into a buffer\n    const buffer = ByteUtils.allocateUnsafe(16);\n    index = 0;\n\n    // Encode the low 64 bits of the decimal\n    // Encode low bits\n    buffer[index++] = dec.low.low & 0xff;\n    buffer[index++] = (dec.low.low >> 8) & 0xff;\n    buffer[index++] = (dec.low.low >> 16) & 0xff;\n    buffer[index++] = (dec.low.low >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = dec.low.high & 0xff;\n    buffer[index++] = (dec.low.high >> 8) & 0xff;\n    buffer[index++] = (dec.low.high >> 16) & 0xff;\n    buffer[index++] = (dec.low.high >> 24) & 0xff;\n\n    // Encode the high 64 bits of the decimal\n    // Encode low bits\n    buffer[index++] = dec.high.low & 0xff;\n    buffer[index++] = (dec.high.low >> 8) & 0xff;\n    buffer[index++] = (dec.high.low >> 16) & 0xff;\n    buffer[index++] = (dec.high.low >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = dec.high.high & 0xff;\n    buffer[index++] = (dec.high.high >> 8) & 0xff;\n    buffer[index++] = (dec.high.high >> 16) & 0xff;\n    buffer[index++] = (dec.high.high >> 24) & 0xff;\n\n    // Return the new Decimal128\n    return new Decimal128(buffer);\n  }\n  /** Create a string representation of the raw Decimal128 value */\n  toString(): string {\n    // Note: bits in this routine are referred to starting at 0,\n    // from the sign bit, towards the coefficient.\n\n    // decoded biased exponent (14 bits)\n    let biased_exponent;\n    // the number of significand digits\n    let significand_digits = 0;\n    // the base-10 digits in the significand\n    const significand = new Array<number>(36);\n    for (let i = 0; i < significand.length; i++) significand[i] = 0;\n    // read pointer into significand\n    let index = 0;\n\n    // true if the number is zero\n    let is_zero = false;\n\n    // the most significant significand bits (50-46)\n    let significand_msb;\n    // temporary storage for significand decoding\n    let significand128: { parts: [number, number, number, number] } = { parts: [0, 0, 0, 0] };\n    // indexing variables\n    let j, k;\n\n    // Output string\n    const string: string[] = [];\n\n    // Unpack index\n    index = 0;\n\n    // Buffer reference\n    const buffer = this.bytes;\n\n    // Unpack the low 64bits into a long\n    // bits 96 - 127\n    const low =\n      buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n    // bits 64 - 95\n    const midl =\n      buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n    // Unpack the high 64bits into a long\n    // bits 32 - 63\n    const midh =\n      buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n    // bits 0 - 31\n    const high =\n      buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n    // Unpack index\n    index = 0;\n\n    // Create the state of the decimal\n    const dec = {\n      low: new Long(low, midl),\n      high: new Long(midh, high)\n    };\n\n    if (dec.high.lessThan(Long.ZERO)) {\n      string.push('-');\n    }\n\n    // Decode combination field and exponent\n    // bits 1 - 5\n    const combination = (high >> 26) & COMBINATION_MASK;\n\n    if (combination >> 3 === 3) {\n      // Check for 'special' values\n      if (combination === COMBINATION_INFINITY) {\n        return string.join('') + 'Infinity';\n      } else if (combination === COMBINATION_NAN) {\n        return 'NaN';\n      } else {\n        biased_exponent = (high >> 15) & EXPONENT_MASK;\n        significand_msb = 0x08 + ((high >> 14) & 0x01);\n      }\n    } else {\n      significand_msb = (high >> 14) & 0x07;\n      biased_exponent = (high >> 17) & EXPONENT_MASK;\n    }\n\n    // unbiased exponent\n    const exponent = biased_exponent - EXPONENT_BIAS;\n\n    // Create string of significand digits\n\n    // Convert the 114-bit binary number represented by\n    // (significand_high, significand_low) to at most 34 decimal\n    // digits through modulo and division.\n    significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n    significand128.parts[1] = midh;\n    significand128.parts[2] = midl;\n    significand128.parts[3] = low;\n\n    if (\n      significand128.parts[0] === 0 &&\n      significand128.parts[1] === 0 &&\n      significand128.parts[2] === 0 &&\n      significand128.parts[3] === 0\n    ) {\n      is_zero = true;\n    } else {\n      for (k = 3; k >= 0; k--) {\n        let least_digits = 0;\n        // Perform the divide\n        const result = divideu128(significand128);\n        significand128 = result.quotient;\n        least_digits = result.rem.low;\n\n        // We now have the 9 least significant digits (in base 2).\n        // Convert and output to string.\n        if (!least_digits) continue;\n\n        for (j = 8; j >= 0; j--) {\n          // significand[k * 9 + j] = Math.round(least_digits % 10);\n          significand[k * 9 + j] = least_digits % 10;\n          // least_digits = Math.round(least_digits / 10);\n          least_digits = Math.floor(least_digits / 10);\n        }\n      }\n    }\n\n    // Output format options:\n    // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n    // Regular    - ddd.ddd\n\n    if (is_zero) {\n      significand_digits = 1;\n      significand[index] = 0;\n    } else {\n      significand_digits = 36;\n      while (!significand[index]) {\n        significand_digits = significand_digits - 1;\n        index = index + 1;\n      }\n    }\n\n    // the exponent if scientific notation is used\n    const scientific_exponent = significand_digits - 1 + exponent;\n\n    // The scientific exponent checks are dictated by the string conversion\n    // specification and are somewhat arbitrary cutoffs.\n    //\n    // We must check exponent > 0, because if this is the case, the number\n    // has trailing zeros.  However, we *cannot* output these trailing zeros,\n    // because doing so would change the precision of the value, and would\n    // change stored data if the string converted number is round tripped.\n    if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n      // Scientific format\n\n      // if there are too many significant digits, we should just be treating numbers\n      // as + or - 0 and using the non-scientific exponent (this is for the \"invalid\n      // representation should be treated as 0/-0\" spec cases in decimal128-1.json)\n      if (significand_digits > 34) {\n        string.push(`${0}`);\n        if (exponent > 0) string.push(`E+${exponent}`);\n        else if (exponent < 0) string.push(`E${exponent}`);\n        return string.join('');\n      }\n\n      string.push(`${significand[index++]}`);\n      significand_digits = significand_digits - 1;\n\n      if (significand_digits) {\n        string.push('.');\n      }\n\n      for (let i = 0; i < significand_digits; i++) {\n        string.push(`${significand[index++]}`);\n      }\n\n      // Exponent\n      string.push('E');\n      if (scientific_exponent > 0) {\n        string.push(`+${scientific_exponent}`);\n      } else {\n        string.push(`${scientific_exponent}`);\n      }\n    } else {\n      // Regular format with no decimal place\n      if (exponent >= 0) {\n        for (let i = 0; i < significand_digits; i++) {\n          string.push(`${significand[index++]}`);\n        }\n      } else {\n        let radix_position = significand_digits + exponent;\n\n        // non-zero digits before radix\n        if (radix_position > 0) {\n          for (let i = 0; i < radix_position; i++) {\n            string.push(`${significand[index++]}`);\n          }\n        } else {\n          string.push('0');\n        }\n\n        string.push('.');\n        // add leading zeros after radix\n        while (radix_position++ < 0) {\n          string.push('0');\n        }\n\n        for (let i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n          string.push(`${significand[index++]}`);\n        }\n      }\n    }\n\n    return string.join('');\n  }\n\n  toJSON(): Decimal128Extended {\n    return { $numberDecimal: this.toString() };\n  }\n\n  /** @internal */\n  toExtendedJSON(): Decimal128Extended {\n    return { $numberDecimal: this.toString() };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: Decimal128Extended): Decimal128 {\n    return Decimal128.fromString(doc.$numberDecimal);\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    const d128string = inspect(this.toString(), options);\n    return `new Decimal128(${d128string})`;\n  }\n}\n", "import { BSONValue } from './bson_value';\nimport { BSONError } from './error';\nimport type { EJSONOptions } from './extended_json';\nimport { type InspectFn, defaultInspect } from './parser/utils';\n\n/** @public */\nexport interface DoubleExtended {\n  $numberDouble: string;\n}\n\n/**\n * A class representation of the BSON Double type.\n * @public\n * @category BSONType\n */\nexport class Double extends BSONValue {\n  get _bsontype(): 'Double' {\n    return 'Double';\n  }\n\n  value!: number;\n  /**\n   * Create a Double type\n   *\n   * @param value - the number we want to represent as a double.\n   */\n  constructor(value: number) {\n    super();\n    if ((value as unknown) instanceof Number) {\n      value = value.valueOf();\n    }\n\n    this.value = +value;\n  }\n\n  /**\n   * Attempt to create an double type from string.\n   *\n   * This method will throw a BSONError on any string input that is not representable as a IEEE-754 64-bit double.\n   * Notably, this method will also throw on the following string formats:\n   * - Strings in non-decimal and non-exponential formats (binary, hex, or octal digits)\n   * - Strings with characters other than numeric, floating point, or leading sign characters (Note: 'Infinity', '-Infinity', and 'NaN' input strings are still allowed)\n   * - Strings with leading and/or trailing whitespace\n   *\n   * Strings with leading zeros, however, are also allowed\n   *\n   * @param value - the string we want to represent as a double.\n   */\n  static fromString(value: string): Double {\n    const coercedValue = Number(value);\n\n    if (value === 'NaN') return new Double(NaN);\n    if (value === 'Infinity') return new Double(Infinity);\n    if (value === '-Infinity') return new Double(-Infinity);\n\n    if (!Number.isFinite(coercedValue)) {\n      throw new BSONError(`Input: ${value} is not representable as a Double`);\n    }\n    if (value.trim() !== value) {\n      throw new BSONError(`Input: '${value}' contains whitespace`);\n    }\n    if (value === '') {\n      throw new BSONError(`Input is an empty string`);\n    }\n    if (/[^-0-9.+eE]/.test(value)) {\n      throw new BSONError(`Input: '${value}' is not in decimal or exponential notation`);\n    }\n    return new Double(coercedValue);\n  }\n\n  /**\n   * Access the number value.\n   *\n   * @returns returns the wrapped double number.\n   */\n  valueOf(): number {\n    return this.value;\n  }\n\n  toJSON(): number {\n    return this.value;\n  }\n\n  toString(radix?: number): string {\n    return this.value.toString(radix);\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): number | DoubleExtended {\n    if (options && (options.legacy || (options.relaxed && isFinite(this.value)))) {\n      return this.value;\n    }\n\n    if (Object.is(Math.sign(this.value), -0)) {\n      // NOTE: JavaScript has +0 and -0, apparently to model limit calculations. If a user\n      // explicitly provided `-0` then we need to ensure the sign makes it into the output\n      return { $numberDouble: '-0.0' };\n    }\n\n    return {\n      $numberDouble: Number.isInteger(this.value) ? this.value.toFixed(1) : this.value.toString()\n    };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: DoubleExtended, options?: EJSONOptions): number | Double {\n    const doubleValue = parseFloat(doc.$numberDouble);\n    return options && options.relaxed ? doubleValue : new Double(doubleValue);\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    return `new Double(${inspect(this.value, options)})`;\n  }\n}\n", "import { BSONValue } from './bson_value';\nimport { BSON_INT32_MAX, BSON_INT32_MIN } from './constants';\nimport { BSONError } from './error';\nimport type { EJSONOptions } from './extended_json';\nimport { type InspectFn, defaultInspect } from './parser/utils';\nimport { removeLeadingZerosAndExplicitPlus } from './utils/string_utils';\n\n/** @public */\nexport interface Int32Extended {\n  $numberInt: string;\n}\n\n/**\n * A class representation of a BSON Int32 type.\n * @public\n * @category BSONType\n */\nexport class Int32 extends BSONValue {\n  get _bsontype(): 'Int32' {\n    return 'Int32';\n  }\n\n  value!: number;\n  /**\n   * Create an Int32 type\n   *\n   * @param value - the number we want to represent as an int32.\n   */\n  constructor(value: number | string) {\n    super();\n    if ((value as unknown) instanceof Number) {\n      value = value.valueOf();\n    }\n\n    this.value = +value | 0;\n  }\n\n  /**\n   * Attempt to create an Int32 type from string.\n   *\n   * This method will throw a BSONError on any string input that is not representable as an Int32.\n   * Notably, this method will also throw on the following string formats:\n   * - Strings in non-decimal formats (exponent notation, binary, hex, or octal digits)\n   * - Strings non-numeric and non-leading sign characters (ex: '2.0', '24,000')\n   * - Strings with leading and/or trailing whitespace\n   *\n   * Strings with leading zeros, however, are allowed.\n   *\n   * @param value - the string we want to represent as an int32.\n   */\n  static fromString(value: string): Int32 {\n    const cleanedValue = removeLeadingZerosAndExplicitPlus(value);\n\n    const coercedValue = Number(value);\n\n    if (BSON_INT32_MAX < coercedValue) {\n      throw new BSONError(`Input: '${value}' is larger than the maximum value for Int32`);\n    } else if (BSON_INT32_MIN > coercedValue) {\n      throw new BSONError(`Input: '${value}' is smaller than the minimum value for Int32`);\n    } else if (!Number.isSafeInteger(coercedValue)) {\n      throw new BSONError(`Input: '${value}' is not a safe integer`);\n    } else if (coercedValue.toString() !== cleanedValue) {\n      // catch all case\n      throw new BSONError(`Input: '${value}' is not a valid Int32 string`);\n    }\n    return new Int32(coercedValue);\n  }\n\n  /**\n   * Access the number value.\n   *\n   * @returns returns the wrapped int32 number.\n   */\n  valueOf(): number {\n    return this.value;\n  }\n\n  toString(radix?: number): string {\n    return this.value.toString(radix);\n  }\n\n  toJSON(): number {\n    return this.value;\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): number | Int32Extended {\n    if (options && (options.relaxed || options.legacy)) return this.value;\n    return { $numberInt: this.value.toString() };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: Int32Extended, options?: EJSONOptions): number | Int32 {\n    return options && options.relaxed ? parseInt(doc.$numberInt, 10) : new Int32(doc.$numberInt);\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    return `new Int32(${inspect(this.value, options)})`;\n  }\n}\n", "import { BSONValue } from './bson_value';\n\n/** @public */\nexport interface MaxKeyExtended {\n  $maxKey: 1;\n}\n\n/**\n * A class representation of the BSON MaxKey type.\n * @public\n * @category BSONType\n */\nexport class MaxKey extends BSONValue {\n  get _bsontype(): 'MaxKey' {\n    return 'MaxKey';\n  }\n\n  /** @internal */\n  toExtendedJSON(): MaxKeyExtended {\n    return { $maxKey: 1 };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(): MaxKey {\n    return new MaxKey();\n  }\n\n  inspect(): string {\n    return 'new MaxKey()';\n  }\n}\n", "import { BSONValue } from './bson_value';\n\n/** @public */\nexport interface MinKeyExtended {\n  $minKey: 1;\n}\n\n/**\n * A class representation of the BSON MinKey type.\n * @public\n * @category BSONType\n */\nexport class MinKey extends BSONValue {\n  get _bsontype(): 'MinKey' {\n    return 'MinKey';\n  }\n\n  /** @internal */\n  toExtendedJSON(): MinKeyExtended {\n    return { $minKey: 1 };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(): MinKey {\n    return new MinKey();\n  }\n\n  inspect(): string {\n    return 'new MinKey()';\n  }\n}\n", "import { BSONValue } from './bson_value';\nimport { BSONError } from './error';\nimport { type InspectFn, defaultInspect } from './parser/utils';\nimport { ByteUtils } from './utils/byte_utils';\nimport { NumberUtils } from './utils/number_utils';\n\n// Unique sequence for the current process (initialized on first use)\nlet PROCESS_UNIQUE: Uint8Array | null = null;\n\n/** ObjectId hexString cache @internal */\nconst __idCache = new WeakMap(); // TODO(NODE-6549): convert this to #__id private field when target updated to ES2022\n\n/** @public */\nexport interface ObjectIdLike {\n  id: string | Uint8Array;\n  __id?: string;\n  toHexString(): string;\n}\n\n/** @public */\nexport interface ObjectIdExtended {\n  $oid: string;\n}\n\n/**\n * A class representation of the BSON ObjectId type.\n * @public\n * @category BSONType\n */\nexport class ObjectId extends BSONValue {\n  get _bsontype(): 'ObjectId' {\n    return 'ObjectId';\n  }\n\n  /** @internal */\n  private static index = Math.floor(Math.random() * 0xffffff);\n\n  static cacheHexString: boolean;\n\n  /** ObjectId Bytes @internal */\n  private buffer!: Uint8Array;\n\n  /**\n   * Create ObjectId from a number.\n   *\n   * @param inputId - A number.\n   * @deprecated Instead, use `static createFromTime()` to set a numeric value for the new ObjectId.\n   */\n  constructor(inputId: number);\n  /**\n   * Create ObjectId from a 24 character hex string.\n   *\n   * @param inputId - A 24 character hex string.\n   */\n  constructor(inputId: string);\n  /**\n   * Create ObjectId from the BSON ObjectId type.\n   *\n   * @param inputId - The BSON ObjectId type.\n   */\n  constructor(inputId: ObjectId);\n  /**\n   * Create ObjectId from the object type that has the toHexString method.\n   *\n   * @param inputId - The ObjectIdLike type.\n   */\n  constructor(inputId: ObjectIdLike);\n  /**\n   * Create ObjectId from a 12 byte binary Buffer.\n   *\n   * @param inputId - A 12 byte binary Buffer.\n   */\n  constructor(inputId: Uint8Array);\n  /** To generate a new ObjectId, use ObjectId() with no argument. */\n  constructor();\n  /**\n   * Implementation overload.\n   *\n   * @param inputId - All input types that are used in the constructor implementation.\n   */\n  constructor(inputId?: string | number | ObjectId | ObjectIdLike | Uint8Array);\n  /**\n   * Create a new ObjectId.\n   *\n   * @param inputId - An input value to create a new ObjectId from.\n   */\n  constructor(inputId?: string | number | ObjectId | ObjectIdLike | Uint8Array) {\n    super();\n    // workingId is set based on type of input and whether valid id exists for the input\n    let workingId;\n    if (typeof inputId === 'object' && inputId && 'id' in inputId) {\n      if (typeof inputId.id !== 'string' && !ArrayBuffer.isView(inputId.id)) {\n        throw new BSONError('Argument passed in must have an id that is of type string or Buffer');\n      }\n      if ('toHexString' in inputId && typeof inputId.toHexString === 'function') {\n        workingId = ByteUtils.fromHex(inputId.toHexString());\n      } else {\n        workingId = inputId.id;\n      }\n    } else {\n      workingId = inputId;\n    }\n\n    // The following cases use workingId to construct an ObjectId\n    if (workingId == null || typeof workingId === 'number') {\n      // The most common use case (blank id, new objectId instance)\n      // Generate a new id\n      this.buffer = ObjectId.generate(typeof workingId === 'number' ? workingId : undefined);\n    } else if (ArrayBuffer.isView(workingId) && workingId.byteLength === 12) {\n      // If intstanceof matches we can escape calling ensure buffer in Node.js environments\n      this.buffer = ByteUtils.toLocalBufferType(workingId);\n    } else if (typeof workingId === 'string') {\n      if (ObjectId.validateHexString(workingId)) {\n        this.buffer = ByteUtils.fromHex(workingId);\n        // If we are caching the hex string\n        if (ObjectId.cacheHexString) {\n          __idCache.set(this, workingId);\n        }\n      } else {\n        throw new BSONError(\n          'input must be a 24 character hex string, 12 byte Uint8Array, or an integer'\n        );\n      }\n    } else {\n      throw new BSONError('Argument passed in does not match the accepted types');\n    }\n  }\n\n  /**\n   * The ObjectId bytes\n   * @readonly\n   */\n  get id(): Uint8Array {\n    return this.buffer;\n  }\n\n  set id(value: Uint8Array) {\n    this.buffer = value;\n    if (ObjectId.cacheHexString) {\n      __idCache.set(this, ByteUtils.toHex(value));\n    }\n  }\n\n  /**\n   * @internal\n   * Validates the input string is a valid hex representation of an ObjectId.\n   */\n  private static validateHexString(string: string): boolean {\n    if (string?.length !== 24) return false;\n    for (let i = 0; i < 24; i++) {\n      const char = string.charCodeAt(i);\n      if (\n        // Check for ASCII 0-9\n        (char >= 48 && char <= 57) ||\n        // Check for ASCII a-f\n        (char >= 97 && char <= 102) ||\n        // Check for ASCII A-F\n        (char >= 65 && char <= 70)\n      ) {\n        continue;\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /** Returns the ObjectId id as a 24 lowercase character hex string representation */\n  toHexString(): string {\n    if (ObjectId.cacheHexString) {\n      const __id = __idCache.get(this);\n      if (__id) return __id;\n    }\n\n    const hexString = ByteUtils.toHex(this.id);\n\n    if (ObjectId.cacheHexString) {\n      __idCache.set(this, hexString);\n    }\n\n    return hexString;\n  }\n\n  /**\n   * Update the ObjectId index\n   * @internal\n   */\n  private static getInc(): number {\n    return (ObjectId.index = (ObjectId.index + 1) % 0xffffff);\n  }\n\n  /**\n   * Generate a 12 byte id buffer used in ObjectId's\n   *\n   * @param time - pass in a second based timestamp.\n   */\n  static generate(time?: number): Uint8Array {\n    if ('number' !== typeof time) {\n      time = Math.floor(Date.now() / 1000);\n    }\n\n    const inc = ObjectId.getInc();\n    const buffer = ByteUtils.allocateUnsafe(12);\n\n    // 4-byte timestamp\n    NumberUtils.setInt32BE(buffer, 0, time);\n\n    // set PROCESS_UNIQUE if yet not initialized\n    if (PROCESS_UNIQUE === null) {\n      PROCESS_UNIQUE = ByteUtils.randomBytes(5);\n    }\n\n    // 5-byte process unique\n    buffer[4] = PROCESS_UNIQUE[0];\n    buffer[5] = PROCESS_UNIQUE[1];\n    buffer[6] = PROCESS_UNIQUE[2];\n    buffer[7] = PROCESS_UNIQUE[3];\n    buffer[8] = PROCESS_UNIQUE[4];\n\n    // 3-byte counter\n    buffer[11] = inc & 0xff;\n    buffer[10] = (inc >> 8) & 0xff;\n    buffer[9] = (inc >> 16) & 0xff;\n\n    return buffer;\n  }\n\n  /**\n   * Converts the id into a 24 character hex string for printing, unless encoding is provided.\n   * @param encoding - hex or base64\n   */\n  toString(encoding?: 'hex' | 'base64'): string {\n    // Is the id a buffer then use the buffer toString method to return the format\n    if (encoding === 'base64') return ByteUtils.toBase64(this.id);\n    if (encoding === 'hex') return this.toHexString();\n    return this.toHexString();\n  }\n\n  /** Converts to its JSON the 24 character hex string representation. */\n  toJSON(): string {\n    return this.toHexString();\n  }\n\n  /** @internal */\n  private static is(variable: unknown): variable is ObjectId {\n    return (\n      variable != null &&\n      typeof variable === 'object' &&\n      '_bsontype' in variable &&\n      variable._bsontype === 'ObjectId'\n    );\n  }\n\n  /**\n   * Compares the equality of this ObjectId with `otherID`.\n   *\n   * @param otherId - ObjectId instance to compare against.\n   */\n  equals(otherId: string | ObjectId | ObjectIdLike | undefined | null): boolean {\n    if (otherId === undefined || otherId === null) {\n      return false;\n    }\n\n    if (ObjectId.is(otherId)) {\n      return (\n        this.buffer[11] === otherId.buffer[11] && ByteUtils.equals(this.buffer, otherId.buffer)\n      );\n    }\n\n    if (typeof otherId === 'string') {\n      return otherId.toLowerCase() === this.toHexString();\n    }\n\n    if (typeof otherId === 'object' && typeof otherId.toHexString === 'function') {\n      const otherIdString = otherId.toHexString();\n      const thisIdString = this.toHexString();\n      return typeof otherIdString === 'string' && otherIdString.toLowerCase() === thisIdString;\n    }\n\n    return false;\n  }\n\n  /** Returns the generation date (accurate up to the second) that this ID was generated. */\n  getTimestamp(): Date {\n    const timestamp = new Date();\n    const time = NumberUtils.getUint32BE(this.buffer, 0);\n    timestamp.setTime(Math.floor(time) * 1000);\n    return timestamp;\n  }\n\n  /** @internal */\n  static createPk(): ObjectId {\n    return new ObjectId();\n  }\n\n  /** @internal */\n  serializeInto(uint8array: Uint8Array, index: number): 12 {\n    uint8array[index] = this.buffer[0];\n    uint8array[index + 1] = this.buffer[1];\n    uint8array[index + 2] = this.buffer[2];\n    uint8array[index + 3] = this.buffer[3];\n    uint8array[index + 4] = this.buffer[4];\n    uint8array[index + 5] = this.buffer[5];\n    uint8array[index + 6] = this.buffer[6];\n    uint8array[index + 7] = this.buffer[7];\n    uint8array[index + 8] = this.buffer[8];\n    uint8array[index + 9] = this.buffer[9];\n    uint8array[index + 10] = this.buffer[10];\n    uint8array[index + 11] = this.buffer[11];\n    return 12;\n  }\n\n  /**\n   * Creates an ObjectId from a second based number, with the rest of the ObjectId zeroed out. Used for comparisons or sorting the ObjectId.\n   *\n   * @param time - an integer number representing a number of seconds.\n   */\n  static createFromTime(time: number): ObjectId {\n    const buffer = ByteUtils.allocate(12);\n    for (let i = 11; i >= 4; i--) buffer[i] = 0;\n    // Encode time into first 4 bytes\n    NumberUtils.setInt32BE(buffer, 0, time);\n    // Return the new objectId\n    return new ObjectId(buffer);\n  }\n\n  /**\n   * Creates an ObjectId from a hex string representation of an ObjectId.\n   *\n   * @param hexString - create a ObjectId from a passed in 24 character hexstring.\n   */\n  static createFromHexString(hexString: string): ObjectId {\n    if (hexString?.length !== 24) {\n      throw new BSONError('hex string must be 24 characters');\n    }\n\n    return new ObjectId(ByteUtils.fromHex(hexString));\n  }\n\n  /** Creates an ObjectId instance from a base64 string */\n  static createFromBase64(base64: string): ObjectId {\n    if (base64?.length !== 16) {\n      throw new BSONError('base64 string must be 16 characters');\n    }\n\n    return new ObjectId(ByteUtils.fromBase64(base64));\n  }\n\n  /**\n   * Checks if a value can be used to create a valid bson ObjectId\n   * @param id - any JS value\n   */\n  static isValid(id: string | number | ObjectId | ObjectIdLike | Uint8Array): boolean {\n    if (id == null) return false;\n    if (typeof id === 'string') return ObjectId.validateHexString(id);\n\n    try {\n      new ObjectId(id);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /** @internal */\n  toExtendedJSON(): ObjectIdExtended {\n    if (this.toHexString) return { $oid: this.toHexString() };\n    return { $oid: this.toString('hex') };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: ObjectIdExtended): ObjectId {\n    return new ObjectId(doc.$oid);\n  }\n\n  /** @internal */\n  private isCached(): boolean {\n    return ObjectId.cacheHexString && __idCache.has(this);\n  }\n\n  /**\n   * Converts to a string representation of this Id.\n   *\n   * @returns return the 24 character hex string representation.\n   */\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    return `new ObjectId(${inspect(this.toHexString(), options)})`;\n  }\n}\n", "import { Binary } from '../binary';\nimport type { Document } from '../bson';\nimport { BSONError, BSONVersionError } from '../error';\nimport * as constants from '../constants';\nimport { ByteUtils } from '../utils/byte_utils';\nimport { isAnyArrayBuffer, isDate, isRegExp } from './utils';\n\nexport function internalCalculateObjectSize(\n  object: Document,\n  serializeFunctions?: boolean,\n  ignoreUndefined?: boolean\n): number {\n  let totalLength = 4 + 1;\n\n  if (Array.isArray(object)) {\n    for (let i = 0; i < object.length; i++) {\n      totalLength += calculateElement(\n        i.toString(),\n        object[i],\n        serializeFunctions,\n        true,\n        ignoreUndefined\n      );\n    }\n  } else {\n    // If we have toBSON defined, override the current object\n\n    if (typeof object?.toBSON === 'function') {\n      object = object.toBSON();\n    }\n\n    // Calculate size\n    for (const key of Object.keys(object)) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n    }\n  }\n\n  return totalLength;\n}\n\n/** @internal */\nfunction calculateElement(\n  name: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any,\n  serializeFunctions = false,\n  isArray = false,\n  ignoreUndefined = false\n) {\n  // If we have toBSON defined, override the current object\n  if (typeof value?.toBSON === 'function') {\n    value = value.toBSON();\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return 1 + ByteUtils.utf8ByteLength(name) + 1 + 4 + ByteUtils.utf8ByteLength(value) + 1;\n    case 'number':\n      if (\n        Math.floor(value) === value &&\n        value >= constants.JS_INT_MIN &&\n        value <= constants.JS_INT_MAX\n      ) {\n        if (value >= constants.BSON_INT32_MIN && value <= constants.BSON_INT32_MAX) {\n          // 32 bit\n          return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (4 + 1);\n        } else {\n          return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n        }\n      } else {\n        // 64 bit\n        return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if (isArray || !ignoreUndefined)\n        return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + 1;\n      return 0;\n    case 'boolean':\n      return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (1 + 1);\n    case 'object':\n      if (\n        value != null &&\n        typeof value._bsontype === 'string' &&\n        value[constants.BSON_VERSION_SYMBOL] !== constants.BSON_MAJOR_VERSION\n      ) {\n        throw new BSONVersionError();\n      } else if (value == null || value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n        return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + 1;\n      } else if (value._bsontype === 'ObjectId') {\n        return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (12 + 1);\n      } else if (value instanceof Date || isDate(value)) {\n        return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n      } else if (\n        ArrayBuffer.isView(value) ||\n        value instanceof ArrayBuffer ||\n        isAnyArrayBuffer(value)\n      ) {\n        return (\n          (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (1 + 4 + 1) + value.byteLength\n        );\n      } else if (\n        value._bsontype === 'Long' ||\n        value._bsontype === 'Double' ||\n        value._bsontype === 'Timestamp'\n      ) {\n        return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n      } else if (value._bsontype === 'Decimal128') {\n        return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (16 + 1);\n      } else if (value._bsontype === 'Code') {\n        // Calculate size depending on the availability of a scope\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            ByteUtils.utf8ByteLength(value.code.toString()) +\n            1 +\n            internalCalculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else {\n          return (\n            (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n            1 +\n            4 +\n            ByteUtils.utf8ByteLength(value.code.toString()) +\n            1\n          );\n        }\n      } else if (value._bsontype === 'Binary') {\n        const binary: Binary = value;\n        // Check what kind of subtype we have\n        if (binary.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n          return (\n            (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n            (binary.position + 1 + 4 + 1 + 4)\n          );\n        } else {\n          return (\n            (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (binary.position + 1 + 4 + 1)\n          );\n        }\n      } else if (value._bsontype === 'Symbol') {\n        return (\n          (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n          ByteUtils.utf8ByteLength(value.value) +\n          4 +\n          1 +\n          1\n        );\n      } else if (value._bsontype === 'DBRef') {\n        // Set up correct object for serialization\n        const ordered_values = Object.assign(\n          {\n            $ref: value.collection,\n            $id: value.oid\n          },\n          value.fields\n        );\n\n        // Add db reference if it exists\n        if (value.db != null) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (\n          (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n          1 +\n          internalCalculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined)\n        );\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        return (\n          (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n          1 +\n          ByteUtils.utf8ByteLength(value.source) +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else if (value._bsontype === 'BSONRegExp') {\n        return (\n          (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n          1 +\n          ByteUtils.utf8ByteLength(value.pattern) +\n          1 +\n          ByteUtils.utf8ByteLength(value.options) +\n          1\n        );\n      } else {\n        return (\n          (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n          internalCalculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n          1\n        );\n      }\n    case 'function':\n      if (serializeFunctions) {\n        return (\n          (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n          1 +\n          4 +\n          ByteUtils.utf8ByteLength(value.toString()) +\n          1\n        );\n      }\n      return 0;\n    case 'bigint':\n      return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n    case 'symbol':\n      return 0;\n    default:\n      throw new BSONError(`Unrecognized JS type: ${typeof value}`);\n  }\n\n  return 0;\n}\n", "import { BSONValue } from './bson_value';\nimport { BSONError } from './error';\nimport type { EJSONOptions } from './extended_json';\nimport { type InspectFn, defaultInspect, getStylizeFunction } from './parser/utils';\n\nfunction alphabetize(str: string): string {\n  return str.split('').sort().join('');\n}\n\n/** @public */\nexport interface BSONRegExpExtendedLegacy {\n  $regex: string | BSONRegExp;\n  $options: string;\n}\n\n/** @public */\nexport interface BSONRegExpExtended {\n  $regularExpression: {\n    pattern: string;\n    options: string;\n  };\n}\n\n/**\n * A class representation of the BSON RegExp type.\n * @public\n * @category BSONType\n */\nexport class BSONRegExp extends BSONValue {\n  get _bsontype(): 'BSONRegExp' {\n    return 'BSONRegExp';\n  }\n\n  pattern!: string;\n  options!: string;\n  /**\n   * @param pattern - The regular expression pattern to match\n   * @param options - The regular expression options\n   */\n  constructor(pattern: string, options?: string) {\n    super();\n    this.pattern = pattern;\n    this.options = alphabetize(options ?? '');\n\n    if (this.pattern.indexOf('\\x00') !== -1) {\n      throw new BSONError(\n        `BSON Regex patterns cannot contain null bytes, found: ${JSON.stringify(this.pattern)}`\n      );\n    }\n    if (this.options.indexOf('\\x00') !== -1) {\n      throw new BSONError(\n        `BSON Regex options cannot contain null bytes, found: ${JSON.stringify(this.options)}`\n      );\n    }\n\n    // Validate options\n    for (let i = 0; i < this.options.length; i++) {\n      if (\n        !(\n          this.options[i] === 'i' ||\n          this.options[i] === 'm' ||\n          this.options[i] === 'x' ||\n          this.options[i] === 'l' ||\n          this.options[i] === 's' ||\n          this.options[i] === 'u'\n        )\n      ) {\n        throw new BSONError(`The regular expression option [${this.options[i]}] is not supported`);\n      }\n    }\n  }\n\n  static parseOptions(options?: string): string {\n    return options ? options.split('').sort().join('') : '';\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): BSONRegExpExtendedLegacy | BSONRegExpExtended {\n    options = options || {};\n    if (options.legacy) {\n      return { $regex: this.pattern, $options: this.options };\n    }\n    return { $regularExpression: { pattern: this.pattern, options: this.options } };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: BSONRegExpExtendedLegacy | BSONRegExpExtended): BSONRegExp {\n    if ('$regex' in doc) {\n      if (typeof doc.$regex !== 'string') {\n        // This is for $regex query operators that have extended json values.\n        if (doc.$regex._bsontype === 'BSONRegExp') {\n          return doc as unknown as BSONRegExp;\n        }\n      } else {\n        return new BSONRegExp(doc.$regex, BSONRegExp.parseOptions(doc.$options));\n      }\n    }\n    if ('$regularExpression' in doc) {\n      return new BSONRegExp(\n        doc.$regularExpression.pattern,\n        BSONRegExp.parseOptions(doc.$regularExpression.options)\n      );\n    }\n    throw new BSONError(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(doc)}`);\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    const stylize = getStylizeFunction(options) ?? (v => v);\n    inspect ??= defaultInspect;\n    const pattern = stylize(inspect(this.pattern), 'regexp');\n    const flags = stylize(inspect(this.options), 'regexp');\n    return `new BSONRegExp(${pattern}, ${flags})`;\n  }\n}\n", "import { BSONValue } from './bson_value';\nimport { type InspectFn, defaultInspect } from './parser/utils';\n\n/** @public */\nexport interface BSONSymbolExtended {\n  $symbol: string;\n}\n\n/**\n * A class representation of the BSON Symbol type.\n * @public\n * @category BSONType\n */\nexport class BSONSymbol extends BSONValue {\n  get _bsontype(): 'BSONSymbol' {\n    return 'BSONSymbol';\n  }\n\n  value!: string;\n  /**\n   * @param value - the string representing the symbol.\n   */\n  constructor(value: string) {\n    super();\n    this.value = value;\n  }\n\n  /** Access the wrapped string value. */\n  valueOf(): string {\n    return this.value;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n\n  toJSON(): string {\n    return this.value;\n  }\n\n  /** @internal */\n  toExtendedJSON(): BSONSymbolExtended {\n    return { $symbol: this.value };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: BSONSymbolExtended): BSONSymbol {\n    return new BSONSymbol(doc.$symbol);\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    return `new BSONSymbol(${inspect(this.value, options)})`;\n  }\n}\n", "import { BSONError } from './error';\nimport type { Int32 } from './int_32';\nimport { Long } from './long';\nimport { type InspectFn, defaultInspect } from './parser/utils';\n\n/** @public */\nexport type TimestampOverrides = '_bsontype' | 'toExtendedJSON' | 'fromExtendedJSON' | 'inspect';\n/** @public */\nexport type LongWithoutOverrides = new (\n  low: unknown,\n  high?: number | boolean,\n  unsigned?: boolean\n) => {\n  [P in Exclude<keyof Long, TimestampOverrides>]: Long[P];\n};\n/** @public */\nexport const LongWithoutOverridesClass: LongWithoutOverrides =\n  Long as unknown as LongWithoutOverrides;\n\n/** @public */\nexport interface TimestampExtended {\n  $timestamp: {\n    t: number;\n    i: number;\n  };\n}\n\n/**\n * @public\n * @category BSONType\n *\n * A special type for _internal_ MongoDB use and is **not** associated with the regular Date type.\n */\nexport class Timestamp extends LongWithoutOverridesClass {\n  get _bsontype(): 'Timestamp' {\n    return 'Timestamp';\n  }\n\n  static readonly MAX_VALUE = Long.MAX_UNSIGNED_VALUE;\n\n  /**\n   * An incrementing ordinal for operations within a given second.\n   */\n  get i(): number {\n    return this.low >>> 0;\n  }\n\n  /**\n   * A `time_t` value measuring seconds since the Unix epoch\n   */\n  get t(): number {\n    return this.high >>> 0;\n  }\n\n  /**\n   * @param int - A 64-bit bigint representing the Timestamp.\n   */\n  constructor(int: bigint);\n  /**\n   * @param long - A 64-bit Long representing the Timestamp.\n   */\n  constructor(long: Long);\n  /**\n   * @param value - A pair of two values indicating timestamp and increment.\n   */\n  constructor(value: { t: number; i: number });\n  constructor(low?: bigint | Long | { t: number | Int32; i: number | Int32 }) {\n    if (low == null) {\n      super(0, 0, true);\n    } else if (typeof low === 'bigint') {\n      super(low, true);\n    } else if (Long.isLong(low)) {\n      super(low.low, low.high, true);\n    } else if (typeof low === 'object' && 't' in low && 'i' in low) {\n      if (typeof low.t !== 'number' && (typeof low.t !== 'object' || low.t._bsontype !== 'Int32')) {\n        throw new BSONError('Timestamp constructed from { t, i } must provide t as a number');\n      }\n      if (typeof low.i !== 'number' && (typeof low.i !== 'object' || low.i._bsontype !== 'Int32')) {\n        throw new BSONError('Timestamp constructed from { t, i } must provide i as a number');\n      }\n      const t = Number(low.t);\n      const i = Number(low.i);\n      if (t < 0 || Number.isNaN(t)) {\n        throw new BSONError('Timestamp constructed from { t, i } must provide a positive t');\n      }\n      if (i < 0 || Number.isNaN(i)) {\n        throw new BSONError('Timestamp constructed from { t, i } must provide a positive i');\n      }\n      if (t > 0xffff_ffff) {\n        throw new BSONError(\n          'Timestamp constructed from { t, i } must provide t equal or less than uint32 max'\n        );\n      }\n      if (i > 0xffff_ffff) {\n        throw new BSONError(\n          'Timestamp constructed from { t, i } must provide i equal or less than uint32 max'\n        );\n      }\n\n      super(i, t, true);\n    } else {\n      throw new BSONError(\n        'A Timestamp can only be constructed with: bigint, Long, or { t: number; i: number }'\n      );\n    }\n  }\n\n  toJSON(): { $timestamp: string } {\n    return {\n      $timestamp: this.toString()\n    };\n  }\n\n  /** Returns a Timestamp represented by the given (32-bit) integer value. */\n  static fromInt(value: number): Timestamp {\n    return new Timestamp(Long.fromInt(value, true));\n  }\n\n  /** Returns a Timestamp representing the given number value, provided that it is a finite number. Otherwise, zero is returned. */\n  static fromNumber(value: number): Timestamp {\n    return new Timestamp(Long.fromNumber(value, true));\n  }\n\n  /**\n   * Returns a Timestamp for the given high and low bits. Each is assumed to use 32 bits.\n   *\n   * @param lowBits - the low 32-bits.\n   * @param highBits - the high 32-bits.\n   */\n  static fromBits(lowBits: number, highBits: number): Timestamp {\n    return new Timestamp({ i: lowBits, t: highBits });\n  }\n\n  /**\n   * Returns a Timestamp from the given string, optionally using the given radix.\n   *\n   * @param str - the textual representation of the Timestamp.\n   * @param optRadix - the radix in which the text is written.\n   */\n  static fromString(str: string, optRadix: number): Timestamp {\n    return new Timestamp(Long.fromString(str, true, optRadix));\n  }\n\n  /** @internal */\n  toExtendedJSON(): TimestampExtended {\n    return { $timestamp: { t: this.t, i: this.i } };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: TimestampExtended): Timestamp {\n    // The Long check is necessary because extended JSON has different behavior given the size of the input number\n    const i = Long.isLong(doc.$timestamp.i)\n      ? doc.$timestamp.i.getLowBitsUnsigned() // Need to fetch the least significant 32 bits\n      : doc.$timestamp.i;\n    const t = Long.isLong(doc.$timestamp.t)\n      ? doc.$timestamp.t.getLowBitsUnsigned() // Need to fetch the least significant 32 bits\n      : doc.$timestamp.t;\n    return new Timestamp({ t, i });\n  }\n\n  inspect(depth?: number, options?: unknown, inspect?: InspectFn): string {\n    inspect ??= defaultInspect;\n    const t = inspect(this.t, options);\n    const i = inspect(this.i, options);\n    return `new Timestamp({ t: ${t}, i: ${i} })`;\n  }\n}\n", "import { Binary, UUID } from '../binary';\nimport type { Document } from '../bson';\nimport { Code } from '../code';\nimport * as constants from '../constants';\nimport { DBRef, type DBRefLike, isDBRefLike } from '../db_ref';\nimport { Decimal128 } from '../decimal128';\nimport { Double } from '../double';\nimport { BSONError } from '../error';\nimport { Int32 } from '../int_32';\nimport { Long } from '../long';\nimport { MaxKey } from '../max_key';\nimport { MinKey } from '../min_key';\nimport { ObjectId } from '../objectid';\nimport { BSONRegExp } from '../regexp';\nimport { BSONSymbol } from '../symbol';\nimport { Timestamp } from '../timestamp';\nimport { ByteUtils } from '../utils/byte_utils';\nimport { NumberUtils } from '../utils/number_utils';\n\n/** @public */\nexport interface DeserializeOptions {\n  /**\n   * when deserializing a Long return as a BigInt.\n   * @defaultValue `false`\n   */\n  useBigInt64?: boolean;\n  /**\n   * when deserializing a Long will fit it into a Number if it's smaller than 53 bits.\n   * @defaultValue `true`\n   */\n  promoteLongs?: boolean;\n  /**\n   * when deserializing a Binary will return it as a node.js Buffer instance.\n   * @defaultValue `false`\n   */\n  promoteBuffers?: boolean;\n  /**\n   * when deserializing will promote BSON values to their Node.js closest equivalent types.\n   * @defaultValue `true`\n   */\n  promoteValues?: boolean;\n  /**\n   * allow to specify if there what fields we wish to return as unserialized raw buffer.\n   * @defaultValue `null`\n   */\n  fieldsAsRaw?: Document;\n  /**\n   * return BSON regular expressions as BSONRegExp instances.\n   * @defaultValue `false`\n   */\n  bsonRegExp?: boolean;\n  /**\n   * allows the buffer to be larger than the parsed BSON object.\n   * @defaultValue `false`\n   */\n  allowObjectSmallerThanBufferSize?: boolean;\n  /**\n   * Offset into buffer to begin reading document from\n   * @defaultValue `0`\n   */\n  index?: number;\n\n  raw?: boolean;\n  /** Allows for opt-out utf-8 validation for all keys or\n   * specified keys. Must be all true or all false.\n   *\n   * @example\n   * ```js\n   * // disables validation on all keys\n   *  validation: { utf8: false }\n   *\n   * // enables validation only on specified keys a, b, and c\n   *  validation: { utf8: { a: true, b: true, c: true } }\n   *\n   *  // disables validation only on specified keys a, b\n   *  validation: { utf8: { a: false, b: false } }\n   * ```\n   */\n  validation?: { utf8: boolean | Record<string, true> | Record<string, false> };\n}\n\n// Internal long versions\nconst JS_INT_MAX_LONG = Long.fromNumber(constants.JS_INT_MAX);\nconst JS_INT_MIN_LONG = Long.fromNumber(constants.JS_INT_MIN);\n\nexport function internalDeserialize(\n  buffer: Uint8Array,\n  options: DeserializeOptions,\n  isArray?: boolean\n): Document {\n  options = options == null ? {} : options;\n  const index = options && options.index ? options.index : 0;\n  // Read the document size\n  const size = NumberUtils.getInt32LE(buffer, index);\n\n  if (size < 5) {\n    throw new BSONError(`bson size must be >= 5, is ${size}`);\n  }\n\n  if (options.allowObjectSmallerThanBufferSize && buffer.length < size) {\n    throw new BSONError(`buffer length ${buffer.length} must be >= bson size ${size}`);\n  }\n\n  if (!options.allowObjectSmallerThanBufferSize && buffer.length !== size) {\n    throw new BSONError(`buffer length ${buffer.length} must === bson size ${size}`);\n  }\n\n  if (size + index > buffer.byteLength) {\n    throw new BSONError(\n      `(bson size ${size} + options.index ${index} must be <= buffer length ${buffer.byteLength})`\n    );\n  }\n\n  // Illegal end value\n  if (buffer[index + size - 1] !== 0) {\n    throw new BSONError(\n      \"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\"\n    );\n  }\n\n  // Start deserialization\n  return deserializeObject(buffer, index, options, isArray);\n}\n\nconst allowedDBRefKeys = /^\\$ref$|^\\$id$|^\\$db$/;\n\nfunction deserializeObject(\n  buffer: Uint8Array,\n  index: number,\n  options: DeserializeOptions,\n  isArray = false\n) {\n  const fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n\n  // Return raw bson buffer instead of parsing it\n  const raw = options['raw'] == null ? false : options['raw'];\n\n  // Return BSONRegExp objects instead of native regular expressions\n  const bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n\n  // Controls the promotion of values vs wrapper classes\n  const promoteBuffers = options.promoteBuffers ?? false;\n  const promoteLongs = options.promoteLongs ?? true;\n  const promoteValues = options.promoteValues ?? true;\n  const useBigInt64 = options.useBigInt64 ?? false;\n\n  if (useBigInt64 && !promoteValues) {\n    throw new BSONError('Must either request bigint or Long for int64 deserialization');\n  }\n\n  if (useBigInt64 && !promoteLongs) {\n    throw new BSONError('Must either request bigint or Long for int64 deserialization');\n  }\n\n  // Ensures default validation option if none given\n  const validation = options.validation == null ? { utf8: true } : options.validation;\n\n  // Shows if global utf-8 validation is enabled or disabled\n  let globalUTFValidation = true;\n  // Reflects utf-8 validation setting regardless of global or specific key validation\n  let validationSetting: boolean;\n  // Set of keys either to enable or disable validation on\n  let utf8KeysSet;\n\n  // Check for boolean uniformity and empty validation option\n  const utf8ValidatedKeys = validation.utf8;\n  if (typeof utf8ValidatedKeys === 'boolean') {\n    validationSetting = utf8ValidatedKeys;\n  } else {\n    globalUTFValidation = false;\n    const utf8ValidationValues = Object.keys(utf8ValidatedKeys).map(function (key) {\n      return utf8ValidatedKeys[key];\n    });\n    if (utf8ValidationValues.length === 0) {\n      throw new BSONError('UTF-8 validation setting cannot be empty');\n    }\n    if (typeof utf8ValidationValues[0] !== 'boolean') {\n      throw new BSONError('Invalid UTF-8 validation option, must specify boolean values');\n    }\n    validationSetting = utf8ValidationValues[0];\n    // Ensures boolean uniformity in utf-8 validation (all true or all false)\n    if (!utf8ValidationValues.every(item => item === validationSetting)) {\n      throw new BSONError('Invalid UTF-8 validation option - keys must be all true or all false');\n    }\n  }\n\n  // Add keys to set that will either be validated or not based on validationSetting\n  if (!globalUTFValidation) {\n    utf8KeysSet = new Set();\n\n    for (const key of Object.keys(utf8ValidatedKeys)) {\n      utf8KeysSet.add(key);\n    }\n  }\n\n  // Set the start index\n  const startIndex = index;\n\n  // Validate that we have at least 4 bytes of buffer\n  if (buffer.length < 5) throw new BSONError('corrupt bson message < 5 bytes long');\n\n  // Read the document size\n  const size = NumberUtils.getInt32LE(buffer, index);\n  index += 4;\n\n  // Ensure buffer is valid size\n  if (size < 5 || size > buffer.length) throw new BSONError('corrupt bson message');\n\n  // Create holding object\n  const object: Document = isArray ? [] : {};\n  // Used for arrays to skip having to perform utf8 decoding\n  let arrayIndex = 0;\n  const done = false;\n\n  let isPossibleDBRef = isArray ? false : null;\n\n  // While we have more left data left keep parsing\n  while (!done) {\n    // Read the type\n    const elementType = buffer[index++];\n\n    // If we get a zero it's the last byte, exit\n    if (elementType === 0) break;\n\n    // Get the start search index\n    let i = index;\n    // Locate the end of the c string\n    while (buffer[i] !== 0x00 && i < buffer.length) {\n      i++;\n    }\n\n    // If are at the end of the buffer there is a problem with the document\n    if (i >= buffer.byteLength) throw new BSONError('Bad BSON Document: illegal CString');\n\n    // Represents the key\n    const name = isArray ? arrayIndex++ : ByteUtils.toUTF8(buffer, index, i, false);\n\n    // shouldValidateKey is true if the key should be validated, false otherwise\n    let shouldValidateKey = true;\n    if (globalUTFValidation || utf8KeysSet?.has(name)) {\n      shouldValidateKey = validationSetting;\n    } else {\n      shouldValidateKey = !validationSetting;\n    }\n\n    if (isPossibleDBRef !== false && (name as string)[0] === '$') {\n      isPossibleDBRef = allowedDBRefKeys.test(name as string);\n    }\n    let value;\n\n    index = i + 1;\n\n    if (elementType === constants.BSON_DATA_STRING) {\n      const stringSize = NumberUtils.getInt32LE(buffer, index);\n      index += 4;\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      ) {\n        throw new BSONError('bad string length in bson');\n      }\n      value = ByteUtils.toUTF8(buffer, index, index + stringSize - 1, shouldValidateKey);\n      index = index + stringSize;\n    } else if (elementType === constants.BSON_DATA_OID) {\n      const oid = ByteUtils.allocateUnsafe(12);\n      for (let i = 0; i < 12; i++) oid[i] = buffer[index + i];\n      value = new ObjectId(oid);\n      index = index + 12;\n    } else if (elementType === constants.BSON_DATA_INT && promoteValues === false) {\n      value = new Int32(NumberUtils.getInt32LE(buffer, index));\n      index += 4;\n    } else if (elementType === constants.BSON_DATA_INT) {\n      value = NumberUtils.getInt32LE(buffer, index);\n      index += 4;\n    } else if (elementType === constants.BSON_DATA_NUMBER) {\n      value = NumberUtils.getFloat64LE(buffer, index);\n      index += 8;\n      if (promoteValues === false) value = new Double(value);\n    } else if (elementType === constants.BSON_DATA_DATE) {\n      const lowBits = NumberUtils.getInt32LE(buffer, index);\n      const highBits = NumberUtils.getInt32LE(buffer, index + 4);\n      index += 8;\n\n      value = new Date(new Long(lowBits, highBits).toNumber());\n    } else if (elementType === constants.BSON_DATA_BOOLEAN) {\n      if (buffer[index] !== 0 && buffer[index] !== 1)\n        throw new BSONError('illegal boolean type value');\n      value = buffer[index++] === 1;\n    } else if (elementType === constants.BSON_DATA_OBJECT) {\n      const _index = index;\n      const objectSize = NumberUtils.getInt32LE(buffer, index);\n\n      if (objectSize <= 0 || objectSize > buffer.length - index)\n        throw new BSONError('bad embedded document length in bson');\n\n      // We have a raw value\n      if (raw) {\n        value = buffer.subarray(index, index + objectSize);\n      } else {\n        let objectOptions = options;\n        if (!globalUTFValidation) {\n          objectOptions = { ...options, validation: { utf8: shouldValidateKey } };\n        }\n        value = deserializeObject(buffer, _index, objectOptions, false);\n      }\n\n      index = index + objectSize;\n    } else if (elementType === constants.BSON_DATA_ARRAY) {\n      const _index = index;\n      const objectSize = NumberUtils.getInt32LE(buffer, index);\n      let arrayOptions: DeserializeOptions = options;\n\n      // Stop index\n      const stopIndex = index + objectSize;\n\n      // All elements of array to be returned as raw bson\n      if (fieldsAsRaw && fieldsAsRaw[name]) {\n        arrayOptions = { ...options, raw: true };\n      }\n\n      if (!globalUTFValidation) {\n        arrayOptions = { ...arrayOptions, validation: { utf8: shouldValidateKey } };\n      }\n      value = deserializeObject(buffer, _index, arrayOptions, true);\n      index = index + objectSize;\n\n      if (buffer[index - 1] !== 0) throw new BSONError('invalid array terminator byte');\n      if (index !== stopIndex) throw new BSONError('corrupted array bson');\n    } else if (elementType === constants.BSON_DATA_UNDEFINED) {\n      value = undefined;\n    } else if (elementType === constants.BSON_DATA_NULL) {\n      value = null;\n    } else if (elementType === constants.BSON_DATA_LONG) {\n      if (useBigInt64) {\n        value = NumberUtils.getBigInt64LE(buffer, index);\n        index += 8;\n      } else {\n        // Unpack the low and high bits\n        const lowBits = NumberUtils.getInt32LE(buffer, index);\n        const highBits = NumberUtils.getInt32LE(buffer, index + 4);\n        index += 8;\n\n        const long = new Long(lowBits, highBits);\n        // Promote the long if possible\n        if (promoteLongs && promoteValues === true) {\n          value =\n            long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n              ? long.toNumber()\n              : long;\n        } else {\n          value = long;\n        }\n      }\n    } else if (elementType === constants.BSON_DATA_DECIMAL128) {\n      // Buffer to contain the decimal bytes\n      const bytes = ByteUtils.allocateUnsafe(16);\n      // Copy the next 16 bytes into the bytes buffer\n      for (let i = 0; i < 16; i++) bytes[i] = buffer[index + i];\n      // Update index\n      index = index + 16;\n      // Assign the new Decimal128 value\n      value = new Decimal128(bytes);\n    } else if (elementType === constants.BSON_DATA_BINARY) {\n      let binarySize = NumberUtils.getInt32LE(buffer, index);\n      index += 4;\n      const totalBinarySize = binarySize;\n      const subType = buffer[index++];\n\n      // Did we have a negative binary size, throw\n      if (binarySize < 0) throw new BSONError('Negative binary type element size found');\n\n      // Is the length longer than the document\n      if (binarySize > buffer.byteLength)\n        throw new BSONError('Binary type size larger than document size');\n\n      // If we have subtype 2 skip the 4 bytes for the size\n      if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n        binarySize = NumberUtils.getInt32LE(buffer, index);\n        index += 4;\n        if (binarySize < 0)\n          throw new BSONError('Negative binary type element size found for subtype 0x02');\n        if (binarySize > totalBinarySize - 4)\n          throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n        if (binarySize < totalBinarySize - 4)\n          throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n      }\n\n      if (promoteBuffers && promoteValues) {\n        value = ByteUtils.toLocalBufferType(buffer.subarray(index, index + binarySize));\n      } else {\n        value = new Binary(buffer.subarray(index, index + binarySize), subType);\n        if (subType === constants.BSON_BINARY_SUBTYPE_UUID_NEW && UUID.isValid(value)) {\n          value = value.toUUID();\n        }\n      }\n\n      // Update the index\n      index = index + binarySize;\n    } else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === false) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new BSONError('Bad BSON Document: illegal CString');\n      // Return the C string\n      const source = ByteUtils.toUTF8(buffer, index, i, false);\n      // Create the regexp\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new BSONError('Bad BSON Document: illegal CString');\n      // Return the C string\n      const regExpOptions = ByteUtils.toUTF8(buffer, index, i, false);\n      index = i + 1;\n\n      // For each option add the corresponding one for javascript\n      const optionsArray = new Array(regExpOptions.length);\n\n      // Parse options\n      for (i = 0; i < regExpOptions.length; i++) {\n        switch (regExpOptions[i]) {\n          case 'm':\n            optionsArray[i] = 'm';\n            break;\n          case 's':\n            optionsArray[i] = 'g';\n            break;\n          case 'i':\n            optionsArray[i] = 'i';\n            break;\n        }\n      }\n\n      value = new RegExp(source, optionsArray.join(''));\n    } else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === true) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new BSONError('Bad BSON Document: illegal CString');\n      // Return the C string\n      const source = ByteUtils.toUTF8(buffer, index, i, false);\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new BSONError('Bad BSON Document: illegal CString');\n      // Return the C string\n      const regExpOptions = ByteUtils.toUTF8(buffer, index, i, false);\n      index = i + 1;\n\n      // Set the object\n      value = new BSONRegExp(source, regExpOptions);\n    } else if (elementType === constants.BSON_DATA_SYMBOL) {\n      const stringSize = NumberUtils.getInt32LE(buffer, index);\n      index += 4;\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      ) {\n        throw new BSONError('bad string length in bson');\n      }\n      const symbol = ByteUtils.toUTF8(buffer, index, index + stringSize - 1, shouldValidateKey);\n      value = promoteValues ? symbol : new BSONSymbol(symbol);\n      index = index + stringSize;\n    } else if (elementType === constants.BSON_DATA_TIMESTAMP) {\n      value = new Timestamp({\n        i: NumberUtils.getUint32LE(buffer, index),\n        t: NumberUtils.getUint32LE(buffer, index + 4)\n      });\n      index += 8;\n    } else if (elementType === constants.BSON_DATA_MIN_KEY) {\n      value = new MinKey();\n    } else if (elementType === constants.BSON_DATA_MAX_KEY) {\n      value = new MaxKey();\n    } else if (elementType === constants.BSON_DATA_CODE) {\n      const stringSize = NumberUtils.getInt32LE(buffer, index);\n      index += 4;\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      ) {\n        throw new BSONError('bad string length in bson');\n      }\n      const functionString = ByteUtils.toUTF8(\n        buffer,\n        index,\n        index + stringSize - 1,\n        shouldValidateKey\n      );\n\n      value = new Code(functionString);\n\n      // Update parse index position\n      index = index + stringSize;\n    } else if (elementType === constants.BSON_DATA_CODE_W_SCOPE) {\n      const totalSize = NumberUtils.getInt32LE(buffer, index);\n      index += 4;\n\n      // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n      if (totalSize < 4 + 4 + 4 + 1) {\n        throw new BSONError('code_w_scope total size shorter minimum expected length');\n      }\n\n      // Get the code string size\n      const stringSize = NumberUtils.getInt32LE(buffer, index);\n      index += 4;\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      ) {\n        throw new BSONError('bad string length in bson');\n      }\n\n      // Javascript function\n      const functionString = ByteUtils.toUTF8(\n        buffer,\n        index,\n        index + stringSize - 1,\n        shouldValidateKey\n      );\n      // Update parse index position\n      index = index + stringSize;\n      // Parse the element\n      const _index = index;\n      // Decode the size of the object document\n      const objectSize = NumberUtils.getInt32LE(buffer, index);\n      // Decode the scope object\n      const scopeObject = deserializeObject(buffer, _index, options, false);\n      // Adjust the index\n      index = index + objectSize;\n\n      // Check if field length is too short\n      if (totalSize < 4 + 4 + objectSize + stringSize) {\n        throw new BSONError('code_w_scope total size is too short, truncating scope');\n      }\n\n      // Check if totalSize field is too long\n      if (totalSize > 4 + 4 + objectSize + stringSize) {\n        throw new BSONError('code_w_scope total size is too long, clips outer document');\n      }\n\n      value = new Code(functionString, scopeObject);\n    } else if (elementType === constants.BSON_DATA_DBPOINTER) {\n      // Get the code string size\n      const stringSize = NumberUtils.getInt32LE(buffer, index);\n      index += 4;\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new BSONError('bad string length in bson');\n      // Namespace\n      const namespace = ByteUtils.toUTF8(buffer, index, index + stringSize - 1, shouldValidateKey);\n      // Update parse index position\n      index = index + stringSize;\n\n      // Read the oid\n      const oidBuffer = ByteUtils.allocateUnsafe(12);\n      for (let i = 0; i < 12; i++) oidBuffer[i] = buffer[index + i];\n      const oid = new ObjectId(oidBuffer);\n\n      // Update the index\n      index = index + 12;\n\n      // Upgrade to DBRef type\n      value = new DBRef(namespace, oid);\n    } else {\n      throw new BSONError(\n        `Detected unknown BSON type ${elementType.toString(16)} for fieldname \"${name}\"`\n      );\n    }\n    if (name === '__proto__') {\n      Object.defineProperty(object, name, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });\n    } else {\n      object[name] = value;\n    }\n  }\n\n  // Check if the deserialization was against a valid array/object\n  if (size !== index - startIndex) {\n    if (isArray) throw new BSONError('corrupt array bson');\n    throw new BSONError('corrupt object bson');\n  }\n\n  // if we did not find \"$ref\", \"$id\", \"$db\", or found an extraneous $key, don't make a DBRef\n  if (!isPossibleDBRef) return object;\n\n  if (isDBRefLike(object)) {\n    const copy = Object.assign({}, object) as Partial<DBRefLike>;\n    delete copy.$ref;\n    delete copy.$id;\n    delete copy.$db;\n    return new DBRef(object.$ref, object.$id, object.$db, copy);\n  }\n\n  return object;\n}\n", "import { Binary, validateBinaryVector } from '../binary';\nimport type { BSONSymbol, DBRef, Document, MaxKey } from '../bson';\nimport type { Code } from '../code';\nimport * as constants from '../constants';\nimport type { DBRefLike } from '../db_ref';\nimport type { Decimal128 } from '../decimal128';\nimport type { Double } from '../double';\nimport { BSONError, BSONVersionError } from '../error';\nimport type { Int32 } from '../int_32';\nimport { Long } from '../long';\nimport type { MinKey } from '../min_key';\nimport type { ObjectId } from '../objectid';\nimport type { BSONRegExp } from '../regexp';\nimport { ByteUtils } from '../utils/byte_utils';\nimport { NumberUtils } from '../utils/number_utils';\nimport { isAnyArrayBuffer, isDate, isMap, isRegExp, isUint8Array } from './utils';\n\n/** @public */\nexport interface SerializeOptions {\n  /**\n   * the serializer will check if keys are valid.\n   * @defaultValue `false`\n   */\n  checkKeys?: boolean;\n  /**\n   * serialize the javascript functions\n   * @defaultValue `false`\n   */\n  serializeFunctions?: boolean;\n  /**\n   * serialize will not emit undefined fields\n   * note that the driver sets this to `false`\n   * @defaultValue `true`\n   */\n  ignoreUndefined?: boolean;\n  /** @internal Resize internal buffer */\n  minInternalBufferSize?: number;\n  /**\n   * the index in the buffer where we wish to start serializing into\n   * @defaultValue `0`\n   */\n  index?: number;\n}\n\nconst regexp = /\\x00/; // eslint-disable-line no-control-regex\nconst ignoreKeys = new Set(['$db', '$ref', '$id', '$clusterTime']);\n\n/*\n * isArray indicates if we are writing to a BSON array (type 0x04)\n * which forces the \"key\" which really an array index as a string to be written as ascii\n * This will catch any errors in index as a string generation\n */\n\nfunction serializeString(buffer: Uint8Array, key: string, value: string, index: number) {\n  // Encode String type\n  buffer[index++] = constants.BSON_DATA_STRING;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes + 1;\n  buffer[index - 1] = 0;\n  // Write the string\n  const size = ByteUtils.encodeUTF8Into(buffer, value, index + 4);\n  // Write the size of the string to buffer\n  NumberUtils.setInt32LE(buffer, index, size + 1);\n  // Update index\n  index = index + 4 + size;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nfunction serializeNumber(buffer: Uint8Array, key: string, value: number, index: number) {\n  const isNegativeZero = Object.is(value, -0);\n\n  const type =\n    !isNegativeZero &&\n    Number.isSafeInteger(value) &&\n    value <= constants.BSON_INT32_MAX &&\n    value >= constants.BSON_INT32_MIN\n      ? constants.BSON_DATA_INT\n      : constants.BSON_DATA_NUMBER;\n\n  buffer[index++] = type;\n\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0x00;\n\n  if (type === constants.BSON_DATA_INT) {\n    index += NumberUtils.setInt32LE(buffer, index, value);\n  } else {\n    index += NumberUtils.setFloat64LE(buffer, index, value);\n  }\n\n  return index;\n}\n\nfunction serializeBigInt(buffer: Uint8Array, key: string, value: bigint, index: number) {\n  buffer[index++] = constants.BSON_DATA_LONG;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index += numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  index += NumberUtils.setBigInt64LE(buffer, index, value);\n\n  return index;\n}\n\nfunction serializeNull(buffer: Uint8Array, key: string, _: unknown, index: number) {\n  // Set long type\n  buffer[index++] = constants.BSON_DATA_NULL;\n\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n}\n\nfunction serializeBoolean(buffer: Uint8Array, key: string, value: boolean, index: number) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_BOOLEAN;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Encode the boolean value\n  buffer[index++] = value ? 1 : 0;\n  return index;\n}\n\nfunction serializeDate(buffer: Uint8Array, key: string, value: Date, index: number) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_DATE;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the date\n  const dateInMilis = Long.fromNumber(value.getTime());\n  const lowBits = dateInMilis.getLowBits();\n  const highBits = dateInMilis.getHighBits();\n  // Encode low bits\n  index += NumberUtils.setInt32LE(buffer, index, lowBits);\n  // Encode high bits\n  index += NumberUtils.setInt32LE(buffer, index, highBits);\n  return index;\n}\n\nfunction serializeRegExp(buffer: Uint8Array, key: string, value: RegExp, index: number) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_REGEXP;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  if (value.source && value.source.match(regexp) != null) {\n    throw new BSONError('value ' + value.source + ' must not contain null bytes');\n  }\n  // Adjust the index\n  index = index + ByteUtils.encodeUTF8Into(buffer, value.source, index);\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the parameters\n  if (value.ignoreCase) buffer[index++] = 0x69; // i\n  if (value.global) buffer[index++] = 0x73; // s\n  if (value.multiline) buffer[index++] = 0x6d; // m\n\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nfunction serializeBSONRegExp(buffer: Uint8Array, key: string, value: BSONRegExp, index: number) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_REGEXP;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Check the pattern for 0 bytes\n  if (value.pattern.match(regexp) != null) {\n    // The BSON spec doesn't allow keys with null bytes because keys are\n    // null-terminated.\n    throw new BSONError('pattern ' + value.pattern + ' must not contain null bytes');\n  }\n\n  // Adjust the index\n  index = index + ByteUtils.encodeUTF8Into(buffer, value.pattern, index);\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the options\n  const sortedOptions = value.options.split('').sort().join('');\n  index = index + ByteUtils.encodeUTF8Into(buffer, sortedOptions, index);\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nfunction serializeMinMax(buffer: Uint8Array, key: string, value: MinKey | MaxKey, index: number) {\n  // Write the type of either min or max key\n  if (value === null) {\n    buffer[index++] = constants.BSON_DATA_NULL;\n  } else if (value._bsontype === 'MinKey') {\n    buffer[index++] = constants.BSON_DATA_MIN_KEY;\n  } else {\n    buffer[index++] = constants.BSON_DATA_MAX_KEY;\n  }\n\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n}\n\nfunction serializeObjectId(buffer: Uint8Array, key: string, value: ObjectId, index: number) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_OID;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  index += value.serializeInto(buffer, index);\n\n  // Adjust index\n  return index;\n}\n\nfunction serializeBuffer(buffer: Uint8Array, key: string, value: Uint8Array, index: number) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_BINARY;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Get size of the buffer (current write point)\n  const size = value.length;\n  // Write the size of the string to buffer\n  index += NumberUtils.setInt32LE(buffer, index, size);\n  // Write the default subtype\n  buffer[index++] = constants.BSON_BINARY_SUBTYPE_DEFAULT;\n  // Copy the content form the binary field to the buffer\n  if (size <= 16) {\n    for (let i = 0; i < size; i++) buffer[index + i] = value[i];\n  } else {\n    buffer.set(value, index);\n  }\n  // Adjust the index\n  index = index + size;\n  return index;\n}\n\nfunction serializeObject(\n  buffer: Uint8Array,\n  key: string,\n  value: Document,\n  index: number,\n  checkKeys: boolean,\n  depth: number,\n  serializeFunctions: boolean,\n  ignoreUndefined: boolean,\n  path: Set<Document>\n) {\n  if (path.has(value)) {\n    throw new BSONError('Cannot convert circular structure to BSON');\n  }\n\n  path.add(value);\n\n  // Write the type\n  buffer[index++] = Array.isArray(value) ? constants.BSON_DATA_ARRAY : constants.BSON_DATA_OBJECT;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  const endIndex = serializeInto(\n    buffer,\n    value,\n    checkKeys,\n    index,\n    depth + 1,\n    serializeFunctions,\n    ignoreUndefined,\n    path\n  );\n\n  path.delete(value);\n\n  return endIndex;\n}\n\nfunction serializeDecimal128(buffer: Uint8Array, key: string, value: Decimal128, index: number) {\n  buffer[index++] = constants.BSON_DATA_DECIMAL128;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the data from the value\n  for (let i = 0; i < 16; i++) buffer[index + i] = value.bytes[i];\n  return index + 16;\n}\n\nfunction serializeLong(buffer: Uint8Array, key: string, value: Long, index: number) {\n  // Write the type\n  buffer[index++] =\n    value._bsontype === 'Long' ? constants.BSON_DATA_LONG : constants.BSON_DATA_TIMESTAMP;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the date\n  const lowBits = value.getLowBits();\n  const highBits = value.getHighBits();\n  // Encode low bits\n  index += NumberUtils.setInt32LE(buffer, index, lowBits);\n  // Encode high bits\n  index += NumberUtils.setInt32LE(buffer, index, highBits);\n  return index;\n}\n\nfunction serializeInt32(buffer: Uint8Array, key: string, value: Int32 | number, index: number) {\n  value = value.valueOf();\n  // Set int type 32 bits or less\n  buffer[index++] = constants.BSON_DATA_INT;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the int value\n  index += NumberUtils.setInt32LE(buffer, index, value);\n  return index;\n}\n\nfunction serializeDouble(buffer: Uint8Array, key: string, value: Double, index: number) {\n  // Encode as double\n  buffer[index++] = constants.BSON_DATA_NUMBER;\n\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write float\n  index += NumberUtils.setFloat64LE(buffer, index, value.value);\n\n  return index;\n}\n\nfunction serializeFunction(buffer: Uint8Array, key: string, value: Function, index: number) {\n  buffer[index++] = constants.BSON_DATA_CODE;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Function string\n  const functionString = value.toString();\n\n  // Write the string\n  const size = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n  // Write the size of the string to buffer\n  NumberUtils.setInt32LE(buffer, index, size);\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nfunction serializeCode(\n  buffer: Uint8Array,\n  key: string,\n  value: Code,\n  index: number,\n  checkKeys = false,\n  depth = 0,\n  serializeFunctions = false,\n  ignoreUndefined = true,\n  path: Set<Document>\n) {\n  if (value.scope && typeof value.scope === 'object') {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_CODE_W_SCOPE;\n    // Number of written bytes\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    // Starting index\n    let startIndex = index;\n\n    // Serialize the function\n    // Get the function string\n    const functionString = value.code;\n    // Index adjustment\n    index = index + 4;\n    // Write string into buffer\n    const codeSize = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n    // Write the size of the string to buffer\n    NumberUtils.setInt32LE(buffer, index, codeSize);\n    // Write end 0\n    buffer[index + 4 + codeSize - 1] = 0;\n    // Write the\n    index = index + codeSize + 4;\n\n    // Serialize the scope value\n    const endIndex = serializeInto(\n      buffer,\n      value.scope,\n      checkKeys,\n      index,\n      depth + 1,\n      serializeFunctions,\n      ignoreUndefined,\n      path\n    );\n    index = endIndex - 1;\n\n    // Writ the total\n    const totalSize = endIndex - startIndex;\n\n    // Write the total size of the object\n    startIndex += NumberUtils.setInt32LE(buffer, startIndex, totalSize);\n    // Write trailing zero\n    buffer[index++] = 0;\n  } else {\n    buffer[index++] = constants.BSON_DATA_CODE;\n    // Number of written bytes\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    const functionString = value.code.toString();\n    // Write the string\n    const size = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n    // Write the size of the string to buffer\n    NumberUtils.setInt32LE(buffer, index, size);\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n  }\n\n  return index;\n}\n\nfunction serializeBinary(buffer: Uint8Array, key: string, value: Binary, index: number) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_BINARY;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Extract the buffer\n  const data = value.buffer;\n  // Calculate size\n  let size = value.position;\n  // Add the deprecated 02 type 4 bytes of size to total\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) size = size + 4;\n  // Write the size of the string to buffer\n  index += NumberUtils.setInt32LE(buffer, index, size);\n  // Write the subtype to the buffer\n  buffer[index++] = value.sub_type;\n\n  // If we have binary type 2 the 4 first bytes are the size\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n    size = size - 4;\n    index += NumberUtils.setInt32LE(buffer, index, size);\n  }\n\n  if (value.sub_type === Binary.SUBTYPE_VECTOR) {\n    validateBinaryVector(value);\n  }\n\n  if (size <= 16) {\n    for (let i = 0; i < size; i++) buffer[index + i] = data[i];\n  } else {\n    buffer.set(data, index);\n  }\n  // Adjust the index\n  index = index + value.position;\n  return index;\n}\n\nfunction serializeSymbol(buffer: Uint8Array, key: string, value: BSONSymbol, index: number) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_SYMBOL;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the string\n  const size = ByteUtils.encodeUTF8Into(buffer, value.value, index + 4) + 1;\n  // Write the size of the string to buffer\n  NumberUtils.setInt32LE(buffer, index, size);\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nfunction serializeDBRef(\n  buffer: Uint8Array,\n  key: string,\n  value: DBRef,\n  index: number,\n  depth: number,\n  serializeFunctions: boolean,\n  path: Set<Document>\n) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_OBJECT;\n  // Number of written bytes\n  const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  let startIndex = index;\n  let output: DBRefLike = {\n    $ref: value.collection || value.namespace, // \"namespace\" was what library 1.x called \"collection\"\n    $id: value.oid\n  };\n\n  if (value.db != null) {\n    output.$db = value.db;\n  }\n\n  output = Object.assign(output, value.fields);\n  const endIndex = serializeInto(\n    buffer,\n    output,\n    false,\n    index,\n    depth + 1,\n    serializeFunctions,\n    true,\n    path\n  );\n\n  // Calculate object size\n  const size = endIndex - startIndex;\n  // Write the size\n  startIndex += NumberUtils.setInt32LE(buffer, index, size);\n  // Set index\n  return endIndex;\n}\n\nexport function serializeInto(\n  buffer: Uint8Array,\n  object: Document,\n  checkKeys: boolean,\n  startingIndex: number,\n  depth: number,\n  serializeFunctions: boolean,\n  ignoreUndefined: boolean,\n  path: Set<Document> | null\n): number {\n  if (path == null) {\n    // We are at the root input\n    if (object == null) {\n      // ONLY the root should turn into an empty document\n      // BSON Empty document has a size of 5 (LE)\n      buffer[0] = 0x05;\n      buffer[1] = 0x00;\n      buffer[2] = 0x00;\n      buffer[3] = 0x00;\n      // All documents end with null terminator\n      buffer[4] = 0x00;\n      return 5;\n    }\n\n    if (Array.isArray(object)) {\n      throw new BSONError('serialize does not support an array as the root input');\n    }\n    if (typeof object !== 'object') {\n      throw new BSONError('serialize does not support non-object as the root input');\n    } else if ('_bsontype' in object && typeof object._bsontype === 'string') {\n      throw new BSONError(`BSON types cannot be serialized as a document`);\n    } else if (\n      isDate(object) ||\n      isRegExp(object) ||\n      isUint8Array(object) ||\n      isAnyArrayBuffer(object)\n    ) {\n      throw new BSONError(`date, regexp, typedarray, and arraybuffer cannot be BSON documents`);\n    }\n\n    path = new Set();\n  }\n\n  // Push the object to the path\n  path.add(object);\n\n  // Start place to serialize into\n  let index = startingIndex + 4;\n\n  // Special case isArray\n  if (Array.isArray(object)) {\n    // Get object keys\n    for (let i = 0; i < object.length; i++) {\n      const key = `${i}`;\n      let value = object[i];\n\n      // Is there an override value\n      if (typeof value?.toBSON === 'function') {\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      const type = typeof value;\n\n      if (value === undefined) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'bigint') {\n        index = serializeBigInt(buffer, key, value, index);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (type === 'object' && value._bsontype == null) {\n        if (value instanceof Date || isDate(value)) {\n          index = serializeDate(buffer, key, value, index);\n        } else if (value instanceof Uint8Array || isUint8Array(value)) {\n          index = serializeBuffer(buffer, key, value, index);\n        } else if (value instanceof RegExp || isRegExp(value)) {\n          index = serializeRegExp(buffer, key, value, index);\n        } else {\n          index = serializeObject(\n            buffer,\n            key,\n            value,\n            index,\n            checkKeys,\n            depth,\n            serializeFunctions,\n            ignoreUndefined,\n            path\n          );\n        }\n      } else if (type === 'object') {\n        if (value[constants.BSON_VERSION_SYMBOL] !== constants.BSON_MAJOR_VERSION) {\n          throw new BSONVersionError();\n        } else if (value._bsontype === 'ObjectId') {\n          index = serializeObjectId(buffer, key, value, index);\n        } else if (value._bsontype === 'Decimal128') {\n          index = serializeDecimal128(buffer, key, value, index);\n        } else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n          index = serializeLong(buffer, key, value, index);\n        } else if (value._bsontype === 'Double') {\n          index = serializeDouble(buffer, key, value, index);\n        } else if (value._bsontype === 'Code') {\n          index = serializeCode(\n            buffer,\n            key,\n            value,\n            index,\n            checkKeys,\n            depth,\n            serializeFunctions,\n            ignoreUndefined,\n            path\n          );\n        } else if (value._bsontype === 'Binary') {\n          index = serializeBinary(buffer, key, value, index);\n        } else if (value._bsontype === 'BSONSymbol') {\n          index = serializeSymbol(buffer, key, value, index);\n        } else if (value._bsontype === 'DBRef') {\n          index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n        } else if (value._bsontype === 'BSONRegExp') {\n          index = serializeBSONRegExp(buffer, key, value, index);\n        } else if (value._bsontype === 'Int32') {\n          index = serializeInt32(buffer, key, value, index);\n        } else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n          index = serializeMinMax(buffer, key, value, index);\n        } else if (typeof value._bsontype !== 'undefined') {\n          throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n        }\n      } else if (type === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index);\n      }\n    }\n  } else if (object instanceof Map || isMap(object)) {\n    const iterator = object.entries();\n    let done = false;\n\n    while (!done) {\n      // Unpack the next entry\n      const entry = iterator.next();\n      done = !!entry.done;\n      // Are we done, then skip and terminate\n      if (done) continue;\n\n      // Get the entry values\n      const key = entry.value ? entry.value[0] : undefined;\n      let value = entry.value ? entry.value[1] : undefined;\n\n      if (typeof value?.toBSON === 'function') {\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      const type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && !ignoreKeys.has(key)) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw new BSONError('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw new BSONError('key ' + key + \" must not start with '$'\");\n          } else if (key.includes('.')) {\n            throw new BSONError('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (value === undefined) {\n        if (ignoreUndefined === false) index = serializeNull(buffer, key, value, index);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'bigint') {\n        index = serializeBigInt(buffer, key, value, index);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (type === 'object' && value._bsontype == null) {\n        if (value instanceof Date || isDate(value)) {\n          index = serializeDate(buffer, key, value, index);\n        } else if (value instanceof Uint8Array || isUint8Array(value)) {\n          index = serializeBuffer(buffer, key, value, index);\n        } else if (value instanceof RegExp || isRegExp(value)) {\n          index = serializeRegExp(buffer, key, value, index);\n        } else {\n          index = serializeObject(\n            buffer,\n            key,\n            value,\n            index,\n            checkKeys,\n            depth,\n            serializeFunctions,\n            ignoreUndefined,\n            path\n          );\n        }\n      } else if (type === 'object') {\n        if (value[constants.BSON_VERSION_SYMBOL] !== constants.BSON_MAJOR_VERSION) {\n          throw new BSONVersionError();\n        } else if (value._bsontype === 'ObjectId') {\n          index = serializeObjectId(buffer, key, value, index);\n        } else if (value._bsontype === 'Decimal128') {\n          index = serializeDecimal128(buffer, key, value, index);\n        } else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n          index = serializeLong(buffer, key, value, index);\n        } else if (value._bsontype === 'Double') {\n          index = serializeDouble(buffer, key, value, index);\n        } else if (value._bsontype === 'Code') {\n          index = serializeCode(\n            buffer,\n            key,\n            value,\n            index,\n            checkKeys,\n            depth,\n            serializeFunctions,\n            ignoreUndefined,\n            path\n          );\n        } else if (value._bsontype === 'Binary') {\n          index = serializeBinary(buffer, key, value, index);\n        } else if (value._bsontype === 'BSONSymbol') {\n          index = serializeSymbol(buffer, key, value, index);\n        } else if (value._bsontype === 'DBRef') {\n          index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n        } else if (value._bsontype === 'BSONRegExp') {\n          index = serializeBSONRegExp(buffer, key, value, index);\n        } else if (value._bsontype === 'Int32') {\n          index = serializeInt32(buffer, key, value, index);\n        } else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n          index = serializeMinMax(buffer, key, value, index);\n        } else if (typeof value._bsontype !== 'undefined') {\n          throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n        }\n      } else if (type === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index);\n      }\n    }\n  } else {\n    if (typeof object?.toBSON === 'function') {\n      // Provided a custom serialization method\n      object = object.toBSON();\n      if (object != null && typeof object !== 'object') {\n        throw new BSONError('toBSON function did not return an object');\n      }\n    }\n\n    // Iterate over all the keys\n    for (const key of Object.keys(object)) {\n      let value = object[key];\n      // Is there an override value\n      if (typeof value?.toBSON === 'function') {\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      const type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && !ignoreKeys.has(key)) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw new BSONError('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw new BSONError('key ' + key + \" must not start with '$'\");\n          } else if (key.includes('.')) {\n            throw new BSONError('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (value === undefined) {\n        if (ignoreUndefined === false) index = serializeNull(buffer, key, value, index);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'bigint') {\n        index = serializeBigInt(buffer, key, value, index);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (type === 'object' && value._bsontype == null) {\n        if (value instanceof Date || isDate(value)) {\n          index = serializeDate(buffer, key, value, index);\n        } else if (value instanceof Uint8Array || isUint8Array(value)) {\n          index = serializeBuffer(buffer, key, value, index);\n        } else if (value instanceof RegExp || isRegExp(value)) {\n          index = serializeRegExp(buffer, key, value, index);\n        } else {\n          index = serializeObject(\n            buffer,\n            key,\n            value,\n            index,\n            checkKeys,\n            depth,\n            serializeFunctions,\n            ignoreUndefined,\n            path\n          );\n        }\n      } else if (type === 'object') {\n        if (value[constants.BSON_VERSION_SYMBOL] !== constants.BSON_MAJOR_VERSION) {\n          throw new BSONVersionError();\n        } else if (value._bsontype === 'ObjectId') {\n          index = serializeObjectId(buffer, key, value, index);\n        } else if (value._bsontype === 'Decimal128') {\n          index = serializeDecimal128(buffer, key, value, index);\n        } else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n          index = serializeLong(buffer, key, value, index);\n        } else if (value._bsontype === 'Double') {\n          index = serializeDouble(buffer, key, value, index);\n        } else if (value._bsontype === 'Code') {\n          index = serializeCode(\n            buffer,\n            key,\n            value,\n            index,\n            checkKeys,\n            depth,\n            serializeFunctions,\n            ignoreUndefined,\n            path\n          );\n        } else if (value._bsontype === 'Binary') {\n          index = serializeBinary(buffer, key, value, index);\n        } else if (value._bsontype === 'BSONSymbol') {\n          index = serializeSymbol(buffer, key, value, index);\n        } else if (value._bsontype === 'DBRef') {\n          index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n        } else if (value._bsontype === 'BSONRegExp') {\n          index = serializeBSONRegExp(buffer, key, value, index);\n        } else if (value._bsontype === 'Int32') {\n          index = serializeInt32(buffer, key, value, index);\n        } else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n          index = serializeMinMax(buffer, key, value, index);\n        } else if (typeof value._bsontype !== 'undefined') {\n          throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n        }\n      } else if (type === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index);\n      }\n    }\n  }\n\n  // Remove the path\n  path.delete(object);\n\n  // Final padding byte for object\n  buffer[index++] = 0x00;\n\n  // Final size\n  const size = index - startingIndex;\n  // Write the size of the object\n  startingIndex += NumberUtils.setInt32LE(buffer, startingIndex, size);\n  return index;\n}\n", "import { Binary } from './binary';\nimport type { Document } from './bson';\nimport { Code } from './code';\nimport {\n  BSON_INT32_MAX,\n  BSON_INT32_MIN,\n  BSON_INT64_MAX,\n  BSON_INT64_MIN,\n  BSON_MAJOR_VERSION,\n  BSON_VERSION_SYMBOL\n} from './constants';\nimport { DBRef, isDBRefLike } from './db_ref';\nimport { Decimal128 } from './decimal128';\nimport { Double } from './double';\nimport { BSONError, BSONRuntimeError, BSONVersionError } from './error';\nimport { Int32 } from './int_32';\nimport { Long } from './long';\nimport { MaxKey } from './max_key';\nimport { MinKey } from './min_key';\nimport { ObjectId } from './objectid';\nimport { isDate, isRegExp, isMap } from './parser/utils';\nimport { BSONRegExp } from './regexp';\nimport { BSONSymbol } from './symbol';\nimport { Timestamp } from './timestamp';\n\n/** @public */\nexport type EJSONOptions = {\n  /**\n   * Output using the Extended JSON v1 spec\n   * @defaultValue `false`\n   */\n  legacy?: boolean;\n  /**\n   * Enable Extended JSON's `relaxed` mode, which attempts to return native JS types where possible, rather than BSON types\n   * @defaultValue `false` */\n  relaxed?: boolean;\n  /**\n   * Enable native bigint support\n   * @defaultValue `false`\n   */\n  useBigInt64?: boolean;\n};\n\n/** @internal */\ntype BSONType =\n  | Binary\n  | Code\n  | DBRef\n  | Decimal128\n  | Double\n  | Int32\n  | Long\n  | MaxKey\n  | MinKey\n  | ObjectId\n  | BSONRegExp\n  | BSONSymbol\n  | Timestamp;\n\nfunction isBSONType(value: unknown): value is BSONType {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    '_bsontype' in value &&\n    typeof value._bsontype === 'string'\n  );\n}\n\n// all the types where we don't need to do any special processing and can just pass the EJSON\n//straight to type.fromExtendedJSON\nconst keysToCodecs = {\n  $oid: ObjectId,\n  $binary: Binary,\n  $uuid: Binary,\n  $symbol: BSONSymbol,\n  $numberInt: Int32,\n  $numberDecimal: Decimal128,\n  $numberDouble: Double,\n  $numberLong: Long,\n  $minKey: MinKey,\n  $maxKey: MaxKey,\n  $regex: BSONRegExp,\n  $regularExpression: BSONRegExp,\n  $timestamp: Timestamp\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction deserializeValue(value: any, options: EJSONOptions = {}) {\n  if (typeof value === 'number') {\n    // TODO(NODE-4377): EJSON js number handling diverges from BSON\n    const in32BitRange = value <= BSON_INT32_MAX && value >= BSON_INT32_MIN;\n    const in64BitRange = value <= BSON_INT64_MAX && value >= BSON_INT64_MIN;\n\n    if (options.relaxed || options.legacy) {\n      return value;\n    }\n\n    if (Number.isInteger(value) && !Object.is(value, -0)) {\n      // interpret as being of the smallest BSON integer type that can represent the number exactly\n      if (in32BitRange) {\n        return new Int32(value);\n      }\n      if (in64BitRange) {\n        if (options.useBigInt64) {\n          // eslint-disable-next-line no-restricted-globals -- This is allowed here as useBigInt64=true\n          return BigInt(value);\n        }\n        return Long.fromNumber(value);\n      }\n    }\n\n    // If the number is a non-integer or out of integer range, should interpret as BSON Double.\n    return new Double(value);\n  }\n\n  // from here on out we're looking for bson types, so bail if its not an object\n  if (value == null || typeof value !== 'object') return value;\n\n  // upgrade deprecated undefined to null\n  if (value.$undefined) return null;\n\n  const keys = Object.keys(value).filter(\n    k => k.startsWith('$') && value[k] != null\n  ) as (keyof typeof keysToCodecs)[];\n  for (let i = 0; i < keys.length; i++) {\n    const c = keysToCodecs[keys[i]];\n    if (c) return c.fromExtendedJSON(value, options);\n  }\n\n  if (value.$date != null) {\n    const d = value.$date;\n    const date = new Date();\n\n    if (options.legacy) {\n      if (typeof d === 'number') date.setTime(d);\n      else if (typeof d === 'string') date.setTime(Date.parse(d));\n      else if (typeof d === 'bigint') date.setTime(Number(d));\n      else throw new BSONRuntimeError(`Unrecognized type for EJSON date: ${typeof d}`);\n    } else {\n      if (typeof d === 'string') date.setTime(Date.parse(d));\n      else if (Long.isLong(d)) date.setTime(d.toNumber());\n      else if (typeof d === 'number' && options.relaxed) date.setTime(d);\n      else if (typeof d === 'bigint') date.setTime(Number(d));\n      else throw new BSONRuntimeError(`Unrecognized type for EJSON date: ${typeof d}`);\n    }\n    return date;\n  }\n\n  if (value.$code != null) {\n    const copy = Object.assign({}, value);\n    if (value.$scope) {\n      copy.$scope = deserializeValue(value.$scope);\n    }\n\n    return Code.fromExtendedJSON(value);\n  }\n\n  if (isDBRefLike(value) || value.$dbPointer) {\n    const v = value.$ref ? value : value.$dbPointer;\n\n    // we run into this in a \"degenerate EJSON\" case (with $id and $ref order flipped)\n    // because of the order JSON.parse goes through the document\n    if (v instanceof DBRef) return v;\n\n    const dollarKeys = Object.keys(v).filter(k => k.startsWith('$'));\n    let valid = true;\n    dollarKeys.forEach(k => {\n      if (['$ref', '$id', '$db'].indexOf(k) === -1) valid = false;\n    });\n\n    // only make DBRef if $ keys are all valid\n    if (valid) return DBRef.fromExtendedJSON(v);\n  }\n\n  return value;\n}\n\ntype EJSONSerializeOptions = EJSONOptions & {\n  seenObjects: { obj: unknown; propertyName: string }[];\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeArray(array: any[], options: EJSONSerializeOptions): any[] {\n  return array.map((v: unknown, index: number) => {\n    options.seenObjects.push({ propertyName: `index ${index}`, obj: null });\n    try {\n      return serializeValue(v, options);\n    } finally {\n      options.seenObjects.pop();\n    }\n  });\n}\n\nfunction getISOString(date: Date) {\n  const isoStr = date.toISOString();\n  // we should only show milliseconds in timestamp if they're non-zero\n  return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + 'Z';\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeValue(value: any, options: EJSONSerializeOptions): any {\n  if (value instanceof Map || isMap(value)) {\n    const obj: Record<string, unknown> = Object.create(null);\n    for (const [k, v] of value) {\n      if (typeof k !== 'string') {\n        throw new BSONError('Can only serialize maps with string keys');\n      }\n      obj[k] = v;\n    }\n\n    return serializeValue(obj, options);\n  }\n\n  if ((typeof value === 'object' || typeof value === 'function') && value !== null) {\n    const index = options.seenObjects.findIndex(entry => entry.obj === value);\n    if (index !== -1) {\n      const props = options.seenObjects.map(entry => entry.propertyName);\n      const leadingPart = props\n        .slice(0, index)\n        .map(prop => `${prop} -> `)\n        .join('');\n      const alreadySeen = props[index];\n      const circularPart =\n        ' -> ' +\n        props\n          .slice(index + 1, props.length - 1)\n          .map(prop => `${prop} -> `)\n          .join('');\n      const current = props[props.length - 1];\n      const leadingSpace = ' '.repeat(leadingPart.length + alreadySeen.length / 2);\n      const dashes = '-'.repeat(\n        circularPart.length + (alreadySeen.length + current.length) / 2 - 1\n      );\n\n      throw new BSONError(\n        'Converting circular structure to EJSON:\\n' +\n          `    ${leadingPart}${alreadySeen}${circularPart}${current}\\n` +\n          `    ${leadingSpace}\\\\${dashes}/`\n      );\n    }\n    options.seenObjects[options.seenObjects.length - 1].obj = value;\n  }\n\n  if (Array.isArray(value)) return serializeArray(value, options);\n\n  if (value === undefined) return null;\n\n  if (value instanceof Date || isDate(value)) {\n    const dateNum = value.getTime(),\n      // is it in year range 1970-9999?\n      inRange = dateNum > -1 && dateNum < 253402318800000;\n\n    if (options.legacy) {\n      return options.relaxed && inRange\n        ? { $date: value.getTime() }\n        : { $date: getISOString(value) };\n    }\n    return options.relaxed && inRange\n      ? { $date: getISOString(value) }\n      : { $date: { $numberLong: value.getTime().toString() } };\n  }\n\n  if (typeof value === 'number' && (!options.relaxed || !isFinite(value))) {\n    if (Number.isInteger(value) && !Object.is(value, -0)) {\n      // interpret as being of the smallest BSON integer type that can represent the number exactly\n      if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n        return { $numberInt: value.toString() };\n      }\n      if (value >= BSON_INT64_MIN && value <= BSON_INT64_MAX) {\n        // TODO(NODE-4377): EJSON js number handling diverges from BSON\n        return { $numberLong: value.toString() };\n      }\n    }\n    return { $numberDouble: Object.is(value, -0) ? '-0.0' : value.toString() };\n  }\n\n  if (typeof value === 'bigint') {\n    /* eslint-disable no-restricted-globals -- This is allowed as we are accepting a bigint as input */\n    if (!options.relaxed) {\n      return { $numberLong: BigInt.asIntN(64, value).toString() };\n    }\n    return Number(BigInt.asIntN(64, value));\n    /* eslint-enable */\n  }\n\n  if (value instanceof RegExp || isRegExp(value)) {\n    let flags = value.flags;\n    if (flags === undefined) {\n      const match = value.toString().match(/[gimuy]*$/);\n      if (match) {\n        flags = match[0];\n      }\n    }\n\n    const rx = new BSONRegExp(value.source, flags);\n    return rx.toExtendedJSON(options);\n  }\n\n  if (value != null && typeof value === 'object') return serializeDocument(value, options);\n  return value;\n}\n\nconst BSON_TYPE_MAPPINGS = {\n  Binary: (o: Binary) => new Binary(o.value(), o.sub_type),\n  Code: (o: Code) => new Code(o.code, o.scope),\n  DBRef: (o: DBRef) => new DBRef(o.collection || o.namespace, o.oid, o.db, o.fields), // \"namespace\" for 1.x library backwards compat\n  Decimal128: (o: Decimal128) => new Decimal128(o.bytes),\n  Double: (o: Double) => new Double(o.value),\n  Int32: (o: Int32) => new Int32(o.value),\n  Long: (\n    o: Long & {\n      low_: number;\n      high_: number;\n      unsigned_: boolean | undefined;\n    }\n  ) =>\n    Long.fromBits(\n      // underscore variants for 1.x backwards compatibility\n      o.low != null ? o.low : o.low_,\n      o.low != null ? o.high : o.high_,\n      o.low != null ? o.unsigned : o.unsigned_\n    ),\n  MaxKey: () => new MaxKey(),\n  MinKey: () => new MinKey(),\n  ObjectId: (o: ObjectId) => new ObjectId(o),\n  BSONRegExp: (o: BSONRegExp) => new BSONRegExp(o.pattern, o.options),\n  BSONSymbol: (o: BSONSymbol) => new BSONSymbol(o.value),\n  Timestamp: (o: Timestamp) => Timestamp.fromBits(o.low, o.high)\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeDocument(doc: any, options: EJSONSerializeOptions) {\n  if (doc == null || typeof doc !== 'object') throw new BSONError('not an object instance');\n\n  const bsontype: BSONType['_bsontype'] = doc._bsontype;\n  if (typeof bsontype === 'undefined') {\n    // It's a regular object. Recursively serialize its property values.\n    const _doc: Document = {};\n    for (const name of Object.keys(doc)) {\n      options.seenObjects.push({ propertyName: name, obj: null });\n      try {\n        const value = serializeValue(doc[name], options);\n        if (name === '__proto__') {\n          Object.defineProperty(_doc, name, {\n            value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        } else {\n          _doc[name] = value;\n        }\n      } finally {\n        options.seenObjects.pop();\n      }\n    }\n    return _doc;\n  } else if (\n    doc != null &&\n    typeof doc === 'object' &&\n    typeof doc._bsontype === 'string' &&\n    doc[BSON_VERSION_SYMBOL] !== BSON_MAJOR_VERSION\n  ) {\n    throw new BSONVersionError();\n  } else if (isBSONType(doc)) {\n    // the \"document\" is really just a BSON type object\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let outDoc: any = doc;\n    if (typeof outDoc.toExtendedJSON !== 'function') {\n      // There's no EJSON serialization function on the object. It's probably an\n      // object created by a previous version of this library (or another library)\n      // that's duck-typing objects to look like they were generated by this library).\n      // Copy the object into this library's version of that type.\n      const mapper = BSON_TYPE_MAPPINGS[doc._bsontype];\n      if (!mapper) {\n        throw new BSONError('Unrecognized or invalid _bsontype: ' + doc._bsontype);\n      }\n      outDoc = mapper(outDoc);\n    }\n\n    // Two BSON types may have nested objects that may need to be serialized too\n    if (bsontype === 'Code' && outDoc.scope) {\n      outDoc = new Code(outDoc.code, serializeValue(outDoc.scope, options));\n    } else if (bsontype === 'DBRef' && outDoc.oid) {\n      outDoc = new DBRef(\n        serializeValue(outDoc.collection, options),\n        serializeValue(outDoc.oid, options),\n        serializeValue(outDoc.db, options),\n        serializeValue(outDoc.fields, options)\n      );\n    }\n\n    return outDoc.toExtendedJSON(options);\n  } else {\n    throw new BSONError('_bsontype must be a string, but was: ' + typeof bsontype);\n  }\n}\n\n/**\n * Parse an Extended JSON string, constructing the JavaScript value or object described by that\n * string.\n *\n * @example\n * ```js\n * const { EJSON } = require('bson');\n * const text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n *\n * // prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\n * console.log(EJSON.parse(text, { relaxed: false }));\n *\n * // prints { int32: 10 }\n * console.log(EJSON.parse(text));\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parse(text: string, options?: EJSONOptions): any {\n  const ejsonOptions = {\n    useBigInt64: options?.useBigInt64 ?? false,\n    relaxed: options?.relaxed ?? true,\n    legacy: options?.legacy ?? false\n  };\n  return JSON.parse(text, (key, value) => {\n    if (key.indexOf('\\x00') !== -1) {\n      throw new BSONError(\n        `BSON Document field names cannot contain null bytes, found: ${JSON.stringify(key)}`\n      );\n    }\n    return deserializeValue(value, ejsonOptions);\n  });\n}\n\n/**\n * Converts a BSON document to an Extended JSON string, optionally replacing values if a replacer\n * function is specified or optionally including only the specified properties if a replacer array\n * is specified.\n *\n * @param value - The value to convert to extended JSON\n * @param replacer - A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string\n * @param space - A String or Number object that's used to insert white space into the output JSON string for readability purposes.\n * @param options - Optional settings\n *\n * @example\n * ```js\n * const { EJSON } = require('bson');\n * const Int32 = require('mongodb').Int32;\n * const doc = { int32: new Int32(10) };\n *\n * // prints '{\"int32\":{\"$numberInt\":\"10\"}}'\n * console.log(EJSON.stringify(doc, { relaxed: false }));\n *\n * // prints '{\"int32\":10}'\n * console.log(EJSON.stringify(doc));\n * ```\n */\nfunction stringify(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  replacer?: (number | string)[] | ((this: any, key: string, value: any) => any) | EJSONOptions,\n  space?: string | number,\n  options?: EJSONOptions\n): string {\n  if (space != null && typeof space === 'object') {\n    options = space;\n    space = 0;\n  }\n  if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n    options = replacer;\n    replacer = undefined;\n    space = 0;\n  }\n  const serializeOptions = Object.assign({ relaxed: true, legacy: false }, options, {\n    seenObjects: [{ propertyName: '(root)', obj: null }]\n  });\n\n  const doc = serializeValue(value, serializeOptions);\n  return JSON.stringify(doc, replacer as Parameters<JSON['stringify']>[1], space);\n}\n\n/**\n * Serializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n *\n * @param value - The object to serialize\n * @param options - Optional settings passed to the `stringify` function\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction EJSONserialize(value: any, options?: EJSONOptions): Document {\n  options = options || {};\n  return JSON.parse(stringify(value, options));\n}\n\n/**\n * Deserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n *\n * @param ejson - The Extended JSON object to deserialize\n * @param options - Optional settings passed to the parse method\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction EJSONdeserialize(ejson: Document, options?: EJSONOptions): any {\n  options = options || {};\n  return parse(JSON.stringify(ejson), options);\n}\n\n/** @public */\nconst EJSON: {\n  parse: typeof parse;\n  stringify: typeof stringify;\n  serialize: typeof EJSONserialize;\n  deserialize: typeof EJSONdeserialize;\n} = Object.create(null);\nEJSON.parse = parse;\nEJSON.stringify = stringify;\nEJSON.serialize = EJSONserialize;\nEJSON.deserialize = EJSONdeserialize;\nObject.freeze(EJSON);\nexport { EJSON };\n", "import { BSONOffsetError } from '../../error';\nimport { NumberUtils } from '../../utils/number_utils';\n\n/**\n * @internal\n *\n * @remarks\n * - This enum is const so the code we produce will inline the numbers\n * - `minKey` is set to 255 so unsigned comparisons succeed\n * - Modify with caution, double check the bundle contains literals\n */\nconst enum BSONElementType {\n  double = 1,\n  string = 2,\n  object = 3,\n  array = 4,\n  binData = 5,\n  undefined = 6,\n  objectId = 7,\n  bool = 8,\n  date = 9,\n  null = 10,\n  regex = 11,\n  dbPointer = 12,\n  javascript = 13,\n  symbol = 14,\n  javascriptWithScope = 15,\n  int = 16,\n  timestamp = 17,\n  long = 18,\n  decimal = 19,\n  minKey = 255,\n  maxKey = 127\n}\n\n/**\n * @public\n * @experimental\n */\nexport type BSONElement = [\n  type: number,\n  nameOffset: number,\n  nameLength: number,\n  offset: number,\n  length: number\n];\n\nfunction getSize(source: Uint8Array, offset: number) {\n  try {\n    return NumberUtils.getNonnegativeInt32LE(source, offset);\n  } catch (cause) {\n    throw new BSONOffsetError('BSON size cannot be negative', offset, { cause });\n  }\n}\n\n/**\n * Searches for null terminator of a BSON element's value (Never the document null terminator)\n * **Does not** bounds check since this should **ONLY** be used within parseToElements which has asserted that `bytes` ends with a `0x00`.\n * So this will at most iterate to the document's terminator and error if that is the offset reached.\n */\nfunction findNull(bytes: Uint8Array, offset: number): number {\n  let nullTerminatorOffset = offset;\n\n  for (; bytes[nullTerminatorOffset] !== 0x00; nullTerminatorOffset++);\n\n  if (nullTerminatorOffset === bytes.length - 1) {\n    // We reached the null terminator of the document, not a value's\n    throw new BSONOffsetError('Null terminator not found', offset);\n  }\n\n  return nullTerminatorOffset;\n}\n\n/**\n * @public\n * @experimental\n */\nexport function parseToElements(\n  bytes: Uint8Array,\n  startOffset: number | null = 0\n): Iterable<BSONElement> {\n  startOffset ??= 0;\n\n  if (bytes.length < 5) {\n    throw new BSONOffsetError(\n      `Input must be at least 5 bytes, got ${bytes.length} bytes`,\n      startOffset\n    );\n  }\n\n  const documentSize = getSize(bytes, startOffset);\n\n  if (documentSize > bytes.length - startOffset) {\n    throw new BSONOffsetError(\n      `Parsed documentSize (${documentSize} bytes) does not match input length (${bytes.length} bytes)`,\n      startOffset\n    );\n  }\n\n  if (bytes[startOffset + documentSize - 1] !== 0x00) {\n    throw new BSONOffsetError('BSON documents must end in 0x00', startOffset + documentSize);\n  }\n\n  const elements: BSONElement[] = [];\n  let offset = startOffset + 4;\n\n  while (offset <= documentSize + startOffset) {\n    const type = bytes[offset];\n    offset += 1;\n\n    if (type === 0) {\n      if (offset - startOffset !== documentSize) {\n        throw new BSONOffsetError(`Invalid 0x00 type byte`, offset);\n      }\n      break;\n    }\n\n    const nameOffset = offset;\n    const nameLength = findNull(bytes, offset) - nameOffset;\n    offset += nameLength + 1;\n\n    let length: number;\n\n    if (\n      type === BSONElementType.double ||\n      type === BSONElementType.long ||\n      type === BSONElementType.date ||\n      type === BSONElementType.timestamp\n    ) {\n      length = 8;\n    } else if (type === BSONElementType.int) {\n      length = 4;\n    } else if (type === BSONElementType.objectId) {\n      length = 12;\n    } else if (type === BSONElementType.decimal) {\n      length = 16;\n    } else if (type === BSONElementType.bool) {\n      length = 1;\n    } else if (\n      type === BSONElementType.null ||\n      type === BSONElementType.undefined ||\n      type === BSONElementType.maxKey ||\n      type === BSONElementType.minKey\n    ) {\n      length = 0;\n    }\n    // Needs a size calculation\n    else if (type === BSONElementType.regex) {\n      length = findNull(bytes, findNull(bytes, offset) + 1) + 1 - offset;\n    } else if (\n      type === BSONElementType.object ||\n      type === BSONElementType.array ||\n      type === BSONElementType.javascriptWithScope\n    ) {\n      length = getSize(bytes, offset);\n    } else if (\n      type === BSONElementType.string ||\n      type === BSONElementType.binData ||\n      type === BSONElementType.dbPointer ||\n      type === BSONElementType.javascript ||\n      type === BSONElementType.symbol\n    ) {\n      length = getSize(bytes, offset) + 4;\n      if (type === BSONElementType.binData) {\n        // binary subtype\n        length += 1;\n      }\n      if (type === BSONElementType.dbPointer) {\n        // dbPointer's objectId\n        length += 12;\n      }\n    } else {\n      throw new BSONOffsetError(\n        `Invalid 0x${type.toString(16).padStart(2, '0')} type byte`,\n        offset\n      );\n    }\n\n    if (length > documentSize) {\n      throw new BSONOffsetError('value reports length larger than document', offset);\n    }\n\n    elements.push([type, nameOffset, nameLength, offset, length]);\n    offset += length;\n  }\n\n  return elements;\n}\n", "import { ByteUtils } from '../../utils/byte_utils';\nimport { NumberUtils } from '../../utils/number_utils';\nimport { type BSONElement, parseToElements } from './parse_to_elements';\n/**\n * @experimental\n * @public\n *\n * A new set of BSON APIs that are currently experimental and not intended for production use.\n */\nexport type OnDemand = {\n  parseToElements: (this: void, bytes: Uint8Array, startOffset?: number) => Iterable<BSONElement>;\n  // Types\n  BSONElement: BSONElement;\n\n  // Utils\n  ByteUtils: ByteUtils;\n  NumberUtils: NumberUtils;\n};\n\n/**\n * @experimental\n * @public\n */\nconst onDemand: OnDemand = Object.create(null);\n\nonDemand.parseToElements = parseToElements;\nonDemand.ByteUtils = ByteUtils;\nonDemand.NumberUtils = NumberUtils;\n\nObject.freeze(onDemand);\n\nexport { onDemand };\n", "import { Binary, UUID } from './binary';\nimport { Code } from './code';\nimport { DBRef } from './db_ref';\nimport { Decimal128 } from './decimal128';\nimport { Double } from './double';\nimport { Int32 } from './int_32';\nimport { Long } from './long';\nimport { MaxKey } from './max_key';\nimport { MinKey } from './min_key';\nimport { ObjectId } from './objectid';\nimport { internalCalculateObjectSize } from './parser/calculate_size';\n// Parts of the parser\nimport { internalDeserialize, type DeserializeOptions } from './parser/deserializer';\nimport { serializeInto, type SerializeOptions } from './parser/serializer';\nimport { BSONRegExp } from './regexp';\nimport { BSONSymbol } from './symbol';\nimport { Timestamp } from './timestamp';\nimport { ByteUtils } from './utils/byte_utils';\nimport { NumberUtils } from './utils/number_utils';\nexport type { UUIDExtended, BinaryExtended, BinaryExtendedLegacy, BinarySequence } from './binary';\nexport type { CodeExtended } from './code';\nexport type { DBRefLike } from './db_ref';\nexport type { Decimal128Extended } from './decimal128';\nexport type { DoubleExtended } from './double';\nexport type { EJSONOptions } from './extended_json';\nexport type { Int32Extended } from './int_32';\nexport type { LongExtended } from './long';\nexport type { MaxKeyExtended } from './max_key';\nexport type { MinKeyExtended } from './min_key';\nexport type { ObjectIdExtended, ObjectIdLike } from './objectid';\nexport type { BSONRegExpExtended, BSONRegExpExtendedLegacy } from './regexp';\nexport type { BSONSymbolExtended } from './symbol';\nexport type { LongWithoutOverrides, TimestampExtended, TimestampOverrides } from './timestamp';\nexport type { LongWithoutOverridesClass } from './timestamp';\nexport type { SerializeOptions, DeserializeOptions };\n\nexport {\n  Code,\n  BSONSymbol,\n  DBRef,\n  Binary,\n  ObjectId,\n  UUID,\n  Long,\n  Timestamp,\n  Double,\n  Int32,\n  MinKey,\n  MaxKey,\n  BSONRegExp,\n  Decimal128\n};\nexport { BSONValue } from './bson_value';\nexport { BSONError, BSONVersionError, BSONRuntimeError, BSONOffsetError } from './error';\nexport { BSONType } from './constants';\nexport { EJSON } from './extended_json';\nexport { onDemand, type OnDemand } from './parser/on_demand/index';\n\n/** @public */\nexport interface Document {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n}\n\n/** @internal */\n// Default Max Size\nconst MAXSIZE = 1024 * 1024 * 17;\n\n// Current Internal Temporary Serialization Buffer\nlet buffer = ByteUtils.allocate(MAXSIZE);\n\n/**\n * Sets the size of the internal serialization buffer.\n *\n * @param size - The desired size for the internal serialization buffer in bytes\n * @public\n */\nexport function setInternalBufferSize(size: number): void {\n  // Resize the internal serialization buffer if needed\n  if (buffer.length < size) {\n    buffer = ByteUtils.allocate(size);\n  }\n}\n\n/**\n * Serialize a Javascript object.\n *\n * @param object - the Javascript object to serialize.\n * @returns Buffer object containing the serialized object.\n * @public\n */\nexport function serialize(object: Document, options: SerializeOptions = {}): Uint8Array {\n  // Unpack the options\n  const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  const minInternalBufferSize =\n    typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n\n  // Resize the internal serialization buffer if needed\n  if (buffer.length < minInternalBufferSize) {\n    buffer = ByteUtils.allocate(minInternalBufferSize);\n  }\n\n  // Attempt to serialize\n  const serializationIndex = serializeInto(\n    buffer,\n    object,\n    checkKeys,\n    0,\n    0,\n    serializeFunctions,\n    ignoreUndefined,\n    null\n  );\n\n  // Create the final buffer\n  const finishedBuffer = ByteUtils.allocateUnsafe(serializationIndex);\n\n  // Copy into the finished buffer\n  finishedBuffer.set(buffer.subarray(0, serializationIndex), 0);\n\n  // Return the buffer\n  return finishedBuffer;\n}\n\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer,\n * useful when pre-allocating the space for serialization.\n *\n * @param object - the Javascript object to serialize.\n * @param finalBuffer - the Buffer you pre-allocated to store the serialized BSON object.\n * @returns the index pointing to the last written byte in the buffer.\n * @public\n */\nexport function serializeWithBufferAndIndex(\n  object: Document,\n  finalBuffer: Uint8Array,\n  options: SerializeOptions = {}\n): number {\n  // Unpack the options\n  const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  const startIndex = typeof options.index === 'number' ? options.index : 0;\n\n  // Attempt to serialize\n  const serializationIndex = serializeInto(\n    buffer,\n    object,\n    checkKeys,\n    0,\n    0,\n    serializeFunctions,\n    ignoreUndefined,\n    null\n  );\n\n  finalBuffer.set(buffer.subarray(0, serializationIndex), startIndex);\n\n  // Return the index\n  return startIndex + serializationIndex - 1;\n}\n\n/**\n * Deserialize data as BSON.\n *\n * @param buffer - the buffer containing the serialized set of BSON documents.\n * @returns returns the deserialized Javascript Object.\n * @public\n */\nexport function deserialize(buffer: Uint8Array, options: DeserializeOptions = {}): Document {\n  return internalDeserialize(ByteUtils.toLocalBufferType(buffer), options);\n}\n\n/** @public */\nexport type CalculateObjectSizeOptions = Pick<\n  SerializeOptions,\n  'serializeFunctions' | 'ignoreUndefined'\n>;\n\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param object - the Javascript object to calculate the BSON byte size for\n * @returns size of BSON object in bytes\n * @public\n */\nexport function calculateObjectSize(\n  object: Document,\n  options: CalculateObjectSizeOptions = {}\n): number {\n  options = options || {};\n\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n\n  return internalCalculateObjectSize(object, serializeFunctions, ignoreUndefined);\n}\n\n/**\n * Deserialize stream data as BSON documents.\n *\n * @param data - the buffer containing the serialized set of BSON documents.\n * @param startIndex - the start index in the data Buffer where the deserialization is to start.\n * @param numberOfDocuments - number of documents to deserialize.\n * @param documents - an array where to store the deserialized documents.\n * @param docStartIndex - the index in the documents array from where to start inserting documents.\n * @param options - additional options used for the deserialization.\n * @returns next index in the buffer after deserialization **x** numbers of documents.\n * @public\n */\nexport function deserializeStream(\n  data: Uint8Array | ArrayBuffer,\n  startIndex: number,\n  numberOfDocuments: number,\n  documents: Document[],\n  docStartIndex: number,\n  options: DeserializeOptions\n): number {\n  const internalOptions = Object.assign(\n    { allowObjectSmallerThanBufferSize: true, index: 0 },\n    options\n  );\n  const bufferData = ByteUtils.toLocalBufferType(data);\n\n  let index = startIndex;\n  // Loop over all documents\n  for (let i = 0; i < numberOfDocuments; i++) {\n    // Find size of the document\n    const size = NumberUtils.getInt32LE(bufferData, index);\n    // Update options with index\n    internalOptions.index = index;\n    // Parse the document at this point\n    documents[docStartIndex + i] = internalDeserialize(bufferData, internalOptions);\n    // Adjust index by the document size\n    index = index + size;\n  }\n\n  // Return object containing end index of parsing and list of documents\n  return index;\n}\n", "/* eslint-disable no-restricted-imports */\nimport { BSON, type DeserializeOptions, type SerializeOptions } from 'bson';\n\nexport {\n  Binary,\n  BSON,\n  BSONError,\n  BSONRegExp,\n  BSONSymbol,\n  BSONType,\n  calculateObjectSize,\n  Code,\n  DBRef,\n  Decimal128,\n  deserialize,\n  type DeserializeOptions,\n  Document,\n  Double,\n  EJSON,\n  EJSONOptions,\n  Int32,\n  Long,\n  MaxKey,\n  MinKey,\n  ObjectId,\n  type ObjectIdLike,\n  serialize,\n  Timestamp,\n  UUID\n} from 'bson';\n\n/** @internal */\nexport type BSONElement = BSON.OnDemand['BSONElement'];\n\nexport function parseToElementsToArray(bytes: Uint8Array, offset?: number): BSONElement[] {\n  const res = BSON.onDemand.parseToElements(bytes, offset);\n  return Array.isArray(res) ? res : [...res];\n}\n\nexport const getInt32LE = BSON.onDemand.NumberUtils.getInt32LE;\nexport const getFloat64LE = BSON.onDemand.NumberUtils.getFloat64LE;\nexport const getBigInt64LE = BSON.onDemand.NumberUtils.getBigInt64LE;\nexport const toUTF8 = BSON.onDemand.ByteUtils.toUTF8;\n\n/**\n * BSON Serialization options.\n * @public\n */\nexport interface BSONSerializeOptions\n  extends Omit<SerializeOptions, 'index'>,\n    Omit<\n      DeserializeOptions,\n      | 'evalFunctions'\n      | 'cacheFunctions'\n      | 'cacheFunctionsCrc32'\n      | 'allowObjectSmallerThanBufferSize'\n      | 'index'\n      | 'validation'\n    > {\n  /**\n   * Enabling the raw option will return a [Node.js Buffer](https://nodejs.org/api/buffer.html)\n   * which is allocated using [allocUnsafe API](https://nodejs.org/api/buffer.html#static-method-bufferallocunsafesize).\n   * See this section from the [Node.js Docs here](https://nodejs.org/api/buffer.html#what-makes-bufferallocunsafe-and-bufferallocunsafeslow-unsafe)\n   * for more detail about what \"unsafe\" refers to in this context.\n   * If you need to maintain your own editable clone of the bytes returned for an extended life time of the process, it is recommended you allocate\n   * your own buffer and clone the contents:\n   *\n   * @example\n   * ```ts\n   * const raw = await collection.findOne({}, { raw: true });\n   * const myBuffer = Buffer.alloc(raw.byteLength);\n   * myBuffer.set(raw, 0);\n   * // Only save and use `myBuffer` beyond this point\n   * ```\n   *\n   * @remarks\n   * Please note there is a known limitation where this option cannot be used at the MongoClient level (see [NODE-3946](https://jira.mongodb.org/browse/NODE-3946)).\n   * It does correctly work at `Db`, `Collection`, and per operation the same as other BSON options work.\n   */\n  raw?: boolean;\n\n  /** Enable utf8 validation when deserializing BSON documents.  Defaults to true. */\n  enableUtf8Validation?: boolean;\n}\n\nexport function pluckBSONSerializeOptions(options: BSONSerializeOptions): BSONSerializeOptions {\n  const {\n    fieldsAsRaw,\n    useBigInt64,\n    promoteValues,\n    promoteBuffers,\n    promoteLongs,\n    serializeFunctions,\n    ignoreUndefined,\n    bsonRegExp,\n    raw,\n    enableUtf8Validation\n  } = options;\n  return {\n    fieldsAsRaw,\n    useBigInt64,\n    promoteValues,\n    promoteBuffers,\n    promoteLongs,\n    serializeFunctions,\n    ignoreUndefined,\n    bsonRegExp,\n    raw,\n    enableUtf8Validation\n  };\n}\n\n/**\n * Merge the given BSONSerializeOptions, preferring options over the parent's options, and\n * substituting defaults for values not set.\n *\n * @internal\n */\nexport function resolveBSONOptions(\n  options?: BSONSerializeOptions,\n  parent?: { bsonOptions?: BSONSerializeOptions }\n): BSONSerializeOptions {\n  const parentOptions = parent?.bsonOptions;\n  return {\n    raw: options?.raw ?? parentOptions?.raw ?? false,\n    useBigInt64: options?.useBigInt64 ?? parentOptions?.useBigInt64 ?? false,\n    promoteLongs: options?.promoteLongs ?? parentOptions?.promoteLongs ?? true,\n    promoteValues: options?.promoteValues ?? parentOptions?.promoteValues ?? true,\n    promoteBuffers: options?.promoteBuffers ?? parentOptions?.promoteBuffers ?? false,\n    ignoreUndefined: options?.ignoreUndefined ?? parentOptions?.ignoreUndefined ?? false,\n    bsonRegExp: options?.bsonRegExp ?? parentOptions?.bsonRegExp ?? false,\n    serializeFunctions: options?.serializeFunctions ?? parentOptions?.serializeFunctions ?? false,\n    fieldsAsRaw: options?.fieldsAsRaw ?? parentOptions?.fieldsAsRaw ?? {},\n    enableUtf8Validation:\n      options?.enableUtf8Validation ?? parentOptions?.enableUtf8Validation ?? true\n  };\n}\n\n/** @internal */\nexport function parseUtf8ValidationOption(options?: { enableUtf8Validation?: boolean }): {\n  utf8: { writeErrors: false } | false;\n} {\n  const enableUtf8Validation = options?.enableUtf8Validation;\n  if (enableUtf8Validation === false) {\n    return { utf8: false };\n  }\n  return { utf8: { writeErrors: false } };\n}\n", "import type { Document } from './bson';\nimport {\n  type ClientBulkWriteError,\n  type ClientBulkWriteResult\n} from './operations/client_bulk_write/common';\nimport type { ServerType } from './sdam/common';\nimport type { TopologyVersion } from './sdam/server_description';\nimport type { TopologyDescription } from './sdam/topology_description';\n\n/** @public */\nexport type AnyError = MongoError | Error;\n\n/**\n * @internal\n * The legacy error message from the server that indicates the node is not a writable primary\n * https://github.com/mongodb/specifications/blob/921232976f9913cf17415b5ef937ee772e45e6ae/source/server-discovery-and-monitoring/server-discovery-and-monitoring.md#not-writable-primary-and-node-is-recovering\n */\nexport const LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE = new RegExp('not master', 'i');\n\n/**\n * @internal\n * The legacy error message from the server that indicates the node is not a primary or secondary\n * https://github.com/mongodb/specifications/blob/921232976f9913cf17415b5ef937ee772e45e6ae/source/server-discovery-and-monitoring/server-discovery-and-monitoring.md#not-writable-primary-and-node-is-recovering\n */\nexport const LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE = new RegExp(\n  'not master or secondary',\n  'i'\n);\n\n/**\n * @internal\n * The error message from the server that indicates the node is recovering\n * https://github.com/mongodb/specifications/blob/921232976f9913cf17415b5ef937ee772e45e6ae/source/server-discovery-and-monitoring/server-discovery-and-monitoring.md#not-writable-primary-and-node-is-recovering\n */\nexport const NODE_IS_RECOVERING_ERROR_MESSAGE = new RegExp('node is recovering', 'i');\n\n/** @internal MongoDB Error Codes */\nexport const MONGODB_ERROR_CODES = Object.freeze({\n  HostUnreachable: 6,\n  HostNotFound: 7,\n  AuthenticationFailed: 18,\n  NetworkTimeout: 89,\n  ShutdownInProgress: 91,\n  PrimarySteppedDown: 189,\n  ExceededTimeLimit: 262,\n  SocketException: 9001,\n  NotWritablePrimary: 10107,\n  InterruptedAtShutdown: 11600,\n  InterruptedDueToReplStateChange: 11602,\n  NotPrimaryNoSecondaryOk: 13435,\n  NotPrimaryOrSecondary: 13436,\n  StaleShardVersion: 63,\n  StaleEpoch: 150,\n  StaleConfig: 13388,\n  RetryChangeStream: 234,\n  FailedToSatisfyReadPreference: 133,\n  CursorNotFound: 43,\n  LegacyNotPrimary: 10058,\n  WriteConcernFailed: 64,\n  NamespaceNotFound: 26,\n  IllegalOperation: 20,\n  MaxTimeMSExpired: 50,\n  UnknownReplWriteConcern: 79,\n  UnsatisfiableWriteConcern: 100,\n  Reauthenticate: 391,\n  ReadConcernMajorityNotAvailableYet: 134\n} as const);\n\n// From spec https://github.com/mongodb/specifications/blob/921232976f9913cf17415b5ef937ee772e45e6ae/source/change-streams/change-streams.md#resumable-error\nexport const GET_MORE_RESUMABLE_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.HostUnreachable,\n  MONGODB_ERROR_CODES.HostNotFound,\n  MONGODB_ERROR_CODES.NetworkTimeout,\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.ExceededTimeLimit,\n  MONGODB_ERROR_CODES.SocketException,\n  MONGODB_ERROR_CODES.NotWritablePrimary,\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk,\n  MONGODB_ERROR_CODES.NotPrimaryOrSecondary,\n  MONGODB_ERROR_CODES.StaleShardVersion,\n  MONGODB_ERROR_CODES.StaleEpoch,\n  MONGODB_ERROR_CODES.StaleConfig,\n  MONGODB_ERROR_CODES.RetryChangeStream,\n  MONGODB_ERROR_CODES.FailedToSatisfyReadPreference,\n  MONGODB_ERROR_CODES.CursorNotFound\n]);\n\n/** @public */\nexport const MongoErrorLabel = Object.freeze({\n  RetryableWriteError: 'RetryableWriteError',\n  TransientTransactionError: 'TransientTransactionError',\n  UnknownTransactionCommitResult: 'UnknownTransactionCommitResult',\n  ResumableChangeStreamError: 'ResumableChangeStreamError',\n  HandshakeError: 'HandshakeError',\n  ResetPool: 'ResetPool',\n  PoolRequstedRetry: 'PoolRequstedRetry',\n  InterruptInUseConnections: 'InterruptInUseConnections',\n  NoWritesPerformed: 'NoWritesPerformed'\n} as const);\n\n/** @public */\nexport type MongoErrorLabel = (typeof MongoErrorLabel)[keyof typeof MongoErrorLabel];\n\n/** @public */\nexport interface ErrorDescription extends Document {\n  message?: string;\n  errmsg?: string;\n  $err?: string;\n  errorLabels?: string[];\n  errInfo?: Document;\n}\n\nfunction isAggregateError(e: unknown): e is Error & { errors: Error[] } {\n  return e != null && typeof e === 'object' && 'errors' in e && Array.isArray(e.errors);\n}\n\n/**\n * @public\n * @category Error\n *\n * @privateRemarks\n * mongodb-client-encryption has a dependency on this error, it uses the constructor with a string argument\n */\nexport class MongoError extends Error {\n  /** @internal */\n  private readonly errorLabelSet: Set<string> = new Set();\n  public get errorLabels(): string[] {\n    return Array.from(this.errorLabelSet);\n  }\n\n  /**\n   * This is a number in MongoServerError and a string in MongoDriverError\n   * @privateRemarks\n   * Define the type override on the subclasses when we can use the override keyword\n   */\n  code?: number | string;\n  topologyVersion?: TopologyVersion;\n  connectionGeneration?: number;\n  override cause?: Error;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: { cause?: Error }) {\n    super(message, options);\n  }\n\n  /** @internal */\n  static buildErrorMessage(e: unknown): string {\n    if (typeof e === 'string') {\n      return e;\n    }\n    if (isAggregateError(e) && e.message.length === 0) {\n      return e.errors.length === 0\n        ? 'AggregateError has an empty errors array. Please check the `cause` property for more information.'\n        : e.errors.map(({ message }) => message).join(', ');\n    }\n\n    return e != null && typeof e === 'object' && 'message' in e && typeof e.message === 'string'\n      ? e.message\n      : 'empty error message';\n  }\n\n  override get name(): string {\n    return 'MongoError';\n  }\n\n  /** Legacy name for server error responses */\n  get errmsg(): string {\n    return this.message;\n  }\n\n  /**\n   * Checks the error to see if it has an error label\n   *\n   * @param label - The error label to check for\n   * @returns returns true if the error has the provided error label\n   */\n  hasErrorLabel(label: string): boolean {\n    return this.errorLabelSet.has(label);\n  }\n\n  addErrorLabel(label: string): void {\n    this.errorLabelSet.add(label);\n  }\n}\n\n/**\n * An error coming from the mongo server\n *\n * @public\n * @category Error\n */\nexport class MongoServerError extends MongoError {\n  /** Raw error result document returned by server. */\n  errorResponse: ErrorDescription;\n  codeName?: string;\n  writeConcernError?: Document;\n  errInfo?: Document;\n  ok?: number;\n  [key: string]: any;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: ErrorDescription) {\n    super(message.message || message.errmsg || message.$err || 'n/a');\n\n    if (message.errorLabels) {\n      for (const label of message.errorLabels) this.addErrorLabel(label);\n    }\n\n    this.errorResponse = message;\n\n    for (const name in message) {\n      if (\n        name !== 'errorLabels' &&\n        name !== 'errmsg' &&\n        name !== 'message' &&\n        name !== 'errorResponse'\n      ) {\n        this[name] = message[name];\n      }\n    }\n  }\n\n  override get name(): string {\n    return 'MongoServerError';\n  }\n}\n\n/**\n * An error generated by the driver\n *\n * @public\n * @category Error\n */\nexport class MongoDriverError extends MongoError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: { cause?: Error }) {\n    super(message, options);\n  }\n\n  override get name(): string {\n    return 'MongoDriverError';\n  }\n}\n\n/**\n * An error generated when the driver API is used incorrectly\n *\n * @privateRemarks\n * Should **never** be directly instantiated\n *\n * @public\n * @category Error\n */\n\nexport class MongoAPIError extends MongoDriverError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: { cause?: Error }) {\n    super(message, options);\n  }\n\n  override get name(): string {\n    return 'MongoAPIError';\n  }\n}\n\n/**\n * An error generated when the driver encounters unexpected input\n * or reaches an unexpected/invalid internal state.\n *\n * @privateRemarks\n * Should **never** be directly instantiated.\n *\n * @public\n * @category Error\n */\nexport class MongoRuntimeError extends MongoDriverError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: { cause?: Error }) {\n    super(message, options);\n  }\n\n  override get name(): string {\n    return 'MongoRuntimeError';\n  }\n}\n\n/**\n * An error generated when a primary server is marked stale, never directly thrown\n *\n * @public\n * @category Error\n */\nexport class MongoStalePrimaryError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: { cause?: Error }) {\n    super(message, options);\n  }\n\n  override get name(): string {\n    return 'MongoStalePrimaryError';\n  }\n}\n\n/**\n * An error generated when a batch command is re-executed after one of the commands in the batch\n * has failed\n *\n * @public\n * @category Error\n */\nexport class MongoBatchReExecutionError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message = 'This batch has already been executed, create new batch to execute') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoBatchReExecutionError';\n  }\n}\n\n/**\n * An error generated when the driver fails to decompress\n * data received from the server.\n *\n * @public\n * @category Error\n */\nexport class MongoDecompressionError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoDecompressionError';\n  }\n}\n\n/**\n * An error thrown when the user attempts to operate on a database or collection through a MongoClient\n * that has not yet successfully called the \"connect\" method\n *\n * @public\n * @category Error\n */\nexport class MongoNotConnectedError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoNotConnectedError';\n  }\n}\n\n/**\n * An error generated when the user makes a mistake in the usage of transactions.\n * (e.g. attempting to commit a transaction with a readPreference other than primary)\n *\n * @public\n * @category Error\n */\nexport class MongoTransactionError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoTransactionError';\n  }\n}\n\n/**\n * An error generated when the user attempts to operate\n * on a session that has expired or has been closed.\n *\n * @public\n * @category Error\n */\nexport class MongoExpiredSessionError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message = 'Cannot use a session that has ended') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoExpiredSessionError';\n  }\n}\n\n/**\n * A error generated when the user attempts to authenticate\n * via Kerberos, but fails to connect to the Kerberos client.\n *\n * @public\n * @category Error\n */\nexport class MongoKerberosError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoKerberosError';\n  }\n}\n\n/**\n * A error generated when the user attempts to authenticate\n * via AWS, but fails\n *\n * @public\n * @category Error\n */\nexport class MongoAWSError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: { cause?: Error }) {\n    super(message, options);\n  }\n\n  override get name(): string {\n    return 'MongoAWSError';\n  }\n}\n\n/**\n * A error generated when the user attempts to authenticate\n * via OIDC callbacks, but fails.\n *\n * @public\n * @category Error\n */\nexport class MongoOIDCError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoOIDCError';\n  }\n}\n\n/**\n * A error generated when the user attempts to authenticate\n * via Azure, but fails.\n *\n * @public\n * @category Error\n */\nexport class MongoAzureError extends MongoOIDCError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoAzureError';\n  }\n}\n\n/**\n * A error generated when the user attempts to authenticate\n * via GCP, but fails.\n *\n * @public\n * @category Error\n */\nexport class MongoGCPError extends MongoOIDCError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoGCPError';\n  }\n}\n\n/**\n * An error indicating that an error occurred when executing the bulk write.\n *\n * @public\n * @category Error\n */\nexport class MongoClientBulkWriteError extends MongoServerError {\n  /**\n   * Write concern errors that occurred while executing the bulk write. This list may have\n   * multiple items if more than one server command was required to execute the bulk write.\n   */\n  writeConcernErrors: Document[];\n  /**\n   * Errors that occurred during the execution of individual write operations. This map will\n   * contain at most one entry if the bulk write was ordered.\n   */\n  writeErrors: Map<number, ClientBulkWriteError>;\n  /**\n   * The results of any successful operations that were performed before the error was\n   * encountered.\n   */\n  partialResult?: ClientBulkWriteResult;\n\n  /**\n   * Initialize the client bulk write error.\n   * @param message - The error message.\n   */\n  constructor(message: ErrorDescription) {\n    super(message);\n    this.writeConcernErrors = [];\n    this.writeErrors = new Map();\n  }\n\n  override get name(): string {\n    return 'MongoClientBulkWriteError';\n  }\n}\n\n/**\n * An error indicating that an error occurred when processing bulk write results.\n *\n * @public\n * @category Error\n */\nexport class MongoClientBulkWriteCursorError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoClientBulkWriteCursorError';\n  }\n}\n\n/**\n * An error indicating that an error occurred on the client when executing a client bulk write.\n *\n * @public\n * @category Error\n */\nexport class MongoClientBulkWriteExecutionError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoClientBulkWriteExecutionError';\n  }\n}\n\n/**\n * An error generated when a ChangeStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nexport class MongoChangeStreamError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoChangeStreamError';\n  }\n}\n\n/**\n * An error thrown when the user calls a function or method not supported on a tailable cursor\n *\n * @public\n * @category Error\n */\nexport class MongoTailableCursorError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message = 'Tailable cursor does not support this operation') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoTailableCursorError';\n  }\n}\n\n/** An error generated when a GridFSStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nexport class MongoGridFSStreamError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoGridFSStreamError';\n  }\n}\n\n/**\n * An error generated when a malformed or invalid chunk is\n * encountered when reading from a GridFSStream.\n *\n * @public\n * @category Error\n */\nexport class MongoGridFSChunkError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoGridFSChunkError';\n  }\n}\n\n/**\n * An error generated when a **parsable** unexpected response comes from the server.\n * This is generally an error where the driver in a state expecting a certain behavior to occur in\n * the next message from MongoDB but it receives something else.\n * This error **does not** represent an issue with wire message formatting.\n *\n * #### Example\n * When an operation fails, it is the driver's job to retry it. It must perform serverSelection\n * again to make sure that it attempts the operation against a server in a good state. If server\n * selection returns a server that does not support retryable operations, this error is used.\n * This scenario is unlikely as retryable support would also have been determined on the first attempt\n * but it is possible the state change could report a selectable server that does not support retries.\n *\n * @public\n * @category Error\n */\nexport class MongoUnexpectedServerResponseError extends MongoRuntimeError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: { cause?: Error }) {\n    super(message, options);\n  }\n\n  override get name(): string {\n    return 'MongoUnexpectedServerResponseError';\n  }\n}\n\n/**\n * @public\n * @category Error\n *\n * The `MongoOperationTimeoutError` class represents an error that occurs when an operation could not be completed within the specified `timeoutMS`.\n * It is generated by the driver in support of the \"client side operation timeout\" feature so inherits from `MongoDriverError`.\n * When `timeoutMS` is enabled `MongoServerError`s relating to `MaxTimeExpired` errors will be converted to `MongoOperationTimeoutError`\n *\n * @example\n * ```ts\n * try {\n *   await blogs.insertOne(blogPost, { timeoutMS: 60_000 })\n * } catch (error) {\n *   if (error instanceof MongoOperationTimeoutError) {\n *     console.log(`Oh no! writer's block!`, error);\n *   }\n * }\n * ```\n */\nexport class MongoOperationTimeoutError extends MongoDriverError {\n  override get name(): string {\n    return 'MongoOperationTimeoutError';\n  }\n}\n\n/**\n * An error thrown when the user attempts to add options to a cursor that has already been\n * initialized\n *\n * @public\n * @category Error\n */\nexport class MongoCursorInUseError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message = 'Cursor is already initialized') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoCursorInUseError';\n  }\n}\n\n/**\n * An error generated when an attempt is made to operate\n * on a closed/closing server.\n *\n * @public\n * @category Error\n */\nexport class MongoServerClosedError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message = 'Server is closed') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoServerClosedError';\n  }\n}\n\n/**\n * An error thrown when an attempt is made to read from a cursor that has been exhausted\n *\n * @public\n * @category Error\n */\nexport class MongoCursorExhaustedError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message?: string) {\n    super(message || 'Cursor is exhausted');\n  }\n\n  override get name(): string {\n    return 'MongoCursorExhaustedError';\n  }\n}\n\n/**\n * An error generated when an attempt is made to operate on a\n * dropped, or otherwise unavailable, database.\n *\n * @public\n * @category Error\n */\nexport class MongoTopologyClosedError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message = 'Topology is closed') {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoTopologyClosedError';\n  }\n}\n\n/** @public */\nexport interface MongoNetworkErrorOptions {\n  /** Indicates the timeout happened before a connection handshake completed */\n  beforeHandshake?: boolean;\n  cause?: Error;\n}\n\n/**\n * An error indicating an issue with the network, including TCP errors and timeouts.\n * @public\n * @category Error\n */\nexport class MongoNetworkError extends MongoError {\n  /** @internal */\n  public readonly beforeHandshake: boolean;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: MongoNetworkErrorOptions) {\n    super(message, { cause: options?.cause });\n    this.beforeHandshake = !!options?.beforeHandshake;\n  }\n\n  override get name(): string {\n    return 'MongoNetworkError';\n  }\n}\n\n/**\n * An error indicating a network timeout occurred\n * @public\n * @category Error\n *\n * @privateRemarks\n * mongodb-client-encryption has a dependency on this error with an instanceof check\n */\nexport class MongoNetworkTimeoutError extends MongoNetworkError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: MongoNetworkErrorOptions) {\n    super(message, options);\n  }\n\n  override get name(): string {\n    return 'MongoNetworkTimeoutError';\n  }\n}\n\n/**\n * An error used when attempting to parse a value (like a connection string)\n * @public\n * @category Error\n */\nexport class MongoParseError extends MongoDriverError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoParseError';\n  }\n}\n\n/**\n * An error generated when the user supplies malformed or unexpected arguments\n * or when a required argument or field is not provided.\n *\n *\n * @public\n * @category Error\n */\nexport class MongoInvalidArgumentError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options?: { cause?: Error }) {\n    super(message, options);\n  }\n\n  override get name(): string {\n    return 'MongoInvalidArgumentError';\n  }\n}\n\n/**\n * An error generated when a feature that is not enabled or allowed for the current server\n * configuration is used\n *\n *\n * @public\n * @category Error\n */\nexport class MongoCompatibilityError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoCompatibilityError';\n  }\n}\n\n/**\n * An error generated when the user fails to provide authentication credentials before attempting\n * to connect to a mongo server instance.\n *\n *\n * @public\n * @category Error\n */\nexport class MongoMissingCredentialsError extends MongoAPIError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name(): string {\n    return 'MongoMissingCredentialsError';\n  }\n}\n\n/**\n * An error generated when a required module or dependency is not present in the local environment\n *\n * @public\n * @category Error\n */\nexport class MongoMissingDependencyError extends MongoAPIError {\n  dependencyName: string;\n\n  /** @remarks This property is assigned in the `Error` constructor. */\n  declare cause: Error;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options: { cause: Error; dependencyName: string }) {\n    super(message, options);\n    this.dependencyName = options.dependencyName;\n  }\n\n  override get name(): string {\n    return 'MongoMissingDependencyError';\n  }\n}\n/**\n * An error signifying a general system issue\n * @public\n * @category Error\n */\nexport class MongoSystemError extends MongoError {\n  /** An optional reason context, such as an error saved during flow of monitoring and selecting servers */\n  reason?: TopologyDescription;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, reason: TopologyDescription) {\n    if (reason && reason.error) {\n      super(MongoError.buildErrorMessage(reason.error.message || reason.error), {\n        cause: reason.error\n      });\n    } else {\n      super(message);\n    }\n\n    if (reason) {\n      this.reason = reason;\n    }\n\n    this.code = reason.error?.code;\n  }\n\n  override get name(): string {\n    return 'MongoSystemError';\n  }\n}\n\n/**\n * An error signifying a client-side server selection error\n * @public\n * @category Error\n */\nexport class MongoServerSelectionError extends MongoSystemError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, reason: TopologyDescription) {\n    super(message, reason);\n  }\n\n  override get name(): string {\n    return 'MongoServerSelectionError';\n  }\n}\n\n/**\n * The type of the result property of MongoWriteConcernError\n * @public\n */\nexport interface WriteConcernErrorResult {\n  writeConcernError: {\n    code: number;\n    errmsg: string;\n    codeName?: string;\n    errInfo?: Document;\n  };\n  ok: number;\n  code?: number;\n  errorLabels?: string[];\n  [x: string | number]: unknown;\n}\n\n/**\n * An error thrown when the server reports a writeConcernError\n * @public\n * @category Error\n */\nexport class MongoWriteConcernError extends MongoServerError {\n  /** The result document */\n  result: Document;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(result: WriteConcernErrorResult) {\n    super({ ...result.writeConcernError, ...result });\n    this.errInfo = result.writeConcernError.errInfo;\n    this.result = result;\n  }\n\n  override get name(): string {\n    return 'MongoWriteConcernError';\n  }\n}\n\n// https://github.com/mongodb/specifications/blob/master/source/retryable-reads/retryable-reads.md#retryable-error\nconst RETRYABLE_READ_ERROR_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.HostUnreachable,\n  MONGODB_ERROR_CODES.HostNotFound,\n  MONGODB_ERROR_CODES.NetworkTimeout,\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.SocketException,\n  MONGODB_ERROR_CODES.NotWritablePrimary,\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk,\n  MONGODB_ERROR_CODES.NotPrimaryOrSecondary,\n  MONGODB_ERROR_CODES.ExceededTimeLimit,\n  MONGODB_ERROR_CODES.ReadConcernMajorityNotAvailableYet\n]);\n\n// see: https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.md#terms\nconst RETRYABLE_WRITE_ERROR_CODES = RETRYABLE_READ_ERROR_CODES;\n\nexport function needsRetryableWriteLabel(\n  error: Error,\n  maxWireVersion: number,\n  serverType: ServerType\n): boolean {\n  // pre-4.4 server, then the driver adds an error label for every valid case\n  // execute operation will only inspect the label, code/message logic is handled here\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n\n  if (error instanceof MongoError) {\n    if (\n      (maxWireVersion >= 9 || isRetryableWriteError(error)) &&\n      !error.hasErrorLabel(MongoErrorLabel.HandshakeError)\n    ) {\n      // If we already have the error label no need to add it again. 4.4+ servers add the label.\n      // In the case where we have a handshake error, need to fall down to the logic checking\n      // the codes.\n      return false;\n    }\n  }\n\n  if (error instanceof MongoWriteConcernError) {\n    if (serverType === 'Mongos' && maxWireVersion < 9) {\n      // use original top-level code from server response\n      return RETRYABLE_WRITE_ERROR_CODES.has(error.result.code ?? 0);\n    }\n    const code = error.result.writeConcernError.code ?? Number(error.code);\n    return RETRYABLE_WRITE_ERROR_CODES.has(Number.isNaN(code) ? 0 : code);\n  }\n\n  if (error instanceof MongoError) {\n    return RETRYABLE_WRITE_ERROR_CODES.has(Number(error.code));\n  }\n\n  const isNotWritablePrimaryError = LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(error.message);\n  if (isNotWritablePrimaryError) {\n    return true;\n  }\n\n  const isNodeIsRecoveringError = NODE_IS_RECOVERING_ERROR_MESSAGE.test(error.message);\n  if (isNodeIsRecoveringError) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isRetryableWriteError(error: MongoError): boolean {\n  return (\n    error.hasErrorLabel(MongoErrorLabel.RetryableWriteError) ||\n    error.hasErrorLabel(MongoErrorLabel.PoolRequstedRetry)\n  );\n}\n\n/** Determines whether an error is something the driver should attempt to retry */\nexport function isRetryableReadError(error: MongoError): boolean {\n  const hasRetryableErrorCode =\n    typeof error.code === 'number' ? RETRYABLE_READ_ERROR_CODES.has(error.code) : false;\n  if (hasRetryableErrorCode) {\n    return true;\n  }\n\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n\n  const isNotWritablePrimaryError = LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(error.message);\n  if (isNotWritablePrimaryError) {\n    return true;\n  }\n\n  const isNodeIsRecoveringError = NODE_IS_RECOVERING_ERROR_MESSAGE.test(error.message);\n  if (isNodeIsRecoveringError) {\n    return true;\n  }\n\n  return false;\n}\n\nconst SDAM_RECOVERING_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotPrimaryOrSecondary\n]);\n\nconst SDAM_NOT_PRIMARY_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.NotWritablePrimary,\n  MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk,\n  MONGODB_ERROR_CODES.LegacyNotPrimary\n]);\n\nconst SDAM_NODE_SHUTTING_DOWN_ERROR_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.ShutdownInProgress\n]);\n\nfunction isRecoveringError(err: MongoError) {\n  if (typeof err.code === 'number') {\n    // If any error code exists, we ignore the error.message\n    return SDAM_RECOVERING_CODES.has(err.code);\n  }\n\n  return (\n    LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE.test(err.message) ||\n    NODE_IS_RECOVERING_ERROR_MESSAGE.test(err.message)\n  );\n}\n\nfunction isNotWritablePrimaryError(err: MongoError) {\n  if (typeof err.code === 'number') {\n    // If any error code exists, we ignore the error.message\n    return SDAM_NOT_PRIMARY_CODES.has(err.code);\n  }\n\n  if (isRecoveringError(err)) {\n    return false;\n  }\n\n  return LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(err.message);\n}\n\nexport function isNodeShuttingDownError(err: MongoError): boolean {\n  return !!(typeof err.code === 'number' && SDAM_NODE_SHUTTING_DOWN_ERROR_CODES.has(err.code));\n}\n\n/**\n * Determines whether SDAM can recover from a given error. If it cannot\n * then the pool will be cleared, and server state will completely reset\n * locally.\n *\n * @see https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.md#not-writable-primary-and-node-is-recovering\n */\nexport function isSDAMUnrecoverableError(error: MongoError): boolean {\n  // NOTE: null check is here for a strictly pre-CMAP world, a timeout or\n  //       close event are considered unrecoverable\n  if (error instanceof MongoParseError || error == null) {\n    return true;\n  }\n\n  return isRecoveringError(error) || isNotWritablePrimaryError(error);\n}\n\nexport function isNetworkTimeoutError(err: MongoError): err is MongoNetworkError {\n  return !!(err instanceof MongoNetworkError && err.message.match(/timed out/));\n}\n\nexport function isResumableError(error?: Error, wireVersion?: number): boolean {\n  if (error == null || !(error instanceof MongoError)) {\n    return false;\n  }\n\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n\n  if (wireVersion != null && wireVersion >= 9) {\n    // DRIVERS-1308: For 4.4 drivers running against 4.4 servers, drivers will add a special case to treat the CursorNotFound error code as resumable\n    if (error.code === MONGODB_ERROR_CODES.CursorNotFound) {\n      return true;\n    }\n    return error.hasErrorLabel(MongoErrorLabel.ResumableChangeStreamError);\n  }\n\n  if (typeof error.code === 'number') {\n    return GET_MORE_RESUMABLE_CODES.has(error.code);\n  }\n\n  return false;\n}\n", "import type { Document } from './bson';\nimport { MongoInvalidArgumentError } from './error';\nimport type { TagSet } from './sdam/server_description';\nimport type { ClientSession } from './sessions';\n\n/** @public */\nexport type ReadPreferenceLike = ReadPreference | ReadPreferenceMode;\n\n/** @public */\nexport const ReadPreferenceMode = Object.freeze({\n  primary: 'primary',\n  primaryPreferred: 'primaryPreferred',\n  secondary: 'secondary',\n  secondaryPreferred: 'secondaryPreferred',\n  nearest: 'nearest'\n} as const);\n\n/** @public */\nexport type ReadPreferenceMode = (typeof ReadPreferenceMode)[keyof typeof ReadPreferenceMode];\n\n/** @public */\nexport interface HedgeOptions {\n  /** Explicitly enable or disable hedged reads. */\n  enabled?: boolean;\n}\n\n/** @public */\nexport interface ReadPreferenceOptions {\n  /** Max secondary read staleness in seconds, Minimum value is 90 seconds.*/\n  maxStalenessSeconds?: number;\n  /** Server mode in which the same query is dispatched in parallel to multiple replica set members. */\n  hedge?: HedgeOptions;\n}\n\n/** @public */\nexport interface ReadPreferenceLikeOptions extends ReadPreferenceOptions {\n  readPreference?:\n    | ReadPreferenceLike\n    | {\n        mode?: ReadPreferenceMode;\n        preference?: ReadPreferenceMode;\n        tags?: TagSet[];\n        maxStalenessSeconds?: number;\n      };\n}\n\n/** @public */\nexport interface ReadPreferenceFromOptions extends ReadPreferenceLikeOptions {\n  session?: ClientSession;\n  readPreferenceTags?: TagSet[];\n  hedge?: HedgeOptions;\n}\n\n/**\n * The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is\n * used to construct connections.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/core/read-preference/\n */\nexport class ReadPreference {\n  mode: ReadPreferenceMode;\n  tags?: TagSet[];\n  hedge?: HedgeOptions;\n  maxStalenessSeconds?: number;\n  minWireVersion?: number;\n\n  public static PRIMARY = ReadPreferenceMode.primary;\n  public static PRIMARY_PREFERRED = ReadPreferenceMode.primaryPreferred;\n  public static SECONDARY = ReadPreferenceMode.secondary;\n  public static SECONDARY_PREFERRED = ReadPreferenceMode.secondaryPreferred;\n  public static NEAREST = ReadPreferenceMode.nearest;\n\n  public static primary = new ReadPreference(ReadPreferenceMode.primary);\n  public static primaryPreferred = new ReadPreference(ReadPreferenceMode.primaryPreferred);\n  public static secondary = new ReadPreference(ReadPreferenceMode.secondary);\n  public static secondaryPreferred = new ReadPreference(ReadPreferenceMode.secondaryPreferred);\n  public static nearest = new ReadPreference(ReadPreferenceMode.nearest);\n\n  /**\n   * @param mode - A string describing the read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n   * @param tags - A tag set used to target reads to members with the specified tag(s). tagSet is not available if using read preference mode primary.\n   * @param options - Additional read preference options\n   */\n  constructor(mode: ReadPreferenceMode, tags?: TagSet[], options?: ReadPreferenceOptions) {\n    if (!ReadPreference.isValid(mode)) {\n      throw new MongoInvalidArgumentError(`Invalid read preference mode ${JSON.stringify(mode)}`);\n    }\n    if (options == null && typeof tags === 'object' && !Array.isArray(tags)) {\n      options = tags;\n      tags = undefined;\n    } else if (tags && !Array.isArray(tags)) {\n      throw new MongoInvalidArgumentError('ReadPreference tags must be an array');\n    }\n\n    this.mode = mode;\n    this.tags = tags;\n    this.hedge = options?.hedge;\n    this.maxStalenessSeconds = undefined;\n    this.minWireVersion = undefined;\n\n    options = options ?? {};\n    if (options.maxStalenessSeconds != null) {\n      if (options.maxStalenessSeconds <= 0) {\n        throw new MongoInvalidArgumentError('maxStalenessSeconds must be a positive integer');\n      }\n\n      this.maxStalenessSeconds = options.maxStalenessSeconds;\n\n      // NOTE: The minimum required wire version is 5 for this read preference. If the existing\n      //       topology has a lower value then a MongoError will be thrown during server selection.\n      this.minWireVersion = 5;\n    }\n\n    if (this.mode === ReadPreference.PRIMARY) {\n      if (this.tags && Array.isArray(this.tags) && this.tags.length > 0) {\n        throw new MongoInvalidArgumentError('Primary read preference cannot be combined with tags');\n      }\n\n      if (this.maxStalenessSeconds) {\n        throw new MongoInvalidArgumentError(\n          'Primary read preference cannot be combined with maxStalenessSeconds'\n        );\n      }\n\n      if (this.hedge) {\n        throw new MongoInvalidArgumentError(\n          'Primary read preference cannot be combined with hedge'\n        );\n      }\n    }\n  }\n\n  // Support the deprecated `preference` property introduced in the porcelain layer\n  get preference(): ReadPreferenceMode {\n    return this.mode;\n  }\n\n  static fromString(mode: string): ReadPreference {\n    return new ReadPreference(mode as ReadPreferenceMode);\n  }\n\n  /**\n   * Construct a ReadPreference given an options object.\n   *\n   * @param options - The options object from which to extract the read preference.\n   */\n  static fromOptions(options?: ReadPreferenceFromOptions): ReadPreference | undefined {\n    if (!options) return;\n    const readPreference =\n      options.readPreference ?? options.session?.transaction.options.readPreference;\n    const readPreferenceTags = options.readPreferenceTags;\n\n    if (readPreference == null) {\n      return;\n    }\n\n    if (typeof readPreference === 'string') {\n      return new ReadPreference(readPreference, readPreferenceTags, {\n        maxStalenessSeconds: options.maxStalenessSeconds,\n        hedge: options.hedge\n      });\n    } else if (!(readPreference instanceof ReadPreference) && typeof readPreference === 'object') {\n      const mode = readPreference.mode || readPreference.preference;\n      if (mode && typeof mode === 'string') {\n        return new ReadPreference(mode, readPreference.tags ?? readPreferenceTags, {\n          maxStalenessSeconds: readPreference.maxStalenessSeconds,\n          hedge: options.hedge\n        });\n      }\n    }\n\n    if (readPreferenceTags) {\n      readPreference.tags = readPreferenceTags;\n    }\n\n    return readPreference as ReadPreference;\n  }\n\n  /**\n   * Replaces options.readPreference with a ReadPreference instance\n   */\n  static translate(options: ReadPreferenceLikeOptions): ReadPreferenceLikeOptions {\n    if (options.readPreference == null) return options;\n    const r = options.readPreference;\n\n    if (typeof r === 'string') {\n      options.readPreference = new ReadPreference(r);\n    } else if (r && !(r instanceof ReadPreference) && typeof r === 'object') {\n      const mode = r.mode || r.preference;\n      if (mode && typeof mode === 'string') {\n        options.readPreference = new ReadPreference(mode, r.tags, {\n          maxStalenessSeconds: r.maxStalenessSeconds\n        });\n      }\n    } else if (!(r instanceof ReadPreference)) {\n      throw new MongoInvalidArgumentError(`Invalid read preference: ${r}`);\n    }\n\n    return options;\n  }\n\n  /**\n   * Validate if a mode is legal\n   *\n   * @param mode - The string representing the read preference mode.\n   */\n  static isValid(mode: string): boolean {\n    const VALID_MODES = new Set([\n      ReadPreference.PRIMARY,\n      ReadPreference.PRIMARY_PREFERRED,\n      ReadPreference.SECONDARY,\n      ReadPreference.SECONDARY_PREFERRED,\n      ReadPreference.NEAREST,\n      null\n    ]);\n\n    return VALID_MODES.has(mode as ReadPreferenceMode);\n  }\n\n  /**\n   * Validate if a mode is legal\n   *\n   * @param mode - The string representing the read preference mode.\n   */\n  isValid(mode?: string): boolean {\n    return ReadPreference.isValid(typeof mode === 'string' ? mode : this.mode);\n  }\n\n  /**\n   * Indicates that this readPreference needs the \"SecondaryOk\" bit when sent over the wire\n   * @see https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/#op-query\n   */\n  secondaryOk(): boolean {\n    const NEEDS_SECONDARYOK = new Set<string>([\n      ReadPreference.PRIMARY_PREFERRED,\n      ReadPreference.SECONDARY,\n      ReadPreference.SECONDARY_PREFERRED,\n      ReadPreference.NEAREST\n    ]);\n\n    return NEEDS_SECONDARYOK.has(this.mode);\n  }\n\n  /**\n   * Check if the two ReadPreferences are equivalent\n   *\n   * @param readPreference - The read preference with which to check equality\n   */\n  equals(readPreference: ReadPreference): boolean {\n    return readPreference.mode === this.mode;\n  }\n\n  /** Return JSON representation */\n  toJSON(): Document {\n    const readPreference = { mode: this.mode } as Document;\n    if (Array.isArray(this.tags)) readPreference.tags = this.tags;\n    if (this.maxStalenessSeconds) readPreference.maxStalenessSeconds = this.maxStalenessSeconds;\n    if (this.hedge) readPreference.hedge = this.hedge;\n    return readPreference;\n  }\n}\n", "import type { Binary, Long, Timestamp } from '../bson';\nimport type { ClientSession } from '../sessions';\nimport type { Topology } from './topology';\n\n// shared state names\nexport const STATE_CLOSING = 'closing';\nexport const STATE_CLOSED = 'closed';\nexport const STATE_CONNECTING = 'connecting';\nexport const STATE_CONNECTED = 'connected';\n\n/**\n * An enumeration of topology types we know about\n * @public\n */\nexport const TopologyType = Object.freeze({\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown',\n  LoadBalanced: 'LoadBalanced'\n} as const);\n\n/** @public */\nexport type TopologyType = (typeof TopologyType)[keyof typeof TopologyType];\n\n/**\n * An enumeration of server types we know about\n * @public\n */\nexport const ServerType = Object.freeze({\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown',\n  LoadBalancer: 'LoadBalancer'\n} as const);\n\n/** @public */\nexport type ServerType = (typeof ServerType)[keyof typeof ServerType];\n\n/**\n * @public\n * Gossiped in component for the cluster time tracking the state of user databases\n * across the cluster. It may optionally include a signature identifying the process that\n * generated such a value.\n */\nexport interface ClusterTime {\n  clusterTime: Timestamp;\n  /** Used to validate the identity of a request or response's ClusterTime. */\n  signature?: {\n    hash: Binary;\n    keyId: Long;\n  };\n}\n\n/** Shared function to determine clusterTime for a given topology or session */\nexport function _advanceClusterTime(\n  entity: Topology | ClientSession,\n  $clusterTime: ClusterTime\n): void {\n  if (entity.clusterTime == null) {\n    entity.clusterTime = $clusterTime;\n  } else {\n    if ($clusterTime.clusterTime.greaterThan(entity.clusterTime.clusterTime)) {\n      entity.clusterTime = $clusterTime;\n    }\n  }\n}\n", "import { MongoCompatibilityError, MongoInvalidArgumentError } from '../error';\nimport { ReadPreference } from '../read_preference';\nimport { ServerType, TopologyType } from './common';\nimport type { ServerDescription, TagSet } from './server_description';\nimport type { TopologyDescription } from './topology_description';\n\n// max staleness constants\nconst IDLE_WRITE_PERIOD = 10000;\nconst SMALLEST_MAX_STALENESS_SECONDS = 90;\n\n//  Minimum version to try writes on secondaries.\nexport const MIN_SECONDARY_WRITE_WIRE_VERSION = 13;\n\n/** @internal */\nexport type ServerSelector = (\n  topologyDescription: TopologyDescription,\n  servers: ServerDescription[],\n  deprioritized?: ServerDescription[]\n) => ServerDescription[];\n\n/**\n * Returns a server selector that selects for writable servers\n */\nexport function writableServerSelector(): ServerSelector {\n  return function writableServer(\n    topologyDescription: TopologyDescription,\n    servers: ServerDescription[]\n  ): ServerDescription[] {\n    return latencyWindowReducer(\n      topologyDescription,\n      servers.filter((s: ServerDescription) => s.isWritable)\n    );\n  };\n}\n\n/**\n * The purpose of this selector is to select the same server, only\n * if it is in a state that it can have commands sent to it.\n */\nexport function sameServerSelector(description?: ServerDescription): ServerSelector {\n  return function sameServerSelector(\n    topologyDescription: TopologyDescription,\n    servers: ServerDescription[]\n  ): ServerDescription[] {\n    if (!description) return [];\n    // Filter the servers to match the provided description only if\n    // the type is not unknown.\n    return servers.filter(sd => {\n      return sd.address === description.address && sd.type !== ServerType.Unknown;\n    });\n  };\n}\n\n/**\n * Returns a server selector that uses a read preference to select a\n * server potentially for a write on a secondary.\n */\nexport function secondaryWritableServerSelector(\n  wireVersion?: number,\n  readPreference?: ReadPreference\n): ServerSelector {\n  // If server version < 5.0, read preference always primary.\n  // If server version >= 5.0...\n  // - If read preference is supplied, use that.\n  // - If no read preference is supplied, use primary.\n  if (\n    !readPreference ||\n    !wireVersion ||\n    (wireVersion && wireVersion < MIN_SECONDARY_WRITE_WIRE_VERSION)\n  ) {\n    return readPreferenceServerSelector(ReadPreference.primary);\n  }\n  return readPreferenceServerSelector(readPreference);\n}\n\n/**\n * Reduces the passed in array of servers by the rules of the \"Max Staleness\" specification\n * found here:\n *\n * @see https://github.com/mongodb/specifications/blob/master/source/max-staleness/max-staleness.md\n *\n * @param readPreference - The read preference providing max staleness guidance\n * @param topologyDescription - The topology description\n * @param servers - The list of server descriptions to be reduced\n * @returns The list of servers that satisfy the requirements of max staleness\n */\nfunction maxStalenessReducer(\n  readPreference: ReadPreference,\n  topologyDescription: TopologyDescription,\n  servers: ServerDescription[]\n): ServerDescription[] {\n  if (readPreference.maxStalenessSeconds == null || readPreference.maxStalenessSeconds < 0) {\n    return servers;\n  }\n\n  const maxStaleness = readPreference.maxStalenessSeconds;\n  const maxStalenessVariance =\n    (topologyDescription.heartbeatFrequencyMS + IDLE_WRITE_PERIOD) / 1000;\n  if (maxStaleness < maxStalenessVariance) {\n    throw new MongoInvalidArgumentError(\n      `Option \"maxStalenessSeconds\" must be at least ${maxStalenessVariance} seconds`\n    );\n  }\n\n  if (maxStaleness < SMALLEST_MAX_STALENESS_SECONDS) {\n    throw new MongoInvalidArgumentError(\n      `Option \"maxStalenessSeconds\" must be at least ${SMALLEST_MAX_STALENESS_SECONDS} seconds`\n    );\n  }\n\n  if (topologyDescription.type === TopologyType.ReplicaSetWithPrimary) {\n    const primary: ServerDescription = Array.from(topologyDescription.servers.values()).filter(\n      primaryFilter\n    )[0];\n\n    return servers.reduce((result: ServerDescription[], server: ServerDescription) => {\n      const stalenessMS =\n        server.lastUpdateTime -\n        server.lastWriteDate -\n        (primary.lastUpdateTime - primary.lastWriteDate) +\n        topologyDescription.heartbeatFrequencyMS;\n\n      const staleness = stalenessMS / 1000;\n      const maxStalenessSeconds = readPreference.maxStalenessSeconds ?? 0;\n      if (staleness <= maxStalenessSeconds) {\n        result.push(server);\n      }\n\n      return result;\n    }, []);\n  }\n\n  if (topologyDescription.type === TopologyType.ReplicaSetNoPrimary) {\n    if (servers.length === 0) {\n      return servers;\n    }\n\n    const sMax = servers.reduce((max: ServerDescription, s: ServerDescription) =>\n      s.lastWriteDate > max.lastWriteDate ? s : max\n    );\n\n    return servers.reduce((result: ServerDescription[], server: ServerDescription) => {\n      const stalenessMS =\n        sMax.lastWriteDate - server.lastWriteDate + topologyDescription.heartbeatFrequencyMS;\n\n      const staleness = stalenessMS / 1000;\n      const maxStalenessSeconds = readPreference.maxStalenessSeconds ?? 0;\n      if (staleness <= maxStalenessSeconds) {\n        result.push(server);\n      }\n\n      return result;\n    }, []);\n  }\n\n  return servers;\n}\n\n/**\n * Determines whether a server's tags match a given set of tags\n *\n * @param tagSet - The requested tag set to match\n * @param serverTags - The server's tags\n */\nfunction tagSetMatch(tagSet: TagSet, serverTags: TagSet) {\n  const keys = Object.keys(tagSet);\n  const serverTagKeys = Object.keys(serverTags);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (serverTagKeys.indexOf(key) === -1 || serverTags[key] !== tagSet[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Reduces a set of server descriptions based on tags requested by the read preference\n *\n * @param readPreference - The read preference providing the requested tags\n * @param servers - The list of server descriptions to reduce\n * @returns The list of servers matching the requested tags\n */\nfunction tagSetReducer(\n  readPreference: ReadPreference,\n  servers: ServerDescription[]\n): ServerDescription[] {\n  if (\n    readPreference.tags == null ||\n    (Array.isArray(readPreference.tags) && readPreference.tags.length === 0)\n  ) {\n    return servers;\n  }\n\n  for (let i = 0; i < readPreference.tags.length; ++i) {\n    const tagSet = readPreference.tags[i];\n    const serversMatchingTagset = servers.reduce(\n      (matched: ServerDescription[], server: ServerDescription) => {\n        if (tagSetMatch(tagSet, server.tags)) matched.push(server);\n        return matched;\n      },\n      []\n    );\n\n    if (serversMatchingTagset.length) {\n      return serversMatchingTagset;\n    }\n  }\n\n  return [];\n}\n\n/**\n * Reduces a list of servers to ensure they fall within an acceptable latency window. This is\n * further specified in the \"Server Selection\" specification, found here:\n *\n * @see https://github.com/mongodb/specifications/blob/master/source/server-selection/server-selection.md\n *\n * @param topologyDescription - The topology description\n * @param servers - The list of servers to reduce\n * @returns The servers which fall within an acceptable latency window\n */\nfunction latencyWindowReducer(\n  topologyDescription: TopologyDescription,\n  servers: ServerDescription[]\n): ServerDescription[] {\n  const low = servers.reduce(\n    (min: number, server: ServerDescription) => Math.min(server.roundTripTime, min),\n    Infinity\n  );\n\n  const high = low + topologyDescription.localThresholdMS;\n  return servers.reduce((result: ServerDescription[], server: ServerDescription) => {\n    if (server.roundTripTime <= high && server.roundTripTime >= low) result.push(server);\n    return result;\n  }, []);\n}\n\n// filters\nfunction primaryFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.RSPrimary;\n}\n\nfunction secondaryFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.RSSecondary;\n}\n\nfunction nearestFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.RSSecondary || server.type === ServerType.RSPrimary;\n}\n\nfunction knownFilter(server: ServerDescription): boolean {\n  return server.type !== ServerType.Unknown;\n}\n\nfunction loadBalancerFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.LoadBalancer;\n}\n\n/**\n * Returns a function which selects servers based on a provided read preference\n *\n * @param readPreference - The read preference to select with\n */\nexport function readPreferenceServerSelector(readPreference: ReadPreference): ServerSelector {\n  if (!readPreference.isValid()) {\n    throw new MongoInvalidArgumentError('Invalid read preference specified');\n  }\n\n  return function readPreferenceServers(\n    topologyDescription: TopologyDescription,\n    servers: ServerDescription[],\n    deprioritized: ServerDescription[] = []\n  ): ServerDescription[] {\n    const commonWireVersion = topologyDescription.commonWireVersion;\n    if (\n      commonWireVersion &&\n      readPreference.minWireVersion &&\n      readPreference.minWireVersion > commonWireVersion\n    ) {\n      throw new MongoCompatibilityError(\n        `Minimum wire version '${readPreference.minWireVersion}' required, but found '${commonWireVersion}'`\n      );\n    }\n\n    if (topologyDescription.type === TopologyType.LoadBalanced) {\n      return servers.filter(loadBalancerFilter);\n    }\n\n    if (topologyDescription.type === TopologyType.Unknown) {\n      return [];\n    }\n\n    if (topologyDescription.type === TopologyType.Single) {\n      return latencyWindowReducer(topologyDescription, servers.filter(knownFilter));\n    }\n\n    if (topologyDescription.type === TopologyType.Sharded) {\n      const filtered = servers.filter(server => {\n        return !deprioritized.includes(server);\n      });\n      const selectable = filtered.length > 0 ? filtered : deprioritized;\n      return latencyWindowReducer(topologyDescription, selectable.filter(knownFilter));\n    }\n\n    const mode = readPreference.mode;\n    if (mode === ReadPreference.PRIMARY) {\n      return servers.filter(primaryFilter);\n    }\n\n    if (mode === ReadPreference.PRIMARY_PREFERRED) {\n      const result = servers.filter(primaryFilter);\n      if (result.length) {\n        return result;\n      }\n    }\n\n    const filter = mode === ReadPreference.NEAREST ? nearestFilter : secondaryFilter;\n    const selectedServers = latencyWindowReducer(\n      topologyDescription,\n      tagSetReducer(\n        readPreference,\n        maxStalenessReducer(readPreference, topologyDescription, servers.filter(filter))\n      )\n    );\n\n    if (mode === ReadPreference.SECONDARY_PREFERRED && selectedServers.length === 0) {\n      return servers.filter(primaryFilter);\n    }\n\n    return selectedServers;\n  };\n}\n", "export const MIN_SUPPORTED_SERVER_VERSION = '4.0';\nexport const MAX_SUPPORTED_SERVER_VERSION = '8.0';\nexport const MIN_SUPPORTED_WIRE_VERSION = 7;\nexport const MAX_SUPPORTED_WIRE_VERSION = 25;\nexport const MIN_SUPPORTED_QE_WIRE_VERSION = 21;\nexport const MIN_SUPPORTED_QE_SERVER_VERSION = '7.0';\nexport const OP_REPLY = 1;\nexport const OP_UPDATE = 2001;\nexport const OP_INSERT = 2002;\nexport const OP_QUERY = 2004;\nexport const OP_DELETE = 2006;\nexport const OP_COMPRESSED = 2012;\nexport const OP_MSG = 2013;\n", "/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\nexport const SYSTEM_NAMESPACE_COLLECTION = 'system.namespaces';\nexport const SYSTEM_INDEX_COLLECTION = 'system.indexes';\nexport const SYSTEM_PROFILE_COLLECTION = 'system.profile';\nexport const SYSTEM_USER_COLLECTION = 'system.users';\nexport const SYSTEM_COMMAND_COLLECTION = '$cmd';\nexport const SYSTEM_JS_COLLECTION = 'system.js';\n\n// events\nexport const ERROR = 'error' as const;\nexport const TIMEOUT = 'timeout' as const;\nexport const CLOSE = 'close' as const;\nexport const OPEN = 'open' as const;\nexport const CONNECT = 'connect' as const;\nexport const CLOSED = 'closed' as const;\nexport const ENDED = 'ended' as const;\nexport const MESSAGE = 'message' as const;\nexport const PINNED = 'pinned' as const;\nexport const UNPINNED = 'unpinned' as const;\nexport const DESCRIPTION_RECEIVED = 'descriptionReceived';\n/** @internal */\nexport const SERVER_OPENING = 'serverOpening' as const;\n/** @internal */\nexport const SERVER_CLOSED = 'serverClosed' as const;\n/** @internal */\nexport const SERVER_DESCRIPTION_CHANGED = 'serverDescriptionChanged' as const;\n/** @internal */\nexport const TOPOLOGY_OPENING = 'topologyOpening' as const;\n/** @internal */\nexport const TOPOLOGY_CLOSED = 'topologyClosed' as const;\n/** @internal */\nexport const TOPOLOGY_DESCRIPTION_CHANGED = 'topologyDescriptionChanged' as const;\n/** @internal */\nexport const SERVER_SELECTION_STARTED = 'serverSelectionStarted' as const;\n/** @internal */\nexport const SERVER_SELECTION_FAILED = 'serverSelectionFailed' as const;\n/** @internal */\nexport const SERVER_SELECTION_SUCCEEDED = 'serverSelectionSucceeded' as const;\n/** @internal */\nexport const WAITING_FOR_SUITABLE_SERVER = 'waitingForSuitableServer' as const;\n/** @internal */\nexport const CONNECTION_POOL_CREATED = 'connectionPoolCreated' as const;\n/** @internal */\nexport const CONNECTION_POOL_CLOSED = 'connectionPoolClosed' as const;\n/** @internal */\nexport const CONNECTION_POOL_CLEARED = 'connectionPoolCleared' as const;\n/** @internal */\nexport const CONNECTION_POOL_READY = 'connectionPoolReady' as const;\n/** @internal */\nexport const CONNECTION_CREATED = 'connectionCreated' as const;\n/** @internal */\nexport const CONNECTION_READY = 'connectionReady' as const;\n/** @internal */\nexport const CONNECTION_CLOSED = 'connectionClosed' as const;\n/** @internal */\nexport const CONNECTION_CHECK_OUT_STARTED = 'connectionCheckOutStarted' as const;\n/** @internal */\nexport const CONNECTION_CHECK_OUT_FAILED = 'connectionCheckOutFailed' as const;\n/** @internal */\nexport const CONNECTION_CHECKED_OUT = 'connectionCheckedOut' as const;\n/** @internal */\nexport const CONNECTION_CHECKED_IN = 'connectionCheckedIn' as const;\nexport const CLUSTER_TIME_RECEIVED = 'clusterTimeReceived' as const;\n/** @internal */\nexport const COMMAND_STARTED = 'commandStarted' as const;\n/** @internal */\nexport const COMMAND_SUCCEEDED = 'commandSucceeded' as const;\n/** @internal */\nexport const COMMAND_FAILED = 'commandFailed' as const;\n/** @internal */\nexport const SERVER_HEARTBEAT_STARTED = 'serverHeartbeatStarted' as const;\n/** @internal */\nexport const SERVER_HEARTBEAT_SUCCEEDED = 'serverHeartbeatSucceeded' as const;\n/** @internal */\nexport const SERVER_HEARTBEAT_FAILED = 'serverHeartbeatFailed' as const;\nexport const RESPONSE = 'response' as const;\nexport const MORE = 'more' as const;\nexport const INIT = 'init' as const;\nexport const CHANGE = 'change' as const;\nexport const END = 'end' as const;\nexport const RESUME_TOKEN_CHANGED = 'resumeTokenChanged' as const;\n\n/** @public */\nexport const HEARTBEAT_EVENTS = Object.freeze([\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED,\n  SERVER_HEARTBEAT_FAILED\n] as const);\n\n/** @public */\nexport const CMAP_EVENTS = Object.freeze([\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_READY,\n  CONNECTION_CLOSED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CHECKED_IN\n] as const);\n\n/** @public */\nexport const TOPOLOGY_EVENTS = Object.freeze([\n  SERVER_OPENING,\n  SERVER_CLOSED,\n  SERVER_DESCRIPTION_CHANGED,\n  TOPOLOGY_OPENING,\n  TOPOLOGY_CLOSED,\n  TOPOLOGY_DESCRIPTION_CHANGED,\n  ERROR,\n  TIMEOUT,\n  CLOSE\n] as const);\n\n/** @public */\nexport const APM_EVENTS = Object.freeze([\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  COMMAND_FAILED\n] as const);\n\n/**\n * All events that we relay to the `Topology`\n * @internal\n */\nexport const SERVER_RELAY_EVENTS = Object.freeze([\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED,\n  SERVER_HEARTBEAT_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  COMMAND_FAILED,\n  ...CMAP_EVENTS\n] as const);\n\n/**\n * All events we listen to from `Server` instances, but do not forward to the client\n * @internal\n */\nexport const LOCAL_SERVER_EVENTS = Object.freeze([\n  CONNECT,\n  DESCRIPTION_RECEIVED,\n  CLOSED,\n  ENDED\n] as const);\n\n/** @public */\nexport const MONGO_CLIENT_EVENTS = Object.freeze([\n  ...CMAP_EVENTS,\n  ...APM_EVENTS,\n  ...TOPOLOGY_EVENTS,\n  ...HEARTBEAT_EVENTS\n] as const);\n\n/**\n * @internal\n * The legacy hello command that was deprecated in MongoDB 5.0.\n */\nexport const LEGACY_HELLO_COMMAND = 'ismaster';\n\n/**\n * @internal\n * The legacy hello command that was deprecated in MongoDB 5.0.\n */\nexport const LEGACY_HELLO_COMMAND_CAMEL_CASE = 'isMaster';\n\n// Typescript errors if we index objects with `Symbol.for(...)`, so\n// to avoid TS errors we pull them out into variables.  Then we can type\n// the objects (and class) that we expect to see them on and prevent TS\n// errors.\n/** @internal */\nexport const kDecorateResult = Symbol.for('@@mdb.decorateDecryptionResult');\n/** @internal */\nexport const kDecoratedKeys = Symbol.for('@@mdb.decryptedKeys');\n", "import type { Document } from './bson';\n\n/** @public */\nexport const ReadConcernLevel = Object.freeze({\n  local: 'local',\n  majority: 'majority',\n  linearizable: 'linearizable',\n  available: 'available',\n  snapshot: 'snapshot'\n} as const);\n\n/** @public */\nexport type ReadConcernLevel = (typeof ReadConcernLevel)[keyof typeof ReadConcernLevel];\n\n/** @public */\nexport type ReadConcernLike = ReadConcern | { level: ReadConcernLevel } | ReadConcernLevel;\n\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/read-concern/index.html\n */\nexport class ReadConcern {\n  level: ReadConcernLevel | string;\n\n  /** Constructs a ReadConcern from the read concern level.*/\n  constructor(level: ReadConcernLevel) {\n    /**\n     * A spec test exists that allows level to be any string.\n     * \"invalid readConcern with out stage\"\n     * @see ./test/spec/crud/v2/aggregate-out-readConcern.json\n     * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.md#unknown-levels-and-additional-options-for-string-based-readconcerns\n     */\n    this.level = ReadConcernLevel[level] ?? level;\n  }\n\n  /**\n   * Construct a ReadConcern given an options object.\n   *\n   * @param options - The options object from which to extract the write concern.\n   */\n  static fromOptions(options?: {\n    readConcern?: ReadConcernLike;\n    level?: ReadConcernLevel;\n  }): ReadConcern | undefined {\n    if (options == null) {\n      return;\n    }\n\n    if (options.readConcern) {\n      const { readConcern } = options;\n      if (readConcern instanceof ReadConcern) {\n        return readConcern;\n      } else if (typeof readConcern === 'string') {\n        return new ReadConcern(readConcern);\n      } else if ('level' in readConcern && readConcern.level) {\n        return new ReadConcern(readConcern.level);\n      }\n    }\n\n    if (options.level) {\n      return new ReadConcern(options.level);\n    }\n    return;\n  }\n\n  static get MAJORITY(): 'majority' {\n    return ReadConcernLevel.majority;\n  }\n\n  static get AVAILABLE(): 'available' {\n    return ReadConcernLevel.available;\n  }\n\n  static get LINEARIZABLE(): 'linearizable' {\n    return ReadConcernLevel.linearizable;\n  }\n\n  static get SNAPSHOT(): 'snapshot' {\n    return ReadConcernLevel.snapshot;\n  }\n\n  toJSON(): Document {\n    return { level: this.level };\n  }\n}\n", "import {\n  Binary,\n  type BSONElement,\n  BSONError,\n  BSONType,\n  deserialize,\n  type DeserializeOptions,\n  getBigInt64LE,\n  getFloat64LE,\n  getInt32LE,\n  ObjectId,\n  parseToElementsToArray,\n  Timestamp,\n  toUTF8\n} from '../../../bson';\n\n// eslint-disable-next-line no-restricted-syntax\nconst enum BSONElementOffset {\n  type = 0,\n  nameOffset = 1,\n  nameLength = 2,\n  offset = 3,\n  length = 4\n}\n\n/** @internal */\nexport type JSTypeOf = {\n  [BSONType.null]: null;\n  [BSONType.undefined]: null;\n  [BSONType.double]: number;\n  [BSONType.int]: number;\n  [BSONType.long]: bigint;\n  [BSONType.timestamp]: Timestamp;\n  [BSONType.binData]: Binary;\n  [BSONType.bool]: boolean;\n  [BSONType.objectId]: ObjectId;\n  [BSONType.string]: string;\n  [BSONType.date]: Date;\n  [BSONType.object]: OnDemandDocument;\n  [BSONType.array]: OnDemandDocument;\n};\n\n/** @internal */\ntype CachedBSONElement = { element: BSONElement; value: any | undefined };\n\n/**\n * @internal\n *\n * Options for `OnDemandDocument.toObject()`. Validation is required to ensure\n * that callers provide utf8 validation options. */\nexport type OnDemandDocumentDeserializeOptions = Omit<DeserializeOptions, 'validation'> &\n  Required<Pick<DeserializeOptions, 'validation'>>;\n\n/** @internal */\nexport class OnDemandDocument {\n  /**\n   * Maps JS strings to elements and jsValues for speeding up subsequent lookups.\n   * - If `false` then name does not exist in the BSON document\n   * - If `CachedBSONElement` instance name exists\n   * - If `cache[name].value == null` jsValue has not yet been parsed\n   *   - Null/Undefined values do not get cached because they are zero-length values.\n   */\n  private readonly cache: Record<string, CachedBSONElement | false | undefined> =\n    Object.create(null);\n  /** Caches the index of elements that have been named */\n  private readonly indexFound: Record<number, boolean> = Object.create(null);\n\n  /** All bson elements in this document */\n  private readonly elements: ReadonlyArray<BSONElement>;\n\n  constructor(\n    /** BSON bytes, this document begins at offset */\n    protected readonly bson: Uint8Array,\n    /** The start of the document */\n    private readonly offset = 0,\n    /** If this is an embedded document, indicates if this was a BSON array */\n    public readonly isArray = false,\n    /** If elements was already calculated */\n    elements?: BSONElement[]\n  ) {\n    this.elements = elements ?? parseToElementsToArray(this.bson, offset);\n  }\n\n  /** Only supports basic latin strings */\n  private isElementName(name: string, element: BSONElement): boolean {\n    const nameLength = element[BSONElementOffset.nameLength];\n    const nameOffset = element[BSONElementOffset.nameOffset];\n\n    if (name.length !== nameLength) return false;\n\n    const nameEnd = nameOffset + nameLength;\n    for (\n      let byteIndex = nameOffset, charIndex = 0;\n      charIndex < name.length && byteIndex < nameEnd;\n      charIndex++, byteIndex++\n    ) {\n      if (this.bson[byteIndex] !== name.charCodeAt(charIndex)) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Seeks into the elements array for an element matching the given name.\n   *\n   * @remarks\n   * Caching:\n   * - Caches the existence of a property making subsequent look ups for non-existent properties return immediately\n   * - Caches names mapped to elements to avoid reiterating the array and comparing the name again\n   * - Caches the index at which an element has been found to prevent rechecking against elements already determined to belong to another name\n   *\n   * @param name - a basic latin string name of a BSON element\n   * @returns\n   */\n  private getElement(name: string | number): CachedBSONElement | null {\n    const cachedElement = this.cache[name];\n    if (cachedElement === false) return null;\n\n    if (cachedElement != null) {\n      return cachedElement;\n    }\n\n    if (typeof name === 'number') {\n      if (this.isArray) {\n        if (name < this.elements.length) {\n          const element = this.elements[name];\n          const cachedElement = { element, value: undefined };\n          this.cache[name] = cachedElement;\n          this.indexFound[name] = true;\n          return cachedElement;\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n\n    for (let index = 0; index < this.elements.length; index++) {\n      const element = this.elements[index];\n\n      // skip this element if it has already been associated with a name\n      if (!(index in this.indexFound) && this.isElementName(name, element)) {\n        const cachedElement = { element, value: undefined };\n        this.cache[name] = cachedElement;\n        this.indexFound[index] = true;\n        return cachedElement;\n      }\n    }\n\n    this.cache[name] = false;\n    return null;\n  }\n\n  /**\n   * Translates BSON bytes into a javascript value. Checking `as` against the BSON element's type\n   * this methods returns the small subset of BSON types that the driver needs to function.\n   *\n   * @remarks\n   * - BSONType.null and BSONType.undefined always return null\n   * - If the type requested does not match this returns null\n   *\n   * @param element - The element to revive to a javascript value\n   * @param as - A type byte expected to be returned\n   */\n  private toJSValue<T extends keyof JSTypeOf>(element: BSONElement, as: T): JSTypeOf[T];\n  private toJSValue(element: BSONElement, as: keyof JSTypeOf): any {\n    const type = element[BSONElementOffset.type];\n    const offset = element[BSONElementOffset.offset];\n    const length = element[BSONElementOffset.length];\n\n    if (as !== type) {\n      return null;\n    }\n\n    switch (as) {\n      case BSONType.null:\n      case BSONType.undefined:\n        return null;\n      case BSONType.double:\n        return getFloat64LE(this.bson, offset);\n      case BSONType.int:\n        return getInt32LE(this.bson, offset);\n      case BSONType.long:\n        return getBigInt64LE(this.bson, offset);\n      case BSONType.bool:\n        return Boolean(this.bson[offset]);\n      case BSONType.objectId:\n        return new ObjectId(this.bson.subarray(offset, offset + 12));\n      case BSONType.timestamp:\n        return new Timestamp(getBigInt64LE(this.bson, offset));\n      case BSONType.string:\n        return toUTF8(this.bson, offset + 4, offset + length - 1, false);\n      case BSONType.binData: {\n        const totalBinarySize = getInt32LE(this.bson, offset);\n        const subType = this.bson[offset + 4];\n\n        if (subType === 2) {\n          const subType2BinarySize = getInt32LE(this.bson, offset + 1 + 4);\n          if (subType2BinarySize < 0)\n            throw new BSONError('Negative binary type element size found for subtype 0x02');\n          if (subType2BinarySize > totalBinarySize - 4)\n            throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n          if (subType2BinarySize < totalBinarySize - 4)\n            throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n          return new Binary(\n            this.bson.subarray(offset + 1 + 4 + 4, offset + 1 + 4 + 4 + subType2BinarySize),\n            2\n          );\n        }\n\n        return new Binary(\n          this.bson.subarray(offset + 1 + 4, offset + 1 + 4 + totalBinarySize),\n          subType\n        );\n      }\n      case BSONType.date:\n        // Pretend this is correct.\n        return new Date(Number(getBigInt64LE(this.bson, offset)));\n\n      case BSONType.object:\n        return new OnDemandDocument(this.bson, offset);\n      case BSONType.array:\n        return new OnDemandDocument(this.bson, offset, true);\n\n      default:\n        throw new BSONError(`Unsupported BSON type: ${as}`);\n    }\n  }\n\n  /**\n   * Returns the number of elements in this BSON document\n   */\n  public size() {\n    return this.elements.length;\n  }\n\n  /**\n   * Checks for the existence of an element by name.\n   *\n   * @remarks\n   * Uses `getElement` with the expectation that will populate caches such that a `has` call\n   * followed by a `getElement` call will not repeat the cost paid by the first look up.\n   *\n   * @param name - element name\n   */\n  public has(name: string): boolean {\n    const cachedElement = this.cache[name];\n    if (cachedElement === false) return false;\n    if (cachedElement != null) return true;\n    return this.getElement(name) != null;\n  }\n\n  /**\n   * Turns BSON element with `name` into a javascript value.\n   *\n   * @typeParam T - must be one of the supported BSON types determined by `JSTypeOf` this will determine the return type of this function.\n   * @param name - the element name\n   * @param as - the bson type expected\n   * @param required - whether or not the element is expected to exist, if true this function will throw if it is not present\n   */\n  public get<const T extends keyof JSTypeOf>(\n    name: string | number,\n    as: T,\n    required?: boolean | undefined\n  ): JSTypeOf[T] | null;\n\n  /** `required` will make `get` throw if name does not exist or is null/undefined */\n  public get<const T extends keyof JSTypeOf>(\n    name: string | number,\n    as: T,\n    required: true\n  ): JSTypeOf[T];\n\n  public get<const T extends keyof JSTypeOf>(\n    name: string | number,\n    as: T,\n    required?: boolean\n  ): JSTypeOf[T] | null {\n    const element = this.getElement(name);\n    if (element == null) {\n      if (required === true) {\n        throw new BSONError(`BSON element \"${name}\" is missing`);\n      } else {\n        return null;\n      }\n    }\n\n    if (element.value == null) {\n      const value = this.toJSValue(element.element, as);\n      if (value == null) {\n        if (required === true) {\n          throw new BSONError(`BSON element \"${name}\" is missing`);\n        } else {\n          return null;\n        }\n      }\n      // It is important to never store null\n      element.value = value;\n    }\n\n    return element.value;\n  }\n\n  /**\n   * Supports returning int, double, long, and bool as javascript numbers\n   *\n   * @remarks\n   * **NOTE:**\n   * - Use this _only_ when you believe the potential precision loss of an int64 is acceptable\n   * - This method does not cache the result as Longs or booleans would be stored incorrectly\n   *\n   * @param name - element name\n   * @param required - throws if name does not exist\n   */\n  public getNumber<const Req extends boolean = false>(\n    name: string,\n    required?: Req\n  ): Req extends true ? number : number | null;\n  public getNumber(name: string, required: boolean): number | null {\n    const maybeBool = this.get(name, BSONType.bool);\n    const bool = maybeBool == null ? null : maybeBool ? 1 : 0;\n\n    const maybeLong = this.get(name, BSONType.long);\n    const long = maybeLong == null ? null : Number(maybeLong);\n\n    const result = bool ?? long ?? this.get(name, BSONType.int) ?? this.get(name, BSONType.double);\n\n    if (required === true && result == null) {\n      throw new BSONError(`BSON element \"${name}\" is missing`);\n    }\n\n    return result;\n  }\n\n  /**\n   * Deserialize this object, DOES NOT cache result so avoid multiple invocations\n   * @param options - BSON deserialization options\n   */\n  public toObject(options?: OnDemandDocumentDeserializeOptions): Record<string, any> {\n    return deserialize(this.bson, {\n      ...options,\n      index: this.offset,\n      allowObjectSmallerThanBufferSize: true\n    });\n  }\n\n  /** Returns this document's bytes only */\n  toBytes() {\n    const size = getInt32LE(this.bson, this.offset);\n    return this.bson.subarray(this.offset, this.offset + size);\n  }\n}\n", "import {\n  type BSONElement,\n  type BSONSerializeOptions,\n  BSONType,\n  type DeserializeOptions,\n  type Document,\n  Long,\n  parseToElementsToArray,\n  parseUtf8ValidationOption,\n  pluckBSONSerializeOptions,\n  type Timestamp\n} from '../../bson';\nimport { MONGODB_ERROR_CODES, MongoUnexpectedServerResponseError } from '../../error';\nimport { type ClusterTime } from '../../sdam/common';\nimport { decorateDecryptionResult, ns } from '../../utils';\nimport {\n  type JSTypeOf,\n  OnDemandDocument,\n  type OnDemandDocumentDeserializeOptions\n} from './on_demand/document';\n\n// eslint-disable-next-line no-restricted-syntax\nconst enum BSONElementOffset {\n  type = 0,\n  nameOffset = 1,\n  nameLength = 2,\n  offset = 3,\n  length = 4\n}\n/**\n * Accepts a BSON payload and checks for na \"ok: 0\" element.\n * This utility is intended to prevent calling response class constructors\n * that expect the result to be a success and demand certain properties to exist.\n *\n * For example, a cursor response always expects a cursor embedded document.\n * In order to write the class such that the properties reflect that assertion (non-null)\n * we cannot invoke the subclass constructor if the BSON represents an error.\n *\n * @param bytes - BSON document returned from the server\n */\nexport function isErrorResponse(bson: Uint8Array, elements: BSONElement[]): boolean {\n  for (let eIdx = 0; eIdx < elements.length; eIdx++) {\n    const element = elements[eIdx];\n\n    if (element[BSONElementOffset.nameLength] === 2) {\n      const nameOffset = element[BSONElementOffset.nameOffset];\n\n      // 111 == \"o\", 107 == \"k\"\n      if (bson[nameOffset] === 111 && bson[nameOffset + 1] === 107) {\n        const valueOffset = element[BSONElementOffset.offset];\n        const valueLength = element[BSONElementOffset.length];\n\n        // If any byte in the length of the ok number (works for any type) is non zero,\n        // then it is considered \"ok: 1\"\n        for (let i = valueOffset; i < valueOffset + valueLength; i++) {\n          if (bson[i] !== 0x00) return false;\n        }\n\n        return true;\n      }\n    }\n  }\n\n  return true;\n}\n\n/** @internal */\nexport type MongoDBResponseConstructor = {\n  new (bson: Uint8Array, offset?: number, isArray?: boolean): MongoDBResponse;\n  make(bson: Uint8Array): MongoDBResponse;\n};\n\n/** @internal */\nexport class MongoDBResponse extends OnDemandDocument {\n  // Wrap error thrown from BSON\n  public override get<const T extends keyof JSTypeOf>(\n    name: string | number,\n    as: T,\n    required?: false | undefined\n  ): JSTypeOf[T] | null;\n  public override get<const T extends keyof JSTypeOf>(\n    name: string | number,\n    as: T,\n    required: true\n  ): JSTypeOf[T];\n  public override get<const T extends keyof JSTypeOf>(\n    name: string | number,\n    as: T,\n    required?: boolean | undefined\n  ): JSTypeOf[T] | null {\n    try {\n      return super.get(name, as, required);\n    } catch (cause) {\n      throw new MongoUnexpectedServerResponseError(cause.message, { cause });\n    }\n  }\n\n  static is(value: unknown): value is MongoDBResponse {\n    return value instanceof MongoDBResponse;\n  }\n\n  static make(bson: Uint8Array) {\n    const elements = parseToElementsToArray(bson, 0);\n    const isError = isErrorResponse(bson, elements);\n    return isError\n      ? new MongoDBResponse(bson, 0, false, elements)\n      : new this(bson, 0, false, elements);\n  }\n\n  // {ok:1}\n  static empty = new MongoDBResponse(new Uint8Array([13, 0, 0, 0, 16, 111, 107, 0, 1, 0, 0, 0, 0]));\n\n  /**\n   * Returns true iff:\n   * - ok is 0 and the top-level code === 50\n   * - ok is 1 and the writeErrors array contains a code === 50\n   * - ok is 1 and the writeConcern object contains a code === 50\n   */\n  get isMaxTimeExpiredError() {\n    // {ok: 0, code: 50 ... }\n    const isTopLevel = this.ok === 0 && this.code === MONGODB_ERROR_CODES.MaxTimeMSExpired;\n    if (isTopLevel) return true;\n\n    if (this.ok === 0) return false;\n\n    // {ok: 1, writeConcernError: {code: 50 ... }}\n    const isWriteConcern =\n      this.get('writeConcernError', BSONType.object)?.getNumber('code') ===\n      MONGODB_ERROR_CODES.MaxTimeMSExpired;\n    if (isWriteConcern) return true;\n\n    const writeErrors = this.get('writeErrors', BSONType.array);\n    if (writeErrors?.size()) {\n      for (let i = 0; i < writeErrors.size(); i++) {\n        const isWriteError =\n          writeErrors.get(i, BSONType.object)?.getNumber('code') ===\n          MONGODB_ERROR_CODES.MaxTimeMSExpired;\n\n        // {ok: 1, writeErrors: [{code: 50 ... }]}\n        if (isWriteError) return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Drivers can safely assume that the `recoveryToken` field is always a BSON document but drivers MUST NOT modify the\n   * contents of the document.\n   */\n  get recoveryToken(): Document | null {\n    return (\n      this.get('recoveryToken', BSONType.object)?.toObject({\n        promoteValues: false,\n        promoteLongs: false,\n        promoteBuffers: false,\n        validation: { utf8: true }\n      }) ?? null\n    );\n  }\n\n  /**\n   * The server creates a cursor in response to a snapshot find/aggregate command and reports atClusterTime within the cursor field in the response.\n   * For the distinct command the server adds a top-level atClusterTime field to the response.\n   * The atClusterTime field represents the timestamp of the read and is guaranteed to be majority committed.\n   */\n  public get atClusterTime(): Timestamp | null {\n    return (\n      this.get('cursor', BSONType.object)?.get('atClusterTime', BSONType.timestamp) ??\n      this.get('atClusterTime', BSONType.timestamp)\n    );\n  }\n\n  public get operationTime(): Timestamp | null {\n    return this.get('operationTime', BSONType.timestamp);\n  }\n\n  /** Normalizes whatever BSON value is \"ok\" to a JS number 1 or 0. */\n  public get ok(): 0 | 1 {\n    return this.getNumber('ok') ? 1 : 0;\n  }\n\n  public get $err(): string | null {\n    return this.get('$err', BSONType.string);\n  }\n\n  public get errmsg(): string | null {\n    return this.get('errmsg', BSONType.string);\n  }\n\n  public get code(): number | null {\n    return this.getNumber('code');\n  }\n\n  private clusterTime?: ClusterTime | null;\n  public get $clusterTime(): ClusterTime | null {\n    if (!('clusterTime' in this)) {\n      const clusterTimeDoc = this.get('$clusterTime', BSONType.object);\n      if (clusterTimeDoc == null) {\n        this.clusterTime = null;\n        return null;\n      }\n      const clusterTime = clusterTimeDoc.get('clusterTime', BSONType.timestamp, true);\n      const signature = clusterTimeDoc.get('signature', BSONType.object)?.toObject();\n      // @ts-expect-error: `signature` is incorrectly typed. It is public API.\n      this.clusterTime = { clusterTime, signature };\n    }\n    return this.clusterTime ?? null;\n  }\n\n  public override toObject(options?: BSONSerializeOptions): Record<string, any> {\n    const exactBSONOptions = {\n      ...pluckBSONSerializeOptions(options ?? {}),\n      validation: parseUtf8ValidationOption(options)\n    };\n    return super.toObject(exactBSONOptions);\n  }\n}\n\n/** @internal */\nexport class CursorResponse extends MongoDBResponse {\n  /**\n   * Devtools need to know which keys were encrypted before the driver automatically decrypted them.\n   * If decorating is enabled (`Symbol.for('@@mdb.decorateDecryptionResult')`), this field will be set,\n   * storing the original encrypted response from the server, so that we can build an object that has\n   * the list of BSON keys that were encrypted stored at a well known symbol: `Symbol.for('@@mdb.decryptedKeys')`.\n   */\n  encryptedResponse?: MongoDBResponse;\n  /**\n   * This supports a feature of the FindCursor.\n   * It is an optimization to avoid an extra getMore when the limit has been reached\n   */\n  static emptyGetMore: CursorResponse = {\n    id: new Long(0),\n    length: 0,\n    shift: () => null\n  } as unknown as CursorResponse;\n\n  static override is(value: unknown): value is CursorResponse {\n    return value instanceof CursorResponse || value === CursorResponse.emptyGetMore;\n  }\n\n  private _batch: OnDemandDocument | null = null;\n  private iterated = 0;\n\n  get cursor() {\n    return this.get('cursor', BSONType.object, true);\n  }\n\n  public get id(): Long {\n    try {\n      return Long.fromBigInt(this.cursor.get('id', BSONType.long, true));\n    } catch (cause) {\n      throw new MongoUnexpectedServerResponseError(cause.message, { cause });\n    }\n  }\n\n  public get ns() {\n    const namespace = this.cursor.get('ns', BSONType.string);\n    if (namespace != null) return ns(namespace);\n    return null;\n  }\n\n  public get length() {\n    return Math.max(this.batchSize - this.iterated, 0);\n  }\n\n  private _encryptedBatch: OnDemandDocument | null = null;\n  get encryptedBatch() {\n    if (this.encryptedResponse == null) return null;\n    if (this._encryptedBatch != null) return this._encryptedBatch;\n\n    const cursor = this.encryptedResponse?.get('cursor', BSONType.object);\n    if (cursor?.has('firstBatch'))\n      this._encryptedBatch = cursor.get('firstBatch', BSONType.array, true);\n    else if (cursor?.has('nextBatch'))\n      this._encryptedBatch = cursor.get('nextBatch', BSONType.array, true);\n    else throw new MongoUnexpectedServerResponseError('Cursor document did not contain a batch');\n\n    return this._encryptedBatch;\n  }\n\n  private get batch() {\n    if (this._batch != null) return this._batch;\n    const cursor = this.cursor;\n    if (cursor.has('firstBatch')) this._batch = cursor.get('firstBatch', BSONType.array, true);\n    else if (cursor.has('nextBatch')) this._batch = cursor.get('nextBatch', BSONType.array, true);\n    else throw new MongoUnexpectedServerResponseError('Cursor document did not contain a batch');\n    return this._batch;\n  }\n\n  public get batchSize() {\n    return this.batch?.size();\n  }\n\n  public get postBatchResumeToken() {\n    return (\n      this.cursor.get('postBatchResumeToken', BSONType.object)?.toObject({\n        promoteValues: false,\n        promoteLongs: false,\n        promoteBuffers: false,\n        validation: { utf8: true }\n      }) ?? null\n    );\n  }\n\n  public shift(options: OnDemandDocumentDeserializeOptions): any {\n    if (this.iterated >= this.batchSize) {\n      return null;\n    }\n\n    const result = this.batch.get(this.iterated, BSONType.object, true) ?? null;\n    const encryptedResult = this.encryptedBatch?.get(this.iterated, BSONType.object, true) ?? null;\n\n    this.iterated += 1;\n\n    if (options?.raw) {\n      return result.toBytes();\n    } else {\n      const object = result.toObject(options);\n      if (encryptedResult) {\n        decorateDecryptionResult(object, encryptedResult.toObject(options), true);\n      }\n      return object;\n    }\n  }\n\n  public clear() {\n    this.iterated = this.batchSize;\n  }\n}\n\n/**\n * Explain responses have nothing to do with cursor responses\n * This class serves to temporarily avoid refactoring how cursors handle\n * explain responses which is to detect that the response is not cursor-like and return the explain\n * result as the \"first and only\" document in the \"batch\" and end the \"cursor\"\n */\nexport class ExplainedCursorResponse extends CursorResponse {\n  isExplain = true;\n\n  override get id(): Long {\n    return Long.fromBigInt(0n);\n  }\n\n  override get batchSize() {\n    return 0;\n  }\n\n  override get ns() {\n    return null;\n  }\n\n  _length = 1;\n  override get length(): number {\n    return this._length;\n  }\n\n  override shift(options?: DeserializeOptions) {\n    if (this._length === 0) return null;\n    this._length -= 1;\n    return this.toObject(options);\n  }\n}\n\n/**\n * Client bulk writes have some extra metadata at the top level that needs to be\n * included in the result returned to the user.\n */\nexport class ClientBulkWriteCursorResponse extends CursorResponse {\n  get insertedCount() {\n    return this.get('nInserted', BSONType.int, true);\n  }\n\n  get upsertedCount() {\n    return this.get('nUpserted', BSONType.int, true);\n  }\n\n  get matchedCount() {\n    return this.get('nMatched', BSONType.int, true);\n  }\n\n  get modifiedCount() {\n    return this.get('nModified', BSONType.int, true);\n  }\n\n  get deletedCount() {\n    return this.get('nDeleted', BSONType.int, true);\n  }\n\n  get writeConcernError() {\n    return this.get('writeConcernError', BSONType.object, false);\n  }\n}\n", "import { type Document } from './bson';\nimport { MongoDBResponse } from './cmap/wire_protocol/responses';\nimport { MongoWriteConcernError } from './error';\n\n/** @public */\nexport type W = number | 'majority';\n\n/** @public */\nexport interface WriteConcernOptions {\n  /** Write Concern as an object */\n  writeConcern?: WriteConcern | WriteConcernSettings;\n}\n\n/** @public */\nexport interface WriteConcernSettings {\n  /** The write concern */\n  w?: W;\n  /**\n   * The write concern timeout.\n   */\n  wtimeoutMS?: number;\n  /** The journal write concern */\n  journal?: boolean;\n\n  // legacy options\n  /**\n   * The journal write concern.\n   * @deprecated Will be removed in the next major version. Please use the journal option.\n   */\n  j?: boolean;\n  /**\n   * The write concern timeout.\n   */\n  wtimeout?: number;\n  /**\n   * The file sync write concern.\n   * @deprecated Will be removed in the next major version. Please use the journal option.\n   */\n  fsync?: boolean | 1;\n}\n\nexport const WRITE_CONCERN_KEYS = ['w', 'wtimeout', 'j', 'journal', 'fsync'];\n\n/** The write concern options that decorate the server command. */\ninterface CommandWriteConcernOptions {\n  /** The write concern */\n  w?: W;\n  /** The journal write concern. */\n  j?: boolean;\n  /** The write concern timeout. */\n  wtimeout?: number;\n}\n\n/**\n * A MongoDB WriteConcern, which describes the level of acknowledgement\n * requested from MongoDB for write operations.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/write-concern/\n */\nexport class WriteConcern {\n  /**\n   * Request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\n   * If w is 0 and is set on a write operation, the server will not send a response.\n   */\n  readonly w?: W;\n  /** Request acknowledgment that the write operation has been written to the on-disk journal */\n  readonly journal?: boolean;\n  /**\n   * Specify a time limit to prevent write operations from blocking indefinitely.\n   */\n  readonly wtimeoutMS?: number;\n  /**\n   * Specify a time limit to prevent write operations from blocking indefinitely.\n   * @deprecated Will be removed in the next major version. Please use wtimeoutMS.\n   */\n  wtimeout?: number;\n  /**\n   * Request acknowledgment that the write operation has been written to the on-disk journal.\n   * @deprecated Will be removed in the next major version. Please use journal.\n   */\n  j?: boolean;\n  /**\n   * Equivalent to the j option.\n   * @deprecated Will be removed in the next major version. Please use journal.\n   */\n  fsync?: boolean | 1;\n\n  /**\n   * Constructs a WriteConcern from the write concern properties.\n   * @param w - request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\n   * @param wtimeoutMS - specify a time limit to prevent write operations from blocking indefinitely\n   * @param journal - request acknowledgment that the write operation has been written to the on-disk journal\n   * @param fsync - equivalent to the j option. Is deprecated and will be removed in the next major version.\n   */\n  constructor(w?: W, wtimeoutMS?: number, journal?: boolean, fsync?: boolean | 1) {\n    if (w != null) {\n      if (!Number.isNaN(Number(w))) {\n        this.w = Number(w);\n      } else {\n        this.w = w;\n      }\n    }\n    if (wtimeoutMS != null) {\n      this.wtimeoutMS = this.wtimeout = wtimeoutMS;\n    }\n    if (journal != null) {\n      this.journal = this.j = journal;\n    }\n    if (fsync != null) {\n      this.journal = this.j = fsync ? true : false;\n    }\n  }\n\n  /**\n   * Apply a write concern to a command document. Will modify and return the command.\n   */\n  static apply(command: Document, writeConcern: WriteConcern): Document {\n    const wc: CommandWriteConcernOptions = {};\n    // The write concern document sent to the server has w/wtimeout/j fields.\n    if (writeConcern.w != null) wc.w = writeConcern.w;\n    if (writeConcern.wtimeoutMS != null) wc.wtimeout = writeConcern.wtimeoutMS;\n    if (writeConcern.journal != null) wc.j = writeConcern.j;\n    command.writeConcern = wc;\n    return command;\n  }\n\n  /** Construct a WriteConcern given an options object. */\n  static fromOptions(\n    options?: WriteConcernOptions | WriteConcern | W,\n    inherit?: WriteConcernOptions | WriteConcern\n  ): WriteConcern | undefined {\n    if (options == null) return undefined;\n    inherit = inherit ?? {};\n    let opts: WriteConcernSettings | WriteConcern | undefined;\n    if (typeof options === 'string' || typeof options === 'number') {\n      opts = { w: options };\n    } else if (options instanceof WriteConcern) {\n      opts = options;\n    } else {\n      opts = options.writeConcern;\n    }\n    const parentOpts: WriteConcern | WriteConcernSettings | undefined =\n      inherit instanceof WriteConcern ? inherit : inherit.writeConcern;\n\n    const {\n      w = undefined,\n      wtimeout = undefined,\n      j = undefined,\n      fsync = undefined,\n      journal = undefined,\n      wtimeoutMS = undefined\n    } = {\n      ...parentOpts,\n      ...opts\n    };\n    if (\n      w != null ||\n      wtimeout != null ||\n      wtimeoutMS != null ||\n      j != null ||\n      journal != null ||\n      fsync != null\n    ) {\n      return new WriteConcern(w, wtimeout ?? wtimeoutMS, j ?? journal, fsync);\n    }\n    return undefined;\n  }\n}\n\n/** Called with either a plain object or MongoDBResponse */\nexport function throwIfWriteConcernError(response: unknown): void {\n  if (typeof response === 'object' && response != null) {\n    const writeConcernError: object | null =\n      MongoDBResponse.is(response) && response.has('writeConcernError')\n        ? response.toObject()\n        : !MongoDBResponse.is(response) && 'writeConcernError' in response\n          ? response\n          : null;\n\n    if (writeConcernError != null) {\n      throw new MongoWriteConcernError(writeConcernError as any);\n    }\n  }\n}\n", "import * as crypto from 'crypto';\nimport type { SrvRecord } from 'dns';\nimport { type EventEmitter } from 'events';\nimport { promises as fs } from 'fs';\nimport * as http from 'http';\nimport { clearTimeout, setTimeout } from 'timers';\nimport * as url from 'url';\nimport { URL } from 'url';\nimport { promisify } from 'util';\n\nimport { deserialize, type Document, ObjectId, resolveBSONOptions } from './bson';\nimport type { Connection } from './cmap/connection';\nimport { MAX_SUPPORTED_WIRE_VERSION } from './cmap/wire_protocol/constants';\nimport type { Collection } from './collection';\nimport { kDecoratedKeys, LEGACY_HELLO_COMMAND } from './constants';\nimport type { AbstractCursor } from './cursor/abstract_cursor';\nimport type { FindCursor } from './cursor/find_cursor';\nimport type { Db } from './db';\nimport {\n  type AnyError,\n  MongoAPIError,\n  MongoCompatibilityError,\n  MongoInvalidArgumentError,\n  MongoNetworkTimeoutError,\n  MongoNotConnectedError,\n  MongoParseError,\n  MongoRuntimeError\n} from './error';\nimport type { MongoClient } from './mongo_client';\nimport { type Abortable } from './mongo_types';\nimport type { CommandOperationOptions, OperationParent } from './operations/command';\nimport type { Hint, OperationOptions } from './operations/operation';\nimport { ReadConcern } from './read_concern';\nimport { ReadPreference } from './read_preference';\nimport { ServerType } from './sdam/common';\nimport type { Server } from './sdam/server';\nimport type { Topology } from './sdam/topology';\nimport type { ClientSession } from './sessions';\nimport { type TimeoutContextOptions } from './timeout';\nimport { WriteConcern } from './write_concern';\n\n/**\n * MongoDB Driver style callback\n * @public\n */\nexport type Callback<T = any> = (error?: AnyError, result?: T) => void;\n\nexport type AnyOptions = Document;\n\nexport const ByteUtils = {\n  toLocalBufferType(this: void, buffer: Buffer | Uint8Array): Buffer {\n    return Buffer.isBuffer(buffer)\n      ? buffer\n      : Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  },\n\n  equals(this: void, seqA: Uint8Array, seqB: Uint8Array) {\n    return ByteUtils.toLocalBufferType(seqA).equals(seqB);\n  },\n\n  compare(this: void, seqA: Uint8Array, seqB: Uint8Array) {\n    return ByteUtils.toLocalBufferType(seqA).compare(seqB);\n  },\n\n  toBase64(this: void, uint8array: Uint8Array) {\n    return ByteUtils.toLocalBufferType(uint8array).toString('base64');\n  }\n};\n\n/**\n * Returns true if value is a Uint8Array or a Buffer\n * @param value - any value that may be a Uint8Array\n */\nexport function isUint8Array(value: unknown): value is Uint8Array {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    Symbol.toStringTag in value &&\n    value[Symbol.toStringTag] === 'Uint8Array'\n  );\n}\n\n/**\n * Determines if a connection's address matches a user provided list\n * of domain wildcards.\n */\nexport function hostMatchesWildcards(host: string, wildcards: string[]): boolean {\n  for (const wildcard of wildcards) {\n    if (\n      host === wildcard ||\n      (wildcard.startsWith('*.') && host?.endsWith(wildcard.substring(2, wildcard.length))) ||\n      (wildcard.startsWith('*/') && host?.endsWith(wildcard.substring(2, wildcard.length)))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Ensure Hint field is in a shape we expect:\n * - object of index names mapping to 1 or -1\n * - just an index name\n * @internal\n */\nexport function normalizeHintField(hint?: Hint): Hint | undefined {\n  let finalHint = undefined;\n\n  if (typeof hint === 'string') {\n    finalHint = hint;\n  } else if (Array.isArray(hint)) {\n    finalHint = {};\n\n    hint.forEach(param => {\n      finalHint[param] = 1;\n    });\n  } else if (hint != null && typeof hint === 'object') {\n    finalHint = {} as Document;\n    for (const name in hint) {\n      finalHint[name] = hint[name];\n    }\n  }\n\n  return finalHint;\n}\n\nconst TO_STRING = (object: unknown) => Object.prototype.toString.call(object);\n/**\n * Checks if arg is an Object:\n * - **NOTE**: the check is based on the `[Symbol.toStringTag]() === 'Object'`\n * @internal\n */\n\nexport function isObject(arg: unknown): arg is object {\n  return '[object Object]' === TO_STRING(arg);\n}\n\n/** @internal */\nexport function mergeOptions<T, S>(target: T, source: S): T & S {\n  return { ...target, ...source };\n}\n\n/** @internal */\nexport function filterOptions(options: AnyOptions, names: ReadonlyArray<string>): AnyOptions {\n  const filterOptions: AnyOptions = {};\n\n  for (const name in options) {\n    if (names.includes(name)) {\n      filterOptions[name] = options[name];\n    }\n  }\n\n  // Filtered options\n  return filterOptions;\n}\n\ninterface HasRetryableWrites {\n  retryWrites?: boolean;\n}\n/**\n * Applies retryWrites: true to a command if retryWrites is set on the command's database.\n * @internal\n *\n * @param target - The target command to which we will apply retryWrites.\n * @param db - The database from which we can inherit a retryWrites value.\n */\nexport function applyRetryableWrites<T extends HasRetryableWrites>(target: T, db?: Db): T {\n  if (db && db.s.options?.retryWrites) {\n    target.retryWrites = true;\n  }\n\n  return target;\n}\n\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n * @internal\n *\n * @param target - the target command we will be applying the write concern to\n * @param sources - sources where we can inherit default write concerns from\n * @param options - optional settings passed into a command for write concern overrides\n */\n\n/**\n * Checks if a given value is a Promise\n *\n * @typeParam T - The resolution type of the possible promise\n * @param value - An object that could be a promise\n * @returns true if the provided value is a Promise\n */\nexport function isPromiseLike<T = unknown>(value?: unknown): value is PromiseLike<T> {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    'then' in value &&\n    typeof value.then === 'function'\n  );\n}\n\n/**\n * Applies collation to a given command.\n * @internal\n *\n * @param command - the command on which to apply collation\n * @param target - target of command\n * @param options - options containing collation settings\n */\nexport function decorateWithCollation(\n  command: Document,\n  target: MongoClient | Db | Collection,\n  options: AnyOptions\n): void {\n  const capabilities = getTopology(target).capabilities;\n  if (options.collation && typeof options.collation === 'object') {\n    if (capabilities && capabilities.commandsTakeCollation) {\n      command.collation = options.collation;\n    } else {\n      throw new MongoCompatibilityError(`Current topology does not support collation`);\n    }\n  }\n}\n\n/**\n * Applies a read concern to a given command.\n * @internal\n *\n * @param command - the command on which to apply the read concern\n * @param coll - the parent collection of the operation calling this method\n */\nexport function decorateWithReadConcern(\n  command: Document,\n  coll: { s: { readConcern?: ReadConcern } },\n  options?: OperationOptions\n): void {\n  if (options && options.session && options.session.inTransaction()) {\n    return;\n  }\n  const readConcern = Object.assign({}, command.readConcern || {});\n  if (coll.s.readConcern) {\n    Object.assign(readConcern, coll.s.readConcern);\n  }\n\n  if (Object.keys(readConcern).length > 0) {\n    Object.assign(command, { readConcern: readConcern });\n  }\n}\n\n/**\n * @internal\n */\nexport type TopologyProvider =\n  | MongoClient\n  | ClientSession\n  | FindCursor\n  | AbstractCursor\n  | Collection<any>\n  | Db;\n\n/**\n * A helper function to get the topology from a given provider. Throws\n * if the topology cannot be found.\n * @throws MongoNotConnectedError\n * @internal\n */\nexport function getTopology(provider: TopologyProvider): Topology {\n  // MongoClient or ClientSession or AbstractCursor\n  if ('topology' in provider && provider.topology) {\n    return provider.topology;\n  } else if ('client' in provider && provider.client.topology) {\n    return provider.client.topology;\n  }\n\n  throw new MongoNotConnectedError('MongoClient must be connected to perform this operation');\n}\n\n/** @internal */\nexport function ns(ns: string): MongoDBNamespace {\n  return MongoDBNamespace.fromString(ns);\n}\n\n/** @public */\nexport class MongoDBNamespace {\n  /**\n   * Create a namespace object\n   *\n   * @param db - database name\n   * @param collection - collection name\n   */\n  constructor(\n    public db: string,\n    public collection?: string\n  ) {\n    this.collection = collection === '' ? undefined : collection;\n  }\n\n  toString(): string {\n    return this.collection ? `${this.db}.${this.collection}` : this.db;\n  }\n\n  withCollection(collection: string): MongoDBCollectionNamespace {\n    return new MongoDBCollectionNamespace(this.db, collection);\n  }\n\n  static fromString(namespace?: string): MongoDBNamespace {\n    if (typeof namespace !== 'string' || namespace === '') {\n      // TODO(NODE-3483): Replace with MongoNamespaceError\n      throw new MongoRuntimeError(`Cannot parse namespace from \"${namespace}\"`);\n    }\n\n    const [db, ...collectionParts] = namespace.split('.');\n    const collection = collectionParts.join('.');\n    return new MongoDBNamespace(db, collection === '' ? undefined : collection);\n  }\n}\n\n/**\n * @public\n *\n * A class representing a collection's namespace.  This class enforces (through Typescript) that\n * the `collection` portion of the namespace is defined and should only be\n * used in scenarios where this can be guaranteed.\n */\nexport class MongoDBCollectionNamespace extends MongoDBNamespace {\n  constructor(\n    db: string,\n    override collection: string\n  ) {\n    super(db, collection);\n  }\n\n  static override fromString(namespace?: string): MongoDBCollectionNamespace {\n    return super.fromString(namespace) as MongoDBCollectionNamespace;\n  }\n}\n\n/** @internal */\nexport function* makeCounter(seed = 0): Generator<number> {\n  let count = seed;\n  while (true) {\n    const newCount = count;\n    count += 1;\n    yield newCount;\n  }\n}\n\n/**\n * Synchronously Generate a UUIDv4\n * @internal\n */\nexport function uuidV4(): Buffer {\n  const result = crypto.randomBytes(16);\n  result[6] = (result[6] & 0x0f) | 0x40;\n  result[8] = (result[8] & 0x3f) | 0x80;\n  return result;\n}\n\n/**\n * A helper function for determining `maxWireVersion` between legacy and new topology instances\n * @internal\n */\nexport function maxWireVersion(topologyOrServer?: Connection | Topology | Server): number {\n  if (topologyOrServer) {\n    if (topologyOrServer.loadBalanced || topologyOrServer.serverApi?.version) {\n      // Since we do not have a monitor in the load balanced mode,\n      // we assume the load-balanced server is always pointed at the latest mongodb version.\n      // There is a risk that for on-prem deployments\n      // that don't upgrade immediately that this could alert to the\n      // application that a feature is available that is actually not.\n      // We also return the max supported wire version for serverAPI.\n      return MAX_SUPPORTED_WIRE_VERSION;\n    }\n    if (topologyOrServer.hello) {\n      return topologyOrServer.hello.maxWireVersion;\n    }\n\n    if ('lastHello' in topologyOrServer && typeof topologyOrServer.lastHello === 'function') {\n      const lastHello = topologyOrServer.lastHello();\n      if (lastHello) {\n        return lastHello.maxWireVersion;\n      }\n    }\n\n    if (\n      topologyOrServer.description &&\n      'maxWireVersion' in topologyOrServer.description &&\n      topologyOrServer.description.maxWireVersion != null\n    ) {\n      return topologyOrServer.description.maxWireVersion;\n    }\n  }\n\n  return 0;\n}\n\n/** @internal */\nexport function arrayStrictEqual(arr: unknown[], arr2: unknown[]): boolean {\n  if (!Array.isArray(arr) || !Array.isArray(arr2)) {\n    return false;\n  }\n\n  return arr.length === arr2.length && arr.every((elt, idx) => elt === arr2[idx]);\n}\n\n/** @internal */\nexport function errorStrictEqual(lhs?: AnyError | null, rhs?: AnyError | null): boolean {\n  if (lhs === rhs) {\n    return true;\n  }\n\n  if (!lhs || !rhs) {\n    return lhs === rhs;\n  }\n\n  if ((lhs == null && rhs != null) || (lhs != null && rhs == null)) {\n    return false;\n  }\n\n  if (lhs.constructor.name !== rhs.constructor.name) {\n    return false;\n  }\n\n  if (lhs.message !== rhs.message) {\n    return false;\n  }\n\n  return true;\n}\n\ninterface StateTable {\n  [key: string]: string[];\n}\ninterface ObjectWithState {\n  s: { state: string };\n  emit(event: 'stateChanged', state: string, newState: string): void;\n}\ninterface StateTransitionFunction {\n  (target: ObjectWithState, newState: string): void;\n}\n\n/** @public */\nexport type EventEmitterWithState = {\n  /** @internal */\n  stateChanged(previous: string, current: string): void;\n};\n\n/** @internal */\nexport function makeStateMachine(stateTable: StateTable): StateTransitionFunction {\n  return function stateTransition(target, newState) {\n    const legalStates = stateTable[target.s.state];\n    if (legalStates && legalStates.indexOf(newState) < 0) {\n      throw new MongoRuntimeError(\n        `illegal state transition from [${target.s.state}] => [${newState}], allowed: [${legalStates}]`\n      );\n    }\n\n    target.emit('stateChanged', target.s.state, newState);\n    target.s.state = newState;\n  };\n}\n\n/** @internal */\nexport function now(): number {\n  const hrtime = process.hrtime();\n  return Math.floor(hrtime[0] * 1000 + hrtime[1] / 1000000);\n}\n\n/** @internal */\nexport function calculateDurationInMs(started: number | undefined): number {\n  if (typeof started !== 'number') {\n    return -1;\n  }\n\n  const elapsed = now() - started;\n  return elapsed < 0 ? 0 : elapsed;\n}\n\n/** @internal */\nexport function hasAtomicOperators(doc: Document | Document[]): boolean {\n  if (Array.isArray(doc)) {\n    for (const document of doc) {\n      if (hasAtomicOperators(document)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const keys = Object.keys(doc);\n  return keys.length > 0 && keys[0][0] === '$';\n}\n\nexport function resolveTimeoutOptions<T extends Partial<TimeoutContextOptions>>(\n  client: MongoClient,\n  options: T\n): T &\n  Pick<\n    MongoClient['s']['options'],\n    'timeoutMS' | 'serverSelectionTimeoutMS' | 'waitQueueTimeoutMS' | 'socketTimeoutMS'\n  > {\n  const { socketTimeoutMS, serverSelectionTimeoutMS, waitQueueTimeoutMS, timeoutMS } =\n    client.s.options;\n  return { socketTimeoutMS, serverSelectionTimeoutMS, waitQueueTimeoutMS, timeoutMS, ...options };\n}\n/**\n * Merge inherited properties from parent into options, prioritizing values from options,\n * then values from parent.\n *\n * @param parent - An optional owning class of the operation being run. ex. Db/Collection/MongoClient.\n * @param options - The options passed to the operation method.\n *\n * @internal\n */\nexport function resolveOptions<T extends CommandOperationOptions>(\n  parent: OperationParent | undefined,\n  options?: T\n): T {\n  const result: T = Object.assign({}, options, resolveBSONOptions(options, parent));\n\n  const timeoutMS = options?.timeoutMS ?? parent?.timeoutMS;\n  // Users cannot pass a readConcern/writeConcern to operations in a transaction\n  const session = options?.session;\n\n  if (!session?.inTransaction()) {\n    const readConcern = ReadConcern.fromOptions(options) ?? parent?.readConcern;\n    if (readConcern) {\n      result.readConcern = readConcern;\n    }\n\n    let writeConcern = WriteConcern.fromOptions(options) ?? parent?.writeConcern;\n    if (writeConcern) {\n      if (timeoutMS != null) {\n        writeConcern = WriteConcern.fromOptions({\n          writeConcern: {\n            ...writeConcern,\n            wtimeout: undefined,\n            wtimeoutMS: undefined\n          }\n        });\n      }\n      result.writeConcern = writeConcern;\n    }\n  }\n\n  result.timeoutMS = timeoutMS;\n\n  const readPreference = ReadPreference.fromOptions(options) ?? parent?.readPreference;\n  if (readPreference) {\n    result.readPreference = readPreference;\n  }\n\n  const isConvenientTransaction = session?.explicit && session?.timeoutContext != null;\n  if (isConvenientTransaction && options?.timeoutMS != null) {\n    throw new MongoInvalidArgumentError(\n      'An operation cannot be given a timeoutMS setting when inside a withTransaction call that has a timeoutMS setting'\n    );\n  }\n\n  return result;\n}\n\nexport function isSuperset(set: Set<any> | any[], subset: Set<any> | any[]): boolean {\n  set = Array.isArray(set) ? new Set(set) : set;\n  subset = Array.isArray(subset) ? new Set(subset) : subset;\n  for (const elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Checks if the document is a Hello request\n * @internal\n */\nexport function isHello(doc: Document): boolean {\n  return doc[LEGACY_HELLO_COMMAND] || doc.hello ? true : false;\n}\n\n/** Returns the items that are uniquely in setA */\nexport function setDifference<T>(setA: Iterable<T>, setB: Iterable<T>): Set<T> {\n  const difference = new Set<T>(setA);\n  for (const elem of setB) {\n    difference.delete(elem);\n  }\n  return difference;\n}\n\nconst HAS_OWN = (object: unknown, prop: string) =>\n  Object.prototype.hasOwnProperty.call(object, prop);\n\nexport function isRecord<T extends readonly string[]>(\n  value: unknown,\n  requiredKeys: T\n): value is Record<T[number], any>;\nexport function isRecord(value: unknown): value is Record<string, any>;\nexport function isRecord(\n  value: unknown,\n  requiredKeys: string[] | undefined = undefined\n): value is Record<string, any> {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  const ctor = (value as any).constructor;\n  if (ctor && ctor.prototype) {\n    if (!isObject(ctor.prototype)) {\n      return false;\n    }\n\n    // Check to see if some method exists from the Object exists\n    if (!HAS_OWN(ctor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n  }\n\n  if (requiredKeys) {\n    const keys = Object.keys(value as Record<string, any>);\n    return isSuperset(keys, requiredKeys);\n  }\n\n  return true;\n}\n\ntype ListNode<T> = {\n  value: T;\n  next: ListNode<T> | HeadNode<T>;\n  prev: ListNode<T> | HeadNode<T>;\n};\n\ntype HeadNode<T> = {\n  value: null;\n  next: ListNode<T>;\n  prev: ListNode<T>;\n};\n\n/**\n * When a list is empty the head is a reference with pointers to itself\n * So this type represents that self referential state\n */\ntype EmptyNode = {\n  value: null;\n  next: EmptyNode;\n  prev: EmptyNode;\n};\n\n/**\n * A sequential list of items in a circularly linked list\n * @remarks\n * The head node is special, it is always defined and has a value of null.\n * It is never \"included\" in the list, in that, it is not returned by pop/shift or yielded by the iterator.\n * The circular linkage and always defined head node are to reduce checks for null next/prev references to zero.\n * New nodes are declared as object literals with keys always in the same order: next, prev, value.\n * @internal\n */\nexport class List<T = unknown> {\n  private readonly head: HeadNode<T> | EmptyNode;\n  private count: number;\n\n  get length() {\n    return this.count;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'List' as const;\n  }\n\n  constructor() {\n    this.count = 0;\n\n    // this is carefully crafted:\n    // declaring a complete and consistently key ordered\n    // object is beneficial to the runtime optimizations\n    this.head = {\n      next: null,\n      prev: null,\n      value: null\n    } as unknown as EmptyNode;\n    this.head.next = this.head;\n    this.head.prev = this.head;\n  }\n\n  toArray() {\n    return Array.from(this);\n  }\n\n  toString() {\n    return `head <=> ${this.toArray().join(' <=> ')} <=> head`;\n  }\n\n  *[Symbol.iterator](): Generator<T, void, void> {\n    for (const node of this.nodes()) {\n      yield node.value;\n    }\n  }\n\n  private *nodes(): Generator<ListNode<T>, void, void> {\n    let ptr: HeadNode<T> | ListNode<T> | EmptyNode = this.head.next;\n    while (ptr !== this.head) {\n      // Save next before yielding so that we make removing within iteration safe\n      const { next } = ptr as ListNode<T>;\n      yield ptr as ListNode<T>;\n      ptr = next;\n    }\n  }\n\n  /** Insert at end of list */\n  push(value: T) {\n    this.count += 1;\n    const newNode: ListNode<T> = {\n      next: this.head as HeadNode<T>,\n      prev: this.head.prev as ListNode<T>,\n      value\n    };\n    this.head.prev.next = newNode;\n    this.head.prev = newNode;\n  }\n\n  /** Inserts every item inside an iterable instead of the iterable itself */\n  pushMany(iterable: Iterable<T>) {\n    for (const value of iterable) {\n      this.push(value);\n    }\n  }\n\n  /** Insert at front of list */\n  unshift(value: T) {\n    this.count += 1;\n    const newNode: ListNode<T> = {\n      next: this.head.next as ListNode<T>,\n      prev: this.head as HeadNode<T>,\n      value\n    };\n    this.head.next.prev = newNode;\n    this.head.next = newNode;\n  }\n\n  private remove(node: ListNode<T> | EmptyNode): T | null {\n    if (node === this.head || this.length === 0) {\n      return null;\n    }\n\n    this.count -= 1;\n\n    const prevNode = node.prev;\n    const nextNode = node.next;\n    prevNode.next = nextNode;\n    nextNode.prev = prevNode;\n\n    return node.value;\n  }\n\n  /** Removes the first node at the front of the list */\n  shift(): T | null {\n    return this.remove(this.head.next);\n  }\n\n  /** Removes the last node at the end of the list */\n  pop(): T | null {\n    return this.remove(this.head.prev);\n  }\n\n  /** Iterates through the list and removes nodes where filter returns true */\n  prune(filter: (value: T) => boolean) {\n    for (const node of this.nodes()) {\n      if (filter(node.value)) {\n        this.remove(node);\n      }\n    }\n  }\n\n  clear() {\n    this.count = 0;\n    this.head.next = this.head as EmptyNode;\n    this.head.prev = this.head as EmptyNode;\n  }\n\n  /** Returns the first item in the list, does not remove */\n  first(): T | null {\n    // If the list is empty, value will be the head's null\n    return this.head.next.value;\n  }\n\n  /** Returns the last item in the list, does not remove */\n  last(): T | null {\n    // If the list is empty, value will be the head's null\n    return this.head.prev.value;\n  }\n}\n\n/**\n * A pool of Buffers which allow you to read them as if they were one\n * @internal\n */\nexport class BufferPool {\n  private buffers: List<Buffer>;\n  private totalByteLength: number;\n\n  constructor() {\n    this.buffers = new List();\n    this.totalByteLength = 0;\n  }\n\n  get length(): number {\n    return this.totalByteLength;\n  }\n\n  /** Adds a buffer to the internal buffer pool list */\n  append(buffer: Buffer): void {\n    this.buffers.push(buffer);\n    this.totalByteLength += buffer.length;\n  }\n\n  /**\n   * If BufferPool contains 4 bytes or more construct an int32 from the leading bytes,\n   * otherwise return null. Size can be negative, caller should error check.\n   */\n  getInt32(): number | null {\n    if (this.totalByteLength < 4) {\n      return null;\n    }\n    const firstBuffer = this.buffers.first();\n    if (firstBuffer != null && firstBuffer.byteLength >= 4) {\n      return firstBuffer.readInt32LE(0);\n    }\n\n    // Unlikely case: an int32 is split across buffers.\n    // Use read and put the returned buffer back on top\n    const top4Bytes = this.read(4);\n    const value = top4Bytes.readInt32LE(0);\n\n    // Put it back.\n    this.totalByteLength += 4;\n    this.buffers.unshift(top4Bytes);\n\n    return value;\n  }\n\n  /** Reads the requested number of bytes, optionally consuming them */\n  read(size: number): Buffer {\n    if (typeof size !== 'number' || size < 0) {\n      throw new MongoInvalidArgumentError('Argument \"size\" must be a non-negative number');\n    }\n\n    // oversized request returns empty buffer\n    if (size > this.totalByteLength) {\n      return Buffer.alloc(0);\n    }\n\n    // We know we have enough, we just don't know how it is spread across chunks\n    // TODO(NODE-4732): alloc API should change based on raw option\n    const result = Buffer.allocUnsafe(size);\n\n    for (let bytesRead = 0; bytesRead < size; ) {\n      const buffer = this.buffers.shift();\n      if (buffer == null) {\n        break;\n      }\n      const bytesRemaining = size - bytesRead;\n      const bytesReadable = Math.min(bytesRemaining, buffer.byteLength);\n      const bytes = buffer.subarray(0, bytesReadable);\n\n      result.set(bytes, bytesRead);\n\n      bytesRead += bytesReadable;\n      this.totalByteLength -= bytesReadable;\n      if (bytesReadable < buffer.byteLength) {\n        this.buffers.unshift(buffer.subarray(bytesReadable));\n      }\n    }\n\n    return result;\n  }\n}\n\n/** @public */\nexport class HostAddress {\n  host: string | undefined = undefined;\n  port: number | undefined = undefined;\n  socketPath: string | undefined = undefined;\n  isIPv6 = false;\n\n  constructor(hostString: string) {\n    const escapedHost = hostString.split(' ').join('%20'); // escape spaces, for socket path hosts\n\n    if (escapedHost.endsWith('.sock')) {\n      // heuristically determine if we're working with a domain socket\n      this.socketPath = decodeURIComponent(escapedHost);\n      return;\n    }\n\n    const urlString = `iLoveJS://${escapedHost}`;\n    let url;\n    try {\n      url = new URL(urlString);\n    } catch (urlError) {\n      const runtimeError = new MongoRuntimeError(`Unable to parse ${escapedHost} with URL`);\n      runtimeError.cause = urlError;\n      throw runtimeError;\n    }\n\n    const hostname = url.hostname;\n    const port = url.port;\n\n    let normalized = decodeURIComponent(hostname).toLowerCase();\n    if (normalized.startsWith('[') && normalized.endsWith(']')) {\n      this.isIPv6 = true;\n      normalized = normalized.substring(1, hostname.length - 1);\n    }\n\n    this.host = normalized.toLowerCase();\n\n    if (typeof port === 'number') {\n      this.port = port;\n    } else if (typeof port === 'string' && port !== '') {\n      this.port = Number.parseInt(port, 10);\n    } else {\n      this.port = 27017;\n    }\n\n    if (this.port === 0) {\n      throw new MongoParseError('Invalid port (zero) with hostname');\n    }\n    Object.freeze(this);\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new HostAddress('${this.toString()}')`;\n  }\n\n  toString(): string {\n    if (typeof this.host === 'string') {\n      if (this.isIPv6) {\n        return `[${this.host}]:${this.port}`;\n      }\n      return `${this.host}:${this.port}`;\n    }\n    return `${this.socketPath}`;\n  }\n\n  static fromString(this: void, s: string): HostAddress {\n    return new HostAddress(s);\n  }\n\n  static fromHostPort(host: string, port: number): HostAddress {\n    if (host.includes(':')) {\n      host = `[${host}]`; // IPv6 address\n    }\n    return HostAddress.fromString(`${host}:${port}`);\n  }\n\n  static fromSrvRecord({ name, port }: SrvRecord): HostAddress {\n    return HostAddress.fromHostPort(name, port);\n  }\n\n  toHostPort(): { host: string; port: number } {\n    if (this.socketPath) {\n      return { host: this.socketPath, port: 0 };\n    }\n\n    const host = this.host ?? '';\n    const port = this.port ?? 0;\n    return { host, port };\n  }\n}\n\nexport const DEFAULT_PK_FACTORY = {\n  // We prefer not to rely on ObjectId having a createPk method\n  createPk(): ObjectId {\n    return new ObjectId();\n  }\n};\n\n/**\n * When the driver used emitWarning the code will be equal to this.\n * @public\n *\n * @example\n * ```ts\n * process.on('warning', (warning) => {\n *  if (warning.code === MONGODB_WARNING_CODE) console.error('Ah an important warning! :)')\n * })\n * ```\n */\nexport const MONGODB_WARNING_CODE = 'MONGODB DRIVER';\n\n/** @internal */\nexport function emitWarning(message: string): void {\n  return process.emitWarning(message, { code: MONGODB_WARNING_CODE } as any);\n}\n\nconst emittedWarnings = new Set();\n/**\n * Will emit a warning once for the duration of the application.\n * Uses the message to identify if it has already been emitted\n * so using string interpolation can cause multiple emits\n * @internal\n */\nexport function emitWarningOnce(message: string): void {\n  if (!emittedWarnings.has(message)) {\n    emittedWarnings.add(message);\n    return emitWarning(message);\n  }\n}\n\n/**\n * Takes a JS object and joins the values into a string separated by ', '\n */\nexport function enumToString(en: Record<string, unknown>): string {\n  return Object.values(en).join(', ');\n}\n\n/**\n * Determine if a server supports retryable writes.\n *\n * @internal\n */\nexport function supportsRetryableWrites(server?: Server): boolean {\n  if (!server) {\n    return false;\n  }\n\n  if (server.loadBalanced) {\n    // Loadbalanced topologies will always support retry writes\n    return true;\n  }\n\n  if (server.description.logicalSessionTimeoutMinutes != null) {\n    // that supports sessions\n    if (server.description.type !== ServerType.Standalone) {\n      // and that is not a standalone\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Fisher\u2013Yates Shuffle\n *\n * Reference: https://bost.ocks.org/mike/shuffle/\n * @param sequence - items to be shuffled\n * @param limit - Defaults to `0`. If nonzero shuffle will slice the randomized array e.g, `.slice(0, limit)` otherwise will return the entire randomized array.\n */\nexport function shuffle<T>(sequence: Iterable<T>, limit = 0): Array<T> {\n  const items = Array.from(sequence); // shallow copy in order to never shuffle the input\n\n  if (limit > items.length) {\n    throw new MongoRuntimeError('Limit must be less than the number of items');\n  }\n\n  let remainingItemsToShuffle = items.length;\n  const lowerBound = limit % items.length === 0 ? 1 : items.length - limit;\n  while (remainingItemsToShuffle > lowerBound) {\n    // Pick a remaining element\n    const randomIndex = Math.floor(Math.random() * remainingItemsToShuffle);\n    remainingItemsToShuffle -= 1;\n\n    // And swap it with the current element\n    const swapHold = items[remainingItemsToShuffle];\n    items[remainingItemsToShuffle] = items[randomIndex];\n    items[randomIndex] = swapHold;\n  }\n\n  return limit % items.length === 0 ? items : items.slice(lowerBound);\n}\n\n/**\n * TODO(NODE-4936): read concern eligibility for commands should be codified in command construction\n * @internal\n * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.md#read-concern\n */\nexport function commandSupportsReadConcern(command: Document): boolean {\n  if (command.aggregate || command.count || command.distinct || command.find || command.geoNear) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Compare objectIds. `null` is always less\n * - `+1 = oid1 is greater than oid2`\n * - `-1 = oid1 is less than oid2`\n * - `+0 = oid1 is equal oid2`\n */\nexport function compareObjectId(oid1?: ObjectId | null, oid2?: ObjectId | null): 0 | 1 | -1 {\n  if (oid1 == null && oid2 == null) {\n    return 0;\n  }\n\n  if (oid1 == null) {\n    return -1;\n  }\n\n  if (oid2 == null) {\n    return 1;\n  }\n\n  return ByteUtils.compare(oid1.id, oid2.id);\n}\n\nexport function parseInteger(value: unknown): number | null {\n  if (typeof value === 'number') return Math.trunc(value);\n  const parsedValue = Number.parseInt(String(value), 10);\n\n  return Number.isNaN(parsedValue) ? null : parsedValue;\n}\n\nexport function parseUnsignedInteger(value: unknown): number | null {\n  const parsedInt = parseInteger(value);\n\n  return parsedInt != null && parsedInt >= 0 ? parsedInt : null;\n}\n\n/**\n * This function throws a MongoAPIError in the event that either of the following is true:\n * * If the provided address domain does not match the provided parent domain\n * * If the parent domain contains less than three `.` separated parts and the provided address does not contain at least one more domain level than its parent\n *\n * If a DNS server were to become compromised SRV records would still need to\n * advertise addresses that are under the same domain as the srvHost.\n *\n * @param address - The address to check against a domain\n * @param srvHost - The domain to check the provided address against\n * @returns void\n */\nexport function checkParentDomainMatch(address: string, srvHost: string): void {\n  // Remove trailing dot if exists on either the resolved address or the srv hostname\n  const normalizedAddress = address.endsWith('.') ? address.slice(0, address.length - 1) : address;\n  const normalizedSrvHost = srvHost.endsWith('.') ? srvHost.slice(0, srvHost.length - 1) : srvHost;\n\n  const allCharacterBeforeFirstDot = /^.*?\\./;\n  const srvIsLessThanThreeParts = normalizedSrvHost.split('.').length < 3;\n  // Remove all characters before first dot\n  // Add leading dot back to string so\n  //   an srvHostDomain = '.trusted.site'\n  //   will not satisfy an addressDomain that endsWith '.fake-trusted.site'\n  const addressDomain = `.${normalizedAddress.replace(allCharacterBeforeFirstDot, '')}`;\n  let srvHostDomain = srvIsLessThanThreeParts\n    ? normalizedSrvHost\n    : `.${normalizedSrvHost.replace(allCharacterBeforeFirstDot, '')}`;\n\n  if (!srvHostDomain.startsWith('.')) {\n    srvHostDomain = '.' + srvHostDomain;\n  }\n  if (\n    srvIsLessThanThreeParts &&\n    normalizedAddress.split('.').length <= normalizedSrvHost.split('.').length\n  ) {\n    throw new MongoAPIError(\n      'Server record does not have at least one more domain level than parent URI'\n    );\n  }\n  if (!addressDomain.endsWith(srvHostDomain)) {\n    throw new MongoAPIError('Server record does not share hostname with parent URI');\n  }\n}\n\ninterface RequestOptions {\n  json?: boolean;\n  method?: string;\n  timeout?: number;\n  headers?: http.OutgoingHttpHeaders;\n}\n\n/**\n * Perform a get request that returns status and body.\n * @internal\n */\nexport function get(\n  url: URL | string,\n  options: http.RequestOptions = {}\n): Promise<{ body: string; status: number | undefined }> {\n  return new Promise((resolve, reject) => {\n    /* eslint-disable prefer-const */\n    let timeoutId: NodeJS.Timeout;\n    const request = http\n      .get(url, options, response => {\n        response.setEncoding('utf8');\n        let body = '';\n        response.on('data', chunk => (body += chunk));\n        response.on('end', () => {\n          clearTimeout(timeoutId);\n          resolve({ status: response.statusCode, body });\n        });\n      })\n      .on('error', error => {\n        clearTimeout(timeoutId);\n        reject(error);\n      })\n      .end();\n    timeoutId = setTimeout(() => {\n      request.destroy(new MongoNetworkTimeoutError(`request timed out after 10 seconds`));\n    }, 10000);\n  });\n}\n\nexport async function request(uri: string): Promise<Record<string, any>>;\nexport async function request(\n  uri: string,\n  options?: { json?: true } & RequestOptions\n): Promise<Record<string, any>>;\nexport async function request(\n  uri: string,\n  options?: { json: false } & RequestOptions\n): Promise<string>;\nexport async function request(\n  uri: string,\n  options: RequestOptions = {}\n): Promise<string | Record<string, any>> {\n  return await new Promise<string | Record<string, any>>((resolve, reject) => {\n    const requestOptions = {\n      method: 'GET',\n      timeout: 10000,\n      json: true,\n      ...url.parse(uri),\n      ...options\n    };\n\n    const req = http.request(requestOptions, res => {\n      res.setEncoding('utf8');\n\n      let data = '';\n      res.on('data', d => {\n        data += d;\n      });\n\n      res.once('end', () => {\n        if (options.json === false) {\n          resolve(data);\n          return;\n        }\n\n        try {\n          const parsed = JSON.parse(data);\n          resolve(parsed);\n        } catch {\n          // TODO(NODE-3483)\n          reject(new MongoRuntimeError(`Invalid JSON response: \"${data}\"`));\n        }\n      });\n    });\n\n    req.once('timeout', () =>\n      req.destroy(\n        new MongoNetworkTimeoutError(\n          `Network request to ${uri} timed out after ${options.timeout} ms`\n        )\n      )\n    );\n    req.once('error', error => reject(error));\n    req.end();\n  });\n}\n\n/** @internal */\nexport const DOCUMENT_DB_CHECK = /(\\.docdb\\.amazonaws\\.com$)|(\\.docdb-elastic\\.amazonaws\\.com$)/;\n/** @internal */\nexport const COSMOS_DB_CHECK = /\\.cosmos\\.azure\\.com$/;\n\n/** @internal */\nexport const DOCUMENT_DB_MSG =\n  'You appear to be connected to a DocumentDB cluster. For more information regarding feature compatibility and support please visit https://www.mongodb.com/supportability/documentdb';\n/** @internal */\nexport const COSMOS_DB_MSG =\n  'You appear to be connected to a CosmosDB cluster. For more information regarding feature compatibility and support please visit https://www.mongodb.com/supportability/cosmosdb';\n\n/** @internal */\nexport function isHostMatch(match: RegExp, host?: string): boolean {\n  return host && match.test(host.toLowerCase()) ? true : false;\n}\n\nexport function promiseWithResolvers<T>(): {\n  promise: Promise<T>;\n  resolve: (value: T) => void;\n  reject: (error: Error) => void;\n} {\n  let resolve!: (value: T) => void;\n  let reject!: (error: Error) => void;\n  const promise = new Promise<T>(function withResolversExecutor(promiseResolve, promiseReject) {\n    resolve = promiseResolve;\n    reject = promiseReject;\n  });\n  return { promise, resolve, reject } as const;\n}\n\n/**\n * A noop function intended for use in preventing unhandled rejections.\n *\n * @example\n * ```js\n * const promise = myAsyncTask();\n * // eslint-disable-next-line github/no-then\n * promise.then(undefined, squashError);\n * ```\n */\nexport function squashError(_error: unknown) {\n  return;\n}\n\nexport const randomBytes = promisify(crypto.randomBytes);\n\n/**\n * Replicates the events.once helper.\n *\n * Removes unused signal logic and It **only** supports 0 or 1 argument events.\n *\n * @param ee - An event emitter that may emit `ev`\n * @param name - An event name to wait for\n */\nexport async function once<T>(ee: EventEmitter, name: string, options?: Abortable): Promise<T> {\n  options?.signal?.throwIfAborted();\n\n  const { promise, resolve, reject } = promiseWithResolvers<T>();\n  const onEvent = (data: T) => resolve(data);\n  const onError = (error: Error) => reject(error);\n  const abortListener = addAbortListener(options?.signal, function () {\n    reject(this.reason);\n  });\n\n  ee.once(name, onEvent).once('error', onError);\n\n  try {\n    return await promise;\n  } finally {\n    ee.off(name, onEvent);\n    ee.off('error', onError);\n    abortListener?.[kDispose]();\n  }\n}\n\nexport function maybeAddIdToDocuments(\n  coll: Collection,\n  docs: Document[],\n  options: { forceServerObjectId?: boolean }\n): Document[];\nexport function maybeAddIdToDocuments(\n  coll: Collection,\n  docs: Document,\n  options: { forceServerObjectId?: boolean }\n): Document;\nexport function maybeAddIdToDocuments(\n  coll: Collection,\n  docOrDocs: Document[] | Document,\n  options: { forceServerObjectId?: boolean }\n): Document[] | Document {\n  const forceServerObjectId =\n    typeof options.forceServerObjectId === 'boolean'\n      ? options.forceServerObjectId\n      : coll.s.db.options?.forceServerObjectId;\n\n  // no need to modify the docs if server sets the ObjectId\n  if (forceServerObjectId === true) {\n    return docOrDocs;\n  }\n\n  const transform = (doc: Document): Document => {\n    if (doc._id == null) {\n      doc._id = coll.s.pkFactory.createPk();\n    }\n\n    return doc;\n  };\n  return Array.isArray(docOrDocs) ? docOrDocs.map(transform) : transform(docOrDocs);\n}\n\nexport async function fileIsAccessible(fileName: string, mode?: number) {\n  try {\n    await fs.access(fileName, mode);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function csotMin(duration1: number, duration2: number): number {\n  if (duration1 === 0) return duration2;\n  if (duration2 === 0) return duration1;\n  return Math.min(duration1, duration2);\n}\n\nexport function noop() {\n  return;\n}\n\n/**\n * Recurse through the (identically-shaped) `decrypted` and `original`\n * objects and attach a `decryptedKeys` property on each sub-object that\n * contained encrypted fields. Because we only call this on BSON responses,\n * we do not need to worry about circular references.\n *\n * @internal\n */\nexport function decorateDecryptionResult(\n  decrypted: Document & { [kDecoratedKeys]?: Array<string> },\n  original: Document,\n  isTopLevelDecorateCall = true\n): void {\n  if (isTopLevelDecorateCall) {\n    // The original value could have been either a JS object or a BSON buffer\n    if (Buffer.isBuffer(original)) {\n      original = deserialize(original);\n    }\n    if (Buffer.isBuffer(decrypted)) {\n      throw new MongoRuntimeError('Expected result of decryption to be deserialized BSON object');\n    }\n  }\n\n  if (!decrypted || typeof decrypted !== 'object') return;\n  for (const k of Object.keys(decrypted)) {\n    const originalValue = original[k];\n\n    // An object was decrypted by libmongocrypt if and only if it was\n    // a BSON Binary object with subtype 6.\n    if (originalValue && originalValue._bsontype === 'Binary' && originalValue.sub_type === 6) {\n      if (!decrypted[kDecoratedKeys]) {\n        Object.defineProperty(decrypted, kDecoratedKeys, {\n          value: [],\n          configurable: true,\n          enumerable: false,\n          writable: false\n        });\n      }\n      // this is defined in the preceding if-statement\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      decrypted[kDecoratedKeys]!.push(k);\n      // Do not recurse into this decrypted value. It could be a sub-document/array,\n      // in which case there is no original value associated with its subfields.\n      continue;\n    }\n\n    decorateDecryptionResult(decrypted[k], originalValue, false);\n  }\n}\n\n/** @internal */\nexport const kDispose: unique symbol = (Symbol.dispose as any) ?? Symbol('dispose');\n\n/** @internal */\nexport interface Disposable {\n  [kDispose](): void;\n}\n\n/**\n * A utility that helps with writing listener code idiomatically\n *\n * @example\n * ```js\n * using listener = addAbortListener(signal, function () {\n *   console.log('aborted', this.reason);\n * });\n * ```\n *\n * @param signal - if exists adds an abort listener\n * @param listener - the listener to be added to signal\n * @returns A disposable that will remove the abort listener\n */\nexport function addAbortListener(\n  signal: AbortSignal | undefined | null,\n  listener: (this: AbortSignal, event: Event) => void\n): Disposable | undefined {\n  if (signal == null) return;\n  signal.addEventListener('abort', listener, { once: true });\n  return { [kDispose]: () => signal.removeEventListener('abort', listener) };\n}\n\n/**\n * Takes a promise and races it with a promise wrapping the abort event of the optionally provided signal.\n * The given promise is _always_ ordered before the signal's abort promise.\n * When given an already rejected promise and an already aborted signal, the promise's rejection takes precedence.\n *\n * Any asynchronous processing in `promise` will continue even after the abort signal has fired,\n * but control will be returned to the caller\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\n *\n * @param promise - A promise to discard if the signal aborts\n * @param options - An options object carrying an optional signal\n */\nexport async function abortable<T>(\n  promise: Promise<T>,\n  { signal }: { signal?: AbortSignal }\n): Promise<T> {\n  if (signal == null) {\n    return await promise;\n  }\n\n  const { promise: aborted, reject } = promiseWithResolvers<never>();\n\n  const abortListener = signal.aborted\n    ? reject(signal.reason)\n    : addAbortListener(signal, function () {\n        reject(this.reason);\n      });\n\n  try {\n    return await Promise.race([promise, aborted]);\n  } finally {\n    abortListener?.[kDispose]();\n  }\n}\n", "import { clearTimeout, setTimeout } from 'timers';\n\nimport { type Document } from './bson';\nimport { MongoInvalidArgumentError, MongoOperationTimeoutError, MongoRuntimeError } from './error';\nimport { type ClientSession } from './sessions';\nimport { csotMin, noop, squashError } from './utils';\n\n/** @internal */\nexport class TimeoutError extends Error {\n  duration: number;\n  override get name(): 'TimeoutError' {\n    return 'TimeoutError';\n  }\n\n  constructor(message: string, options: { cause?: Error; duration: number }) {\n    super(message, options);\n    this.duration = options.duration;\n  }\n\n  static is(error: unknown): error is TimeoutError {\n    return (\n      error != null && typeof error === 'object' && 'name' in error && error.name === 'TimeoutError'\n    );\n  }\n}\n\ntype Executor = ConstructorParameters<typeof Promise<never>>[0];\ntype Reject = Parameters<ConstructorParameters<typeof Promise<never>>[0]>[1];\n/**\n * @internal\n * This class is an abstraction over timeouts\n * The Timeout class can only be in the pending or rejected states. It is guaranteed not to resolve\n * if interacted with exclusively through its public API\n * */\nexport class Timeout extends Promise<never> {\n  private id?: NodeJS.Timeout;\n\n  public readonly start: number;\n  public ended: number | null = null;\n  public duration: number;\n  private timedOut = false;\n  public cleared = false;\n\n  get remainingTime(): number {\n    if (this.timedOut) return 0;\n    if (this.duration === 0) return Infinity;\n    return this.start + this.duration - Math.trunc(performance.now());\n  }\n\n  get timeElapsed(): number {\n    return Math.trunc(performance.now()) - this.start;\n  }\n\n  /** Create a new timeout that expires in `duration` ms */\n  private constructor(\n    executor: Executor = () => null,\n    options?: { duration: number; unref?: true; rejection?: Error }\n  ) {\n    const duration = options?.duration ?? 0;\n    const unref = !!options?.unref;\n    const rejection = options?.rejection;\n\n    if (duration < 0) {\n      throw new MongoInvalidArgumentError('Cannot create a Timeout with a negative duration');\n    }\n\n    let reject!: Reject;\n    super((_, promiseReject) => {\n      reject = promiseReject;\n\n      executor(noop, promiseReject);\n    });\n\n    this.duration = duration;\n    this.start = Math.trunc(performance.now());\n\n    if (rejection == null && this.duration > 0) {\n      this.id = setTimeout(() => {\n        this.ended = Math.trunc(performance.now());\n        this.timedOut = true;\n        reject(new TimeoutError(`Expired after ${duration}ms`, { duration }));\n      }, this.duration);\n      if (typeof this.id.unref === 'function' && unref) {\n        // Ensure we do not keep the Node.js event loop running\n        this.id.unref();\n      }\n    } else if (rejection != null) {\n      this.ended = Math.trunc(performance.now());\n      this.timedOut = true;\n      reject(rejection);\n    }\n  }\n\n  /**\n   * Clears the underlying timeout. This method is idempotent\n   */\n  clear(): void {\n    clearTimeout(this.id);\n    this.id = undefined;\n    this.timedOut = false;\n    this.cleared = true;\n  }\n\n  throwIfExpired(): void {\n    if (this.timedOut) {\n      // This method is invoked when someone wants to throw immediately instead of await the result of this promise\n      // Since they won't be handling the rejection from the promise (because we're about to throw here)\n      // attach handling to prevent this from bubbling up to Node.js\n      this.then(undefined, squashError);\n      throw new TimeoutError('Timed out', { duration: this.duration });\n    }\n  }\n\n  public static expires(duration: number, unref?: true): Timeout {\n    return new Timeout(undefined, { duration, unref });\n  }\n\n  static override reject(rejection?: Error): Timeout {\n    return new Timeout(undefined, { duration: 0, unref: true, rejection });\n  }\n}\n\n/** @internal */\nexport type TimeoutContextOptions = (LegacyTimeoutContextOptions | CSOTTimeoutContextOptions) & {\n  session?: ClientSession;\n};\n\n/** @internal */\nexport type LegacyTimeoutContextOptions = {\n  serverSelectionTimeoutMS: number;\n  waitQueueTimeoutMS: number;\n  socketTimeoutMS?: number;\n};\n\n/** @internal */\nexport type CSOTTimeoutContextOptions = {\n  timeoutMS: number;\n  serverSelectionTimeoutMS: number;\n  socketTimeoutMS?: number;\n};\n\nfunction isLegacyTimeoutContextOptions(v: unknown): v is LegacyTimeoutContextOptions {\n  return (\n    v != null &&\n    typeof v === 'object' &&\n    'serverSelectionTimeoutMS' in v &&\n    typeof v.serverSelectionTimeoutMS === 'number' &&\n    'waitQueueTimeoutMS' in v &&\n    typeof v.waitQueueTimeoutMS === 'number'\n  );\n}\n\nfunction isCSOTTimeoutContextOptions(v: unknown): v is CSOTTimeoutContextOptions {\n  return (\n    v != null &&\n    typeof v === 'object' &&\n    'serverSelectionTimeoutMS' in v &&\n    typeof v.serverSelectionTimeoutMS === 'number' &&\n    'timeoutMS' in v &&\n    typeof v.timeoutMS === 'number'\n  );\n}\n\n/** @internal */\nexport abstract class TimeoutContext {\n  static create(options: TimeoutContextOptions): TimeoutContext {\n    if (options.session?.timeoutContext != null) return options.session?.timeoutContext;\n    if (isCSOTTimeoutContextOptions(options)) return new CSOTTimeoutContext(options);\n    else if (isLegacyTimeoutContextOptions(options)) return new LegacyTimeoutContext(options);\n    else throw new MongoRuntimeError('Unrecognized options');\n  }\n\n  abstract get maxTimeMS(): number | null;\n\n  abstract get serverSelectionTimeout(): Timeout | null;\n\n  abstract get connectionCheckoutTimeout(): Timeout | null;\n\n  abstract get clearServerSelectionTimeout(): boolean;\n\n  abstract get timeoutForSocketWrite(): Timeout | null;\n\n  abstract get timeoutForSocketRead(): Timeout | null;\n\n  abstract csotEnabled(): this is CSOTTimeoutContext;\n\n  abstract refresh(): void;\n\n  abstract clear(): void;\n\n  /** Returns a new instance of the TimeoutContext, with all timeouts refreshed and restarted. */\n  abstract refreshed(): TimeoutContext;\n\n  abstract addMaxTimeMSToCommand(command: Document, options: { omitMaxTimeMS?: boolean }): void;\n\n  abstract getSocketTimeoutMS(): number | undefined;\n}\n\n/** @internal */\nexport class CSOTTimeoutContext extends TimeoutContext {\n  timeoutMS: number;\n  serverSelectionTimeoutMS: number;\n  socketTimeoutMS?: number;\n\n  clearServerSelectionTimeout: boolean;\n\n  private _serverSelectionTimeout?: Timeout | null;\n  private _connectionCheckoutTimeout?: Timeout | null;\n  public minRoundTripTime = 0;\n  public start: number;\n\n  constructor(options: CSOTTimeoutContextOptions) {\n    super();\n    this.start = Math.trunc(performance.now());\n\n    this.timeoutMS = options.timeoutMS;\n\n    this.serverSelectionTimeoutMS = options.serverSelectionTimeoutMS;\n\n    this.socketTimeoutMS = options.socketTimeoutMS;\n\n    this.clearServerSelectionTimeout = false;\n  }\n\n  get maxTimeMS(): number {\n    return this.remainingTimeMS - this.minRoundTripTime;\n  }\n\n  get remainingTimeMS() {\n    const timePassed = Math.trunc(performance.now()) - this.start;\n    return this.timeoutMS <= 0 ? Infinity : this.timeoutMS - timePassed;\n  }\n\n  csotEnabled(): this is CSOTTimeoutContext {\n    return true;\n  }\n\n  get serverSelectionTimeout(): Timeout | null {\n    // check for undefined\n    if (typeof this._serverSelectionTimeout !== 'object' || this._serverSelectionTimeout?.cleared) {\n      const { remainingTimeMS, serverSelectionTimeoutMS } = this;\n      if (remainingTimeMS <= 0)\n        return Timeout.reject(\n          new MongoOperationTimeoutError(`Timed out in server selection after ${this.timeoutMS}ms`)\n        );\n      const usingServerSelectionTimeoutMS =\n        serverSelectionTimeoutMS !== 0 &&\n        csotMin(remainingTimeMS, serverSelectionTimeoutMS) === serverSelectionTimeoutMS;\n      if (usingServerSelectionTimeoutMS) {\n        this._serverSelectionTimeout = Timeout.expires(serverSelectionTimeoutMS);\n      } else {\n        if (remainingTimeMS > 0 && Number.isFinite(remainingTimeMS)) {\n          this._serverSelectionTimeout = Timeout.expires(remainingTimeMS);\n        } else {\n          this._serverSelectionTimeout = null;\n        }\n      }\n    }\n\n    return this._serverSelectionTimeout;\n  }\n\n  get connectionCheckoutTimeout(): Timeout | null {\n    if (\n      typeof this._connectionCheckoutTimeout !== 'object' ||\n      this._connectionCheckoutTimeout?.cleared\n    ) {\n      if (typeof this._serverSelectionTimeout === 'object') {\n        // null or Timeout\n        this._connectionCheckoutTimeout = this._serverSelectionTimeout;\n      } else {\n        throw new MongoRuntimeError(\n          'Unreachable. If you are seeing this error, please file a ticket on the NODE driver project on Jira'\n        );\n      }\n    }\n    return this._connectionCheckoutTimeout;\n  }\n\n  get timeoutForSocketWrite(): Timeout | null {\n    const { remainingTimeMS } = this;\n    if (!Number.isFinite(remainingTimeMS)) return null;\n    if (remainingTimeMS > 0) return Timeout.expires(remainingTimeMS);\n    return Timeout.reject(new MongoOperationTimeoutError('Timed out before socket write'));\n  }\n\n  get timeoutForSocketRead(): Timeout | null {\n    const { remainingTimeMS } = this;\n    if (!Number.isFinite(remainingTimeMS)) return null;\n    if (remainingTimeMS > 0) return Timeout.expires(remainingTimeMS);\n    return Timeout.reject(new MongoOperationTimeoutError('Timed out before socket read'));\n  }\n\n  refresh(): void {\n    this.start = Math.trunc(performance.now());\n    this.minRoundTripTime = 0;\n    this._serverSelectionTimeout?.clear();\n    this._connectionCheckoutTimeout?.clear();\n  }\n\n  clear(): void {\n    this._serverSelectionTimeout?.clear();\n    this._connectionCheckoutTimeout?.clear();\n  }\n\n  /**\n   * @internal\n   * Throws a MongoOperationTimeoutError if the context has expired.\n   * If the context has not expired, returns the `remainingTimeMS`\n   **/\n  getRemainingTimeMSOrThrow(message?: string): number {\n    const { remainingTimeMS } = this;\n    if (remainingTimeMS <= 0)\n      throw new MongoOperationTimeoutError(message ?? `Expired after ${this.timeoutMS}ms`);\n    return remainingTimeMS;\n  }\n\n  /**\n   * @internal\n   * This method is intended to be used in situations where concurrent operation are on the same deadline, but cannot share a single `TimeoutContext` instance.\n   * Returns a new instance of `CSOTTimeoutContext` constructed with identical options, but setting the `start` property to `this.start`.\n   */\n  clone(): CSOTTimeoutContext {\n    const timeoutContext = new CSOTTimeoutContext({\n      timeoutMS: this.timeoutMS,\n      serverSelectionTimeoutMS: this.serverSelectionTimeoutMS\n    });\n    timeoutContext.start = this.start;\n    return timeoutContext;\n  }\n\n  override refreshed(): CSOTTimeoutContext {\n    return new CSOTTimeoutContext(this);\n  }\n\n  override addMaxTimeMSToCommand(command: Document, options: { omitMaxTimeMS?: boolean }): void {\n    if (options.omitMaxTimeMS) return;\n    const maxTimeMS = this.remainingTimeMS - this.minRoundTripTime;\n    if (maxTimeMS > 0 && Number.isFinite(maxTimeMS)) command.maxTimeMS = maxTimeMS;\n  }\n\n  override getSocketTimeoutMS(): number | undefined {\n    return 0;\n  }\n}\n\n/** @internal */\nexport class LegacyTimeoutContext extends TimeoutContext {\n  options: LegacyTimeoutContextOptions;\n  clearServerSelectionTimeout: boolean;\n\n  constructor(options: LegacyTimeoutContextOptions) {\n    super();\n    this.options = options;\n    this.clearServerSelectionTimeout = true;\n  }\n\n  csotEnabled(): this is CSOTTimeoutContext {\n    return false;\n  }\n\n  get serverSelectionTimeout(): Timeout | null {\n    if (this.options.serverSelectionTimeoutMS != null && this.options.serverSelectionTimeoutMS > 0)\n      return Timeout.expires(this.options.serverSelectionTimeoutMS);\n    return null;\n  }\n\n  get connectionCheckoutTimeout(): Timeout | null {\n    if (this.options.waitQueueTimeoutMS != null && this.options.waitQueueTimeoutMS > 0)\n      return Timeout.expires(this.options.waitQueueTimeoutMS);\n    return null;\n  }\n\n  get timeoutForSocketWrite(): Timeout | null {\n    return null;\n  }\n\n  get timeoutForSocketRead(): Timeout | null {\n    return null;\n  }\n\n  refresh(): void {\n    return;\n  }\n\n  clear(): void {\n    return;\n  }\n\n  get maxTimeMS() {\n    return null;\n  }\n\n  override refreshed(): LegacyTimeoutContext {\n    return new LegacyTimeoutContext(this.options);\n  }\n\n  override addMaxTimeMSToCommand(_command: Document, _options: { omitMaxTimeMS?: boolean }): void {\n    // No max timeMS is added to commands in legacy timeout mode.\n  }\n\n  override getSocketTimeoutMS(): number | undefined {\n    return this.options.socketTimeoutMS;\n  }\n}\n", "import { type BSONSerializeOptions, type Document, resolveBSONOptions } from '../bson';\nimport { type Abortable } from '../mongo_types';\nimport { ReadPreference, type ReadPreferenceLike } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport type { MongoDBNamespace } from '../utils';\n\nexport const Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXPLAINABLE: Symbol('EXPLAINABLE'),\n  SKIP_COLLATION: Symbol('SKIP_COLLATION'),\n  CURSOR_CREATING: Symbol('CURSOR_CREATING'),\n  MUST_SELECT_SAME_SERVER: Symbol('MUST_SELECT_SAME_SERVER'),\n  COMMAND_BATCHING: Symbol('COMMAND_BATCHING')\n} as const;\n\n/** @public */\nexport type Hint = string | Document;\n\n/** @public */\nexport interface OperationOptions extends BSONSerializeOptions {\n  /** Specify ClientSession for this command */\n  session?: ClientSession;\n  willRetryWrite?: boolean;\n\n  /** The preferred read preference (ReadPreference.primary, ReadPreference.primary_preferred, ReadPreference.secondary, ReadPreference.secondary_preferred, ReadPreference.nearest). */\n  readPreference?: ReadPreferenceLike;\n\n  /** @internal Hints to `executeOperation` that this operation should not unpin on an ended transaction */\n  bypassPinningCheck?: boolean;\n  omitReadPreference?: boolean;\n\n  /** @internal Hint to `executeOperation` to omit maxTimeMS */\n  omitMaxTimeMS?: boolean;\n\n  /**\n   * @experimental\n   * Specifies the time an operation will run until it throws a timeout error\n   */\n  timeoutMS?: number;\n}\n\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n * @internal\n */\nexport abstract class AbstractOperation<TResult = any> {\n  ns!: MongoDBNamespace;\n  readPreference: ReadPreference;\n  server!: Server;\n  bypassPinningCheck: boolean;\n  trySecondaryWrite: boolean;\n\n  // BSON serialization options\n  bsonOptions?: BSONSerializeOptions;\n\n  options: OperationOptions & Abortable;\n\n  /** Specifies the time an operation will run until it throws a timeout error. */\n  timeoutMS?: number;\n\n  private _session: ClientSession | undefined;\n\n  static aspects?: Set<symbol>;\n\n  constructor(options: OperationOptions & Abortable = {}) {\n    this.readPreference = this.hasAspect(Aspect.WRITE_OPERATION)\n      ? ReadPreference.primary\n      : (ReadPreference.fromOptions(options) ?? ReadPreference.primary);\n\n    // Pull the BSON serialize options from the already-resolved options\n    this.bsonOptions = resolveBSONOptions(options);\n\n    this._session = options.session != null ? options.session : undefined;\n\n    this.options = options;\n    this.bypassPinningCheck = !!options.bypassPinningCheck;\n    this.trySecondaryWrite = false;\n  }\n\n  /** Must match the first key of the command object sent to the server.\n  Command name should be stateless (should not use 'this' keyword) */\n  abstract get commandName(): string;\n\n  abstract execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<TResult>;\n\n  hasAspect(aspect: symbol): boolean {\n    const ctor = this.constructor as { aspects?: Set<symbol> };\n    if (ctor.aspects == null) {\n      return false;\n    }\n\n    return ctor.aspects.has(aspect);\n  }\n\n  // Make sure the session is not writable from outside this class.\n  get session(): ClientSession | undefined {\n    return this._session;\n  }\n\n  clearSession() {\n    this._session = undefined;\n  }\n\n  resetBatch(): boolean {\n    return true;\n  }\n\n  get canRetryRead(): boolean {\n    return this.hasAspect(Aspect.RETRYABLE) && this.hasAspect(Aspect.READ_OPERATION);\n  }\n\n  get canRetryWrite(): boolean {\n    return this.hasAspect(Aspect.RETRYABLE) && this.hasAspect(Aspect.WRITE_OPERATION);\n  }\n}\n\nexport function defineAspects(\n  operation: { aspects?: Set<symbol> },\n  aspects: symbol | symbol[] | Set<symbol>\n): Set<symbol> {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n\n  return aspects;\n}\n", "import {\n  isRetryableReadError,\n  isRetryableWriteError,\n  MongoCompatibilityError,\n  MONGODB_ERROR_CODES,\n  MongoError,\n  MongoErrorLabel,\n  MongoExpiredSessionError,\n  MongoInvalidArgumentError,\n  MongoNetworkError,\n  MongoNotConnectedError,\n  MongoRuntimeError,\n  MongoServerError,\n  MongoTransactionError,\n  MongoUnexpectedServerResponseError\n} from '../error';\nimport type { MongoClient } from '../mongo_client';\nimport { ReadPreference } from '../read_preference';\nimport type { ServerDescription } from '../sdam/server_description';\nimport {\n  sameServerSelector,\n  secondaryWritableServerSelector,\n  type ServerSelector\n} from '../sdam/server_selection';\nimport type { Topology } from '../sdam/topology';\nimport type { ClientSession } from '../sessions';\nimport { TimeoutContext } from '../timeout';\nimport { abortable, supportsRetryableWrites } from '../utils';\nimport { AbstractOperation, Aspect } from './operation';\n\nconst MMAPv1_RETRY_WRITES_ERROR_CODE = MONGODB_ERROR_CODES.IllegalOperation;\nconst MMAPv1_RETRY_WRITES_ERROR_MESSAGE =\n  'This MongoDB deployment does not support retryable writes. Please add retryWrites=false to your connection string.';\n\ntype ResultTypeFromOperation<TOperation> =\n  TOperation extends AbstractOperation<infer K> ? K : never;\n\n/**\n * Executes the given operation with provided arguments.\n * @internal\n *\n * @remarks\n * Allows for a single point of entry to provide features such as implicit sessions, which\n * are required by the Driver Sessions specification in the event that a ClientSession is\n * not provided.\n *\n * The expectation is that this function:\n * - Connects the MongoClient if it has not already been connected, see {@link autoConnect}\n * - Creates a session if none is provided and cleans up the session it creates\n * - Tries an operation and retries under certain conditions, see {@link tryOperation}\n *\n * @typeParam T - The operation's type\n * @typeParam TResult - The type of the operation's result, calculated from T\n *\n * @param client - The MongoClient to execute this operation with\n * @param operation - The operation to execute\n */\nexport async function executeOperation<\n  T extends AbstractOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(client: MongoClient, operation: T, timeoutContext?: TimeoutContext | null): Promise<TResult> {\n  if (!(operation instanceof AbstractOperation)) {\n    // TODO(NODE-3483): Extend MongoRuntimeError\n    throw new MongoRuntimeError('This method requires a valid operation instance');\n  }\n\n  const topology =\n    client.topology == null\n      ? await abortable(autoConnect(client), operation.options)\n      : client.topology;\n\n  // The driver sessions spec mandates that we implicitly create sessions for operations\n  // that are not explicitly provided with a session.\n  let session = operation.session;\n  let owner: symbol | undefined;\n\n  if (session == null) {\n    owner = Symbol();\n    session = client.startSession({ owner, explicit: false });\n  } else if (session.hasEnded) {\n    throw new MongoExpiredSessionError('Use of expired sessions is not permitted');\n  } else if (session.snapshotEnabled && !topology.capabilities.supportsSnapshotReads) {\n    throw new MongoCompatibilityError('Snapshot reads require MongoDB 5.0 or later');\n  } else if (session.client !== client) {\n    throw new MongoInvalidArgumentError('ClientSession must be from the same MongoClient');\n  }\n\n  const readPreference = operation.readPreference ?? ReadPreference.primary;\n  const inTransaction = !!session?.inTransaction();\n\n  const hasReadAspect = operation.hasAspect(Aspect.READ_OPERATION);\n\n  if (\n    inTransaction &&\n    !readPreference.equals(ReadPreference.primary) &&\n    (hasReadAspect || operation.commandName === 'runCommand')\n  ) {\n    throw new MongoTransactionError(\n      `Read preference in a transaction must be primary, not: ${readPreference.mode}`\n    );\n  }\n\n  if (session?.isPinned && session.transaction.isCommitted && !operation.bypassPinningCheck) {\n    session.unpin();\n  }\n\n  timeoutContext ??= TimeoutContext.create({\n    session,\n    serverSelectionTimeoutMS: client.s.options.serverSelectionTimeoutMS,\n    waitQueueTimeoutMS: client.s.options.waitQueueTimeoutMS,\n    timeoutMS: operation.options.timeoutMS\n  });\n\n  try {\n    return await tryOperation(operation, {\n      topology,\n      timeoutContext,\n      session,\n      readPreference\n    });\n  } finally {\n    if (session?.owner != null && session.owner === owner) {\n      await session.endSession();\n    }\n  }\n}\n\n/**\n * Connects a client if it has not yet been connected\n * @internal\n */\nasync function autoConnect(client: MongoClient): Promise<Topology> {\n  if (client.topology == null) {\n    if (client.s.hasBeenClosed) {\n      throw new MongoNotConnectedError('Client must be connected before running operations');\n    }\n    client.s.options.__skipPingOnConnect = true;\n    try {\n      await client.connect();\n      if (client.topology == null) {\n        throw new MongoRuntimeError(\n          'client.connect did not create a topology but also did not throw'\n        );\n      }\n      return client.topology;\n    } finally {\n      delete client.s.options.__skipPingOnConnect;\n    }\n  }\n  return client.topology;\n}\n\n/** @internal */\ntype RetryOptions = {\n  session: ClientSession | undefined;\n  readPreference: ReadPreference;\n  topology: Topology;\n  timeoutContext: TimeoutContext;\n};\n\n/**\n * Executes an operation and retries as appropriate\n * @internal\n *\n * @remarks\n * Implements behaviour described in [Retryable Reads](https://github.com/mongodb/specifications/blob/master/source/retryable-reads/retryable-reads.md) and [Retryable\n * Writes](https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.md) specification\n *\n * This function:\n * - performs initial server selection\n * - attempts to execute an operation\n * - retries the operation if it meets the criteria for a retryable read or a retryable write\n *\n * @typeParam T - The operation's type\n * @typeParam TResult - The type of the operation's result, calculated from T\n *\n * @param operation - The operation to execute\n * */\nasync function tryOperation<\n  T extends AbstractOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(\n  operation: T,\n  { topology, timeoutContext, session, readPreference }: RetryOptions\n): Promise<TResult> {\n  let selector: ReadPreference | ServerSelector;\n\n  if (operation.hasAspect(Aspect.MUST_SELECT_SAME_SERVER)) {\n    // GetMore and KillCursor operations must always select the same server, but run through\n    // server selection to potentially force monitor checks if the server is\n    // in an unknown state.\n    selector = sameServerSelector(operation.server?.description);\n  } else if (operation.trySecondaryWrite) {\n    // If operation should try to write to secondary use the custom server selector\n    // otherwise provide the read preference.\n    selector = secondaryWritableServerSelector(topology.commonWireVersion, readPreference);\n  } else {\n    selector = readPreference;\n  }\n\n  let server = await topology.selectServer(selector, {\n    session,\n    operationName: operation.commandName,\n    timeoutContext,\n    signal: operation.options.signal\n  });\n\n  const hasReadAspect = operation.hasAspect(Aspect.READ_OPERATION);\n  const hasWriteAspect = operation.hasAspect(Aspect.WRITE_OPERATION);\n  const inTransaction = session?.inTransaction() ?? false;\n\n  const willRetryRead = topology.s.options.retryReads && !inTransaction && operation.canRetryRead;\n\n  const willRetryWrite =\n    topology.s.options.retryWrites &&\n    !inTransaction &&\n    supportsRetryableWrites(server) &&\n    operation.canRetryWrite;\n\n  const willRetry =\n    operation.hasAspect(Aspect.RETRYABLE) &&\n    session != null &&\n    ((hasReadAspect && willRetryRead) || (hasWriteAspect && willRetryWrite));\n\n  if (hasWriteAspect && willRetryWrite && session != null) {\n    operation.options.willRetryWrite = true;\n    session.incrementTransactionNumber();\n  }\n\n  const maxTries = willRetry ? (timeoutContext.csotEnabled() ? Infinity : 2) : 1;\n  let previousOperationError: MongoError | undefined;\n  let previousServer: ServerDescription | undefined;\n\n  for (let tries = 0; tries < maxTries; tries++) {\n    if (previousOperationError) {\n      if (hasWriteAspect && previousOperationError.code === MMAPv1_RETRY_WRITES_ERROR_CODE) {\n        throw new MongoServerError({\n          message: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n          errmsg: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n          originalError: previousOperationError\n        });\n      }\n\n      if (operation.hasAspect(Aspect.COMMAND_BATCHING) && !operation.canRetryWrite) {\n        throw previousOperationError;\n      }\n\n      if (hasWriteAspect && !isRetryableWriteError(previousOperationError))\n        throw previousOperationError;\n\n      if (hasReadAspect && !isRetryableReadError(previousOperationError))\n        throw previousOperationError;\n\n      if (\n        previousOperationError instanceof MongoNetworkError &&\n        operation.hasAspect(Aspect.CURSOR_CREATING) &&\n        session != null &&\n        session.isPinned &&\n        !session.inTransaction()\n      ) {\n        session.unpin({ force: true, forceClear: true });\n      }\n\n      server = await topology.selectServer(selector, {\n        session,\n        operationName: operation.commandName,\n        previousServer,\n        signal: operation.options.signal\n      });\n\n      if (hasWriteAspect && !supportsRetryableWrites(server)) {\n        throw new MongoUnexpectedServerResponseError(\n          'Selected server does not support retryable writes'\n        );\n      }\n    }\n\n    try {\n      // If tries > 0 and we are command batching we need to reset the batch.\n      if (tries > 0 && operation.hasAspect(Aspect.COMMAND_BATCHING)) {\n        operation.resetBatch();\n      }\n      return await operation.execute(server, session, timeoutContext);\n    } catch (operationError) {\n      if (!(operationError instanceof MongoError)) throw operationError;\n      if (\n        previousOperationError != null &&\n        operationError.hasErrorLabel(MongoErrorLabel.NoWritesPerformed)\n      ) {\n        throw previousOperationError;\n      }\n      previousServer = server.description;\n      previousOperationError = operationError;\n\n      // Reset timeouts\n      timeoutContext.clear();\n    }\n  }\n\n  throw (\n    previousOperationError ??\n    new MongoRuntimeError('Tried to propagate retryability error, but no error was found.')\n  );\n}\n", "import { inspect, promisify } from 'util';\n\nimport {\n  type Binary,\n  type BSONRegExp,\n  type BSONSymbol,\n  type Code,\n  type DBRef,\n  type Decimal128,\n  type Document,\n  type Double,\n  EJSON,\n  type EJSONOptions,\n  type Int32,\n  type Long,\n  type MaxKey,\n  type MinKey,\n  type ObjectId,\n  type Timestamp\n} from './bson';\nimport type { CommandStartedEvent } from './cmap/command_monitoring_events';\nimport type {\n  ConnectionCheckedInEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionPoolClearedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolReadyEvent,\n  ConnectionReadyEvent\n} from './cmap/connection_pool_events';\nimport {\n  COMMAND_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECKED_IN,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_READY,\n  SERVER_CLOSED,\n  SERVER_HEARTBEAT_FAILED,\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED,\n  SERVER_OPENING,\n  SERVER_SELECTION_FAILED,\n  SERVER_SELECTION_STARTED,\n  SERVER_SELECTION_SUCCEEDED,\n  TOPOLOGY_CLOSED,\n  TOPOLOGY_DESCRIPTION_CHANGED,\n  TOPOLOGY_OPENING,\n  WAITING_FOR_SUITABLE_SERVER\n} from './constants';\nimport type {\n  ServerClosedEvent,\n  ServerOpeningEvent,\n  TopologyClosedEvent,\n  TopologyDescriptionChangedEvent,\n  TopologyOpeningEvent\n} from './sdam/events';\nimport type {\n  ServerSelectionEvent,\n  ServerSelectionFailedEvent,\n  ServerSelectionStartedEvent,\n  ServerSelectionSucceededEvent,\n  WaitingForSuitableServerEvent\n} from './sdam/server_selection_events';\nimport { HostAddress, isPromiseLike, isUint8Array, parseUnsignedInteger } from './utils';\n\n/**\n * @public\n * Severity levels align with unix syslog.\n * Most typical driver functions will log to debug.\n */\nexport const SeverityLevel = Object.freeze({\n  EMERGENCY: 'emergency',\n  ALERT: 'alert',\n  CRITICAL: 'critical',\n  ERROR: 'error',\n  WARNING: 'warn',\n  NOTICE: 'notice',\n  INFORMATIONAL: 'info',\n  DEBUG: 'debug',\n  TRACE: 'trace',\n  OFF: 'off'\n} as const);\n\n/** @internal */\nexport const DEFAULT_MAX_DOCUMENT_LENGTH = 1000;\n/** @public */\nexport type SeverityLevel = (typeof SeverityLevel)[keyof typeof SeverityLevel];\n\n/** @internal */\nclass SeverityLevelMap extends Map<SeverityLevel | number, SeverityLevel | number> {\n  constructor(entries: [SeverityLevel | number, SeverityLevel | number][]) {\n    const newEntries: [number | SeverityLevel, SeverityLevel | number][] = [];\n    for (const [level, value] of entries) {\n      newEntries.push([value, level]);\n    }\n\n    newEntries.push(...entries);\n    super(newEntries);\n  }\n\n  getNumericSeverityLevel(severity: SeverityLevel): number {\n    return this.get(severity) as number;\n  }\n\n  getSeverityLevelName(level: number): SeverityLevel | undefined {\n    return this.get(level) as SeverityLevel | undefined;\n  }\n}\n\n/** @internal */\nexport const SEVERITY_LEVEL_MAP = new SeverityLevelMap([\n  [SeverityLevel.OFF, -Infinity],\n  [SeverityLevel.EMERGENCY, 0],\n  [SeverityLevel.ALERT, 1],\n  [SeverityLevel.CRITICAL, 2],\n  [SeverityLevel.ERROR, 3],\n  [SeverityLevel.WARNING, 4],\n  [SeverityLevel.NOTICE, 5],\n  [SeverityLevel.INFORMATIONAL, 6],\n  [SeverityLevel.DEBUG, 7],\n  [SeverityLevel.TRACE, 8]\n]);\n\n/** @public */\nexport const MongoLoggableComponent = Object.freeze({\n  COMMAND: 'command',\n  TOPOLOGY: 'topology',\n  SERVER_SELECTION: 'serverSelection',\n  CONNECTION: 'connection',\n  CLIENT: 'client'\n} as const);\n\n/** @public */\nexport type MongoLoggableComponent =\n  (typeof MongoLoggableComponent)[keyof typeof MongoLoggableComponent];\n\n/** @internal */\nexport interface MongoLoggerEnvOptions {\n  /** Severity level for command component */\n  MONGODB_LOG_COMMAND?: string;\n  /** Severity level for topology component */\n  MONGODB_LOG_TOPOLOGY?: string;\n  /** Severity level for server selection component */\n  MONGODB_LOG_SERVER_SELECTION?: string;\n  /** Severity level for CMAP */\n  MONGODB_LOG_CONNECTION?: string;\n  /** Severity level for client */\n  MONGODB_LOG_CLIENT?: string;\n  /** Default severity level to be if any of the above are unset */\n  MONGODB_LOG_ALL?: string;\n  /** Max length of embedded EJSON docs. Setting to 0 disables truncation. Defaults to 1000. */\n  MONGODB_LOG_MAX_DOCUMENT_LENGTH?: string;\n  /** Destination for log messages. Must be 'stderr', 'stdout'. Defaults to 'stderr'. */\n  MONGODB_LOG_PATH?: string;\n}\n\n/** @public */\nexport interface LogComponentSeveritiesClientOptions {\n  /** Optional severity level for command component */\n  command?: SeverityLevel;\n  /** Optional severity level for topology component */\n  topology?: SeverityLevel;\n  /** Optional severity level for server selection component */\n  serverSelection?: SeverityLevel;\n  /** Optional severity level for connection component */\n  connection?: SeverityLevel;\n  /** Optional severity level for client component */\n  client?: SeverityLevel;\n  /** Optional default severity level to be used if any of the above are unset */\n  default?: SeverityLevel;\n}\n\n/** @internal */\nexport interface MongoLoggerMongoClientOptions {\n  /** Destination for log messages */\n  mongodbLogPath?: 'stdout' | 'stderr' | MongoDBLogWritable;\n  /** Severity levels for logger components */\n  mongodbLogComponentSeverities?: LogComponentSeveritiesClientOptions;\n  /** Max length of embedded EJSON docs. Setting to 0 disables truncation. Defaults to 1000. */\n  mongodbLogMaxDocumentLength?: number;\n}\n\n/** @internal */\nexport interface MongoLoggerOptions {\n  componentSeverities: {\n    /** Severity level for command component */\n    command: SeverityLevel;\n    /** Severity level for topology component */\n    topology: SeverityLevel;\n    /** Severity level for server selection component */\n    serverSelection: SeverityLevel;\n    /** Severity level for connection component */\n    connection: SeverityLevel;\n    /** Severity level for client component */\n    client: SeverityLevel;\n    /** Default severity level to be used if any of the above are unset */\n    default: SeverityLevel;\n  };\n  /** Max length of embedded EJSON docs. Setting to 0 disables truncation. Defaults to 1000. */\n  maxDocumentLength: number;\n  /** Destination for log messages. */\n  logDestination: MongoDBLogWritable;\n  /** For internal check to see if error should stop logging. */\n  logDestinationIsStdErr: boolean;\n}\n\n/**\n * Parses a string as one of SeverityLevel\n * @internal\n *\n * @param s - the value to be parsed\n * @returns one of SeverityLevel if value can be parsed as such, otherwise null\n */\nexport function parseSeverityFromString(s?: string): SeverityLevel | null {\n  const validSeverities: string[] = Object.values(SeverityLevel);\n  const lowerSeverity = s?.toLowerCase();\n\n  if (lowerSeverity != null && validSeverities.includes(lowerSeverity)) {\n    return lowerSeverity as SeverityLevel;\n  }\n\n  return null;\n}\n\n/** @internal */\nexport function createStdioLogger(stream: {\n  write: NodeJS.WriteStream['write'];\n}): MongoDBLogWritable {\n  return {\n    write: promisify((log: Log, cb: (error?: Error) => void): unknown => {\n      const logLine = inspect(log, { compact: true, breakLength: Infinity });\n      stream.write(`${logLine}\\n`, 'utf-8', cb);\n      return;\n    })\n  };\n}\n\n/**\n * resolves the MONGODB_LOG_PATH and mongodbLogPath options from the environment and the\n * mongo client options respectively. The mongodbLogPath can be either 'stdout', 'stderr', a NodeJS\n * Writable or an object which has a `write` method with the signature:\n * ```ts\n * write(log: Log): void\n * ```\n *\n * @returns the MongoDBLogWritable object to write logs to\n */\nfunction resolveLogPath(\n  { MONGODB_LOG_PATH }: MongoLoggerEnvOptions,\n  { mongodbLogPath }: MongoLoggerMongoClientOptions\n): { mongodbLogPath: MongoDBLogWritable; mongodbLogPathIsStdErr: boolean } {\n  if (typeof mongodbLogPath === 'string' && /^stderr$/i.test(mongodbLogPath)) {\n    return { mongodbLogPath: createStdioLogger(process.stderr), mongodbLogPathIsStdErr: true };\n  }\n  if (typeof mongodbLogPath === 'string' && /^stdout$/i.test(mongodbLogPath)) {\n    return { mongodbLogPath: createStdioLogger(process.stdout), mongodbLogPathIsStdErr: false };\n  }\n\n  if (typeof mongodbLogPath === 'object' && typeof mongodbLogPath?.write === 'function') {\n    return { mongodbLogPath: mongodbLogPath, mongodbLogPathIsStdErr: false };\n  }\n\n  if (MONGODB_LOG_PATH && /^stderr$/i.test(MONGODB_LOG_PATH)) {\n    return { mongodbLogPath: createStdioLogger(process.stderr), mongodbLogPathIsStdErr: true };\n  }\n  if (MONGODB_LOG_PATH && /^stdout$/i.test(MONGODB_LOG_PATH)) {\n    return { mongodbLogPath: createStdioLogger(process.stdout), mongodbLogPathIsStdErr: false };\n  }\n\n  return { mongodbLogPath: createStdioLogger(process.stderr), mongodbLogPathIsStdErr: true };\n}\n\nfunction resolveSeverityConfiguration(\n  clientOption: string | undefined,\n  environmentOption: string | undefined,\n  defaultSeverity: SeverityLevel\n): SeverityLevel {\n  return (\n    parseSeverityFromString(clientOption) ??\n    parseSeverityFromString(environmentOption) ??\n    defaultSeverity\n  );\n}\n\n/** @public */\nexport interface Log extends Record<string, any> {\n  t: Date;\n  c: MongoLoggableComponent;\n  s: SeverityLevel;\n  message?: string;\n}\n\n/**\n * @public\n *\n * A custom destination for structured logging messages.\n */\nexport interface MongoDBLogWritable {\n  /**\n   * This function will be called for every enabled log message.\n   *\n   * It can be sync or async:\n   * - If it is synchronous it will block the driver from proceeding until this method returns.\n   * - If it is asynchronous the driver will not await the returned promise. It will attach fulfillment handling (`.then`).\n   *   If the promise rejects the logger will write an error message to stderr and stop functioning.\n   *   If the promise resolves the driver proceeds to the next log message (or waits for new ones to occur).\n   *\n   * Tips:\n   * - We recommend writing an async `write` function that _never_ rejects.\n   *   Instead handle logging errors as necessary to your use case and make the write function a noop, until it can be recovered.\n   * - The Log messages are structured but **subject to change** since the intended purpose is informational.\n   *   Program against this defensively and err on the side of stringifying whatever is passed in to write in some form or another.\n   *\n   */\n  write(log: Log): PromiseLike<unknown> | unknown;\n}\n\nfunction compareSeverity(s0: SeverityLevel, s1: SeverityLevel): 1 | 0 | -1 {\n  const s0Num = SEVERITY_LEVEL_MAP.getNumericSeverityLevel(s0);\n  const s1Num = SEVERITY_LEVEL_MAP.getNumericSeverityLevel(s1);\n\n  return s0Num < s1Num ? -1 : s0Num > s1Num ? 1 : 0;\n}\n\n/**\n * @internal\n * Must be separate from Events API due to differences in spec requirements for logging a command success\n */\nexport type LoggableCommandSucceededEvent = {\n  address: string;\n  connectionId?: string | number;\n  requestId: number;\n  duration: number;\n  commandName: string;\n  reply: Document | undefined;\n  serviceId?: ObjectId;\n  name: typeof COMMAND_SUCCEEDED;\n  serverConnectionId: bigint | null;\n  databaseName: string;\n};\n\n/**\n * @internal\n * Must be separate from Events API due to differences in spec requirements for logging a command failure\n */\nexport type LoggableCommandFailedEvent = {\n  address: string;\n  connectionId?: string | number;\n  requestId: number;\n  duration: number;\n  commandName: string;\n  failure: Error;\n  serviceId?: ObjectId;\n  name: typeof COMMAND_FAILED;\n  serverConnectionId: bigint | null;\n  databaseName: string;\n};\n\n/**\n * @internal\n * Must be separate from Events API due to differences in spec requirements for logging server heartbeat beginning\n */\nexport type LoggableServerHeartbeatStartedEvent = {\n  topologyId: number;\n  awaited: boolean;\n  connectionId: string;\n  name: typeof SERVER_HEARTBEAT_STARTED;\n};\n\n/**\n * @internal\n * Must be separate from Events API due to differences in spec requirements for logging server heartbeat success\n */\nexport type LoggableServerHeartbeatSucceededEvent = {\n  topologyId: number;\n  awaited: boolean;\n  connectionId: string;\n  reply: Document;\n  serverConnectionId: number | '<monitor>';\n  duration: number;\n  name: typeof SERVER_HEARTBEAT_SUCCEEDED;\n};\n\n/**\n * @internal\n * Must be separate from Events API due to differences in spec requirements for logging server heartbeat failure\n */\nexport type LoggableServerHeartbeatFailedEvent = {\n  topologyId: number;\n  awaited: boolean;\n  connectionId: string;\n  failure: Error;\n  duration: number;\n  name: typeof SERVER_HEARTBEAT_FAILED;\n};\n\ntype SDAMLoggableEvent =\n  | ServerClosedEvent\n  | LoggableServerHeartbeatFailedEvent\n  | LoggableServerHeartbeatStartedEvent\n  | LoggableServerHeartbeatSucceededEvent\n  | ServerOpeningEvent\n  | TopologyClosedEvent\n  | TopologyDescriptionChangedEvent\n  | TopologyOpeningEvent;\n\n/** @internal */\nexport type LoggableEvent =\n  | ServerSelectionStartedEvent\n  | ServerSelectionFailedEvent\n  | ServerSelectionSucceededEvent\n  | WaitingForSuitableServerEvent\n  | CommandStartedEvent\n  | LoggableCommandSucceededEvent\n  | LoggableCommandFailedEvent\n  | ConnectionPoolCreatedEvent\n  | ConnectionPoolReadyEvent\n  | ConnectionPoolClosedEvent\n  | ConnectionPoolClearedEvent\n  | ConnectionCreatedEvent\n  | ConnectionReadyEvent\n  | ConnectionClosedEvent\n  | ConnectionCheckedInEvent\n  | ConnectionCheckedOutEvent\n  | ConnectionCheckOutStartedEvent\n  | ConnectionCheckOutFailedEvent\n  | ServerClosedEvent\n  | LoggableServerHeartbeatFailedEvent\n  | LoggableServerHeartbeatStartedEvent\n  | LoggableServerHeartbeatSucceededEvent\n  | ServerOpeningEvent\n  | TopologyClosedEvent\n  | TopologyDescriptionChangedEvent\n  | TopologyOpeningEvent;\n\n/** @internal */\nexport interface LogConvertible extends Record<string, any> {\n  toLog(): Record<string, any>;\n}\n\ntype BSONObject =\n  | BSONRegExp\n  | BSONSymbol\n  | Code\n  | DBRef\n  | Decimal128\n  | Double\n  | Int32\n  | Long\n  | MaxKey\n  | MinKey\n  | ObjectId\n  | Timestamp\n  | Binary;\n/** @internal */\nexport function stringifyWithMaxLen(\n  value: any,\n  maxDocumentLength: number,\n  options: EJSONOptions = {}\n): string {\n  let strToTruncate = '';\n\n  let currentLength = 0;\n  const maxDocumentLengthEnsurer = function maxDocumentLengthEnsurer(key: string, value: any) {\n    if (currentLength >= maxDocumentLength) {\n      return undefined;\n    }\n    // Account for root document\n    if (key === '') {\n      // Account for starting brace\n      currentLength += 1;\n      return value;\n    }\n\n    // +4 accounts for 2 quotation marks, colon and comma after value\n    // Note that this potentially undercounts since it does not account for escape sequences which\n    // will have an additional backslash added to them once passed through JSON.stringify.\n    currentLength += key.length + 4;\n\n    if (value == null) return value;\n\n    switch (typeof value) {\n      case 'string':\n        // +2 accounts for quotes\n        // Note that this potentially undercounts similarly to the key length calculation\n        currentLength += value.length + 2;\n        break;\n      case 'number':\n      case 'bigint':\n        currentLength += String(value).length;\n        break;\n      case 'boolean':\n        currentLength += value ? 4 : 5;\n        break;\n      case 'object':\n        if (isUint8Array(value)) {\n          // '{\"$binary\":{\"base64\":\"<base64 string>\",\"subType\":\"XX\"}}'\n          // This is an estimate based on the fact that the base64 is approximately 1.33x the length of\n          // the actual binary sequence https://en.wikipedia.org/wiki/Base64\n          currentLength += (22 + value.byteLength + value.byteLength * 0.33 + 18) | 0;\n        } else if ('_bsontype' in value) {\n          const v = value as BSONObject;\n          switch (v._bsontype) {\n            case 'Int32':\n              currentLength += String(v.value).length;\n              break;\n            case 'Double':\n              // Account for representing integers as <value>.0\n              currentLength +=\n                (v.value | 0) === v.value ? String(v.value).length + 2 : String(v.value).length;\n              break;\n            case 'Long':\n              currentLength += v.toString().length;\n              break;\n            case 'ObjectId':\n              // '{\"$oid\":\"XXXXXXXXXXXXXXXXXXXXXXXX\"}'\n              currentLength += 35;\n              break;\n            case 'MaxKey':\n            case 'MinKey':\n              // '{\"$maxKey\":1}' or '{\"$minKey\":1}'\n              currentLength += 13;\n              break;\n            case 'Binary':\n              // '{\"$binary\":{\"base64\":\"<base64 string>\",\"subType\":\"XX\"}}'\n              // This is an estimate based on the fact that the base64 is approximately 1.33x the length of\n              // the actual binary sequence https://en.wikipedia.org/wiki/Base64\n              currentLength += (22 + value.position + value.position * 0.33 + 18) | 0;\n              break;\n            case 'Timestamp':\n              // '{\"$timestamp\":{\"t\":<t>,\"i\":<i>}}'\n              currentLength += 19 + String(v.t).length + 5 + String(v.i).length + 2;\n              break;\n            case 'Code':\n              // '{\"$code\":\"<code>\"}' or '{\"$code\":\"<code>\",\"$scope\":<scope>}'\n              if (v.scope == null) {\n                currentLength += v.code.length + 10 + 2;\n              } else {\n                // Ignoring actual scope object, so this undercounts by a significant amount\n                currentLength += v.code.length + 10 + 11;\n              }\n              break;\n            case 'BSONRegExp':\n              // '{\"$regularExpression\":{\"pattern\":\"<pattern>\",\"options\":\"<options>\"}}'\n              currentLength += 34 + v.pattern.length + 13 + v.options.length + 3;\n              break;\n          }\n        }\n    }\n    return value;\n  };\n\n  if (typeof value === 'string') {\n    strToTruncate = value;\n  } else if (typeof value === 'function') {\n    strToTruncate = value.name;\n  } else {\n    try {\n      if (maxDocumentLength !== 0) {\n        strToTruncate = EJSON.stringify(value, maxDocumentLengthEnsurer, 0, options);\n      } else {\n        strToTruncate = EJSON.stringify(value, options);\n      }\n    } catch (e) {\n      strToTruncate = `Extended JSON serialization failed with: ${e.message}`;\n    }\n  }\n\n  // handle truncation that occurs in the middle of multi-byte codepoints\n  if (\n    maxDocumentLength !== 0 &&\n    strToTruncate.length > maxDocumentLength &&\n    strToTruncate.charCodeAt(maxDocumentLength - 1) !==\n      strToTruncate.codePointAt(maxDocumentLength - 1)\n  ) {\n    maxDocumentLength--;\n    if (maxDocumentLength === 0) {\n      return '';\n    }\n  }\n\n  return maxDocumentLength !== 0 && strToTruncate.length > maxDocumentLength\n    ? `${strToTruncate.slice(0, maxDocumentLength)}...`\n    : strToTruncate;\n}\n\n/** @internal */\nexport type Loggable = LoggableEvent | LogConvertible;\n\nfunction isLogConvertible(obj: Loggable): obj is LogConvertible {\n  const objAsLogConvertible = obj as LogConvertible;\n  // eslint-disable-next-line no-restricted-syntax\n  return objAsLogConvertible.toLog !== undefined && typeof objAsLogConvertible.toLog === 'function';\n}\n\nfunction attachServerSelectionFields(\n  log: Record<string, any>,\n  serverSelectionEvent: ServerSelectionEvent,\n  maxDocumentLength: number = DEFAULT_MAX_DOCUMENT_LENGTH\n) {\n  const { selector, operation, topologyDescription, message } = serverSelectionEvent;\n  log.selector = stringifyWithMaxLen(selector, maxDocumentLength);\n  log.operation = operation;\n  log.topologyDescription = stringifyWithMaxLen(topologyDescription, maxDocumentLength);\n  log.message = message;\n\n  return log;\n}\n\nfunction attachCommandFields(\n  log: Record<string, any>,\n  commandEvent: CommandStartedEvent | LoggableCommandSucceededEvent | LoggableCommandFailedEvent\n) {\n  log.commandName = commandEvent.commandName;\n  log.requestId = commandEvent.requestId;\n  log.driverConnectionId = commandEvent.connectionId;\n  const { host, port } = HostAddress.fromString(commandEvent.address).toHostPort();\n  log.serverHost = host;\n  log.serverPort = port;\n  if (commandEvent?.serviceId) {\n    log.serviceId = commandEvent.serviceId.toHexString();\n  }\n  log.databaseName = commandEvent.databaseName;\n  log.serverConnectionId = commandEvent.serverConnectionId;\n\n  return log;\n}\n\nfunction attachConnectionFields(log: Record<string, any>, event: any) {\n  const { host, port } = HostAddress.fromString(event.address).toHostPort();\n  log.serverHost = host;\n  log.serverPort = port;\n\n  return log;\n}\n\nfunction attachSDAMFields(log: Record<string, any>, sdamEvent: SDAMLoggableEvent) {\n  log.topologyId = sdamEvent.topologyId;\n  return log;\n}\n\nfunction attachServerHeartbeatFields(\n  log: Record<string, any>,\n  serverHeartbeatEvent:\n    | LoggableServerHeartbeatFailedEvent\n    | LoggableServerHeartbeatStartedEvent\n    | LoggableServerHeartbeatSucceededEvent\n) {\n  const { awaited, connectionId } = serverHeartbeatEvent;\n  log.awaited = awaited;\n  log.driverConnectionId = serverHeartbeatEvent.connectionId;\n  const { host, port } = HostAddress.fromString(connectionId).toHostPort();\n  log.serverHost = host;\n  log.serverPort = port;\n  return log;\n}\n\n/** @internal */\nexport function defaultLogTransform(\n  logObject: LoggableEvent | Record<string, any>,\n  maxDocumentLength: number = DEFAULT_MAX_DOCUMENT_LENGTH\n): Omit<Log, 's' | 't' | 'c'> {\n  let log: Omit<Log, 's' | 't' | 'c'> = Object.create(null);\n\n  switch (logObject.name) {\n    case SERVER_SELECTION_STARTED:\n      log = attachServerSelectionFields(log, logObject, maxDocumentLength);\n      return log;\n    case SERVER_SELECTION_FAILED:\n      log = attachServerSelectionFields(log, logObject, maxDocumentLength);\n      log.failure = logObject.failure?.message;\n      return log;\n    case SERVER_SELECTION_SUCCEEDED:\n      log = attachServerSelectionFields(log, logObject, maxDocumentLength);\n      log.serverHost = logObject.serverHost;\n      log.serverPort = logObject.serverPort;\n      return log;\n    case WAITING_FOR_SUITABLE_SERVER:\n      log = attachServerSelectionFields(log, logObject, maxDocumentLength);\n      log.remainingTimeMS = logObject.remainingTimeMS;\n      return log;\n    case COMMAND_STARTED:\n      log = attachCommandFields(log, logObject);\n      log.message = 'Command started';\n      log.command = stringifyWithMaxLen(logObject.command, maxDocumentLength, { relaxed: true });\n      log.databaseName = logObject.databaseName;\n      return log;\n    case COMMAND_SUCCEEDED:\n      log = attachCommandFields(log, logObject);\n      log.message = 'Command succeeded';\n      log.durationMS = logObject.duration;\n      log.reply = stringifyWithMaxLen(logObject.reply, maxDocumentLength, { relaxed: true });\n      return log;\n    case COMMAND_FAILED:\n      log = attachCommandFields(log, logObject);\n      log.message = 'Command failed';\n      log.durationMS = logObject.duration;\n      log.failure = logObject.failure?.message ?? '(redacted)';\n      return log;\n    case CONNECTION_POOL_CREATED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection pool created';\n      if (logObject.options) {\n        const { maxIdleTimeMS, minPoolSize, maxPoolSize, maxConnecting, waitQueueTimeoutMS } =\n          logObject.options;\n        log = {\n          ...log,\n          maxIdleTimeMS,\n          minPoolSize,\n          maxPoolSize,\n          maxConnecting,\n          waitQueueTimeoutMS\n        };\n      }\n      return log;\n    case CONNECTION_POOL_READY:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection pool ready';\n      return log;\n    case CONNECTION_POOL_CLEARED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection pool cleared';\n      if (logObject.serviceId?._bsontype === 'ObjectId') {\n        log.serviceId = logObject.serviceId?.toHexString();\n      }\n      return log;\n    case CONNECTION_POOL_CLOSED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection pool closed';\n      return log;\n    case CONNECTION_CREATED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection created';\n      log.driverConnectionId = logObject.connectionId;\n      return log;\n    case CONNECTION_READY:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection ready';\n      log.driverConnectionId = logObject.connectionId;\n      log.durationMS = logObject.durationMS;\n      return log;\n    case CONNECTION_CLOSED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection closed';\n      log.driverConnectionId = logObject.connectionId;\n      switch (logObject.reason) {\n        case 'stale':\n          log.reason = 'Connection became stale because the pool was cleared';\n          break;\n        case 'idle':\n          log.reason =\n            'Connection has been available but unused for longer than the configured max idle time';\n          break;\n        case 'error':\n          log.reason = 'An error occurred while using the connection';\n          if (logObject.error) {\n            log.error = logObject.error;\n          }\n          break;\n        case 'poolClosed':\n          log.reason = 'Connection pool was closed';\n          break;\n        default:\n          log.reason = `Unknown close reason: ${logObject.reason}`;\n      }\n      return log;\n    case CONNECTION_CHECK_OUT_STARTED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection checkout started';\n      return log;\n    case CONNECTION_CHECK_OUT_FAILED:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection checkout failed';\n      switch (logObject.reason) {\n        case 'poolClosed':\n          log.reason = 'Connection pool was closed';\n          break;\n        case 'timeout':\n          log.reason = 'Wait queue timeout elapsed without a connection becoming available';\n          break;\n        case 'connectionError':\n          log.reason = 'An error occurred while trying to establish a new connection';\n          if (logObject.error) {\n            log.error = logObject.error;\n          }\n          break;\n        default:\n          log.reason = `Unknown close reason: ${logObject.reason}`;\n      }\n      log.durationMS = logObject.durationMS;\n      return log;\n    case CONNECTION_CHECKED_OUT:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection checked out';\n      log.driverConnectionId = logObject.connectionId;\n      log.durationMS = logObject.durationMS;\n      return log;\n    case CONNECTION_CHECKED_IN:\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Connection checked in';\n      log.driverConnectionId = logObject.connectionId;\n      return log;\n    case SERVER_OPENING:\n      log = attachSDAMFields(log, logObject);\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Starting server monitoring';\n      return log;\n    case SERVER_CLOSED:\n      log = attachSDAMFields(log, logObject);\n      log = attachConnectionFields(log, logObject);\n      log.message = 'Stopped server monitoring';\n      return log;\n    case SERVER_HEARTBEAT_STARTED:\n      log = attachSDAMFields(log, logObject);\n      log = attachServerHeartbeatFields(log, logObject);\n      log.message = 'Server heartbeat started';\n      return log;\n    case SERVER_HEARTBEAT_SUCCEEDED:\n      log = attachSDAMFields(log, logObject);\n      log = attachServerHeartbeatFields(log, logObject);\n      log.message = 'Server heartbeat succeeded';\n      log.durationMS = logObject.duration;\n      log.serverConnectionId = logObject.serverConnectionId;\n      log.reply = stringifyWithMaxLen(logObject.reply, maxDocumentLength, { relaxed: true });\n      return log;\n    case SERVER_HEARTBEAT_FAILED:\n      log = attachSDAMFields(log, logObject);\n      log = attachServerHeartbeatFields(log, logObject);\n      log.message = 'Server heartbeat failed';\n      log.durationMS = logObject.duration;\n      log.failure = logObject.failure?.message;\n      return log;\n    case TOPOLOGY_OPENING:\n      log = attachSDAMFields(log, logObject);\n      log.message = 'Starting topology monitoring';\n      return log;\n    case TOPOLOGY_CLOSED:\n      log = attachSDAMFields(log, logObject);\n      log.message = 'Stopped topology monitoring';\n      return log;\n    case TOPOLOGY_DESCRIPTION_CHANGED:\n      log = attachSDAMFields(log, logObject);\n      log.message = 'Topology description changed';\n      log.previousDescription = log.reply = stringifyWithMaxLen(\n        logObject.previousDescription,\n        maxDocumentLength\n      );\n      log.newDescription = log.reply = stringifyWithMaxLen(\n        logObject.newDescription,\n        maxDocumentLength\n      );\n      return log;\n    default:\n      for (const [key, value] of Object.entries(logObject)) {\n        if (value != null) log[key] = value;\n      }\n  }\n  return log;\n}\n\n/** @internal */\nexport class MongoLogger {\n  componentSeverities: Record<MongoLoggableComponent, SeverityLevel>;\n  maxDocumentLength: number;\n  logDestination: MongoDBLogWritable;\n  logDestinationIsStdErr: boolean;\n  pendingLog: PromiseLike<unknown> | unknown = null;\n  private severities: Record<MongoLoggableComponent, Record<SeverityLevel, boolean>>;\n\n  /**\n   * This method should be used when logging errors that do not have a public driver API for\n   * reporting errors.\n   */\n  error = this.log.bind(this, 'error');\n  /**\n   * This method should be used to log situations where undesirable application behaviour might\n   * occur. For example, failing to end sessions on `MongoClient.close`.\n   */\n  warn = this.log.bind(this, 'warn');\n  /**\n   * This method should be used to report high-level information about normal driver behaviour.\n   * For example, the creation of a `MongoClient`.\n   */\n  info = this.log.bind(this, 'info');\n  /**\n   * This method should be used to report information that would be helpful when debugging an\n   * application. For example, a command starting, succeeding or failing.\n   */\n  debug = this.log.bind(this, 'debug');\n  /**\n   * This method should be used to report fine-grained details related to logic flow. For example,\n   * entering and exiting a function body.\n   */\n  trace = this.log.bind(this, 'trace');\n\n  constructor(options: MongoLoggerOptions) {\n    this.componentSeverities = options.componentSeverities;\n    this.maxDocumentLength = options.maxDocumentLength;\n    this.logDestination = options.logDestination;\n    this.logDestinationIsStdErr = options.logDestinationIsStdErr;\n    this.severities = this.createLoggingSeverities();\n  }\n\n  createLoggingSeverities(): Record<MongoLoggableComponent, Record<SeverityLevel, boolean>> {\n    const severities = Object();\n    for (const component of Object.values(MongoLoggableComponent)) {\n      severities[component] = {};\n      for (const severityLevel of Object.values(SeverityLevel)) {\n        severities[component][severityLevel] =\n          compareSeverity(severityLevel, this.componentSeverities[component]) <= 0;\n      }\n    }\n    return severities;\n  }\n\n  turnOffSeverities() {\n    for (const component of Object.values(MongoLoggableComponent)) {\n      this.componentSeverities[component] = SeverityLevel.OFF;\n      for (const severityLevel of Object.values(SeverityLevel)) {\n        this.severities[component][severityLevel] = false;\n      }\n    }\n  }\n\n  private logWriteFailureHandler(error: Error) {\n    if (this.logDestinationIsStdErr) {\n      this.turnOffSeverities();\n      this.clearPendingLog();\n      return;\n    }\n    this.logDestination = createStdioLogger(process.stderr);\n    this.logDestinationIsStdErr = true;\n    this.clearPendingLog();\n    this.error(MongoLoggableComponent.CLIENT, {\n      toLog: function () {\n        return {\n          message: 'User input for mongodbLogPath is now invalid. Logging is halted.',\n          error: error.message\n        };\n      }\n    });\n    this.turnOffSeverities();\n    this.clearPendingLog();\n  }\n\n  private clearPendingLog() {\n    this.pendingLog = null;\n  }\n\n  willLog(component: MongoLoggableComponent, severity: SeverityLevel): boolean {\n    if (severity === SeverityLevel.OFF) return false;\n    return this.severities[component][severity];\n  }\n\n  private log(\n    severity: SeverityLevel,\n    component: MongoLoggableComponent,\n    message: Loggable | string\n  ): void {\n    if (!this.willLog(component, severity)) return;\n\n    let logMessage: Log = { t: new Date(), c: component, s: severity };\n    if (typeof message === 'string') {\n      logMessage.message = message;\n    } else if (typeof message === 'object') {\n      if (isLogConvertible(message)) {\n        logMessage = { ...logMessage, ...message.toLog() };\n      } else {\n        logMessage = { ...logMessage, ...defaultLogTransform(message, this.maxDocumentLength) };\n      }\n    }\n\n    if (isPromiseLike(this.pendingLog)) {\n      this.pendingLog = this.pendingLog\n\n        .then(() => this.logDestination.write(logMessage))\n\n        .then(this.clearPendingLog.bind(this), this.logWriteFailureHandler.bind(this));\n      return;\n    }\n\n    try {\n      const logResult = this.logDestination.write(logMessage);\n      if (isPromiseLike(logResult)) {\n        this.pendingLog = logResult.then(\n          this.clearPendingLog.bind(this),\n          this.logWriteFailureHandler.bind(this)\n        );\n      }\n    } catch (error) {\n      this.logWriteFailureHandler(error);\n    }\n  }\n\n  /**\n   * Merges options set through environment variables and the MongoClient, preferring environment\n   * variables when both are set, and substituting defaults for values not set. Options set in\n   * constructor take precedence over both environment variables and MongoClient options.\n   *\n   * @remarks\n   * When parsing component severity levels, invalid values are treated as unset and replaced with\n   * the default severity.\n   *\n   * @param envOptions - options set for the logger from the environment\n   * @param clientOptions - options set for the logger in the MongoClient options\n   * @returns a MongoLoggerOptions object to be used when instantiating a new MongoLogger\n   */\n  static resolveOptions(\n    envOptions: MongoLoggerEnvOptions,\n    clientOptions: MongoLoggerMongoClientOptions\n  ): MongoLoggerOptions {\n    // client options take precedence over env options\n    const resolvedLogPath = resolveLogPath(envOptions, clientOptions);\n    const combinedOptions = {\n      ...envOptions,\n      ...clientOptions,\n      mongodbLogPath: resolvedLogPath.mongodbLogPath,\n      mongodbLogPathIsStdErr: resolvedLogPath.mongodbLogPathIsStdErr\n    };\n    const defaultSeverity = resolveSeverityConfiguration(\n      combinedOptions.mongodbLogComponentSeverities?.default,\n      combinedOptions.MONGODB_LOG_ALL,\n      SeverityLevel.OFF\n    );\n\n    return {\n      componentSeverities: {\n        command: resolveSeverityConfiguration(\n          combinedOptions.mongodbLogComponentSeverities?.command,\n          combinedOptions.MONGODB_LOG_COMMAND,\n          defaultSeverity\n        ),\n        topology: resolveSeverityConfiguration(\n          combinedOptions.mongodbLogComponentSeverities?.topology,\n          combinedOptions.MONGODB_LOG_TOPOLOGY,\n          defaultSeverity\n        ),\n        serverSelection: resolveSeverityConfiguration(\n          combinedOptions.mongodbLogComponentSeverities?.serverSelection,\n          combinedOptions.MONGODB_LOG_SERVER_SELECTION,\n          defaultSeverity\n        ),\n        connection: resolveSeverityConfiguration(\n          combinedOptions.mongodbLogComponentSeverities?.connection,\n          combinedOptions.MONGODB_LOG_CONNECTION,\n          defaultSeverity\n        ),\n        client: resolveSeverityConfiguration(\n          combinedOptions.mongodbLogComponentSeverities?.client,\n          combinedOptions.MONGODB_LOG_CLIENT,\n          defaultSeverity\n        ),\n        default: defaultSeverity\n      },\n      maxDocumentLength:\n        combinedOptions.mongodbLogMaxDocumentLength ??\n        parseUnsignedInteger(combinedOptions.MONGODB_LOG_MAX_DOCUMENT_LENGTH) ??\n        1000,\n      logDestination: combinedOptions.mongodbLogPath,\n      logDestinationIsStdErr: combinedOptions.mongodbLogPathIsStdErr\n    };\n  }\n}\n", "import { EventEmitter } from 'events';\n\nimport type {\n  Binary,\n  BSONRegExp,\n  BSONType,\n  Decimal128,\n  Document,\n  Double,\n  Int32,\n  Long,\n  ObjectId,\n  ObjectIdLike,\n  Timestamp\n} from './bson';\nimport { type CommandStartedEvent } from './cmap/command_monitoring_events';\nimport {\n  type LoggableCommandFailedEvent,\n  type LoggableCommandSucceededEvent,\n  type LoggableServerHeartbeatFailedEvent,\n  type LoggableServerHeartbeatStartedEvent,\n  type LoggableServerHeartbeatSucceededEvent,\n  MongoLoggableComponent,\n  type MongoLogger\n} from './mongo_logger';\nimport type { Sort } from './sort';\nimport { noop } from './utils';\n\n/** @internal */\nexport type TODO_NODE_3286 = any;\n\n/** Given an object shaped type, return the type of the _id field or default to ObjectId @public */\nexport type InferIdType<TSchema> = TSchema extends { _id: infer IdType }\n  ? // user has defined a type for _id\n    Record<any, never> extends IdType\n    ? never // explicitly forbid empty objects as the type of _id\n    : IdType\n  : TSchema extends { _id?: infer IdType }\n    ? // optional _id defined - return ObjectId | IdType\n      unknown extends IdType\n      ? ObjectId // infer the _id type as ObjectId if the type of _id is unknown\n      : IdType\n    : ObjectId; // user has not defined _id on schema\n\n/** Add an _id field to an object shaped type @public */\nexport type WithId<TSchema> = EnhancedOmit<TSchema, '_id'> & { _id: InferIdType<TSchema> };\n\n/**\n * Add an optional _id field to an object shaped type\n * @public\n */\nexport type OptionalId<TSchema> = EnhancedOmit<TSchema, '_id'> & { _id?: InferIdType<TSchema> };\n\n/**\n * Adds an optional _id field to an object shaped type, unless the _id field is required on that type.\n * In the case _id is required, this method continues to require_id.\n *\n * @public\n *\n * @privateRemarks\n * `ObjectId extends TSchema['_id']` is a confusing ordering at first glance. Rather than ask\n * `TSchema['_id'] extends ObjectId` which translated to \"Is the _id property ObjectId?\"\n * we instead ask \"Does ObjectId look like (have the same shape) as the _id?\"\n */\nexport type OptionalUnlessRequiredId<TSchema> = TSchema extends { _id: any }\n  ? TSchema\n  : OptionalId<TSchema>;\n\n/** TypeScript Omit (Exclude to be specific) does not work for objects with an \"any\" indexed type, and breaks discriminated unions @public */\nexport type EnhancedOmit<TRecordOrUnion, KeyUnion> = string extends keyof TRecordOrUnion\n  ? TRecordOrUnion // TRecordOrUnion has indexed type e.g. { _id: string; [k: string]: any; } or it is \"any\"\n  : TRecordOrUnion extends any\n    ? Pick<TRecordOrUnion, Exclude<keyof TRecordOrUnion, KeyUnion>> // discriminated unions\n    : never;\n\n/** Remove the _id field from an object shaped type @public */\nexport type WithoutId<TSchema> = Omit<TSchema, '_id'>;\n\n/** A MongoDB filter can be some portion of the schema or a set of operators @public */\nexport type Filter<TSchema> = {\n  [P in keyof WithId<TSchema>]?: Condition<WithId<TSchema>[P]>;\n} & RootFilterOperators<WithId<TSchema>>;\n\n/** @public */\nexport type Condition<T> = AlternativeType<T> | FilterOperators<AlternativeType<T>>;\n\n/**\n * It is possible to search using alternative types in mongodb e.g.\n * string types can be searched using a regex in mongo\n * array types can be searched using their element type\n * @public\n */\nexport type AlternativeType<T> =\n  T extends ReadonlyArray<infer U> ? T | RegExpOrString<U> : RegExpOrString<T>;\n\n/** @public */\nexport type RegExpOrString<T> = T extends string ? BSONRegExp | RegExp | T : T;\n\n/** @public */\nexport interface RootFilterOperators<TSchema> extends Document {\n  $and?: Filter<TSchema>[];\n  $nor?: Filter<TSchema>[];\n  $or?: Filter<TSchema>[];\n  $text?: {\n    $search: string;\n    $language?: string;\n    $caseSensitive?: boolean;\n    $diacriticSensitive?: boolean;\n  };\n  $where?: string | ((this: TSchema) => boolean);\n  $comment?: string | Document;\n}\n\n/**\n * @public\n * A type that extends Document but forbids anything that \"looks like\" an object id.\n */\nexport type NonObjectIdLikeDocument = {\n  [key in keyof ObjectIdLike]?: never;\n} & Document;\n\n/** @public */\nexport interface FilterOperators<TValue> extends NonObjectIdLikeDocument {\n  // Comparison\n  $eq?: TValue;\n  $gt?: TValue;\n  $gte?: TValue;\n  $in?: ReadonlyArray<TValue>;\n  $lt?: TValue;\n  $lte?: TValue;\n  $ne?: TValue;\n  $nin?: ReadonlyArray<TValue>;\n  // Logical\n  $not?: TValue extends string ? FilterOperators<TValue> | RegExp : FilterOperators<TValue>;\n  // Element\n  /**\n   * When `true`, `$exists` matches the documents that contain the field,\n   * including documents where the field value is null.\n   */\n  $exists?: boolean;\n  $type?: BSONType | BSONTypeAlias;\n  // Evaluation\n  $expr?: Record<string, any>;\n  $jsonSchema?: Record<string, any>;\n  $mod?: TValue extends number ? [number, number] : never;\n  $regex?: TValue extends string ? RegExp | BSONRegExp | string : never;\n  $options?: TValue extends string ? string : never;\n  // Geospatial\n  $geoIntersects?: { $geometry: Document };\n  $geoWithin?: Document;\n  $near?: Document;\n  $nearSphere?: Document;\n  $maxDistance?: number;\n  // Array\n  $all?: ReadonlyArray<any>;\n  $elemMatch?: Document;\n  $size?: TValue extends ReadonlyArray<any> ? number : never;\n  // Bitwise\n  $bitsAllClear?: BitwiseFilter;\n  $bitsAllSet?: BitwiseFilter;\n  $bitsAnyClear?: BitwiseFilter;\n  $bitsAnySet?: BitwiseFilter;\n  $rand?: Record<string, never>;\n}\n\n/** @public */\nexport type BitwiseFilter =\n  | number /** numeric bit mask */\n  | Binary /** BinData bit mask */\n  | ReadonlyArray<number>; /** `[ <position1>, <position2>, ... ]` */\n\n/** @public */\nexport type BSONTypeAlias = keyof typeof BSONType;\n\n/** @public */\nexport type IsAny<Type, ResultIfAny, ResultIfNotAny> = true extends false & Type\n  ? ResultIfAny\n  : ResultIfNotAny;\n\n/** @public */\nexport type Flatten<Type> = Type extends ReadonlyArray<infer Item> ? Item : Type;\n\n/** @public */\nexport type ArrayElement<Type> = Type extends ReadonlyArray<infer Item> ? Item : never;\n\n/** @public */\nexport type SchemaMember<T, V> = { [P in keyof T]?: V } | { [key: string]: V };\n\n/** @public */\nexport type IntegerType = number | Int32 | Long | bigint;\n\n/** @public */\nexport type NumericType = IntegerType | Decimal128 | Double;\n\n/** @public */\nexport type FilterOperations<T> =\n  T extends Record<string, any>\n    ? { [key in keyof T]?: FilterOperators<T[key]> }\n    : FilterOperators<T>;\n\n/** @public */\nexport type KeysOfAType<TSchema, Type> = {\n  [key in keyof TSchema]: NonNullable<TSchema[key]> extends Type ? key : never;\n}[keyof TSchema];\n\n/** @public */\nexport type KeysOfOtherType<TSchema, Type> = {\n  [key in keyof TSchema]: NonNullable<TSchema[key]> extends Type ? never : key;\n}[keyof TSchema];\n\n/** @public */\nexport type AcceptedFields<TSchema, FieldType, AssignableType> = {\n  readonly [key in KeysOfAType<TSchema, FieldType>]?: AssignableType;\n};\n\n/** It avoids using fields with not acceptable types @public */\nexport type NotAcceptedFields<TSchema, FieldType> = {\n  readonly [key in KeysOfOtherType<TSchema, FieldType>]?: never;\n};\n\n/** @public */\nexport type OnlyFieldsOfType<TSchema, FieldType = any, AssignableType = FieldType> = IsAny<\n  TSchema[keyof TSchema],\n  AssignableType extends FieldType ? Record<string, FieldType> : Record<string, AssignableType>,\n  AcceptedFields<TSchema, FieldType, AssignableType> &\n    NotAcceptedFields<TSchema, FieldType> &\n    Record<string, AssignableType>\n>;\n\n/** @public */\nexport type MatchKeysAndValues<TSchema> = Readonly<Partial<TSchema>> & Record<string, any>;\n\n/** @public */\nexport type AddToSetOperators<Type> = {\n  $each?: Array<Flatten<Type>>;\n};\n\n/** @public */\nexport type ArrayOperator<Type> = {\n  $each?: Array<Flatten<Type>>;\n  $slice?: number;\n  $position?: number;\n  $sort?: Sort;\n};\n\n/** @public */\nexport type SetFields<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any> | undefined>]?:\n    | OptionalId<Flatten<TSchema[key]>>\n    | AddToSetOperators<Array<OptionalId<Flatten<TSchema[key]>>>>;\n} & IsAny<\n  TSchema[keyof TSchema],\n  object,\n  NotAcceptedFields<TSchema, ReadonlyArray<any> | undefined>\n>) & {\n  readonly [key: string]: AddToSetOperators<any> | any;\n};\n\n/** @public */\nexport type PushOperator<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any>>]?:\n    | Flatten<TSchema[key]>\n    | ArrayOperator<Array<Flatten<TSchema[key]>>>;\n} & NotAcceptedFields<TSchema, ReadonlyArray<any>>) & {\n  readonly [key: string]: ArrayOperator<any> | any;\n};\n\n/** @public */\nexport type PullOperator<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any>>]?:\n    | Partial<Flatten<TSchema[key]>>\n    | FilterOperations<Flatten<TSchema[key]>>;\n} & NotAcceptedFields<TSchema, ReadonlyArray<any>>) & {\n  readonly [key: string]: FilterOperators<any> | any;\n};\n\n/** @public */\nexport type PullAllOperator<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any>>]?: TSchema[key];\n} & NotAcceptedFields<TSchema, ReadonlyArray<any>>) & {\n  readonly [key: string]: ReadonlyArray<any>;\n};\n\n/** @public */\nexport type UpdateFilter<TSchema> = {\n  $currentDate?: OnlyFieldsOfType<\n    TSchema,\n    Date | Timestamp,\n    true | { $type: 'date' | 'timestamp' }\n  >;\n  $inc?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $min?: MatchKeysAndValues<TSchema>;\n  $max?: MatchKeysAndValues<TSchema>;\n  $mul?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $rename?: Record<string, string>;\n  $set?: MatchKeysAndValues<TSchema>;\n  $setOnInsert?: MatchKeysAndValues<TSchema>;\n  $unset?: OnlyFieldsOfType<TSchema, any, '' | true | 1>;\n  $addToSet?: SetFields<TSchema>;\n  $pop?: OnlyFieldsOfType<TSchema, ReadonlyArray<any>, 1 | -1>;\n  $pull?: PullOperator<TSchema>;\n  $push?: PushOperator<TSchema>;\n  $pullAll?: PullAllOperator<TSchema>;\n  $bit?: OnlyFieldsOfType<\n    TSchema,\n    NumericType | undefined,\n    { and: IntegerType } | { or: IntegerType } | { xor: IntegerType }\n  >;\n} & Document;\n\n/** @public */\nexport type Nullable<AnyType> = AnyType | null | undefined;\n\n/** @public */\nexport type OneOrMore<T> = T | ReadonlyArray<T>;\n\n/** @public */\nexport type GenericListener = (...args: any[]) => void;\n\n/**\n * Event description type\n * @public\n */\nexport type EventsDescription = Record<string, GenericListener>;\n\n/** @public */\nexport type CommonEvents = 'newListener' | 'removeListener';\n\n/**\n * Typescript type safe event emitter\n * @public\n */\nexport declare interface TypedEventEmitter<Events extends EventsDescription> extends EventEmitter {\n  addListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  addListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  addListener(event: string | symbol, listener: GenericListener): this;\n\n  on<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  on(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  on(event: string | symbol, listener: GenericListener): this;\n\n  once<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  once(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  once(event: string | symbol, listener: GenericListener): this;\n\n  removeListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  removeListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  removeListener(event: string | symbol, listener: GenericListener): this;\n\n  off<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  off(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  off(event: string | symbol, listener: GenericListener): this;\n\n  removeAllListeners<EventKey extends keyof Events>(\n    event?: EventKey | CommonEvents | symbol | string\n  ): this;\n\n  listeners<EventKey extends keyof Events>(\n    event: EventKey | CommonEvents | symbol | string\n  ): Events[EventKey][];\n\n  rawListeners<EventKey extends keyof Events>(\n    event: EventKey | CommonEvents | symbol | string\n  ): Events[EventKey][];\n\n  emit<EventKey extends keyof Events>(\n    event: EventKey | symbol,\n    ...args: Parameters<Events[EventKey]>\n  ): boolean;\n\n  listenerCount<EventKey extends keyof Events>(\n    type: EventKey | CommonEvents | symbol | string\n  ): number;\n\n  prependListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  prependListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  prependListener(event: string | symbol, listener: GenericListener): this;\n\n  prependOnceListener<EventKey extends keyof Events>(\n    event: EventKey,\n    listener: Events[EventKey]\n  ): this;\n  prependOnceListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  prependOnceListener(event: string | symbol, listener: GenericListener): this;\n\n  eventNames(): string[];\n  getMaxListeners(): number;\n  setMaxListeners(n: number): this;\n}\n\n/**\n * Typescript type safe event emitter\n * @public\n */\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class TypedEventEmitter<Events extends EventsDescription> extends EventEmitter {\n  /** @internal */\n  protected mongoLogger?: MongoLogger;\n  /** @internal */\n  protected component?: MongoLoggableComponent;\n  /** @internal */\n  emitAndLog<EventKey extends keyof Events>(\n    event: EventKey | symbol,\n    ...args: Parameters<Events[EventKey]>\n  ): void {\n    this.emit(event, ...args);\n    if (this.component) this.mongoLogger?.debug(this.component, args[0]);\n  }\n  /** @internal */\n  emitAndLogHeartbeat<EventKey extends keyof Events>(\n    event: EventKey | symbol,\n    topologyId: number,\n    serverConnectionId?: number | '<monitor>',\n    ...args: Parameters<Events[EventKey]>\n  ): void {\n    this.emit(event, ...args);\n    if (this.component) {\n      const loggableHeartbeatEvent:\n        | LoggableServerHeartbeatFailedEvent\n        | LoggableServerHeartbeatSucceededEvent\n        | LoggableServerHeartbeatStartedEvent = {\n        topologyId: topologyId,\n        serverConnectionId: serverConnectionId ?? null,\n        ...args[0]\n      };\n      this.mongoLogger?.debug(this.component, loggableHeartbeatEvent);\n    }\n  }\n  /** @internal */\n  emitAndLogCommand<EventKey extends keyof Events>(\n    monitorCommands: boolean,\n    event: EventKey | symbol,\n    databaseName: string,\n    connectionEstablished: boolean,\n    ...args: Parameters<Events[EventKey]>\n  ): void {\n    if (monitorCommands) {\n      this.emit(event, ...args);\n    }\n    if (connectionEstablished) {\n      const loggableCommandEvent:\n        | CommandStartedEvent\n        | LoggableCommandFailedEvent\n        | LoggableCommandSucceededEvent = {\n        databaseName: databaseName,\n        ...args[0]\n      };\n      this.mongoLogger?.debug(MongoLoggableComponent.COMMAND, loggableCommandEvent);\n    }\n  }\n}\n\n/** @public */\nexport class CancellationToken extends TypedEventEmitter<{ cancel(): void }> {\n  constructor(...args: any[]) {\n    super(...args);\n    this.on('error', noop);\n  }\n}\n\n/** @public */\nexport type Abortable = {\n  /**\n   * @experimental\n   * When provided, the corresponding `AbortController` can be used to abort an asynchronous action.\n   *\n   * The `signal.reason` value is used as the error thrown.\n   *\n   * @remarks\n   * **NOTE:** If an abort signal aborts an operation while the driver is writing to the underlying\n   * socket or reading the response from the server, the socket will be closed.\n   * If signals are aborted at a high rate during socket read/writes this can lead to a high rate of connection reestablishment.\n   *\n   * We plan to mitigate this in a future release, please follow NODE-6062 (`timeoutMS` expiration suffers the same limitation).\n   *\n   * AbortSignals are likely a best fit for human interactive interruption (ex. ctrl-C) where the frequency\n   * of cancellation is reasonably low. If a signal is programmatically aborted for 100s of operations you can empty\n   * the driver's connection pool.\n   *\n   * @example\n   * ```js\n   * const controller = new AbortController();\n   * const { signal } = controller;\n   * process.on('SIGINT', () => controller.abort(new Error('^C pressed')));\n   *\n   * try {\n   *   const res = await fetch('...', { signal });\n   *   await collection.findOne(await res.json(), { signal });\n   * catch (error) {\n   *   if (error === signal.reason) {\n   *     // signal abort error handling\n   *   }\n   * }\n   * ```\n   */\n  signal?: AbortSignal | undefined;\n};\n\n/**\n * Helper types for dot-notation filter attributes\n */\n\n/** @public */\nexport type Join<T extends unknown[], D extends string> = T extends []\n  ? ''\n  : T extends [string | number]\n    ? `${T[0]}`\n    : T extends [string | number, ...infer R]\n      ? `${T[0]}${D}${Join<R, D>}`\n      : string;\n\n/** @public */\nexport type PropertyType<Type, Property extends string> = string extends Property\n  ? unknown\n  : Property extends keyof Type\n    ? Type[Property]\n    : Property extends `${number}`\n      ? Type extends ReadonlyArray<infer ArrayType>\n        ? ArrayType\n        : unknown\n      : Property extends `${infer Key}.${infer Rest}`\n        ? Key extends `${number}`\n          ? Type extends ReadonlyArray<infer ArrayType>\n            ? PropertyType<ArrayType, Rest>\n            : unknown\n          : Key extends keyof Type\n            ? Type[Key] extends Map<string, infer MapType>\n              ? MapType\n              : PropertyType<Type[Key], Rest>\n            : unknown\n        : unknown;\n\n/**\n * @public\n * returns tuple of strings (keys to be joined on '.') that represent every path into a schema\n * https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/\n *\n * @remarks\n * Through testing we determined that a depth of 8 is safe for the typescript compiler\n * and provides reasonable compilation times. This number is otherwise not special and\n * should be changed if issues are found with this level of checking. Beyond this\n * depth any helpers that make use of NestedPaths should devolve to not asserting any\n * type safety on the input.\n */\nexport type NestedPaths<Type, Depth extends number[]> = Depth['length'] extends 8\n  ? []\n  : Type extends\n        | string\n        | number\n        | bigint\n        | boolean\n        | Date\n        | RegExp\n        | Buffer\n        | Uint8Array\n        | ((...args: any[]) => any)\n        | { _bsontype: string }\n    ? []\n    : Type extends ReadonlyArray<infer ArrayType>\n      ? [] | [number, ...NestedPaths<ArrayType, [...Depth, 1]>]\n      : Type extends Map<string, any>\n        ? [string]\n        : Type extends object\n          ? {\n              [Key in Extract<keyof Type, string>]: Type[Key] extends Type // type of value extends the parent\n                ? [Key]\n                : // for a recursive union type, the child will never extend the parent type.\n                  // but the parent will still extend the child\n                  Type extends Type[Key]\n                  ? [Key]\n                  : Type[Key] extends ReadonlyArray<infer ArrayType> // handling recursive types with arrays\n                    ? Type extends ArrayType // is the type of the parent the same as the type of the array?\n                      ? [Key] // yes, it's a recursive array type\n                      : // for unions, the child type extends the parent\n                        ArrayType extends Type\n                        ? [Key] // we have a recursive array union\n                        : // child is an array, but it's not a recursive array\n                          [Key, ...NestedPaths<Type[Key], [...Depth, 1]>]\n                    : // child is not structured the same as the parent\n                      [Key, ...NestedPaths<Type[Key], [...Depth, 1]>] | [Key];\n            }[Extract<keyof Type, string>]\n          : [];\n\n/**\n * @public\n * returns keys (strings) for every path into a schema with a value of type\n * https://www.mongodb.com/docs/manual/tutorial/query-embedded-documents/\n */\nexport type NestedPathsOfType<TSchema, Type> = KeysOfAType<\n  {\n    [Property in Join<NestedPaths<TSchema, []>, '.'>]: PropertyType<TSchema, Property>;\n  },\n  Type\n>;\n\n/**\n * @public\n * @experimental\n */\nexport type StrictFilter<TSchema> =\n  | Partial<TSchema>\n  | ({\n      [Property in Join<NestedPaths<WithId<TSchema>, []>, '.'>]?: Condition<\n        PropertyType<WithId<TSchema>, Property>\n      >;\n    } & RootFilterOperators<WithId<TSchema>>);\n\n/**\n * @public\n * @experimental\n */\nexport type StrictUpdateFilter<TSchema> = {\n  $currentDate?: OnlyFieldsOfType<\n    TSchema,\n    Date | Timestamp,\n    true | { $type: 'date' | 'timestamp' }\n  >;\n  $inc?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $min?: StrictMatchKeysAndValues<TSchema>;\n  $max?: StrictMatchKeysAndValues<TSchema>;\n  $mul?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $rename?: Record<string, string>;\n  $set?: StrictMatchKeysAndValues<TSchema>;\n  $setOnInsert?: StrictMatchKeysAndValues<TSchema>;\n  $unset?: OnlyFieldsOfType<TSchema, any, '' | true | 1>;\n  $addToSet?: SetFields<TSchema>;\n  $pop?: OnlyFieldsOfType<TSchema, ReadonlyArray<any>, 1 | -1>;\n  $pull?: PullOperator<TSchema>;\n  $push?: PushOperator<TSchema>;\n  $pullAll?: PullAllOperator<TSchema>;\n  $bit?: OnlyFieldsOfType<\n    TSchema,\n    NumericType | undefined,\n    { and: IntegerType } | { or: IntegerType } | { xor: IntegerType }\n  >;\n} & Document;\n\n/**\n * @public\n * @experimental\n */\nexport type StrictMatchKeysAndValues<TSchema> = Readonly<\n  {\n    [Property in Join<NestedPaths<TSchema, []>, '.'>]?: PropertyType<TSchema, Property>;\n  } & {\n    [Property in `${NestedPathsOfType<TSchema, any[]>}.$${`[${string}]` | ''}`]?: ArrayElement<\n      PropertyType<TSchema, Property extends `${infer Key}.$${string}` ? Key : never>\n    >;\n  } & {\n    [Property in `${NestedPathsOfType<TSchema, Record<string, any>[]>}.$${\n      | `[${string}]`\n      | ''}.${string}`]?: any; // Could be further narrowed\n  } & Document\n>;\n", "import type { Long } from '../bson';\nimport { CursorResponse } from '../cmap/wire_protocol/responses';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { maxWireVersion, type MongoDBNamespace } from '../utils';\nimport { AbstractOperation, Aspect, defineAspects, type OperationOptions } from './operation';\n\n/** @internal */\nexport interface GetMoreOptions extends OperationOptions {\n  /** Set the batchSize for the getMoreCommand when iterating over the query results. */\n  batchSize?: number;\n  /**\n   * Comment to apply to the operation.\n   *\n   * getMore only supports 'comment' in server versions 4.4 and above.\n   */\n  comment?: unknown;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** TODO(NODE-4413): Address bug with maxAwaitTimeMS not being passed in from the cursor correctly */\n  maxAwaitTimeMS?: number;\n}\n\n/**\n * GetMore command: https://www.mongodb.com/docs/manual/reference/command/getMore/\n * @internal\n */\nexport interface GetMoreCommand {\n  getMore: Long;\n  collection: string;\n  batchSize?: number;\n  maxTimeMS?: number;\n  /** Only supported on wire versions 10 or greater */\n  comment?: unknown;\n}\n\n/** @internal */\nexport class GetMoreOperation extends AbstractOperation {\n  cursorId: Long;\n  override options: GetMoreOptions;\n\n  constructor(ns: MongoDBNamespace, cursorId: Long, server: Server, options: GetMoreOptions) {\n    super(options);\n\n    this.options = options;\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  override get commandName() {\n    return 'getMore' as const;\n  }\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n  override async execute(\n    server: Server,\n    _session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<CursorResponse> {\n    if (server !== this.server) {\n      throw new MongoRuntimeError('Getmore must run on the same server operation began on');\n    }\n\n    if (this.cursorId == null || this.cursorId.isZero()) {\n      throw new MongoRuntimeError('Unable to iterate cursor with no id');\n    }\n\n    const collection = this.ns.collection;\n    if (collection == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      throw new MongoRuntimeError('A collection name must be determined before getMore');\n    }\n\n    const getMoreCmd: GetMoreCommand = {\n      getMore: this.cursorId,\n      collection\n    };\n\n    if (typeof this.options.batchSize === 'number') {\n      getMoreCmd.batchSize = Math.abs(this.options.batchSize);\n    }\n\n    if (typeof this.options.maxAwaitTimeMS === 'number') {\n      getMoreCmd.maxTimeMS = this.options.maxAwaitTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined && maxWireVersion(server) >= 9) {\n      getMoreCmd.comment = this.options.comment;\n    }\n\n    const commandOptions = {\n      returnFieldSelector: null,\n      documentsReturnedIn: 'nextBatch',\n      timeoutContext,\n      ...this.options\n    };\n\n    return await server.command(this.ns, getMoreCmd, commandOptions, CursorResponse);\n  }\n}\n\ndefineAspects(GetMoreOperation, [Aspect.READ_OPERATION, Aspect.MUST_SELECT_SAME_SERVER]);\n", "import type { Long } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { type MongoDBNamespace, squashError } from '../utils';\nimport { AbstractOperation, Aspect, defineAspects, type OperationOptions } from './operation';\n\n/**\n * https://www.mongodb.com/docs/manual/reference/command/killCursors/\n * @internal\n */\ninterface KillCursorsCommand {\n  killCursors: string;\n  cursors: Long[];\n  comment?: unknown;\n}\n\nexport class KillCursorsOperation extends AbstractOperation {\n  cursorId: Long;\n\n  constructor(cursorId: Long, ns: MongoDBNamespace, server: Server, options: OperationOptions) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  override get commandName() {\n    return 'killCursors' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<void> {\n    if (server !== this.server) {\n      throw new MongoRuntimeError('Killcursor must run on the same server operation began on');\n    }\n\n    const killCursors = this.ns.collection;\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      throw new MongoRuntimeError('A collection name must be determined before killCursors');\n    }\n\n    const killCursorsCommand: KillCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n    try {\n      await server.command(this.ns, killCursorsCommand, {\n        session,\n        timeoutContext\n      });\n    } catch (error) {\n      // The driver should never emit errors from killCursors, this is spec-ed behavior\n      squashError(error);\n    }\n  }\n}\n\ndefineAspects(KillCursorsOperation, [Aspect.MUST_SELECT_SAME_SERVER]);\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoCompatibilityError, MongoServerError } from '../error';\nimport { type TODO_NODE_3286 } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { type MongoDBNamespace } from '../utils';\nimport { type WriteConcernOptions } from '../write_concern';\nimport { type CollationOptions, CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, type Hint } from './operation';\n\n/** @public */\nexport interface DeleteOptions extends CommandOperationOptions, WriteConcernOptions {\n  /** If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails. */\n  ordered?: boolean;\n  /** Specifies the collation to use for the operation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: string | Document;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/** @public */\nexport interface DeleteResult {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined. */\n  acknowledged: boolean;\n  /** The number of documents that were deleted */\n  deletedCount: number;\n}\n\n/** @public */\nexport interface DeleteStatement {\n  /** The query that matches documents to delete. */\n  q: Document;\n  /** The number of matching documents to delete. */\n  limit: number;\n  /** Specifies the collation to use for the operation. */\n  collation?: CollationOptions;\n  /** A document or string that specifies the index to use to support the query predicate. */\n  hint?: Hint;\n}\n\n/** @internal */\nexport class DeleteOperation extends CommandOperation<DeleteResult> {\n  override options: DeleteOptions;\n  statements: DeleteStatement[];\n\n  constructor(ns: MongoDBNamespace, statements: DeleteStatement[], options: DeleteOptions) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n    this.statements = statements;\n  }\n\n  override get commandName() {\n    return 'delete' as const;\n  }\n\n  override get canRetryWrite(): boolean {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => (op.limit != null ? op.limit > 0 : true));\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<DeleteResult> {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      delete: this.ns.collection,\n      deletes: this.statements,\n      ordered\n    };\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n    if (unacknowledgedWrite) {\n      if (this.statements.find((o: Document) => o.hint)) {\n        // TODO(NODE-3541): fix error for hint with unacknowledged writes\n        throw new MongoCompatibilityError(`hint is not supported with unacknowledged writes`);\n      }\n    }\n\n    const res: TODO_NODE_3286 = await super.executeCommand(\n      server,\n      session,\n      command,\n      timeoutContext\n    );\n    return res;\n  }\n}\n\nexport class DeleteOneOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, { ...options, limit: 1 })], options);\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<DeleteResult> {\n    const res: TODO_NODE_3286 = await super.execute(server, session, timeoutContext);\n    if (this.explain) return res;\n    if (res.code) throw new MongoServerError(res);\n    if (res.writeErrors) throw new MongoServerError(res.writeErrors[0]);\n\n    return {\n      acknowledged: this.writeConcern?.w !== 0,\n      deletedCount: res.n\n    };\n  }\n}\nexport class DeleteManyOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, options)], options);\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<DeleteResult> {\n    const res: TODO_NODE_3286 = await super.execute(server, session, timeoutContext);\n    if (this.explain) return res;\n    if (res.code) throw new MongoServerError(res);\n    if (res.writeErrors) throw new MongoServerError(res.writeErrors[0]);\n\n    return {\n      acknowledged: this.writeConcern?.w !== 0,\n      deletedCount: res.n\n    };\n  }\n}\n\nexport function makeDeleteStatement(\n  filter: Document,\n  options: DeleteOptions & { limit?: number }\n): DeleteStatement {\n  const op: DeleteStatement = {\n    q: filter,\n    limit: typeof options.limit === 'number' ? options.limit : 0\n  };\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  return op;\n}\n\ndefineAspects(DeleteOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(DeleteOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(DeleteManyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\n", "import type {\n  AnyBulkWriteOperation,\n  BulkOperationBase,\n  BulkWriteOptions,\n  BulkWriteResult\n} from '../bulk/common';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { AbstractOperation, Aspect, defineAspects } from './operation';\n\n/** @internal */\nexport class BulkWriteOperation extends AbstractOperation<BulkWriteResult> {\n  override options: BulkWriteOptions;\n  collection: Collection;\n  operations: ReadonlyArray<AnyBulkWriteOperation>;\n\n  constructor(\n    collection: Collection,\n    operations: ReadonlyArray<AnyBulkWriteOperation>,\n    options: BulkWriteOptions\n  ) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n    this.operations = operations;\n  }\n\n  override get commandName() {\n    return 'bulkWrite' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<BulkWriteResult> {\n    const coll = this.collection;\n    const operations = this.operations;\n    const options = {\n      ...this.options,\n      ...this.bsonOptions,\n      readPreference: this.readPreference,\n      timeoutContext\n    };\n\n    // Create the bulk operation\n    const bulk: BulkOperationBase =\n      options.ordered === false\n        ? coll.initializeUnorderedBulkOp(options)\n        : coll.initializeOrderedBulkOp(options);\n\n    // for each op go through and add to the bulk\n    for (let i = 0; i < operations.length; i++) {\n      bulk.raw(operations[i]);\n    }\n\n    // Execute the bulk\n    return await bulk.execute({ ...options, session });\n  }\n}\n\ndefineAspects(BulkWriteOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Document } from '../bson';\nimport type { BulkWriteOptions } from '../bulk/common';\nimport type { Collection } from '../collection';\nimport { MongoInvalidArgumentError, MongoServerError } from '../error';\nimport type { InferIdType } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { maybeAddIdToDocuments, type MongoDBNamespace } from '../utils';\nimport { WriteConcern } from '../write_concern';\nimport { BulkWriteOperation } from './bulk_write';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { AbstractOperation, Aspect, defineAspects } from './operation';\n\n/** @internal */\nexport class InsertOperation extends CommandOperation<Document> {\n  override options: BulkWriteOptions;\n  documents: Document[];\n\n  constructor(ns: MongoDBNamespace, documents: Document[], options: BulkWriteOptions) {\n    super(undefined, options);\n    this.options = { ...options, checkKeys: options.checkKeys ?? false };\n    this.ns = ns;\n    this.documents = documents;\n  }\n\n  override get commandName() {\n    return 'insert' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<Document> {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      insert: this.ns.collection,\n      documents: this.documents,\n      ordered\n    };\n\n    if (typeof options.bypassDocumentValidation === 'boolean') {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    return await super.executeCommand(server, session, command, timeoutContext);\n  }\n}\n\n/** @public */\nexport interface InsertOneOptions extends CommandOperationOptions {\n  /** Allow driver to bypass schema validation. */\n  bypassDocumentValidation?: boolean;\n  /** Force server to assign _id values instead of driver. */\n  forceServerObjectId?: boolean;\n}\n\n/** @public */\nexport interface InsertOneResult<TSchema = Document> {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined */\n  acknowledged: boolean;\n  /** The identifier that was inserted. If the server generated the identifier, this value will be null as the driver does not have access to that data */\n  insertedId: InferIdType<TSchema>;\n}\n\nexport class InsertOneOperation extends InsertOperation {\n  constructor(collection: Collection, doc: Document, options: InsertOneOptions) {\n    super(collection.s.namespace, maybeAddIdToDocuments(collection, [doc], options), options);\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<InsertOneResult> {\n    const res = await super.execute(server, session, timeoutContext);\n    if (res.code) throw new MongoServerError(res);\n    if (res.writeErrors) {\n      // This should be a WriteError but we can't change it now because of error hierarchy\n      throw new MongoServerError(res.writeErrors[0]);\n    }\n\n    return {\n      acknowledged: this.writeConcern?.w !== 0,\n      insertedId: this.documents[0]._id\n    };\n  }\n}\n\n/** @public */\nexport interface InsertManyResult<TSchema = Document> {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined */\n  acknowledged: boolean;\n  /** The number of inserted documents for this operations */\n  insertedCount: number;\n  /** Map of the index of the inserted document to the id of the inserted document */\n  insertedIds: { [key: number]: InferIdType<TSchema> };\n}\n\n/** @internal */\nexport class InsertManyOperation extends AbstractOperation<InsertManyResult> {\n  override options: BulkWriteOptions;\n  collection: Collection;\n  docs: ReadonlyArray<Document>;\n\n  constructor(collection: Collection, docs: ReadonlyArray<Document>, options: BulkWriteOptions) {\n    super(options);\n\n    if (!Array.isArray(docs)) {\n      throw new MongoInvalidArgumentError('Argument \"docs\" must be an array of documents');\n    }\n\n    this.options = options;\n    this.collection = collection;\n    this.docs = docs;\n  }\n\n  override get commandName() {\n    return 'insert' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<InsertManyResult> {\n    const coll = this.collection;\n    const options = { ...this.options, ...this.bsonOptions, readPreference: this.readPreference };\n    const writeConcern = WriteConcern.fromOptions(options);\n    const bulkWriteOperation = new BulkWriteOperation(\n      coll,\n      this.docs.map(document => ({\n        insertOne: { document }\n      })),\n      options\n    );\n\n    try {\n      const res = await bulkWriteOperation.execute(server, session, timeoutContext);\n      return {\n        acknowledged: writeConcern?.w !== 0,\n        insertedCount: res.insertedCount,\n        insertedIds: res.insertedIds\n      };\n    } catch (err) {\n      if (err && err.message === 'Operation must be an object with an operation key') {\n        throw new MongoInvalidArgumentError(\n          'Collection.insertMany() cannot be called with an array that has null/undefined values'\n        );\n      }\n      throw err;\n    }\n  }\n}\n\ndefineAspects(InsertOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(InsertOneOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(InsertManyOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoCompatibilityError, MongoInvalidArgumentError, MongoServerError } from '../error';\nimport type { InferIdType, TODO_NODE_3286 } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { hasAtomicOperators, type MongoDBNamespace } from '../utils';\nimport { type CollationOptions, CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, type Hint } from './operation';\n\n/** @public */\nexport interface UpdateOptions extends CommandOperationOptions {\n  /** A set of filters specifying to which array elements an update should apply */\n  arrayFilters?: Document[];\n  /** If true, allows the write to opt-out of document level validation */\n  bypassDocumentValidation?: boolean;\n  /** Specifies a collation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/**\n * @public\n * `TSchema` is the schema of the collection\n */\nexport interface UpdateResult<TSchema extends Document = Document> {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined */\n  acknowledged: boolean;\n  /** The number of documents that matched the filter */\n  matchedCount: number;\n  /** The number of documents that were modified */\n  modifiedCount: number;\n  /** The number of documents that were upserted */\n  upsertedCount: number;\n  /** The identifier of the inserted document if an upsert took place */\n  upsertedId: InferIdType<TSchema> | null;\n}\n\n/** @public */\nexport interface UpdateStatement {\n  /** The query that matches documents to update. */\n  q: Document;\n  /** The modifications to apply. */\n  u: Document | Document[];\n  /**  If true, perform an insert if no documents match the query. */\n  upsert?: boolean;\n  /** If true, updates all documents that meet the query criteria. */\n  multi?: boolean;\n  /** Specifies the collation to use for the operation. */\n  collation?: CollationOptions;\n  /** An array of filter documents that determines which array elements to modify for an update operation on an array field. */\n  arrayFilters?: Document[];\n  /** A document or string that specifies the index to use to support the query predicate. */\n  hint?: Hint;\n}\n\n/**\n * @internal\n * UpdateOperation is used in bulk write, while UpdateOneOperation and UpdateManyOperation are only used in the collections API\n */\nexport class UpdateOperation extends CommandOperation<Document> {\n  override options: UpdateOptions & { ordered?: boolean };\n  statements: UpdateStatement[];\n\n  constructor(\n    ns: MongoDBNamespace,\n    statements: UpdateStatement[],\n    options: UpdateOptions & { ordered?: boolean }\n  ) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n\n    this.statements = statements;\n  }\n\n  override get commandName() {\n    return 'update' as const;\n  }\n\n  override get canRetryWrite(): boolean {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => op.multi == null || op.multi === false);\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<Document> {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      update: this.ns.collection,\n      updates: this.statements,\n      ordered\n    };\n\n    if (typeof options.bypassDocumentValidation === 'boolean') {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n    if (unacknowledgedWrite) {\n      if (this.statements.find((o: Document) => o.hint)) {\n        // TODO(NODE-3541): fix error for hint with unacknowledged writes\n        throw new MongoCompatibilityError(`hint is not supported with unacknowledged writes`);\n      }\n    }\n\n    const res = await super.executeCommand(server, session, command, timeoutContext);\n    return res;\n  }\n}\n\n/** @internal */\nexport class UpdateOneOperation extends UpdateOperation {\n  constructor(collection: Collection, filter: Document, update: Document, options: UpdateOptions) {\n    super(\n      collection.s.namespace,\n      [makeUpdateStatement(filter, update, { ...options, multi: false })],\n      options\n    );\n\n    if (!hasAtomicOperators(update)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<UpdateResult> {\n    const res: TODO_NODE_3286 = await super.execute(server, session, timeoutContext);\n    if (this.explain != null) return res;\n    if (res.code) throw new MongoServerError(res);\n    if (res.writeErrors) throw new MongoServerError(res.writeErrors[0]);\n\n    return {\n      acknowledged: this.writeConcern?.w !== 0,\n      modifiedCount: res.nModified ?? res.n,\n      upsertedId:\n        Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n      upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n      matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n    };\n  }\n}\n\n/** @internal */\nexport class UpdateManyOperation extends UpdateOperation {\n  constructor(collection: Collection, filter: Document, update: Document, options: UpdateOptions) {\n    super(\n      collection.s.namespace,\n      [makeUpdateStatement(filter, update, { ...options, multi: true })],\n      options\n    );\n\n    if (!hasAtomicOperators(update)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<UpdateResult> {\n    const res: TODO_NODE_3286 = await super.execute(server, session, timeoutContext);\n    if (this.explain != null) return res;\n    if (res.code) throw new MongoServerError(res);\n    if (res.writeErrors) throw new MongoServerError(res.writeErrors[0]);\n\n    return {\n      acknowledged: this.writeConcern?.w !== 0,\n      modifiedCount: res.nModified ?? res.n,\n      upsertedId:\n        Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n      upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n      matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n    };\n  }\n}\n\n/** @public */\nexport interface ReplaceOptions extends CommandOperationOptions {\n  /** If true, allows the write to opt-out of document level validation */\n  bypassDocumentValidation?: boolean;\n  /** Specifies a collation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: string | Document;\n  /** When true, creates a new document if no document matches the query */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/** @internal */\nexport class ReplaceOneOperation extends UpdateOperation {\n  constructor(\n    collection: Collection,\n    filter: Document,\n    replacement: Document,\n    options: ReplaceOptions\n  ) {\n    super(\n      collection.s.namespace,\n      [makeUpdateStatement(filter, replacement, { ...options, multi: false })],\n      options\n    );\n\n    if (hasAtomicOperators(replacement)) {\n      throw new MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n    }\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<UpdateResult> {\n    const res: TODO_NODE_3286 = await super.execute(server, session, timeoutContext);\n    if (this.explain != null) return res;\n    if (res.code) throw new MongoServerError(res);\n    if (res.writeErrors) throw new MongoServerError(res.writeErrors[0]);\n\n    return {\n      acknowledged: this.writeConcern?.w !== 0,\n      modifiedCount: res.nModified ?? res.n,\n      upsertedId:\n        Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n      upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n      matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n    };\n  }\n}\n\nexport function makeUpdateStatement(\n  filter: Document,\n  update: Document | Document[],\n  options: UpdateOptions & { multi?: boolean }\n): UpdateStatement {\n  if (filter == null || typeof filter !== 'object') {\n    throw new MongoInvalidArgumentError('Selector must be a valid JavaScript object');\n  }\n\n  if (update == null || typeof update !== 'object') {\n    throw new MongoInvalidArgumentError('Document must be a valid JavaScript object');\n  }\n\n  const op: UpdateStatement = { q: filter, u: update };\n  if (typeof options.upsert === 'boolean') {\n    op.upsert = options.upsert;\n  }\n\n  if (options.multi) {\n    op.multi = options.multi;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  if (options.arrayFilters) {\n    op.arrayFilters = options.arrayFilters;\n  }\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  return op;\n}\n\ndefineAspects(UpdateOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION, Aspect.SKIP_COLLATION]);\ndefineAspects(UpdateOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(UpdateManyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(ReplaceOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.SKIP_COLLATION\n]);\n", "import { type BSONSerializeOptions, type Document, EJSON, resolveBSONOptions } from '../bson';\nimport type { Collection } from '../collection';\nimport {\n  type AnyError,\n  MongoBatchReExecutionError,\n  MONGODB_ERROR_CODES,\n  MongoInvalidArgumentError,\n  MongoRuntimeError,\n  MongoServerError,\n  MongoWriteConcernError\n} from '../error';\nimport type { Filter, OneOrMore, OptionalId, UpdateFilter, WithoutId } from '../mongo_types';\nimport type { CollationOptions, CommandOperationOptions } from '../operations/command';\nimport { DeleteOperation, type DeleteStatement, makeDeleteStatement } from '../operations/delete';\nimport { executeOperation } from '../operations/execute_operation';\nimport { InsertOperation } from '../operations/insert';\nimport { AbstractOperation, type Hint } from '../operations/operation';\nimport { makeUpdateStatement, UpdateOperation, type UpdateStatement } from '../operations/update';\nimport type { Server } from '../sdam/server';\nimport type { Topology } from '../sdam/topology';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport {\n  applyRetryableWrites,\n  getTopology,\n  hasAtomicOperators,\n  maybeAddIdToDocuments,\n  type MongoDBNamespace,\n  resolveOptions\n} from '../utils';\nimport { WriteConcern } from '../write_concern';\n\n/** @public */\nexport const BatchType = Object.freeze({\n  INSERT: 1,\n  UPDATE: 2,\n  DELETE: 3\n} as const);\n\n/** @public */\nexport type BatchType = (typeof BatchType)[keyof typeof BatchType];\n\n/** @public */\nexport interface InsertOneModel<TSchema extends Document = Document> {\n  /** The document to insert. */\n  document: OptionalId<TSchema>;\n}\n\n/** @public */\nexport interface DeleteOneModel<TSchema extends Document = Document> {\n  /** The filter to limit the deleted documents. */\n  filter: Filter<TSchema>;\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n}\n\n/** @public */\nexport interface DeleteManyModel<TSchema extends Document = Document> {\n  /** The filter to limit the deleted documents. */\n  filter: Filter<TSchema>;\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n}\n\n/** @public */\nexport interface ReplaceOneModel<TSchema extends Document = Document> {\n  /** The filter to limit the replaced document. */\n  filter: Filter<TSchema>;\n  /** The document with which to replace the matched document. */\n  replacement: WithoutId<TSchema>;\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query. */\n  upsert?: boolean;\n}\n\n/** @public */\nexport interface UpdateOneModel<TSchema extends Document = Document> {\n  /** The filter to limit the updated documents. */\n  filter: Filter<TSchema>;\n  /**\n   * The modifications to apply. The value can be either:\n   * UpdateFilter<TSchema> - A document that contains update operator expressions,\n   * Document[] - an aggregation pipeline.\n   */\n  update: UpdateFilter<TSchema> | Document[];\n  /** A set of filters specifying to which array elements an update should apply. */\n  arrayFilters?: Document[];\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query. */\n  upsert?: boolean;\n}\n\n/** @public */\nexport interface UpdateManyModel<TSchema extends Document = Document> {\n  /** The filter to limit the updated documents. */\n  filter: Filter<TSchema>;\n  /**\n   * The modifications to apply. The value can be either:\n   * UpdateFilter<TSchema> - A document that contains update operator expressions,\n   * Document[] - an aggregation pipeline.\n   */\n  update: UpdateFilter<TSchema> | Document[];\n  /** A set of filters specifying to which array elements an update should apply. */\n  arrayFilters?: Document[];\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query. */\n  upsert?: boolean;\n}\n\n/** @public */\nexport type AnyBulkWriteOperation<TSchema extends Document = Document> =\n  | { insertOne: InsertOneModel<TSchema> }\n  | { replaceOne: ReplaceOneModel<TSchema> }\n  | { updateOne: UpdateOneModel<TSchema> }\n  | { updateMany: UpdateManyModel<TSchema> }\n  | { deleteOne: DeleteOneModel<TSchema> }\n  | { deleteMany: DeleteManyModel<TSchema> };\n\n/** @internal */\nexport interface BulkResult {\n  ok: number;\n  writeErrors: WriteError[];\n  writeConcernErrors: WriteConcernError[];\n  insertedIds: Document[];\n  nInserted: number;\n  nUpserted: number;\n  nMatched: number;\n  nModified: number;\n  nRemoved: number;\n  upserted: Document[];\n}\n\n/**\n * Keeps the state of a unordered batch so we can rewrite the results\n * correctly after command execution\n *\n * @public\n */\nexport class Batch<T = Document> {\n  originalZeroIndex: number;\n  currentIndex: number;\n  originalIndexes: number[];\n  batchType: BatchType;\n  operations: T[];\n  size: number;\n  sizeBytes: number;\n\n  constructor(batchType: BatchType, originalZeroIndex: number) {\n    this.originalZeroIndex = originalZeroIndex;\n    this.currentIndex = 0;\n    this.originalIndexes = [];\n    this.batchType = batchType;\n    this.operations = [];\n    this.size = 0;\n    this.sizeBytes = 0;\n  }\n}\n\n/**\n * @public\n * The result of a bulk write.\n */\nexport class BulkWriteResult {\n  private readonly result: BulkResult;\n  /** Number of documents inserted. */\n  readonly insertedCount: number;\n  /** Number of documents matched for update. */\n  readonly matchedCount: number;\n  /** Number of documents modified. */\n  readonly modifiedCount: number;\n  /** Number of documents deleted. */\n  readonly deletedCount: number;\n  /** Number of documents upserted. */\n  readonly upsertedCount: number;\n  /** Upserted document generated Id's, hash key is the index of the originating operation */\n  readonly upsertedIds: { [key: number]: any };\n  /** Inserted document generated Id's, hash key is the index of the originating operation */\n  readonly insertedIds: { [key: number]: any };\n\n  private static generateIdMap(ids: Document[]): { [key: number]: any } {\n    const idMap: { [index: number]: any } = {};\n    for (const doc of ids) {\n      idMap[doc.index] = doc._id;\n    }\n    return idMap;\n  }\n\n  /**\n   * Create a new BulkWriteResult instance\n   * @internal\n   */\n  constructor(bulkResult: BulkResult, isOrdered: boolean) {\n    this.result = bulkResult;\n    this.insertedCount = this.result.nInserted ?? 0;\n    this.matchedCount = this.result.nMatched ?? 0;\n    this.modifiedCount = this.result.nModified ?? 0;\n    this.deletedCount = this.result.nRemoved ?? 0;\n    this.upsertedCount = this.result.upserted.length ?? 0;\n    this.upsertedIds = BulkWriteResult.generateIdMap(this.result.upserted);\n    this.insertedIds = BulkWriteResult.generateIdMap(\n      this.getSuccessfullyInsertedIds(bulkResult, isOrdered)\n    );\n    Object.defineProperty(this, 'result', { value: this.result, enumerable: false });\n  }\n\n  /** Evaluates to true if the bulk operation correctly executes */\n  get ok(): number {\n    return this.result.ok;\n  }\n\n  /**\n   * Returns document_ids that were actually inserted\n   * @internal\n   */\n  private getSuccessfullyInsertedIds(bulkResult: BulkResult, isOrdered: boolean): Document[] {\n    if (bulkResult.writeErrors.length === 0) return bulkResult.insertedIds;\n\n    if (isOrdered) {\n      return bulkResult.insertedIds.slice(0, bulkResult.writeErrors[0].index);\n    }\n\n    return bulkResult.insertedIds.filter(\n      ({ index }) => !bulkResult.writeErrors.some(writeError => index === writeError.index)\n    );\n  }\n\n  /** Returns the upserted id at the given index */\n  getUpsertedIdAt(index: number): Document | undefined {\n    return this.result.upserted[index];\n  }\n\n  /** Returns raw internal result */\n  getRawResponse(): Document {\n    return this.result;\n  }\n\n  /** Returns true if the bulk operation contains a write error */\n  hasWriteErrors(): boolean {\n    return this.result.writeErrors.length > 0;\n  }\n\n  /** Returns the number of write errors off the bulk operation */\n  getWriteErrorCount(): number {\n    return this.result.writeErrors.length;\n  }\n\n  /** Returns a specific write error object */\n  getWriteErrorAt(index: number): WriteError | undefined {\n    return index < this.result.writeErrors.length ? this.result.writeErrors[index] : undefined;\n  }\n\n  /** Retrieve all write errors */\n  getWriteErrors(): WriteError[] {\n    return this.result.writeErrors;\n  }\n\n  /** Retrieve the write concern error if one exists */\n  getWriteConcernError(): WriteConcernError | undefined {\n    if (this.result.writeConcernErrors.length === 0) {\n      return;\n    } else if (this.result.writeConcernErrors.length === 1) {\n      // Return the error\n      return this.result.writeConcernErrors[0];\n    } else {\n      // Combine the errors\n      let errmsg = '';\n      for (let i = 0; i < this.result.writeConcernErrors.length; i++) {\n        const err = this.result.writeConcernErrors[i];\n        errmsg = errmsg + err.errmsg;\n\n        // TODO: Something better\n        if (i === 0) errmsg = errmsg + ' and ';\n      }\n\n      return new WriteConcernError({ errmsg, code: MONGODB_ERROR_CODES.WriteConcernFailed });\n    }\n  }\n\n  toString(): string {\n    return `BulkWriteResult(${EJSON.stringify(this.result)})`;\n  }\n\n  isOk(): boolean {\n    return this.result.ok === 1;\n  }\n}\n\n/** @public */\nexport interface WriteConcernErrorData {\n  code: number;\n  errmsg: string;\n  errInfo?: Document;\n}\n\n/**\n * An error representing a failure by the server to apply the requested write concern to the bulk operation.\n * @public\n * @category Error\n */\nexport class WriteConcernError {\n  /** @internal */\n  private serverError: WriteConcernErrorData;\n\n  constructor(error: WriteConcernErrorData) {\n    this.serverError = error;\n  }\n\n  /** Write concern error code. */\n  get code(): number | undefined {\n    return this.serverError.code;\n  }\n\n  /** Write concern error message. */\n  get errmsg(): string | undefined {\n    return this.serverError.errmsg;\n  }\n\n  /** Write concern error info. */\n  get errInfo(): Document | undefined {\n    return this.serverError.errInfo;\n  }\n\n  toJSON(): WriteConcernErrorData {\n    return this.serverError;\n  }\n\n  toString(): string {\n    return `WriteConcernError(${this.errmsg})`;\n  }\n}\n\n/** @public */\nexport interface BulkWriteOperationError {\n  index: number;\n  code: number;\n  errmsg: string;\n  errInfo: Document;\n  op: Document | UpdateStatement | DeleteStatement;\n}\n\n/**\n * An error that occurred during a BulkWrite on the server.\n * @public\n * @category Error\n */\nexport class WriteError {\n  err: BulkWriteOperationError;\n\n  constructor(err: BulkWriteOperationError) {\n    this.err = err;\n  }\n\n  /** WriteError code. */\n  get code(): number {\n    return this.err.code;\n  }\n\n  /** WriteError original bulk operation index. */\n  get index(): number {\n    return this.err.index;\n  }\n\n  /** WriteError message. */\n  get errmsg(): string | undefined {\n    return this.err.errmsg;\n  }\n\n  /** WriteError details. */\n  get errInfo(): Document | undefined {\n    return this.err.errInfo;\n  }\n\n  /** Returns the underlying operation that caused the error */\n  getOperation(): Document {\n    return this.err.op;\n  }\n\n  toJSON(): { code: number; index: number; errmsg?: string; op: Document } {\n    return { code: this.err.code, index: this.err.index, errmsg: this.err.errmsg, op: this.err.op };\n  }\n\n  toString(): string {\n    return `WriteError(${JSON.stringify(this.toJSON())})`;\n  }\n}\n\n/** Merges results into shared data structure */\nexport function mergeBatchResults(\n  batch: Batch,\n  bulkResult: BulkResult,\n  err?: AnyError,\n  result?: Document\n): void {\n  // If we have an error set the result to be the err object\n  if (err) {\n    result = err;\n  } else if (result && result.result) {\n    result = result.result;\n  }\n\n  if (result == null) {\n    return;\n  }\n\n  // Do we have a top level error stop processing and return\n  if (result.ok === 0 && bulkResult.ok === 1) {\n    bulkResult.ok = 0;\n\n    const writeError = {\n      index: 0,\n      code: result.code || 0,\n      errmsg: result.message,\n      errInfo: result.errInfo,\n      op: batch.operations[0]\n    };\n\n    bulkResult.writeErrors.push(new WriteError(writeError));\n    return;\n  } else if (result.ok === 0 && bulkResult.ok === 0) {\n    return;\n  }\n\n  // If we have an insert Batch type\n  if (isInsertBatch(batch) && result.n) {\n    bulkResult.nInserted = bulkResult.nInserted + result.n;\n  }\n\n  // If we have an insert Batch type\n  if (isDeleteBatch(batch) && result.n) {\n    bulkResult.nRemoved = bulkResult.nRemoved + result.n;\n  }\n\n  let nUpserted = 0;\n\n  // We have an array of upserted values, we need to rewrite the indexes\n  if (Array.isArray(result.upserted)) {\n    nUpserted = result.upserted.length;\n\n    for (let i = 0; i < result.upserted.length; i++) {\n      bulkResult.upserted.push({\n        index: result.upserted[i].index + batch.originalZeroIndex,\n        _id: result.upserted[i]._id\n      });\n    }\n  } else if (result.upserted) {\n    nUpserted = 1;\n\n    bulkResult.upserted.push({\n      index: batch.originalZeroIndex,\n      _id: result.upserted\n    });\n  }\n\n  // If we have an update Batch type\n  if (isUpdateBatch(batch) && result.n) {\n    const nModified = result.nModified;\n    bulkResult.nUpserted = bulkResult.nUpserted + nUpserted;\n    bulkResult.nMatched = bulkResult.nMatched + (result.n - nUpserted);\n\n    if (typeof nModified === 'number') {\n      bulkResult.nModified = bulkResult.nModified + nModified;\n    } else {\n      bulkResult.nModified = 0;\n    }\n  }\n\n  if (Array.isArray(result.writeErrors)) {\n    for (let i = 0; i < result.writeErrors.length; i++) {\n      const writeError = {\n        index: batch.originalIndexes[result.writeErrors[i].index],\n        code: result.writeErrors[i].code,\n        errmsg: result.writeErrors[i].errmsg,\n        errInfo: result.writeErrors[i].errInfo,\n        op: batch.operations[result.writeErrors[i].index]\n      };\n\n      bulkResult.writeErrors.push(new WriteError(writeError));\n    }\n  }\n\n  if (result.writeConcernError) {\n    bulkResult.writeConcernErrors.push(new WriteConcernError(result.writeConcernError));\n  }\n}\n\nasync function executeCommands(\n  bulkOperation: BulkOperationBase,\n  options: BulkWriteOptions & { timeoutContext?: TimeoutContext | null }\n): Promise<BulkWriteResult> {\n  if (bulkOperation.s.batches.length === 0) {\n    return new BulkWriteResult(bulkOperation.s.bulkResult, bulkOperation.isOrdered);\n  }\n\n  for (const batch of bulkOperation.s.batches) {\n    const finalOptions = resolveOptions(bulkOperation, {\n      ...options,\n      ordered: bulkOperation.isOrdered\n    });\n\n    if (finalOptions.bypassDocumentValidation !== true) {\n      delete finalOptions.bypassDocumentValidation;\n    }\n\n    // Is the bypassDocumentValidation options specific\n    if (bulkOperation.s.bypassDocumentValidation === true) {\n      finalOptions.bypassDocumentValidation = true;\n    }\n\n    // Is the checkKeys option disabled\n    if (bulkOperation.s.checkKeys === false) {\n      finalOptions.checkKeys = false;\n    }\n\n    if (finalOptions.retryWrites) {\n      if (isUpdateBatch(batch)) {\n        finalOptions.retryWrites =\n          finalOptions.retryWrites && !batch.operations.some(op => op.multi);\n      }\n\n      if (isDeleteBatch(batch)) {\n        finalOptions.retryWrites =\n          finalOptions.retryWrites && !batch.operations.some(op => op.limit === 0);\n      }\n    }\n\n    const operation = isInsertBatch(batch)\n      ? new InsertOperation(bulkOperation.s.namespace, batch.operations, finalOptions)\n      : isUpdateBatch(batch)\n        ? new UpdateOperation(bulkOperation.s.namespace, batch.operations, finalOptions)\n        : isDeleteBatch(batch)\n          ? new DeleteOperation(bulkOperation.s.namespace, batch.operations, finalOptions)\n          : null;\n\n    if (operation == null) throw new MongoRuntimeError(`Unknown batchType: ${batch.batchType}`);\n\n    let thrownError = null;\n    let result;\n    try {\n      result = await executeOperation(\n        bulkOperation.s.collection.client,\n        operation,\n        finalOptions.timeoutContext\n      );\n    } catch (error) {\n      thrownError = error;\n    }\n\n    if (thrownError != null) {\n      if (thrownError instanceof MongoWriteConcernError) {\n        mergeBatchResults(batch, bulkOperation.s.bulkResult, thrownError, result);\n        const writeResult = new BulkWriteResult(\n          bulkOperation.s.bulkResult,\n          bulkOperation.isOrdered\n        );\n\n        throw new MongoBulkWriteError(\n          {\n            message: thrownError.result.writeConcernError.errmsg,\n            code: thrownError.result.writeConcernError.code\n          },\n          writeResult\n        );\n      } else {\n        // Error is a driver related error not a bulk op error, return early\n        throw new MongoBulkWriteError(\n          thrownError,\n          new BulkWriteResult(bulkOperation.s.bulkResult, bulkOperation.isOrdered)\n        );\n      }\n    }\n\n    mergeBatchResults(batch, bulkOperation.s.bulkResult, thrownError, result);\n    const writeResult = new BulkWriteResult(bulkOperation.s.bulkResult, bulkOperation.isOrdered);\n    bulkOperation.handleWriteError(writeResult);\n  }\n\n  bulkOperation.s.batches.length = 0;\n\n  const writeResult = new BulkWriteResult(bulkOperation.s.bulkResult, bulkOperation.isOrdered);\n  bulkOperation.handleWriteError(writeResult);\n  return writeResult;\n}\n\n/**\n * An error indicating an unsuccessful Bulk Write\n * @public\n * @category Error\n */\nexport class MongoBulkWriteError extends MongoServerError {\n  result: BulkWriteResult;\n  writeErrors: OneOrMore<WriteError> = [];\n  err?: WriteConcernError;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(\n    error:\n      | { message: string; code: number; writeErrors?: WriteError[] }\n      | WriteConcernError\n      | AnyError,\n    result: BulkWriteResult\n  ) {\n    super(error);\n\n    if (error instanceof WriteConcernError) this.err = error;\n    else if (!(error instanceof Error)) {\n      this.message = error.message;\n      this.code = error.code;\n      this.writeErrors = error.writeErrors ?? [];\n    }\n\n    this.result = result;\n    Object.assign(this, error);\n  }\n\n  override get name(): string {\n    return 'MongoBulkWriteError';\n  }\n\n  /** Number of documents inserted. */\n  get insertedCount(): number {\n    return this.result.insertedCount;\n  }\n  /** Number of documents matched for update. */\n  get matchedCount(): number {\n    return this.result.matchedCount;\n  }\n  /** Number of documents modified. */\n  get modifiedCount(): number {\n    return this.result.modifiedCount;\n  }\n  /** Number of documents deleted. */\n  get deletedCount(): number {\n    return this.result.deletedCount;\n  }\n  /** Number of documents upserted. */\n  get upsertedCount(): number {\n    return this.result.upsertedCount;\n  }\n  /** Inserted document generated Id's, hash key is the index of the originating operation */\n  get insertedIds(): { [key: number]: any } {\n    return this.result.insertedIds;\n  }\n  /** Upserted document generated Id's, hash key is the index of the originating operation */\n  get upsertedIds(): { [key: number]: any } {\n    return this.result.upsertedIds;\n  }\n}\n\n/**\n * A builder object that is returned from {@link BulkOperationBase#find}.\n * Is used to build a write operation that involves a query filter.\n *\n * @public\n */\nexport class FindOperators {\n  bulkOperation: BulkOperationBase;\n\n  /**\n   * Creates a new FindOperators object.\n   * @internal\n   */\n  constructor(bulkOperation: BulkOperationBase) {\n    this.bulkOperation = bulkOperation;\n  }\n\n  /** Add a multiple update operation to the bulk operation */\n  update(updateDocument: Document | Document[]): BulkOperationBase {\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.UPDATE,\n      makeUpdateStatement(currentOp.selector, updateDocument, {\n        ...currentOp,\n        multi: true\n      })\n    );\n  }\n\n  /** Add a single update operation to the bulk operation */\n  updateOne(updateDocument: Document | Document[]): BulkOperationBase {\n    if (!hasAtomicOperators(updateDocument)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.UPDATE,\n      makeUpdateStatement(currentOp.selector, updateDocument, { ...currentOp, multi: false })\n    );\n  }\n\n  /** Add a replace one operation to the bulk operation */\n  replaceOne(replacement: Document): BulkOperationBase {\n    if (hasAtomicOperators(replacement)) {\n      throw new MongoInvalidArgumentError('Replacement document must not use atomic operators');\n    }\n\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.UPDATE,\n      makeUpdateStatement(currentOp.selector, replacement, { ...currentOp, multi: false })\n    );\n  }\n\n  /** Add a delete one operation to the bulk operation */\n  deleteOne(): BulkOperationBase {\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.DELETE,\n      makeDeleteStatement(currentOp.selector, { ...currentOp, limit: 1 })\n    );\n  }\n\n  /** Add a delete many operation to the bulk operation */\n  delete(): BulkOperationBase {\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.DELETE,\n      makeDeleteStatement(currentOp.selector, { ...currentOp, limit: 0 })\n    );\n  }\n\n  /** Upsert modifier for update bulk operation, noting that this operation is an upsert. */\n  upsert(): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.upsert = true;\n    return this;\n  }\n\n  /** Specifies the collation for the query condition. */\n  collation(collation: CollationOptions): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.collation = collation;\n    return this;\n  }\n\n  /** Specifies arrayFilters for UpdateOne or UpdateMany bulk operations. */\n  arrayFilters(arrayFilters: Document[]): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.arrayFilters = arrayFilters;\n    return this;\n  }\n\n  /** Specifies hint for the bulk operation. */\n  hint(hint: Hint): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.hint = hint;\n    return this;\n  }\n}\n\n/** @internal */\nexport interface BulkOperationPrivate {\n  bulkResult: BulkResult;\n  currentBatch?: Batch;\n  currentIndex: number;\n  // ordered specific\n  currentBatchSize: number;\n  currentBatchSizeBytes: number;\n  // unordered specific\n  currentInsertBatch?: Batch;\n  currentUpdateBatch?: Batch;\n  currentRemoveBatch?: Batch;\n  batches: Batch[];\n  // Write concern\n  writeConcern?: WriteConcern;\n  // Max batch size options\n  maxBsonObjectSize: number;\n  maxBatchSizeBytes: number;\n  maxWriteBatchSize: number;\n  maxKeySize: number;\n  // Namespace\n  namespace: MongoDBNamespace;\n  // Topology\n  topology: Topology;\n  // Options\n  options: BulkWriteOptions;\n  // BSON options\n  bsonOptions: BSONSerializeOptions;\n  // Document used to build a bulk operation\n  currentOp?: Document;\n  // Executed\n  executed: boolean;\n  // Collection\n  collection: Collection;\n  // Fundamental error\n  err?: AnyError;\n  // check keys\n  checkKeys: boolean;\n  bypassDocumentValidation?: boolean;\n}\n\n/** @public */\nexport interface BulkWriteOptions extends CommandOperationOptions {\n  /**\n   * Allow driver to bypass schema validation.\n   * @defaultValue `false` - documents will be validated by default\n   **/\n  bypassDocumentValidation?: boolean;\n  /**\n   * If true, when an insert fails, don't execute the remaining writes.\n   * If false, continue with remaining inserts when one fails.\n   * @defaultValue `true` - inserts are ordered by default\n   */\n  ordered?: boolean;\n  /**\n   * Force server to assign _id values instead of driver.\n   * @defaultValue `false` - the driver generates `_id` fields by default\n   **/\n  forceServerObjectId?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n\n  /** @internal */\n  timeoutContext?: TimeoutContext;\n}\n\n/**\n * TODO(NODE-4063)\n * BulkWrites merge complexity is implemented in executeCommands\n * This provides a vehicle to treat bulkOperations like any other operation (hence \"shim\")\n * We would like this logic to simply live inside the BulkWriteOperation class\n * @internal\n */\nexport class BulkWriteShimOperation extends AbstractOperation {\n  bulkOperation: BulkOperationBase;\n  constructor(bulkOperation: BulkOperationBase, options: BulkWriteOptions) {\n    super(options);\n    this.bulkOperation = bulkOperation;\n  }\n\n  get commandName(): string {\n    return 'bulkWrite' as const;\n  }\n\n  async execute(\n    _server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<any> {\n    if (this.options.session == null) {\n      // An implicit session could have been created by 'executeOperation'\n      // So if we stick it on finalOptions here, each bulk operation\n      // will use this same session, it'll be passed in the same way\n      // an explicit session would be\n      this.options.session = session;\n    }\n    return await executeCommands(this.bulkOperation, { ...this.options, timeoutContext });\n  }\n}\n\n/** @public */\nexport abstract class BulkOperationBase {\n  isOrdered: boolean;\n  /** @internal */\n  s: BulkOperationPrivate;\n  operationId?: number;\n\n  /**\n   * Create a new OrderedBulkOperation or UnorderedBulkOperation instance\n   * @internal\n   */\n  constructor(\n    private collection: Collection,\n    options: BulkWriteOptions,\n    isOrdered: boolean\n  ) {\n    // determine whether bulkOperation is ordered or unordered\n    this.isOrdered = isOrdered;\n\n    const topology = getTopology(collection);\n    options = options == null ? {} : options;\n    // TODO Bring from driver information in hello\n    // Get the namespace for the write operations\n    const namespace = collection.s.namespace;\n    // Used to mark operation as executed\n    const executed = false;\n\n    // Current item\n    const currentOp = undefined;\n\n    // Set max byte size\n    const hello = topology.lastHello();\n\n    // If we have autoEncryption on, batch-splitting must be done on 2mb chunks, but single documents\n    // over 2mb are still allowed\n    const usingAutoEncryption = !!(topology.s.options && topology.s.options.autoEncrypter);\n    const maxBsonObjectSize =\n      hello && hello.maxBsonObjectSize ? hello.maxBsonObjectSize : 1024 * 1024 * 16;\n    const maxBatchSizeBytes = usingAutoEncryption ? 1024 * 1024 * 2 : maxBsonObjectSize;\n    const maxWriteBatchSize = hello && hello.maxWriteBatchSize ? hello.maxWriteBatchSize : 1000;\n\n    // Calculates the largest possible size of an Array key, represented as a BSON string\n    // element. This calculation:\n    //     1 byte for BSON type\n    //     # of bytes = length of (string representation of (maxWriteBatchSize - 1))\n    //   + 1 bytes for null terminator\n    const maxKeySize = (maxWriteBatchSize - 1).toString(10).length + 2;\n\n    // Final options for retryable writes\n    let finalOptions = Object.assign({}, options);\n    finalOptions = applyRetryableWrites(finalOptions, collection.s.db);\n\n    // Final results\n    const bulkResult: BulkResult = {\n      ok: 1,\n      writeErrors: [],\n      writeConcernErrors: [],\n      insertedIds: [],\n      nInserted: 0,\n      nUpserted: 0,\n      nMatched: 0,\n      nModified: 0,\n      nRemoved: 0,\n      upserted: []\n    };\n\n    // Internal state\n    this.s = {\n      // Final result\n      bulkResult,\n      // Current batch state\n      currentBatch: undefined,\n      currentIndex: 0,\n      // ordered specific\n      currentBatchSize: 0,\n      currentBatchSizeBytes: 0,\n      // unordered specific\n      currentInsertBatch: undefined,\n      currentUpdateBatch: undefined,\n      currentRemoveBatch: undefined,\n      batches: [],\n      // Write concern\n      writeConcern: WriteConcern.fromOptions(options),\n      // Max batch size options\n      maxBsonObjectSize,\n      maxBatchSizeBytes,\n      maxWriteBatchSize,\n      maxKeySize,\n      // Namespace\n      namespace,\n      // Topology\n      topology,\n      // Options\n      options: finalOptions,\n      // BSON options\n      bsonOptions: resolveBSONOptions(options),\n      // Current operation\n      currentOp,\n      // Executed\n      executed,\n      // Collection\n      collection,\n      // Fundamental error\n      err: undefined,\n      // check keys\n      checkKeys: typeof options.checkKeys === 'boolean' ? options.checkKeys : false\n    };\n\n    // bypass Validation\n    if (options.bypassDocumentValidation === true) {\n      this.s.bypassDocumentValidation = true;\n    }\n  }\n\n  /**\n   * Add a single insert document to the bulk operation\n   *\n   * @example\n   * ```ts\n   * const bulkOp = collection.initializeOrderedBulkOp();\n   *\n   * // Adds three inserts to the bulkOp.\n   * bulkOp\n   *   .insert({ a: 1 })\n   *   .insert({ b: 2 })\n   *   .insert({ c: 3 });\n   * await bulkOp.execute();\n   * ```\n   */\n  insert(document: Document): BulkOperationBase {\n    maybeAddIdToDocuments(this.collection, document, {\n      forceServerObjectId: this.shouldForceServerObjectId()\n    });\n\n    return this.addToOperationsList(BatchType.INSERT, document);\n  }\n\n  /**\n   * Builds a find operation for an update/updateOne/delete/deleteOne/replaceOne.\n   * Returns a builder object used to complete the definition of the operation.\n   *\n   * @example\n   * ```ts\n   * const bulkOp = collection.initializeOrderedBulkOp();\n   *\n   * // Add an updateOne to the bulkOp\n   * bulkOp.find({ a: 1 }).updateOne({ $set: { b: 2 } });\n   *\n   * // Add an updateMany to the bulkOp\n   * bulkOp.find({ c: 3 }).update({ $set: { d: 4 } });\n   *\n   * // Add an upsert\n   * bulkOp.find({ e: 5 }).upsert().updateOne({ $set: { f: 6 } });\n   *\n   * // Add a deletion\n   * bulkOp.find({ g: 7 }).deleteOne();\n   *\n   * // Add a multi deletion\n   * bulkOp.find({ h: 8 }).delete();\n   *\n   * // Add a replaceOne\n   * bulkOp.find({ i: 9 }).replaceOne({writeConcern: { j: 10 }});\n   *\n   * // Update using a pipeline (requires Mongodb 4.2 or higher)\n   * bulk.find({ k: 11, y: { $exists: true }, z: { $exists: true } }).updateOne([\n   *   { $set: { total: { $sum: [ '$y', '$z' ] } } }\n   * ]);\n   *\n   * // All of the ops will now be executed\n   * await bulkOp.execute();\n   * ```\n   */\n  find(selector: Document): FindOperators {\n    if (!selector) {\n      throw new MongoInvalidArgumentError('Bulk find operation must specify a selector');\n    }\n\n    // Save a current selector\n    this.s.currentOp = {\n      selector: selector\n    };\n\n    return new FindOperators(this);\n  }\n\n  /** Specifies a raw operation to perform in the bulk write. */\n  raw(op: AnyBulkWriteOperation): this {\n    if (op == null || typeof op !== 'object') {\n      throw new MongoInvalidArgumentError('Operation must be an object with an operation key');\n    }\n    if ('insertOne' in op) {\n      const forceServerObjectId = this.shouldForceServerObjectId();\n      const document =\n        op.insertOne && op.insertOne.document == null\n          ? // TODO(NODE-6003): remove support for omitting the `documents` subdocument in bulk inserts\n            (op.insertOne as Document)\n          : op.insertOne.document;\n\n      maybeAddIdToDocuments(this.collection, document, { forceServerObjectId });\n\n      return this.addToOperationsList(BatchType.INSERT, document);\n    }\n\n    if ('replaceOne' in op || 'updateOne' in op || 'updateMany' in op) {\n      if ('replaceOne' in op) {\n        if ('q' in op.replaceOne) {\n          throw new MongoInvalidArgumentError('Raw operations are not allowed');\n        }\n        const updateStatement = makeUpdateStatement(\n          op.replaceOne.filter,\n          op.replaceOne.replacement,\n          { ...op.replaceOne, multi: false }\n        );\n        if (hasAtomicOperators(updateStatement.u)) {\n          throw new MongoInvalidArgumentError('Replacement document must not use atomic operators');\n        }\n        return this.addToOperationsList(BatchType.UPDATE, updateStatement);\n      }\n\n      if ('updateOne' in op) {\n        if ('q' in op.updateOne) {\n          throw new MongoInvalidArgumentError('Raw operations are not allowed');\n        }\n        const updateStatement = makeUpdateStatement(op.updateOne.filter, op.updateOne.update, {\n          ...op.updateOne,\n          multi: false\n        });\n        if (!hasAtomicOperators(updateStatement.u)) {\n          throw new MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n        return this.addToOperationsList(BatchType.UPDATE, updateStatement);\n      }\n\n      if ('updateMany' in op) {\n        if ('q' in op.updateMany) {\n          throw new MongoInvalidArgumentError('Raw operations are not allowed');\n        }\n        const updateStatement = makeUpdateStatement(op.updateMany.filter, op.updateMany.update, {\n          ...op.updateMany,\n          multi: true\n        });\n        if (!hasAtomicOperators(updateStatement.u)) {\n          throw new MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n        return this.addToOperationsList(BatchType.UPDATE, updateStatement);\n      }\n    }\n\n    if ('deleteOne' in op) {\n      if ('q' in op.deleteOne) {\n        throw new MongoInvalidArgumentError('Raw operations are not allowed');\n      }\n      return this.addToOperationsList(\n        BatchType.DELETE,\n        makeDeleteStatement(op.deleteOne.filter, { ...op.deleteOne, limit: 1 })\n      );\n    }\n\n    if ('deleteMany' in op) {\n      if ('q' in op.deleteMany) {\n        throw new MongoInvalidArgumentError('Raw operations are not allowed');\n      }\n      return this.addToOperationsList(\n        BatchType.DELETE,\n        makeDeleteStatement(op.deleteMany.filter, { ...op.deleteMany, limit: 0 })\n      );\n    }\n\n    // otherwise an unknown operation was provided\n    throw new MongoInvalidArgumentError(\n      'bulkWrite only supports insertOne, updateOne, updateMany, deleteOne, deleteMany'\n    );\n  }\n\n  get length(): number {\n    return this.s.currentIndex;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  get writeConcern(): WriteConcern | undefined {\n    return this.s.writeConcern;\n  }\n\n  get batches(): Batch[] {\n    const batches = [...this.s.batches];\n    if (this.isOrdered) {\n      if (this.s.currentBatch) batches.push(this.s.currentBatch);\n    } else {\n      if (this.s.currentInsertBatch) batches.push(this.s.currentInsertBatch);\n      if (this.s.currentUpdateBatch) batches.push(this.s.currentUpdateBatch);\n      if (this.s.currentRemoveBatch) batches.push(this.s.currentRemoveBatch);\n    }\n    return batches;\n  }\n\n  async execute(options: BulkWriteOptions = {}): Promise<BulkWriteResult> {\n    if (this.s.executed) {\n      throw new MongoBatchReExecutionError();\n    }\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern) {\n      this.s.writeConcern = writeConcern;\n    }\n\n    // If we have current batch\n    if (this.isOrdered) {\n      if (this.s.currentBatch) this.s.batches.push(this.s.currentBatch);\n    } else {\n      if (this.s.currentInsertBatch) this.s.batches.push(this.s.currentInsertBatch);\n      if (this.s.currentUpdateBatch) this.s.batches.push(this.s.currentUpdateBatch);\n      if (this.s.currentRemoveBatch) this.s.batches.push(this.s.currentRemoveBatch);\n    }\n    // If we have no operations in the bulk raise an error\n    if (this.s.batches.length === 0) {\n      throw new MongoInvalidArgumentError('Invalid BulkOperation, Batch cannot be empty');\n    }\n\n    this.s.executed = true;\n    const finalOptions = { ...this.s.options, ...options };\n    const operation = new BulkWriteShimOperation(this, finalOptions);\n\n    return await executeOperation(this.s.collection.client, operation, finalOptions.timeoutContext);\n  }\n\n  /**\n   * Handles the write error before executing commands\n   * @internal\n   */\n  handleWriteError(writeResult: BulkWriteResult): void {\n    if (this.s.bulkResult.writeErrors.length > 0) {\n      const msg = this.s.bulkResult.writeErrors[0].errmsg\n        ? this.s.bulkResult.writeErrors[0].errmsg\n        : 'write operation failed';\n\n      throw new MongoBulkWriteError(\n        {\n          message: msg,\n          code: this.s.bulkResult.writeErrors[0].code,\n          writeErrors: this.s.bulkResult.writeErrors\n        },\n        writeResult\n      );\n    }\n\n    const writeConcernError = writeResult.getWriteConcernError();\n    if (writeConcernError) {\n      throw new MongoBulkWriteError(writeConcernError, writeResult);\n    }\n  }\n\n  abstract addToOperationsList(\n    batchType: BatchType,\n    document: Document | UpdateStatement | DeleteStatement\n  ): this;\n\n  private shouldForceServerObjectId(): boolean {\n    return (\n      this.s.options.forceServerObjectId === true ||\n      this.s.collection.s.db.options?.forceServerObjectId === true\n    );\n  }\n}\n\nfunction isInsertBatch(batch: Batch): boolean {\n  return batch.batchType === BatchType.INSERT;\n}\n\nfunction isUpdateBatch(batch: Batch): batch is Batch<UpdateStatement> {\n  return batch.batchType === BatchType.UPDATE;\n}\n\nfunction isDeleteBatch(batch: Batch): batch is Batch<DeleteStatement> {\n  return batch.batchType === BatchType.DELETE;\n}\n\nfunction buildCurrentOp(bulkOp: BulkOperationBase): Document {\n  let { currentOp } = bulkOp.s;\n  bulkOp.s.currentOp = undefined;\n  if (!currentOp) currentOp = {};\n  return currentOp;\n}\n", "import type { Document } from '../bson';\nimport * as BSON from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoInvalidArgumentError } from '../error';\nimport type { DeleteStatement } from '../operations/delete';\nimport type { UpdateStatement } from '../operations/update';\nimport { Batch, BatchType, BulkOperationBase, type BulkWriteOptions } from './common';\n\n/** @public */\nexport class OrderedBulkOperation extends BulkOperationBase {\n  /** @internal */\n  constructor(collection: Collection, options: BulkWriteOptions) {\n    super(collection, options, true);\n  }\n\n  addToOperationsList(\n    batchType: BatchType,\n    document: Document | UpdateStatement | DeleteStatement\n  ): this {\n    // Get the bsonSize\n    const bsonSize = BSON.calculateObjectSize(document, {\n      checkKeys: false,\n      // Since we don't know what the user selected for BSON options here,\n      // err on the safe side, and check the size with ignoreUndefined: false.\n      ignoreUndefined: false\n    } as any);\n\n    // Throw error if the doc is bigger than the max BSON size\n    if (bsonSize >= this.s.maxBsonObjectSize)\n      // TODO(NODE-3483): Change this to MongoBSONError\n      throw new MongoInvalidArgumentError(\n        `Document is larger than the maximum size ${this.s.maxBsonObjectSize}`\n      );\n\n    // Create a new batch object if we don't have a current one\n    if (this.s.currentBatch == null) {\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n    }\n\n    const maxKeySize = this.s.maxKeySize;\n\n    // Check if we need to create a new batch\n    if (\n      // New batch if we exceed the max batch op size\n      this.s.currentBatchSize + 1 >= this.s.maxWriteBatchSize ||\n      // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n      // since we can't sent an empty batch\n      (this.s.currentBatchSize > 0 &&\n        this.s.currentBatchSizeBytes + maxKeySize + bsonSize >= this.s.maxBatchSizeBytes) ||\n      // New batch if the new op does not have the same op type as the current batch\n      this.s.currentBatch.batchType !== batchType\n    ) {\n      // Save the batch to the execution stack\n      this.s.batches.push(this.s.currentBatch);\n\n      // Create a new batch\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n\n      // Reset the current size trackers\n      this.s.currentBatchSize = 0;\n      this.s.currentBatchSizeBytes = 0;\n    }\n\n    if (batchType === BatchType.INSERT) {\n      this.s.bulkResult.insertedIds.push({\n        index: this.s.currentIndex,\n        _id: (document as Document)._id\n      });\n    }\n\n    // We have an array of documents\n    if (Array.isArray(document)) {\n      throw new MongoInvalidArgumentError('Operation passed in cannot be an Array');\n    }\n\n    this.s.currentBatch.originalIndexes.push(this.s.currentIndex);\n    this.s.currentBatch.operations.push(document);\n    this.s.currentBatchSize += 1;\n    this.s.currentBatchSizeBytes += maxKeySize + bsonSize;\n    this.s.currentIndex += 1;\n    return this;\n  }\n}\n", "import type { Document } from '../bson';\nimport * as BSON from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoInvalidArgumentError } from '../error';\nimport type { DeleteStatement } from '../operations/delete';\nimport type { UpdateStatement } from '../operations/update';\nimport {\n  Batch,\n  BatchType,\n  BulkOperationBase,\n  type BulkWriteOptions,\n  type BulkWriteResult\n} from './common';\n\n/** @public */\nexport class UnorderedBulkOperation extends BulkOperationBase {\n  /** @internal */\n  constructor(collection: Collection, options: BulkWriteOptions) {\n    super(collection, options, false);\n  }\n\n  override handleWriteError(writeResult: BulkWriteResult): void {\n    if (this.s.batches.length) {\n      return;\n    }\n\n    return super.handleWriteError(writeResult);\n  }\n\n  addToOperationsList(\n    batchType: BatchType,\n    document: Document | UpdateStatement | DeleteStatement\n  ): this {\n    // Get the bsonSize\n    const bsonSize = BSON.calculateObjectSize(document, {\n      checkKeys: false,\n\n      // Since we don't know what the user selected for BSON options here,\n      // err on the safe side, and check the size with ignoreUndefined: false.\n      ignoreUndefined: false\n    } as any);\n\n    // Throw error if the doc is bigger than the max BSON size\n    if (bsonSize >= this.s.maxBsonObjectSize) {\n      // TODO(NODE-3483): Change this to MongoBSONError\n      throw new MongoInvalidArgumentError(\n        `Document is larger than the maximum size ${this.s.maxBsonObjectSize}`\n      );\n    }\n\n    // Holds the current batch\n    this.s.currentBatch = undefined;\n    // Get the right type of batch\n    if (batchType === BatchType.INSERT) {\n      this.s.currentBatch = this.s.currentInsertBatch;\n    } else if (batchType === BatchType.UPDATE) {\n      this.s.currentBatch = this.s.currentUpdateBatch;\n    } else if (batchType === BatchType.DELETE) {\n      this.s.currentBatch = this.s.currentRemoveBatch;\n    }\n\n    const maxKeySize = this.s.maxKeySize;\n\n    // Create a new batch object if we don't have a current one\n    if (this.s.currentBatch == null) {\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n    }\n\n    // Check if we need to create a new batch\n    if (\n      // New batch if we exceed the max batch op size\n      this.s.currentBatch.size + 1 >= this.s.maxWriteBatchSize ||\n      // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n      // since we can't sent an empty batch\n      (this.s.currentBatch.size > 0 &&\n        this.s.currentBatch.sizeBytes + maxKeySize + bsonSize >= this.s.maxBatchSizeBytes) ||\n      // New batch if the new op does not have the same op type as the current batch\n      this.s.currentBatch.batchType !== batchType\n    ) {\n      // Save the batch to the execution stack\n      this.s.batches.push(this.s.currentBatch);\n\n      // Create a new batch\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n    }\n\n    // We have an array of documents\n    if (Array.isArray(document)) {\n      throw new MongoInvalidArgumentError('Operation passed in cannot be an Array');\n    }\n\n    this.s.currentBatch.operations.push(document);\n    this.s.currentBatch.originalIndexes.push(this.s.currentIndex);\n    this.s.currentIndex = this.s.currentIndex + 1;\n\n    // Save back the current Batch to the right type\n    if (batchType === BatchType.INSERT) {\n      this.s.currentInsertBatch = this.s.currentBatch;\n      this.s.bulkResult.insertedIds.push({\n        index: this.s.bulkResult.insertedIds.length,\n        _id: (document as Document)._id\n      });\n    } else if (batchType === BatchType.UPDATE) {\n      this.s.currentUpdateBatch = this.s.currentBatch;\n    } else if (batchType === BatchType.DELETE) {\n      this.s.currentRemoveBatch = this.s.currentBatch;\n    }\n\n    // Update current batch size\n    this.s.currentBatch.size += 1;\n    this.s.currentBatch.sizeBytes += maxKeySize + bsonSize;\n\n    return this;\n  }\n}\n", "import type { Document } from '../bson';\nimport { CursorResponse, ExplainedCursorResponse } from '../cmap/wire_protocol/responses';\nimport { type CursorTimeoutMode } from '../cursor/abstract_cursor';\nimport { MongoInvalidArgumentError } from '../error';\nimport { type ExplainOptions } from '../explain';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { maxWireVersion, type MongoDBNamespace } from '../utils';\nimport { WriteConcern } from '../write_concern';\nimport { type CollationOptions, CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, type Hint } from './operation';\n\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\nexport const DB_AGGREGATE_COLLECTION = 1 as const;\nconst MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT = 8;\n\n/** @public */\nexport interface AggregateOptions extends Omit<CommandOperationOptions, 'explain'> {\n  /** allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 \\>). */\n  allowDiskUse?: boolean;\n  /** The number of documents to return per batch. See [aggregation documentation](https://www.mongodb.com/docs/manual/reference/command/aggregate). */\n  batchSize?: number;\n  /** Allow driver to bypass schema validation. */\n  bypassDocumentValidation?: boolean;\n  /** Return the query as cursor, on 2.6 \\> it returns as a real cursor on pre 2.6 it returns as an emulated cursor. */\n  cursor?: Document;\n  /**\n   * Specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\n   */\n  maxTimeMS?: number;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. */\n  maxAwaitTimeMS?: number;\n  /** Specify collation. */\n  collation?: CollationOptions;\n  /** Add an index selection hint to an aggregation command */\n  hint?: Hint;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n\n  out?: string;\n\n  /**\n   * Specifies the verbosity mode for the explain output.\n   * @deprecated This API is deprecated in favor of `collection.aggregate().explain()`\n   * or `db.aggregate().explain()`.\n   */\n  explain?: ExplainOptions['explain'];\n  /** @internal */\n  timeoutMode?: CursorTimeoutMode;\n}\n\n/** @internal */\nexport class AggregateOperation extends CommandOperation<CursorResponse> {\n  override options: AggregateOptions;\n  target: string | typeof DB_AGGREGATE_COLLECTION;\n  pipeline: Document[];\n  hasWriteStage: boolean;\n\n  constructor(ns: MongoDBNamespace, pipeline: Document[], options?: AggregateOptions) {\n    super(undefined, { ...options, dbName: ns.db });\n\n    this.options = { ...options };\n\n    // Covers when ns.collection is null, undefined or the empty string, use DB_AGGREGATE_COLLECTION\n    this.target = ns.collection || DB_AGGREGATE_COLLECTION;\n\n    this.pipeline = pipeline;\n\n    // determine if we have a write stage, override read preference if so\n    this.hasWriteStage = false;\n    if (typeof options?.out === 'string') {\n      this.pipeline = this.pipeline.concat({ $out: options.out });\n      this.hasWriteStage = true;\n    } else if (pipeline.length > 0) {\n      const finalStage = pipeline[pipeline.length - 1];\n      if (finalStage.$out || finalStage.$merge) {\n        this.hasWriteStage = true;\n      }\n    }\n\n    if (this.hasWriteStage) {\n      this.trySecondaryWrite = true;\n    } else {\n      delete this.options.writeConcern;\n    }\n\n    if (this.explain && this.writeConcern) {\n      throw new MongoInvalidArgumentError(\n        'Option \"explain\" cannot be used on an aggregate call with writeConcern'\n      );\n    }\n\n    if (options?.cursor != null && typeof options.cursor !== 'object') {\n      throw new MongoInvalidArgumentError('Cursor options must be an object');\n    }\n  }\n\n  override get commandName() {\n    return 'aggregate' as const;\n  }\n\n  override get canRetryRead(): boolean {\n    return !this.hasWriteStage;\n  }\n\n  addToPipeline(stage: Document): void {\n    this.pipeline.push(stage);\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<CursorResponse> {\n    const options: AggregateOptions = this.options;\n    const serverWireVersion = maxWireVersion(server);\n    const command: Document = { aggregate: this.target, pipeline: this.pipeline };\n\n    if (this.hasWriteStage && serverWireVersion < MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT) {\n      this.readConcern = undefined;\n    }\n\n    if (this.hasWriteStage && this.writeConcern) {\n      WriteConcern.apply(command, this.writeConcern);\n    }\n\n    if (options.bypassDocumentValidation === true) {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (typeof options.allowDiskUse === 'boolean') {\n      command.allowDiskUse = options.allowDiskUse;\n    }\n\n    if (options.hint) {\n      command.hint = options.hint;\n    }\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    command.cursor = options.cursor || {};\n    if (options.batchSize && !this.hasWriteStage) {\n      command.cursor.batchSize = options.batchSize;\n    }\n\n    return await super.executeCommand(\n      server,\n      session,\n      command,\n      timeoutContext,\n      this.explain ? ExplainedCursorResponse : CursorResponse\n    );\n  }\n}\n\ndefineAspects(AggregateOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import type { Document } from '../bson';\nimport { MongoAPIError } from '../error';\nimport {\n  Explain,\n  ExplainableCursor,\n  type ExplainCommandOptions,\n  type ExplainVerbosityLike,\n  validateExplainTimeoutOptions\n} from '../explain';\nimport type { MongoClient } from '../mongo_client';\nimport { type Abortable } from '../mongo_types';\nimport { AggregateOperation, type AggregateOptions } from '../operations/aggregate';\nimport { executeOperation } from '../operations/execute_operation';\nimport type { ClientSession } from '../sessions';\nimport type { Sort } from '../sort';\nimport { mergeOptions, type MongoDBNamespace } from '../utils';\nimport {\n  type AbstractCursorOptions,\n  CursorTimeoutMode,\n  type InitialCursorResponse\n} from './abstract_cursor';\n\n/** @public */\nexport interface AggregationCursorOptions extends AbstractCursorOptions, AggregateOptions {}\n\n/**\n * The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n * @public\n */\nexport class AggregationCursor<TSchema = any> extends ExplainableCursor<TSchema> {\n  public readonly pipeline: Document[];\n  /** @internal */\n  private aggregateOptions: AggregateOptions & Abortable;\n\n  /** @internal */\n  constructor(\n    client: MongoClient,\n    namespace: MongoDBNamespace,\n    pipeline: Document[] = [],\n    options: AggregateOptions & Abortable = {}\n  ) {\n    super(client, namespace, options);\n\n    this.pipeline = pipeline;\n    this.aggregateOptions = options;\n\n    const lastStage: Document | undefined = this.pipeline[this.pipeline.length - 1];\n\n    if (\n      this.cursorOptions.timeoutMS != null &&\n      this.cursorOptions.timeoutMode === CursorTimeoutMode.ITERATION &&\n      (lastStage?.$merge != null || lastStage?.$out != null)\n    )\n      throw new MongoAPIError('Cannot use $out or $merge stage with ITERATION timeoutMode');\n  }\n\n  clone(): AggregationCursor<TSchema> {\n    const clonedOptions = mergeOptions({}, this.aggregateOptions);\n    delete clonedOptions.session;\n    return new AggregationCursor(this.client, this.namespace, this.pipeline, {\n      ...clonedOptions\n    });\n  }\n\n  override map<T>(transform: (doc: TSchema) => T): AggregationCursor<T> {\n    return super.map(transform) as AggregationCursor<T>;\n  }\n\n  /** @internal */\n  async _initialize(session: ClientSession): Promise<InitialCursorResponse> {\n    const options = {\n      ...this.aggregateOptions,\n      ...this.cursorOptions,\n      session,\n      signal: this.signal\n    };\n    if (options.explain) {\n      try {\n        validateExplainTimeoutOptions(options, Explain.fromOptions(options));\n      } catch {\n        throw new MongoAPIError(\n          'timeoutMS cannot be used with explain when explain is specified in aggregateOptions'\n        );\n      }\n    }\n\n    const aggregateOperation = new AggregateOperation(this.namespace, this.pipeline, options);\n\n    const response = await executeOperation(this.client, aggregateOperation, this.timeoutContext);\n\n    return { server: aggregateOperation.server, session, response };\n  }\n\n  /** Execute the explain for the cursor */\n  async explain(): Promise<Document>;\n  async explain(verbosity: ExplainVerbosityLike | ExplainCommandOptions): Promise<Document>;\n  async explain(options: { timeoutMS?: number }): Promise<Document>;\n  async explain(\n    verbosity: ExplainVerbosityLike | ExplainCommandOptions,\n    options: { timeoutMS?: number }\n  ): Promise<Document>;\n  async explain(\n    verbosity?: ExplainVerbosityLike | ExplainCommandOptions | { timeoutMS?: number },\n    options?: { timeoutMS?: number }\n  ): Promise<Document> {\n    const { explain, timeout } = this.resolveExplainTimeoutOptions(verbosity, options);\n    return (\n      await executeOperation(\n        this.client,\n        new AggregateOperation(this.namespace, this.pipeline, {\n          ...this.aggregateOptions, // NOTE: order matters here, we may need to refine this\n          ...this.cursorOptions,\n          ...timeout,\n          explain: explain ?? true\n        })\n      )\n    ).shift(this.deserializationOptions);\n  }\n\n  /** Add a stage to the aggregation pipeline\n   * @example\n   * ```\n   * const documents = await users.aggregate().addStage({ $match: { name: /Mike/ } }).toArray();\n   * ```\n   * @example\n   * ```\n   * const documents = await users.aggregate()\n   *   .addStage<{ name: string }>({ $project: { name: true } })\n   *   .toArray(); // type of documents is { name: string }[]\n   * ```\n   */\n  addStage(stage: Document): this;\n  addStage<T = Document>(stage: Document): AggregationCursor<T>;\n  addStage<T = Document>(stage: Document): AggregationCursor<T> {\n    this.throwIfInitialized();\n    if (\n      this.cursorOptions.timeoutMS != null &&\n      this.cursorOptions.timeoutMode === CursorTimeoutMode.ITERATION &&\n      (stage.$out != null || stage.$merge != null)\n    ) {\n      throw new MongoAPIError('Cannot use $out or $merge stage with ITERATION timeoutMode');\n    }\n    this.pipeline.push(stage);\n    return this as unknown as AggregationCursor<T>;\n  }\n\n  /** Add a group stage to the aggregation pipeline */\n  group<T = TSchema>($group: Document): AggregationCursor<T>;\n  group($group: Document): this {\n    return this.addStage({ $group });\n  }\n\n  /** Add a limit stage to the aggregation pipeline */\n  limit($limit: number): this {\n    return this.addStage({ $limit });\n  }\n\n  /** Add a match stage to the aggregation pipeline */\n  match($match: Document): this {\n    return this.addStage({ $match });\n  }\n\n  /** Add an out stage to the aggregation pipeline */\n  out($out: { db: string; coll: string } | string): this {\n    return this.addStage({ $out });\n  }\n\n  /**\n   * Add a project stage to the aggregation pipeline\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * By default chaining a projection to your cursor changes the returned type to the generic {@link Document} type.\n   * You should specify a parameterized type to have assertions on your final results.\n   *\n   * @example\n   * ```typescript\n   * // Best way\n   * const docs: AggregationCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * // Flexible way\n   * const docs: AggregationCursor<Document> = cursor.project({ _id: 0, a: true });\n   * ```\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling project,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: AggregationCursor<{ a: number; b: string }> = coll.aggregate([]);\n   * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n   *\n   * // or always use chaining and save the final cursor\n   *\n   * const cursor = coll.aggregate().project<{ a: string }>({\n   *   _id: 0,\n   *   a: { $convert: { input: '$a', to: 'string' }\n   * }});\n   * ```\n   */\n  project<T extends Document = Document>($project: Document): AggregationCursor<T> {\n    return this.addStage<T>({ $project });\n  }\n\n  /** Add a lookup stage to the aggregation pipeline */\n  lookup($lookup: Document): this {\n    return this.addStage({ $lookup });\n  }\n\n  /** Add a redact stage to the aggregation pipeline */\n  redact($redact: Document): this {\n    return this.addStage({ $redact });\n  }\n\n  /** Add a skip stage to the aggregation pipeline */\n  skip($skip: number): this {\n    return this.addStage({ $skip });\n  }\n\n  /** Add a sort stage to the aggregation pipeline */\n  sort($sort: Sort): this {\n    return this.addStage({ $sort });\n  }\n\n  /** Add a unwind stage to the aggregation pipeline */\n  unwind($unwind: Document | string): this {\n    return this.addStage({ $unwind });\n  }\n\n  /** Add a geoNear stage to the aggregation pipeline */\n  geoNear($geoNear: Document): this {\n    return this.addStage({ $geoNear });\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport type { MongoDBNamespace } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface CountOptions extends CommandOperationOptions {\n  /** The number of documents to skip. */\n  skip?: number;\n  /** The maximum amounts to count before aborting. */\n  limit?: number;\n  /**\n   * Number of milliseconds to wait before aborting the query.\n   */\n  maxTimeMS?: number;\n  /** An index name hint for the query. */\n  hint?: string | Document;\n}\n\n/** @internal */\nexport class CountOperation extends CommandOperation<number> {\n  override options: CountOptions;\n  collectionName?: string;\n  query: Document;\n\n  constructor(namespace: MongoDBNamespace, filter: Document, options: CountOptions) {\n    super({ s: { namespace: namespace } } as unknown as Collection, options);\n\n    this.options = options;\n    this.collectionName = namespace.collection;\n    this.query = filter;\n  }\n\n  override get commandName() {\n    return 'count' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<number> {\n    const options = this.options;\n    const cmd: Document = {\n      count: this.collectionName,\n      query: this.query\n    };\n\n    if (typeof options.limit === 'number') {\n      cmd.limit = options.limit;\n    }\n\n    if (typeof options.skip === 'number') {\n      cmd.skip = options.skip;\n    }\n\n    if (options.hint != null) {\n      cmd.hint = options.hint;\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    const result = await super.executeCommand(server, session, cmd, timeoutContext);\n    return result ? result.n : 0;\n  }\n}\n\ndefineAspects(CountOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE]);\n", "import { MongoInvalidArgumentError } from './error';\n\n/** @public */\nexport type SortDirection =\n  | 1\n  | -1\n  | 'asc'\n  | 'desc'\n  | 'ascending'\n  | 'descending'\n  | { $meta: string };\n\n/** @public */\nexport type Sort =\n  | string\n  | Exclude<SortDirection, { $meta: string }>\n  | string[]\n  | { [key: string]: SortDirection }\n  | Map<string, SortDirection>\n  | [string, SortDirection][]\n  | [string, SortDirection];\n\n/** Below stricter types were created for sort that correspond with type that the cmd takes  */\n\n/** @internal */\nexport type SortDirectionForCmd = 1 | -1 | { $meta: string };\n\n/** @internal */\nexport type SortForCmd = Map<string, SortDirectionForCmd>;\n\n/** @internal */\ntype SortPairForCmd = [string, SortDirectionForCmd];\n\n/** @internal */\nfunction prepareDirection(direction: any = 1): SortDirectionForCmd {\n  const value = `${direction}`.toLowerCase();\n  if (isMeta(direction)) return direction;\n  switch (value) {\n    case 'ascending':\n    case 'asc':\n    case '1':\n      return 1;\n    case 'descending':\n    case 'desc':\n    case '-1':\n      return -1;\n    default:\n      throw new MongoInvalidArgumentError(`Invalid sort direction: ${JSON.stringify(direction)}`);\n  }\n}\n\n/** @internal */\nfunction isMeta(t: SortDirection): t is { $meta: string } {\n  return typeof t === 'object' && t != null && '$meta' in t && typeof t.$meta === 'string';\n}\n\n/** @internal */\nfunction isPair(t: Sort): t is [string, SortDirection] {\n  if (Array.isArray(t) && t.length === 2) {\n    try {\n      prepareDirection(t[1]);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  return false;\n}\n\nfunction isDeep(t: Sort): t is [string, SortDirection][] {\n  return Array.isArray(t) && Array.isArray(t[0]);\n}\n\nfunction isMap(t: Sort): t is Map<string, SortDirection> {\n  return t instanceof Map && t.size > 0;\n}\n\n/** @internal */\nfunction pairToMap(v: [string, SortDirection]): SortForCmd {\n  return new Map([[`${v[0]}`, prepareDirection([v[1]])]]);\n}\n\n/** @internal */\nfunction deepToMap(t: [string, SortDirection][]): SortForCmd {\n  const sortEntries: SortPairForCmd[] = t.map(([k, v]) => [`${k}`, prepareDirection(v)]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction stringsToMap(t: string[]): SortForCmd {\n  const sortEntries: SortPairForCmd[] = t.map(key => [`${key}`, 1]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction objectToMap(t: { [key: string]: SortDirection }): SortForCmd {\n  const sortEntries: SortPairForCmd[] = Object.entries(t).map(([k, v]) => [\n    `${k}`,\n    prepareDirection(v)\n  ]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction mapToMap(t: Map<string, SortDirection>): SortForCmd {\n  const sortEntries: SortPairForCmd[] = Array.from(t).map(([k, v]) => [\n    `${k}`,\n    prepareDirection(v)\n  ]);\n  return new Map(sortEntries);\n}\n\n/** converts a Sort type into a type that is valid for the server (SortForCmd) */\nexport function formatSort(\n  sort: Sort | undefined,\n  direction?: SortDirection\n): SortForCmd | undefined {\n  if (sort == null) return undefined;\n  if (typeof sort === 'string') return new Map([[sort, prepareDirection(direction)]]);\n  if (typeof sort !== 'object') {\n    throw new MongoInvalidArgumentError(\n      `Invalid sort format: ${JSON.stringify(sort)} Sort must be a valid object`\n    );\n  }\n  if (!Array.isArray(sort)) {\n    return isMap(sort) ? mapToMap(sort) : Object.keys(sort).length ? objectToMap(sort) : undefined;\n  }\n  if (!sort.length) return undefined;\n  if (isDeep(sort)) return deepToMap(sort);\n  if (isPair(sort)) return pairToMap(sort);\n  return stringsToMap(sort);\n}\n", "import type { Document } from '../bson';\nimport { CursorResponse, ExplainedCursorResponse } from '../cmap/wire_protocol/responses';\nimport { type AbstractCursorOptions, type CursorTimeoutMode } from '../cursor/abstract_cursor';\nimport { MongoInvalidArgumentError } from '../error';\nimport {\n  decorateWithExplain,\n  type ExplainOptions,\n  validateExplainTimeoutOptions\n} from '../explain';\nimport { ReadConcern } from '../read_concern';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { formatSort, type Sort } from '../sort';\nimport { type TimeoutContext } from '../timeout';\nimport { type MongoDBNamespace, normalizeHintField } from '../utils';\nimport { type CollationOptions, CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, type Hint } from './operation';\n\n/**\n * @public\n * @typeParam TSchema - Unused schema definition, deprecated usage, only specify `FindOptions` with no generic\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface FindOptions<TSchema extends Document = Document>\n  extends Omit<CommandOperationOptions, 'writeConcern' | 'explain'>,\n    AbstractCursorOptions {\n  /** Sets the limit of documents returned in the query. */\n  limit?: number;\n  /** Set to sort the documents coming back from the query. Array of indexes, `[['a', 1]]` etc. */\n  sort?: Sort;\n  /** The fields to return in the query. Object of fields to either include or exclude (one of, not both), `{'a':1, 'b': 1}` **or** `{'a': 0, 'b': 0}` */\n  projection?: Document;\n  /** Set to skip N documents ahead in your query (useful for pagination). */\n  skip?: number;\n  /** Tell the query to use specific indexes in the query. Object of indexes to use, `{'_id':1}` */\n  hint?: Hint;\n  /** Specify if the cursor can timeout. */\n  timeout?: boolean;\n  /** Specify if the cursor is tailable. */\n  tailable?: boolean;\n  /** Specify if the cursor is a tailable-await cursor. Requires `tailable` to be true */\n  awaitData?: boolean;\n  /** Set the batchSize for the getMoreCommand when iterating over the query results. */\n  batchSize?: number;\n  /** If true, returns only the index keys in the resulting documents. */\n  returnKey?: boolean;\n  /** The inclusive lower bound for a specific index */\n  min?: Document;\n  /** The exclusive upper bound for a specific index */\n  max?: Document;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. Requires `tailable` and `awaitData` to be true */\n  maxAwaitTimeMS?: number;\n  /** The server normally times out idle cursors after an inactivity period (10 minutes) to prevent excess memory use. Set this option to prevent that. */\n  noCursorTimeout?: boolean;\n  /** Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields). */\n  collation?: CollationOptions;\n  /** Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher) */\n  allowDiskUse?: boolean;\n  /** Determines whether to close the cursor after the first batch. Defaults to false. */\n  singleBatch?: boolean;\n  /** For queries against a sharded collection, allows the command (or subsequent getMore commands) to return partial results, rather than an error, if one or more queried shards are unavailable. */\n  allowPartialResults?: boolean;\n  /** Determines whether to return the record identifier for each document. If true, adds a field $recordId to the returned documents. */\n  showRecordId?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n  /**\n   * Option to enable an optimized code path for queries looking for a particular range of `ts` values in the oplog. Requires `tailable` to be true.\n   * @deprecated Starting from MongoDB 4.4 this flag is not needed and will be ignored.\n   */\n  oplogReplay?: boolean;\n\n  /**\n   * Specifies the verbosity mode for the explain output.\n   * @deprecated This API is deprecated in favor of `collection.find().explain()`.\n   */\n  explain?: ExplainOptions['explain'];\n  /** @internal*/\n  timeoutMode?: CursorTimeoutMode;\n}\n\n/** @internal */\nexport class FindOperation extends CommandOperation<CursorResponse> {\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  override options: FindOptions & { writeConcern?: never };\n  filter: Document;\n\n  constructor(ns: MongoDBNamespace, filter: Document = {}, options: FindOptions = {}) {\n    super(undefined, options);\n\n    this.options = { ...options };\n    delete this.options.writeConcern;\n    this.ns = ns;\n\n    if (typeof filter !== 'object' || Array.isArray(filter)) {\n      throw new MongoInvalidArgumentError('Query filter must be a plain object or ObjectId');\n    }\n\n    // special case passing in an ObjectId as a filter\n    this.filter = filter != null && filter._bsontype === 'ObjectId' ? { _id: filter } : filter;\n  }\n\n  override get commandName() {\n    return 'find' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<CursorResponse> {\n    this.server = server;\n\n    const options = this.options;\n\n    let findCommand = makeFindCommand(this.ns, this.filter, options);\n    if (this.explain) {\n      validateExplainTimeoutOptions(this.options, this.explain);\n      findCommand = decorateWithExplain(findCommand, this.explain);\n    }\n\n    return await server.command(\n      this.ns,\n      findCommand,\n      {\n        ...this.options,\n        ...this.bsonOptions,\n        documentsReturnedIn: 'firstBatch',\n        session,\n        timeoutContext\n      },\n      this.explain ? ExplainedCursorResponse : CursorResponse\n    );\n  }\n}\n\nfunction makeFindCommand(ns: MongoDBNamespace, filter: Document, options: FindOptions): Document {\n  const findCommand: Document = {\n    find: ns.collection,\n    filter\n  };\n\n  if (options.sort) {\n    findCommand.sort = formatSort(options.sort);\n  }\n\n  if (options.projection) {\n    let projection = options.projection;\n    if (projection && Array.isArray(projection)) {\n      projection = projection.length\n        ? projection.reduce((result, field) => {\n            result[field] = 1;\n            return result;\n          }, {})\n        : { _id: 1 };\n    }\n\n    findCommand.projection = projection;\n  }\n\n  if (options.hint) {\n    findCommand.hint = normalizeHintField(options.hint);\n  }\n\n  if (typeof options.skip === 'number') {\n    findCommand.skip = options.skip;\n  }\n\n  if (typeof options.limit === 'number') {\n    if (options.limit < 0) {\n      findCommand.limit = -options.limit;\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.limit = options.limit;\n    }\n  }\n\n  if (typeof options.batchSize === 'number') {\n    if (options.batchSize < 0) {\n      if (\n        options.limit &&\n        options.limit !== 0 &&\n        Math.abs(options.batchSize) < Math.abs(options.limit)\n      ) {\n        findCommand.limit = -options.batchSize;\n      }\n\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.batchSize = options.batchSize;\n    }\n  }\n\n  if (typeof options.singleBatch === 'boolean') {\n    findCommand.singleBatch = options.singleBatch;\n  }\n\n  // we check for undefined specifically here to allow falsy values\n  // eslint-disable-next-line no-restricted-syntax\n  if (options.comment !== undefined) {\n    findCommand.comment = options.comment;\n  }\n\n  if (typeof options.maxTimeMS === 'number') {\n    findCommand.maxTimeMS = options.maxTimeMS;\n  }\n\n  const readConcern = ReadConcern.fromOptions(options);\n  if (readConcern) {\n    findCommand.readConcern = readConcern.toJSON();\n  }\n\n  if (options.max) {\n    findCommand.max = options.max;\n  }\n\n  if (options.min) {\n    findCommand.min = options.min;\n  }\n\n  if (typeof options.returnKey === 'boolean') {\n    findCommand.returnKey = options.returnKey;\n  }\n\n  if (typeof options.showRecordId === 'boolean') {\n    findCommand.showRecordId = options.showRecordId;\n  }\n\n  if (typeof options.tailable === 'boolean') {\n    findCommand.tailable = options.tailable;\n  }\n\n  if (typeof options.oplogReplay === 'boolean') {\n    findCommand.oplogReplay = options.oplogReplay;\n  }\n\n  if (typeof options.timeout === 'boolean') {\n    findCommand.noCursorTimeout = !options.timeout;\n  } else if (typeof options.noCursorTimeout === 'boolean') {\n    findCommand.noCursorTimeout = options.noCursorTimeout;\n  }\n\n  if (typeof options.awaitData === 'boolean') {\n    findCommand.awaitData = options.awaitData;\n  }\n\n  if (typeof options.allowPartialResults === 'boolean') {\n    findCommand.allowPartialResults = options.allowPartialResults;\n  }\n\n  if (options.collation) {\n    findCommand.collation = options.collation;\n  }\n\n  if (typeof options.allowDiskUse === 'boolean') {\n    findCommand.allowDiskUse = options.allowDiskUse;\n  }\n\n  if (options.let) {\n    findCommand.let = options.let;\n  }\n\n  return findCommand;\n}\n\ndefineAspects(FindOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import { type Document } from '../bson';\nimport { CursorResponse } from '../cmap/wire_protocol/responses';\nimport { MongoAPIError, MongoInvalidArgumentError, MongoTailableCursorError } from '../error';\nimport {\n  Explain,\n  ExplainableCursor,\n  type ExplainCommandOptions,\n  type ExplainVerbosityLike,\n  validateExplainTimeoutOptions\n} from '../explain';\nimport type { MongoClient } from '../mongo_client';\nimport { type Abortable } from '../mongo_types';\nimport type { CollationOptions } from '../operations/command';\nimport { CountOperation, type CountOptions } from '../operations/count';\nimport { executeOperation } from '../operations/execute_operation';\nimport { FindOperation, type FindOptions } from '../operations/find';\nimport type { Hint } from '../operations/operation';\nimport type { ClientSession } from '../sessions';\nimport { formatSort, type Sort, type SortDirection } from '../sort';\nimport { emitWarningOnce, mergeOptions, type MongoDBNamespace, squashError } from '../utils';\nimport { type InitialCursorResponse } from './abstract_cursor';\n\n/** @public Flags allowed for cursor */\nexport const FLAGS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'exhaust',\n  'partial'\n] as const;\n\n/** @public */\nexport class FindCursor<TSchema = any> extends ExplainableCursor<TSchema> {\n  /** @internal */\n  private cursorFilter: Document;\n  /** @internal */\n  private numReturned = 0;\n  /** @internal */\n  private readonly findOptions: FindOptions & Abortable;\n\n  /** @internal */\n  constructor(\n    client: MongoClient,\n    namespace: MongoDBNamespace,\n    filter: Document = {},\n    options: FindOptions & Abortable = {}\n  ) {\n    super(client, namespace, options);\n\n    this.cursorFilter = filter;\n    this.findOptions = options;\n\n    if (options.sort != null) {\n      this.findOptions.sort = formatSort(options.sort);\n    }\n  }\n\n  clone(): FindCursor<TSchema> {\n    const clonedOptions = mergeOptions({}, this.findOptions);\n    delete clonedOptions.session;\n    return new FindCursor(this.client, this.namespace, this.cursorFilter, {\n      ...clonedOptions\n    });\n  }\n\n  override map<T>(transform: (doc: TSchema) => T): FindCursor<T> {\n    return super.map(transform) as FindCursor<T>;\n  }\n\n  /** @internal */\n  async _initialize(session: ClientSession): Promise<InitialCursorResponse> {\n    const options = {\n      ...this.findOptions, // NOTE: order matters here, we may need to refine this\n      ...this.cursorOptions,\n      session,\n      signal: this.signal\n    };\n\n    if (options.explain) {\n      try {\n        validateExplainTimeoutOptions(options, Explain.fromOptions(options));\n      } catch {\n        throw new MongoAPIError(\n          'timeoutMS cannot be used with explain when explain is specified in findOptions'\n        );\n      }\n    }\n\n    const findOperation = new FindOperation(this.namespace, this.cursorFilter, options);\n\n    const response = await executeOperation(this.client, findOperation, this.timeoutContext);\n\n    // the response is not a cursor when `explain` is enabled\n    this.numReturned = response.batchSize;\n\n    return { server: findOperation.server, session, response };\n  }\n\n  /** @internal */\n  override async getMore(batchSize: number): Promise<CursorResponse> {\n    const numReturned = this.numReturned;\n    if (numReturned) {\n      // TODO(DRIVERS-1448): Remove logic to enforce `limit` in the driver\n      const limit = this.findOptions.limit;\n      batchSize =\n        limit && limit > 0 && numReturned + batchSize > limit ? limit - numReturned : batchSize;\n\n      if (batchSize <= 0) {\n        try {\n          await this.close();\n        } catch (error) {\n          squashError(error);\n          // this is an optimization for the special case of a limit for a find command to avoid an\n          // extra getMore when the limit has been reached and the limit is a multiple of the batchSize.\n          // This is a consequence of the new query engine in 5.0 having no knowledge of the limit as it\n          // produces results for the find command.  Once a batch is filled up, it is returned and only\n          // on the subsequent getMore will the query framework consider the limit, determine the cursor\n          // is exhausted and return a cursorId of zero.\n          // instead, if we determine there are no more documents to request from the server, we preemptively\n          // close the cursor\n        }\n        return CursorResponse.emptyGetMore;\n      }\n    }\n\n    const response = await super.getMore(batchSize);\n    // TODO: wrap this in some logic to prevent it from happening if we don't need this support\n    this.numReturned = this.numReturned + response.batchSize;\n\n    return response;\n  }\n\n  /**\n   * Get the count of documents for this cursor\n   * @deprecated Use `collection.estimatedDocumentCount` or `collection.countDocuments` instead\n   */\n  async count(options?: CountOptions): Promise<number> {\n    emitWarningOnce(\n      'cursor.count is deprecated and will be removed in the next major version, please use `collection.estimatedDocumentCount` or `collection.countDocuments` instead '\n    );\n    if (typeof options === 'boolean') {\n      throw new MongoInvalidArgumentError('Invalid first parameter to count');\n    }\n    return await executeOperation(\n      this.client,\n      new CountOperation(this.namespace, this.cursorFilter, {\n        ...this.findOptions, // NOTE: order matters here, we may need to refine this\n        ...this.cursorOptions,\n        ...options\n      })\n    );\n  }\n\n  /** Execute the explain for the cursor */\n  async explain(): Promise<Document>;\n  async explain(verbosity: ExplainVerbosityLike | ExplainCommandOptions): Promise<Document>;\n  async explain(options: { timeoutMS?: number }): Promise<Document>;\n  async explain(\n    verbosity: ExplainVerbosityLike | ExplainCommandOptions,\n    options: { timeoutMS?: number }\n  ): Promise<Document>;\n  async explain(\n    verbosity?: ExplainVerbosityLike | ExplainCommandOptions | { timeoutMS?: number },\n    options?: { timeoutMS?: number }\n  ): Promise<Document> {\n    const { explain, timeout } = this.resolveExplainTimeoutOptions(verbosity, options);\n\n    return (\n      await executeOperation(\n        this.client,\n        new FindOperation(this.namespace, this.cursorFilter, {\n          ...this.findOptions, // NOTE: order matters here, we may need to refine this\n          ...this.cursorOptions,\n          ...timeout,\n          explain: explain ?? true\n        })\n      )\n    ).shift(this.deserializationOptions);\n  }\n\n  /** Set the cursor query */\n  filter(filter: Document): this {\n    this.throwIfInitialized();\n    this.cursorFilter = filter;\n    return this;\n  }\n\n  /**\n   * Set the cursor hint\n   *\n   * @param hint - If specified, then the query system will only consider plans using the hinted index.\n   */\n  hint(hint: Hint): this {\n    this.throwIfInitialized();\n    this.findOptions.hint = hint;\n    return this;\n  }\n\n  /**\n   * Set the cursor min\n   *\n   * @param min - Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n   */\n  min(min: Document): this {\n    this.throwIfInitialized();\n    this.findOptions.min = min;\n    return this;\n  }\n\n  /**\n   * Set the cursor max\n   *\n   * @param max - Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n   */\n  max(max: Document): this {\n    this.throwIfInitialized();\n    this.findOptions.max = max;\n    return this;\n  }\n\n  /**\n   * Set the cursor returnKey.\n   * If set to true, modifies the cursor to only return the index field or fields for the results of the query, rather than documents.\n   * If set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields.\n   *\n   * @param value - the returnKey value.\n   */\n  returnKey(value: boolean): this {\n    this.throwIfInitialized();\n    this.findOptions.returnKey = value;\n    return this;\n  }\n\n  /**\n   * Modifies the output of a query by adding a field $recordId to matching documents. $recordId is the internal key which uniquely identifies a document in a collection.\n   *\n   * @param value - The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n   */\n  showRecordId(value: boolean): this {\n    this.throwIfInitialized();\n    this.findOptions.showRecordId = value;\n    return this;\n  }\n\n  /**\n   * Add a query modifier to the cursor query\n   *\n   * @param name - The query modifier (must start with $, such as $orderby etc)\n   * @param value - The modifier value.\n   */\n  addQueryModifier(name: string, value: string | boolean | number | Document): this {\n    this.throwIfInitialized();\n    if (name[0] !== '$') {\n      throw new MongoInvalidArgumentError(`${name} is not a valid query modifier`);\n    }\n\n    // Strip of the $\n    const field = name.substr(1);\n\n    // NOTE: consider some TS magic for this\n    switch (field) {\n      case 'comment':\n        this.findOptions.comment = value as string | Document;\n        break;\n\n      case 'explain':\n        this.findOptions.explain = value as boolean;\n        break;\n\n      case 'hint':\n        this.findOptions.hint = value as string | Document;\n        break;\n\n      case 'max':\n        this.findOptions.max = value as Document;\n        break;\n\n      case 'maxTimeMS':\n        this.findOptions.maxTimeMS = value as number;\n        break;\n\n      case 'min':\n        this.findOptions.min = value as Document;\n        break;\n\n      case 'orderby':\n        this.findOptions.sort = formatSort(value as string | Document);\n        break;\n\n      case 'query':\n        this.cursorFilter = value as Document;\n        break;\n\n      case 'returnKey':\n        this.findOptions.returnKey = value as boolean;\n        break;\n\n      case 'showDiskLoc':\n        this.findOptions.showRecordId = value as boolean;\n        break;\n\n      default:\n        throw new MongoInvalidArgumentError(`Invalid query modifier: ${name}`);\n    }\n\n    return this;\n  }\n\n  /**\n   * Add a comment to the cursor query allowing for tracking the comment in the log.\n   *\n   * @param value - The comment attached to this query.\n   */\n  comment(value: string): this {\n    this.throwIfInitialized();\n    this.findOptions.comment = value;\n    return this;\n  }\n\n  /**\n   * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n   *\n   * @param value - Number of milliseconds to wait before aborting the tailed query.\n   */\n  maxAwaitTimeMS(value: number): this {\n    this.throwIfInitialized();\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Argument for maxAwaitTimeMS must be a number');\n    }\n\n    this.findOptions.maxAwaitTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n   *\n   * @param value - Number of milliseconds to wait before aborting the query.\n   */\n  override maxTimeMS(value: number): this {\n    this.throwIfInitialized();\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n    }\n\n    this.findOptions.maxTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Add a project stage to the aggregation pipeline\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * By default chaining a projection to your cursor changes the returned type to the generic\n   * {@link Document} type.\n   * You should specify a parameterized type to have assertions on your final results.\n   *\n   * @example\n   * ```typescript\n   * // Best way\n   * const docs: FindCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * // Flexible way\n   * const docs: FindCursor<Document> = cursor.project({ _id: 0, a: true });\n   * ```\n   *\n   * @remarks\n   *\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling project,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: FindCursor<{ a: number; b: string }> = coll.find();\n   * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n   *\n   * // or always use chaining and save the final cursor\n   *\n   * const cursor = coll.find().project<{ a: string }>({\n   *   _id: 0,\n   *   a: { $convert: { input: '$a', to: 'string' }\n   * }});\n   * ```\n   */\n  project<T extends Document = Document>(value: Document): FindCursor<T> {\n    this.throwIfInitialized();\n    this.findOptions.projection = value;\n    return this as unknown as FindCursor<T>;\n  }\n\n  /**\n   * Sets the sort order of the cursor query.\n   *\n   * @param sort - The key or keys set for the sort.\n   * @param direction - The direction of the sorting (1 or -1).\n   */\n  sort(sort: Sort | string, direction?: SortDirection): this {\n    this.throwIfInitialized();\n    if (this.findOptions.tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support sorting');\n    }\n\n    this.findOptions.sort = formatSort(sort, direction);\n    return this;\n  }\n\n  /**\n   * Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher)\n   *\n   * @remarks\n   * {@link https://www.mongodb.com/docs/manual/reference/command/find/#find-cmd-allowdiskuse | find command allowDiskUse documentation}\n   */\n  allowDiskUse(allow = true): this {\n    this.throwIfInitialized();\n\n    if (!this.findOptions.sort) {\n      throw new MongoInvalidArgumentError('Option \"allowDiskUse\" requires a sort specification');\n    }\n\n    // As of 6.0 the default is true. This allows users to get back to the old behavior.\n    if (!allow) {\n      this.findOptions.allowDiskUse = false;\n      return this;\n    }\n\n    this.findOptions.allowDiskUse = true;\n    return this;\n  }\n\n  /**\n   * Set the collation options for the cursor.\n   *\n   * @param value - The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n   */\n  collation(value: CollationOptions): this {\n    this.throwIfInitialized();\n    this.findOptions.collation = value;\n    return this;\n  }\n\n  /**\n   * Set the limit for the cursor.\n   *\n   * @param value - The limit for the cursor query.\n   */\n  limit(value: number): this {\n    this.throwIfInitialized();\n    if (this.findOptions.tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support limit');\n    }\n\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Operation \"limit\" requires an integer');\n    }\n\n    this.findOptions.limit = value;\n    return this;\n  }\n\n  /**\n   * Set the skip for the cursor.\n   *\n   * @param value - The skip for the cursor query.\n   */\n  skip(value: number): this {\n    this.throwIfInitialized();\n    if (this.findOptions.tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support skip');\n    }\n\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Operation \"skip\" requires an integer');\n    }\n\n    this.findOptions.skip = value;\n    return this;\n  }\n}\n", "import type { Document } from '../bson';\nimport { CursorResponse } from '../cmap/wire_protocol/responses';\nimport type { Collection } from '../collection';\nimport { type AbstractCursorOptions } from '../cursor/abstract_cursor';\nimport { MongoCompatibilityError } from '../error';\nimport { type OneOrMore } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { isObject, maxWireVersion, type MongoDBNamespace } from '../utils';\nimport {\n  type CollationOptions,\n  CommandOperation,\n  type CommandOperationOptions,\n  type OperationParent\n} from './command';\nimport { Aspect, defineAspects } from './operation';\n\nconst VALID_INDEX_OPTIONS = new Set([\n  'background',\n  'unique',\n  'name',\n  'partialFilterExpression',\n  'sparse',\n  'hidden',\n  'expireAfterSeconds',\n  'storageEngine',\n  'collation',\n  'version',\n\n  // text indexes\n  'weights',\n  'default_language',\n  'language_override',\n  'textIndexVersion',\n\n  // 2d-sphere indexes\n  '2dsphereIndexVersion',\n\n  // 2d indexes\n  'bits',\n  'min',\n  'max',\n\n  // geoHaystack Indexes\n  'bucketSize',\n\n  // wildcard indexes\n  'wildcardProjection'\n]);\n\n/** @public */\nexport type IndexDirection =\n  | -1\n  | 1\n  | '2d'\n  | '2dsphere'\n  | 'text'\n  | 'geoHaystack'\n  | 'hashed'\n  | number;\n\nfunction isIndexDirection(x: unknown): x is IndexDirection {\n  return (\n    typeof x === 'number' || x === '2d' || x === '2dsphere' || x === 'text' || x === 'geoHaystack'\n  );\n}\n/** @public */\nexport type IndexSpecification = OneOrMore<\n  | string\n  | [string, IndexDirection]\n  | { [key: string]: IndexDirection }\n  | Map<string, IndexDirection>\n>;\n\n/** @public */\nexport interface IndexInformationOptions extends ListIndexesOptions {\n  /**\n   * When `true`, an array of index descriptions is returned.\n   * When `false`, the driver returns an object that with keys corresponding to index names with values\n   * corresponding to the entries of the indexes' key.\n   *\n   * For example, the given the following indexes:\n   * ```\n   * [ { name: 'a_1', key: { a: 1 } }, { name: 'b_1_c_1' , key: { b: 1, c: 1 } }]\n   * ```\n   *\n   * When `full` is `true`, the above array is returned.  When `full` is `false`, the following is returned:\n   * ```\n   * {\n   *   'a_1': [['a', 1]],\n   *   'b_1_c_1': [['b', 1], ['c', 1]],\n   * }\n   * ```\n   */\n  full?: boolean;\n}\n\n/** @public */\nexport interface IndexDescription\n  extends Pick<\n    CreateIndexesOptions,\n    | 'background'\n    | 'unique'\n    | 'partialFilterExpression'\n    | 'sparse'\n    | 'hidden'\n    | 'expireAfterSeconds'\n    | 'storageEngine'\n    | 'version'\n    | 'weights'\n    | 'default_language'\n    | 'language_override'\n    | 'textIndexVersion'\n    | '2dsphereIndexVersion'\n    | 'bits'\n    | 'min'\n    | 'max'\n    | 'bucketSize'\n    | 'wildcardProjection'\n  > {\n  collation?: CollationOptions;\n  name?: string;\n  key: { [key: string]: IndexDirection } | Map<string, IndexDirection>;\n}\n\n/** @public */\nexport interface CreateIndexesOptions extends Omit<CommandOperationOptions, 'writeConcern'> {\n  /** Creates the index in the background, yielding whenever possible. */\n  background?: boolean;\n  /** Creates an unique index. */\n  unique?: boolean;\n  /** Override the autogenerated index name (useful if the resulting name is larger than 128 bytes) */\n  name?: string;\n  /** Creates a partial index based on the given filter object (MongoDB 3.2 or higher) */\n  partialFilterExpression?: Document;\n  /** Creates a sparse index. */\n  sparse?: boolean;\n  /** Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher) */\n  expireAfterSeconds?: number;\n  /** Allows users to configure the storage engine on a per-index basis when creating an index. (MongoDB 3.0 or higher) */\n  storageEngine?: Document;\n  /** (MongoDB 4.4. or higher) Specifies how many data-bearing members of a replica set, including the primary, must complete the index builds successfully before the primary marks the indexes as ready. This option accepts the same values for the \"w\" field in a write concern plus \"votingMembers\", which indicates all voting data-bearing nodes. */\n  commitQuorum?: number | string;\n  /** Specifies the index version number, either 0 or 1. */\n  version?: number;\n  // text indexes\n  weights?: Document;\n  default_language?: string;\n  language_override?: string;\n  textIndexVersion?: number;\n  // 2d-sphere indexes\n  '2dsphereIndexVersion'?: number;\n  // 2d indexes\n  bits?: number;\n  /** For geospatial indexes set the lower bound for the co-ordinates. */\n  min?: number;\n  /** For geospatial indexes set the high bound for the co-ordinates. */\n  max?: number;\n  // geoHaystack Indexes\n  bucketSize?: number;\n  // wildcard indexes\n  wildcardProjection?: Document;\n  /** Specifies that the index should exist on the target collection but should not be used by the query planner when executing operations. (MongoDB 4.4 or higher) */\n  hidden?: boolean;\n}\n\nfunction isSingleIndexTuple(t: unknown): t is [string, IndexDirection] {\n  return Array.isArray(t) && t.length === 2 && isIndexDirection(t[1]);\n}\n\n/**\n * Converts an `IndexSpecification`, which can be specified in multiple formats, into a\n * valid `key` for the createIndexes command.\n */\nfunction constructIndexDescriptionMap(indexSpec: IndexSpecification): Map<string, IndexDirection> {\n  const key: Map<string, IndexDirection> = new Map();\n\n  const indexSpecs =\n    !Array.isArray(indexSpec) || isSingleIndexTuple(indexSpec) ? [indexSpec] : indexSpec;\n\n  // Iterate through array and handle different types\n  for (const spec of indexSpecs) {\n    if (typeof spec === 'string') {\n      key.set(spec, 1);\n    } else if (Array.isArray(spec)) {\n      key.set(spec[0], spec[1] ?? 1);\n    } else if (spec instanceof Map) {\n      for (const [property, value] of spec) {\n        key.set(property, value);\n      }\n    } else if (isObject(spec)) {\n      for (const [property, value] of Object.entries(spec)) {\n        key.set(property, value);\n      }\n    }\n  }\n\n  return key;\n}\n\n/**\n * Receives an index description and returns a modified index description which has had invalid options removed\n * from the description and has mapped the `version` option to the `v` option.\n */\nfunction resolveIndexDescription(\n  description: IndexDescription\n): Omit<ResolvedIndexDescription, 'key'> {\n  const validProvidedOptions = Object.entries(description).filter(([optionName]) =>\n    VALID_INDEX_OPTIONS.has(optionName)\n  );\n\n  return Object.fromEntries(\n    // we support the `version` option, but the `createIndexes` command expects it to be the `v`\n    validProvidedOptions.map(([name, value]) => (name === 'version' ? ['v', value] : [name, value]))\n  );\n}\n\n/**\n * @public\n * The index information returned by the listIndexes command. https://www.mongodb.com/docs/manual/reference/command/listIndexes/#mongodb-dbcommand-dbcmd.listIndexes\n */\nexport type IndexDescriptionInfo = Omit<IndexDescription, 'key' | 'version'> & {\n  key: { [key: string]: IndexDirection };\n  v?: IndexDescription['version'];\n} & Document;\n\n/** @public */\nexport type IndexDescriptionCompact = Record<string, [name: string, direction: IndexDirection][]>;\n\n/**\n * @internal\n *\n * Internally, the driver represents index description keys with `Map`s to preserve key ordering.\n * We don't require users to specify maps, so we transform user provided descriptions into\n * \"resolved\" by converting the `key` into a JS `Map`, if it isn't already a map.\n *\n * Additionally, we support the `version` option, but the `createIndexes` command uses the field `v`\n * to specify the index version so we map the value of `version` to `v`, if provided.\n */\ntype ResolvedIndexDescription = Omit<IndexDescription, 'key' | 'version'> & {\n  key: Map<string, IndexDirection>;\n  v?: IndexDescription['version'];\n};\n\n/** @internal */\nexport class CreateIndexesOperation extends CommandOperation<string[]> {\n  override options: CreateIndexesOptions;\n  collectionName: string;\n  indexes: ReadonlyArray<ResolvedIndexDescription>;\n\n  private constructor(\n    parent: OperationParent,\n    collectionName: string,\n    indexes: IndexDescription[],\n    options?: CreateIndexesOptions\n  ) {\n    super(parent, options);\n\n    this.options = options ?? {};\n    this.collectionName = collectionName;\n    this.indexes = indexes.map((userIndex: IndexDescription): ResolvedIndexDescription => {\n      // Ensure the key is a Map to preserve index key ordering\n      const key =\n        userIndex.key instanceof Map ? userIndex.key : new Map(Object.entries(userIndex.key));\n      const name = userIndex.name ?? Array.from(key).flat().join('_');\n      const validIndexOptions = resolveIndexDescription(userIndex);\n      return {\n        ...validIndexOptions,\n        name,\n        key\n      };\n    });\n  }\n\n  static fromIndexDescriptionArray(\n    parent: OperationParent,\n    collectionName: string,\n    indexes: IndexDescription[],\n    options?: CreateIndexesOptions\n  ): CreateIndexesOperation {\n    return new CreateIndexesOperation(parent, collectionName, indexes, options);\n  }\n\n  static fromIndexSpecification(\n    parent: OperationParent,\n    collectionName: string,\n    indexSpec: IndexSpecification,\n    options: CreateIndexesOptions = {}\n  ): CreateIndexesOperation {\n    const key = constructIndexDescriptionMap(indexSpec);\n    const description: IndexDescription = { ...options, key };\n    return new CreateIndexesOperation(parent, collectionName, [description], options);\n  }\n\n  override get commandName() {\n    return 'createIndexes';\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<string[]> {\n    const options = this.options;\n    const indexes = this.indexes;\n\n    const serverWireVersion = maxWireVersion(server);\n\n    const cmd: Document = { createIndexes: this.collectionName, indexes };\n\n    if (options.commitQuorum != null) {\n      if (serverWireVersion < 9) {\n        throw new MongoCompatibilityError(\n          'Option `commitQuorum` for `createIndexes` not supported on servers < 4.4'\n        );\n      }\n      cmd.commitQuorum = options.commitQuorum;\n    }\n\n    // collation is set on each index, it should not be defined at the root\n    this.options.collation = undefined;\n\n    await super.executeCommand(server, session, cmd, timeoutContext);\n\n    const indexNames = indexes.map(index => index.name || '');\n    return indexNames;\n  }\n}\n\n/** @public */\nexport type DropIndexesOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropIndexOperation extends CommandOperation<Document> {\n  override options: DropIndexesOptions;\n  collection: Collection;\n  indexName: string;\n\n  constructor(collection: Collection, indexName: string, options?: DropIndexesOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.indexName = indexName;\n  }\n\n  override get commandName() {\n    return 'dropIndexes' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<Document> {\n    const cmd = { dropIndexes: this.collection.collectionName, index: this.indexName };\n    return await super.executeCommand(server, session, cmd, timeoutContext);\n  }\n}\n\n/** @public */\nexport type ListIndexesOptions = AbstractCursorOptions & {\n  /** @internal */\n  omitMaxTimeMS?: boolean;\n};\n\n/** @internal */\nexport class ListIndexesOperation extends CommandOperation<CursorResponse> {\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  override options: ListIndexesOptions & { writeConcern?: never };\n  collectionNamespace: MongoDBNamespace;\n\n  constructor(collection: Collection, options?: ListIndexesOptions) {\n    super(collection, options);\n\n    this.options = { ...options };\n    delete this.options.writeConcern;\n    this.collectionNamespace = collection.s.namespace;\n  }\n\n  override get commandName() {\n    return 'listIndexes' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<CursorResponse> {\n    const serverWireVersion = maxWireVersion(server);\n\n    const cursor = this.options.batchSize ? { batchSize: this.options.batchSize } : {};\n\n    const command: Document = { listIndexes: this.collectionNamespace.collection, cursor };\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (serverWireVersion >= 9 && this.options.comment !== undefined) {\n      command.comment = this.options.comment;\n    }\n\n    return await super.executeCommand(server, session, command, timeoutContext, CursorResponse);\n  }\n}\n\ndefineAspects(ListIndexesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\ndefineAspects(CreateIndexesOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropIndexOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Collection } from '../collection';\nimport { executeOperation } from '../operations/execute_operation';\nimport { ListIndexesOperation, type ListIndexesOptions } from '../operations/indexes';\nimport type { ClientSession } from '../sessions';\nimport { AbstractCursor, type InitialCursorResponse } from './abstract_cursor';\n\n/** @public */\nexport class ListIndexesCursor extends AbstractCursor {\n  parent: Collection;\n  options?: ListIndexesOptions;\n\n  constructor(collection: Collection, options?: ListIndexesOptions) {\n    super(collection.client, collection.s.namespace, options);\n    this.parent = collection;\n    this.options = options;\n  }\n\n  clone(): ListIndexesCursor {\n    return new ListIndexesCursor(this.parent, {\n      ...this.options,\n      ...this.cursorOptions\n    });\n  }\n\n  /** @internal */\n  async _initialize(session: ClientSession | undefined): Promise<InitialCursorResponse> {\n    const operation = new ListIndexesOperation(this.parent, {\n      ...this.cursorOptions,\n      ...this.options,\n      session\n    });\n\n    const response = await executeOperation(this.parent.client, operation, this.timeoutContext);\n\n    return { server: operation.server, session, response };\n  }\n}\n", "import type { Collection } from '../collection';\nimport type { AggregateOptions } from '../operations/aggregate';\nimport { AggregationCursor } from './aggregation_cursor';\n\n/** @public */\nexport type ListSearchIndexesOptions = Omit<AggregateOptions, 'readConcern' | 'writeConcern'>;\n\n/** @public */\nexport class ListSearchIndexesCursor extends AggregationCursor<{ name: string }> {\n  /** @internal */\n  constructor(\n    { fullNamespace: ns, client }: Collection,\n    name: string | null,\n    options: ListSearchIndexesOptions = {}\n  ) {\n    const pipeline =\n      name == null ? [{ $listSearchIndexes: {} }] : [{ $listSearchIndexes: { name } }];\n    super(client, ns, pipeline, options);\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { decorateWithCollation, decorateWithReadConcern } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport type DistinctOptions = CommandOperationOptions;\n\n/**\n * Return a list of distinct values for the given key across a collection.\n * @internal\n */\nexport class DistinctOperation extends CommandOperation<any[]> {\n  override options: DistinctOptions;\n  collection: Collection;\n  /** Field of the document to find distinct values for. */\n  key: string;\n  /** The query for filtering the set of documents to which we apply the distinct filter. */\n  query: Document;\n\n  /**\n   * Construct a Distinct operation.\n   *\n   * @param collection - Collection instance.\n   * @param key - Field of the document to find distinct values for.\n   * @param query - The query for filtering the set of documents to which we apply the distinct filter.\n   * @param options - Optional settings. See Collection.prototype.distinct for a list of options.\n   */\n  constructor(collection: Collection, key: string, query: Document, options?: DistinctOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.key = key;\n    this.query = query;\n  }\n\n  override get commandName() {\n    return 'distinct' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<any[]> {\n    const coll = this.collection;\n    const key = this.key;\n    const query = this.query;\n    const options = this.options;\n\n    // Distinct command\n    const cmd: Document = {\n      distinct: coll.collectionName,\n      key: key,\n      query: query\n    };\n\n    // Add maxTimeMS if defined\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (typeof options.comment !== 'undefined') {\n      cmd.comment = options.comment;\n    }\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(cmd, coll, options);\n\n    // Have we specified collation\n    decorateWithCollation(cmd, coll, options);\n\n    const result = await super.executeCommand(server, session, cmd, timeoutContext);\n\n    return this.explain ? result : result.values;\n  }\n}\n\ndefineAspects(DistinctOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXPLAINABLE]);\n", "import type { Document } from '../bson';\nimport type { Db } from '../db';\nimport { MONGODB_ERROR_CODES, MongoServerError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface DropCollectionOptions extends CommandOperationOptions {\n  /** @experimental */\n  encryptedFields?: Document;\n}\n\n/** @internal */\nexport class DropCollectionOperation extends CommandOperation<boolean> {\n  override options: DropCollectionOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options: DropCollectionOptions = {}) {\n    super(db, options);\n    this.db = db;\n    this.options = options;\n    this.name = name;\n  }\n\n  override get commandName() {\n    return 'drop' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<boolean> {\n    const db = this.db;\n    const options = this.options;\n    const name = this.name;\n\n    const encryptedFieldsMap = db.client.s.options.autoEncryption?.encryptedFieldsMap;\n    let encryptedFields: Document | undefined =\n      options.encryptedFields ?? encryptedFieldsMap?.[`${db.databaseName}.${name}`];\n\n    if (!encryptedFields && encryptedFieldsMap) {\n      // If the MongoClient was configured with an encryptedFieldsMap,\n      // and no encryptedFields config was available in it or explicitly\n      // passed as an argument, the spec tells us to look one up using\n      // listCollections().\n      const listCollectionsResult = await db\n        .listCollections({ name }, { nameOnly: false })\n        .toArray();\n      encryptedFields = listCollectionsResult?.[0]?.options?.encryptedFields;\n    }\n\n    if (encryptedFields) {\n      const escCollection = encryptedFields.escCollection || `enxcol_.${name}.esc`;\n      const ecocCollection = encryptedFields.ecocCollection || `enxcol_.${name}.ecoc`;\n\n      for (const collectionName of [escCollection, ecocCollection]) {\n        // Drop auxilliary collections, ignoring potential NamespaceNotFound errors.\n        const dropOp = new DropCollectionOperation(db, collectionName);\n        try {\n          await dropOp.executeWithoutEncryptedFieldsCheck(server, session, timeoutContext);\n        } catch (err) {\n          if (\n            !(err instanceof MongoServerError) ||\n            err.code !== MONGODB_ERROR_CODES.NamespaceNotFound\n          ) {\n            throw err;\n          }\n        }\n      }\n    }\n\n    return await this.executeWithoutEncryptedFieldsCheck(server, session, timeoutContext);\n  }\n\n  private async executeWithoutEncryptedFieldsCheck(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<boolean> {\n    await super.executeCommand(server, session, { drop: this.name }, timeoutContext);\n    return true;\n  }\n}\n\n/** @public */\nexport type DropDatabaseOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropDatabaseOperation extends CommandOperation<boolean> {\n  override options: DropDatabaseOptions;\n\n  constructor(db: Db, options: DropDatabaseOptions) {\n    super(db, options);\n    this.options = options;\n  }\n  override get commandName() {\n    return 'dropDatabase' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<boolean> {\n    await super.executeCommand(server, session, { dropDatabase: 1 }, timeoutContext);\n    return true;\n  }\n}\n\ndefineAspects(DropCollectionOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropDatabaseOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface EstimatedDocumentCountOptions extends CommandOperationOptions {\n  /**\n   * The maximum amount of time to allow the operation to run.\n   *\n   * This option is sent only if the caller explicitly provides a value. The default is to not send a value.\n   */\n  maxTimeMS?: number;\n}\n\n/** @internal */\nexport class EstimatedDocumentCountOperation extends CommandOperation<number> {\n  override options: EstimatedDocumentCountOptions;\n  collectionName: string;\n\n  constructor(collection: Collection, options: EstimatedDocumentCountOptions = {}) {\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n\n  override get commandName() {\n    return 'count' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<number> {\n    const cmd: Document = { count: this.collectionName };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    const response = await super.executeCommand(server, session, cmd, timeoutContext);\n\n    return response?.n || 0;\n  }\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoCompatibilityError, MongoInvalidArgumentError } from '../error';\nimport { ReadPreference } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { formatSort, type Sort, type SortForCmd } from '../sort';\nimport { type TimeoutContext } from '../timeout';\nimport { decorateWithCollation, hasAtomicOperators, maxWireVersion } from '../utils';\nimport { type WriteConcern, type WriteConcernSettings } from '../write_concern';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport const ReturnDocument = Object.freeze({\n  BEFORE: 'before',\n  AFTER: 'after'\n} as const);\n\n/** @public */\nexport type ReturnDocument = (typeof ReturnDocument)[keyof typeof ReturnDocument];\n\n/** @public */\nexport interface FindOneAndDeleteOptions extends CommandOperationOptions {\n  /** An optional hint for query optimization. See the {@link https://www.mongodb.com/docs/manual/reference/command/update/#update-command-hint|update command} reference for more information.*/\n  hint?: Document;\n  /** Limits the fields to return for all matching documents. */\n  projection?: Document;\n  /** Determines which document the operation modifies if the query selects multiple documents. */\n  sort?: Sort;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n  /**\n   * Return the ModifyResult instead of the modified document. Defaults to false\n   */\n  includeResultMetadata?: boolean;\n}\n\n/** @public */\nexport interface FindOneAndReplaceOptions extends CommandOperationOptions {\n  /** Allow driver to bypass schema validation. */\n  bypassDocumentValidation?: boolean;\n  /** An optional hint for query optimization. See the {@link https://www.mongodb.com/docs/manual/reference/command/update/#update-command-hint|update command} reference for more information.*/\n  hint?: Document;\n  /** Limits the fields to return for all matching documents. */\n  projection?: Document;\n  /** When set to 'after', returns the updated document rather than the original. The default is 'before'.  */\n  returnDocument?: ReturnDocument;\n  /** Determines which document the operation modifies if the query selects multiple documents. */\n  sort?: Sort;\n  /** Upsert the document if it does not exist. */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n  /**\n   * Return the ModifyResult instead of the modified document. Defaults to false\n   */\n  includeResultMetadata?: boolean;\n}\n\n/** @public */\nexport interface FindOneAndUpdateOptions extends CommandOperationOptions {\n  /** Optional list of array filters referenced in filtered positional operators */\n  arrayFilters?: Document[];\n  /** Allow driver to bypass schema validation. */\n  bypassDocumentValidation?: boolean;\n  /** An optional hint for query optimization. See the {@link https://www.mongodb.com/docs/manual/reference/command/update/#update-command-hint|update command} reference for more information.*/\n  hint?: Document;\n  /** Limits the fields to return for all matching documents. */\n  projection?: Document;\n  /** When set to 'after', returns the updated document rather than the original. The default is 'before'.  */\n  returnDocument?: ReturnDocument;\n  /** Determines which document the operation modifies if the query selects multiple documents. */\n  sort?: Sort;\n  /** Upsert the document if it does not exist. */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n  /**\n   * Return the ModifyResult instead of the modified document. Defaults to false\n   */\n  includeResultMetadata?: boolean;\n}\n\n/** @internal */\ninterface FindAndModifyCmdBase {\n  remove: boolean;\n  new: boolean;\n  upsert: boolean;\n  update?: Document;\n  sort?: SortForCmd;\n  fields?: Document;\n  bypassDocumentValidation?: boolean;\n  arrayFilters?: Document[];\n  maxTimeMS?: number;\n  let?: Document;\n  writeConcern?: WriteConcern | WriteConcernSettings;\n  /**\n   * Comment to apply to the operation.\n   *\n   * In server versions pre-4.4, 'comment' must be string.  A server\n   * error will be thrown if any other type is provided.\n   *\n   * In server versions 4.4 and above, 'comment' can be any valid BSON type.\n   */\n  comment?: unknown;\n}\n\nfunction configureFindAndModifyCmdBaseUpdateOpts(\n  cmdBase: FindAndModifyCmdBase,\n  options: FindOneAndReplaceOptions | FindOneAndUpdateOptions\n): FindAndModifyCmdBase {\n  cmdBase.new = options.returnDocument === ReturnDocument.AFTER;\n  cmdBase.upsert = options.upsert === true;\n\n  if (options.bypassDocumentValidation === true) {\n    cmdBase.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n  return cmdBase;\n}\n\n/** @internal */\nexport class FindAndModifyOperation extends CommandOperation<Document> {\n  override options: FindOneAndReplaceOptions | FindOneAndUpdateOptions | FindOneAndDeleteOptions;\n  cmdBase: FindAndModifyCmdBase;\n  collection: Collection;\n  query: Document;\n  doc?: Document;\n\n  constructor(\n    collection: Collection,\n    query: Document,\n    options: FindOneAndReplaceOptions | FindOneAndUpdateOptions | FindOneAndDeleteOptions\n  ) {\n    super(collection, options);\n    this.options = options ?? {};\n    this.cmdBase = {\n      remove: false,\n      new: false,\n      upsert: false\n    };\n\n    options.includeResultMetadata ??= false;\n\n    const sort = formatSort(options.sort);\n    if (sort) {\n      this.cmdBase.sort = sort;\n    }\n\n    if (options.projection) {\n      this.cmdBase.fields = options.projection;\n    }\n\n    if (options.maxTimeMS) {\n      this.cmdBase.maxTimeMS = options.maxTimeMS;\n    }\n\n    // Decorate the findAndModify command with the write Concern\n    if (options.writeConcern) {\n      this.cmdBase.writeConcern = options.writeConcern;\n    }\n\n    if (options.let) {\n      this.cmdBase.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      this.cmdBase.comment = options.comment;\n    }\n\n    // force primary read preference\n    this.readPreference = ReadPreference.primary;\n\n    this.collection = collection;\n    this.query = query;\n  }\n\n  override get commandName() {\n    return 'findAndModify' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<Document> {\n    const coll = this.collection;\n    const query = this.query;\n    const options = { ...this.options, ...this.bsonOptions };\n\n    // Create findAndModify command object\n    const cmd: Document = {\n      findAndModify: coll.collectionName,\n      query: query,\n      ...this.cmdBase\n    };\n\n    decorateWithCollation(cmd, coll, options);\n\n    if (options.hint) {\n      // TODO: once this method becomes a CommandOperation we will have the server\n      // in place to check.\n      const unacknowledgedWrite = this.writeConcern?.w === 0;\n      if (unacknowledgedWrite || maxWireVersion(server) < 8) {\n        throw new MongoCompatibilityError(\n          'The current topology does not support a hint on findAndModify commands'\n        );\n      }\n\n      cmd.hint = options.hint;\n    }\n\n    // Execute the command\n    const result = await super.executeCommand(server, session, cmd, timeoutContext);\n    return options.includeResultMetadata ? result : (result.value ?? null);\n  }\n}\n\n/** @internal */\nexport class FindOneAndDeleteOperation extends FindAndModifyOperation {\n  constructor(collection: Collection, filter: Document, options: FindOneAndDeleteOptions) {\n    // Basic validation\n    if (filter == null || typeof filter !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n\n    super(collection, filter, options);\n    this.cmdBase.remove = true;\n  }\n}\n\n/** @internal */\nexport class FindOneAndReplaceOperation extends FindAndModifyOperation {\n  constructor(\n    collection: Collection,\n    filter: Document,\n    replacement: Document,\n    options: FindOneAndReplaceOptions\n  ) {\n    if (filter == null || typeof filter !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n\n    if (replacement == null || typeof replacement !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"replacement\" must be an object');\n    }\n\n    if (hasAtomicOperators(replacement)) {\n      throw new MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n    }\n\n    super(collection, filter, options);\n    this.cmdBase.update = replacement;\n    configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n  }\n}\n\n/** @internal */\nexport class FindOneAndUpdateOperation extends FindAndModifyOperation {\n  constructor(\n    collection: Collection,\n    filter: Document,\n    update: Document,\n    options: FindOneAndUpdateOptions\n  ) {\n    if (filter == null || typeof filter !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n\n    if (update == null || typeof update !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"update\" must be an object');\n    }\n\n    if (!hasAtomicOperators(update)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n\n    super(collection, filter, options);\n    this.cmdBase.update = update;\n    configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n\n    if (options.arrayFilters) {\n      this.cmdBase.arrayFilters = options.arrayFilters;\n    }\n  }\n}\n\ndefineAspects(FindAndModifyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE\n]);\n", "import type { Collection } from '../collection';\nimport { MongoAPIError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { AbstractOperation, type OperationOptions } from './operation';\n\n/** @internal */\nexport class IsCappedOperation extends AbstractOperation<boolean> {\n  override options: OperationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: OperationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  override get commandName() {\n    return 'listCollections' as const;\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<boolean> {\n    const coll = this.collection;\n    const [collection] = await coll.s.db\n      .listCollections(\n        { name: coll.collectionName },\n        { ...this.options, nameOnly: false, readPreference: this.readPreference, session }\n      )\n      .toArray();\n    if (collection == null || collection.options == null) {\n      throw new MongoAPIError(`collection ${coll.namespace} not found`);\n    }\n    return !!collection.options?.capped;\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoAPIError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { AbstractOperation, type OperationOptions } from './operation';\n\n/** @internal */\nexport class OptionsOperation extends AbstractOperation<Document> {\n  override options: OperationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: OperationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n  override get commandName() {\n    return 'listCollections' as const;\n  }\n\n  override async execute(server: Server, session: ClientSession | undefined): Promise<Document> {\n    const coll = this.collection;\n    const [collection] = await coll.s.db\n      .listCollections(\n        { name: coll.collectionName },\n        { ...this.options, nameOnly: false, readPreference: this.readPreference, session }\n      )\n      .toArray();\n    if (collection == null || collection.options == null) {\n      throw new MongoAPIError(`collection ${coll.namespace} not found`);\n    }\n    return collection.options;\n  }\n}\n", "import type { Document } from '../bson';\nimport { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { MongoDBNamespace } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface RenameOptions extends CommandOperationOptions {\n  /** Drop the target name collection if it previously exists. */\n  dropTarget?: boolean;\n  /** Unclear */\n  new_collection?: boolean;\n}\n\n/** @internal */\nexport class RenameOperation extends CommandOperation<Document> {\n  constructor(\n    public collection: Collection,\n    public newName: string,\n    public override options: RenameOptions\n  ) {\n    super(collection, options);\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  override get commandName(): string {\n    return 'renameCollection' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<Collection> {\n    // Build the command\n    const renameCollection = this.collection.namespace;\n    const toCollection = this.collection.s.namespace.withCollection(this.newName).toString();\n    const dropTarget =\n      typeof this.options.dropTarget === 'boolean' ? this.options.dropTarget : false;\n\n    const command = {\n      renameCollection: renameCollection,\n      to: toCollection,\n      dropTarget: dropTarget\n    };\n\n    await super.executeCommand(server, session, command, timeoutContext);\n    return new Collection(this.collection.s.db, this.newName, this.collection.s.options);\n  }\n}\n\ndefineAspects(RenameOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Document } from '../../bson';\nimport type { Collection } from '../../collection';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport { type TimeoutContext } from '../../timeout';\nimport { AbstractOperation } from '../operation';\n\n/**\n * @public\n */\nexport interface SearchIndexDescription extends Document {\n  /** The name of the index. */\n  name?: string;\n\n  /** The index definition. */\n  definition: Document;\n\n  /** The type of the index.  Currently `search` or `vectorSearch` are supported. */\n  type?: string;\n}\n\n/** @internal */\nexport class CreateSearchIndexesOperation extends AbstractOperation<string[]> {\n  constructor(\n    private readonly collection: Collection,\n    private readonly descriptions: ReadonlyArray<SearchIndexDescription>\n  ) {\n    super();\n  }\n\n  override get commandName() {\n    return 'createSearchIndexes' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<string[]> {\n    const namespace = this.collection.fullNamespace;\n    const command = {\n      createSearchIndexes: namespace.collection,\n      indexes: this.descriptions\n    };\n\n    const res = await server.command(namespace, command, {\n      session,\n      timeoutContext\n    });\n\n    const indexesCreated: Array<{ name: string }> = res?.indexesCreated ?? [];\n    return indexesCreated.map(({ name }) => name);\n  }\n}\n", "import type { Document } from '../../bson';\nimport type { Collection } from '../../collection';\nimport { MONGODB_ERROR_CODES, MongoServerError } from '../../error';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport { type TimeoutContext } from '../../timeout';\nimport { AbstractOperation } from '../operation';\n\n/** @internal */\nexport class DropSearchIndexOperation extends AbstractOperation<void> {\n  constructor(\n    private readonly collection: Collection,\n    private readonly name: string\n  ) {\n    super();\n  }\n\n  override get commandName() {\n    return 'dropSearchIndex' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<void> {\n    const namespace = this.collection.fullNamespace;\n\n    const command: Document = {\n      dropSearchIndex: namespace.collection\n    };\n\n    if (typeof this.name === 'string') {\n      command.name = this.name;\n    }\n\n    try {\n      await server.command(namespace, command, { session, timeoutContext });\n    } catch (error) {\n      const isNamespaceNotFoundError =\n        error instanceof MongoServerError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound;\n      if (!isNamespaceNotFoundError) {\n        throw error;\n      }\n    }\n  }\n}\n", "import type { Document } from '../../bson';\nimport type { Collection } from '../../collection';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport { type TimeoutContext } from '../../timeout';\nimport { AbstractOperation } from '../operation';\n\n/** @internal */\nexport class UpdateSearchIndexOperation extends AbstractOperation<void> {\n  constructor(\n    private readonly collection: Collection,\n    private readonly name: string,\n    private readonly definition: Document\n  ) {\n    super();\n  }\n\n  override get commandName() {\n    return 'updateSearchIndex' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<void> {\n    const namespace = this.collection.fullNamespace;\n    const command = {\n      updateSearchIndex: namespace.collection,\n      name: this.name,\n      definition: this.definition\n    };\n\n    await server.command(namespace, command, { session, timeoutContext });\n    return;\n  }\n}\n", "import { type BSONSerializeOptions, type Document, resolveBSONOptions } from './bson';\nimport type { AnyBulkWriteOperation, BulkWriteOptions, BulkWriteResult } from './bulk/common';\nimport { OrderedBulkOperation } from './bulk/ordered';\nimport { UnorderedBulkOperation } from './bulk/unordered';\nimport { ChangeStream, type ChangeStreamDocument, type ChangeStreamOptions } from './change_stream';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { FindCursor } from './cursor/find_cursor';\nimport { ListIndexesCursor } from './cursor/list_indexes_cursor';\nimport {\n  ListSearchIndexesCursor,\n  type ListSearchIndexesOptions\n} from './cursor/list_search_indexes_cursor';\nimport type { Db } from './db';\nimport { MongoInvalidArgumentError, MongoOperationTimeoutError } from './error';\nimport type { MongoClient, PkFactory } from './mongo_client';\nimport type {\n  Abortable,\n  Filter,\n  Flatten,\n  OptionalUnlessRequiredId,\n  TODO_NODE_3286,\n  UpdateFilter,\n  WithId,\n  WithoutId\n} from './mongo_types';\nimport type { AggregateOptions } from './operations/aggregate';\nimport { BulkWriteOperation } from './operations/bulk_write';\nimport { CountOperation, type CountOptions } from './operations/count';\nimport {\n  DeleteManyOperation,\n  DeleteOneOperation,\n  type DeleteOptions,\n  type DeleteResult\n} from './operations/delete';\nimport { DistinctOperation, type DistinctOptions } from './operations/distinct';\nimport { DropCollectionOperation, type DropCollectionOptions } from './operations/drop';\nimport {\n  EstimatedDocumentCountOperation,\n  type EstimatedDocumentCountOptions\n} from './operations/estimated_document_count';\nimport { executeOperation } from './operations/execute_operation';\nimport type { FindOptions } from './operations/find';\nimport {\n  FindOneAndDeleteOperation,\n  type FindOneAndDeleteOptions,\n  FindOneAndReplaceOperation,\n  type FindOneAndReplaceOptions,\n  FindOneAndUpdateOperation,\n  type FindOneAndUpdateOptions\n} from './operations/find_and_modify';\nimport {\n  CreateIndexesOperation,\n  type CreateIndexesOptions,\n  type DropIndexesOptions,\n  DropIndexOperation,\n  type IndexDescription,\n  type IndexDescriptionCompact,\n  type IndexDescriptionInfo,\n  type IndexInformationOptions,\n  type IndexSpecification,\n  type ListIndexesOptions\n} from './operations/indexes';\nimport {\n  InsertManyOperation,\n  type InsertManyResult,\n  InsertOneOperation,\n  type InsertOneOptions,\n  type InsertOneResult\n} from './operations/insert';\nimport { IsCappedOperation } from './operations/is_capped';\nimport type { Hint, OperationOptions } from './operations/operation';\nimport { OptionsOperation } from './operations/options_operation';\nimport { RenameOperation, type RenameOptions } from './operations/rename';\nimport {\n  CreateSearchIndexesOperation,\n  type SearchIndexDescription\n} from './operations/search_indexes/create';\nimport { DropSearchIndexOperation } from './operations/search_indexes/drop';\nimport { UpdateSearchIndexOperation } from './operations/search_indexes/update';\nimport {\n  ReplaceOneOperation,\n  type ReplaceOptions,\n  UpdateManyOperation,\n  UpdateOneOperation,\n  type UpdateOptions,\n  type UpdateResult\n} from './operations/update';\nimport { ReadConcern, type ReadConcernLike } from './read_concern';\nimport { ReadPreference, type ReadPreferenceLike } from './read_preference';\nimport {\n  DEFAULT_PK_FACTORY,\n  MongoDBCollectionNamespace,\n  normalizeHintField,\n  resolveOptions\n} from './utils';\nimport { WriteConcern, type WriteConcernOptions } from './write_concern';\n\n/** @public */\nexport interface ModifyResult<TSchema = Document> {\n  value: WithId<TSchema> | null;\n  lastErrorObject?: Document;\n  ok: 0 | 1;\n}\n\n/** @public */\nexport interface CountDocumentsOptions extends AggregateOptions {\n  /** The number of documents to skip. */\n  skip?: number;\n  /** The maximum amount of documents to consider. */\n  limit?: number;\n}\n\n/** @public */\nexport interface CollectionOptions extends BSONSerializeOptions, WriteConcernOptions {\n  /** Specify a read concern for the collection. (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcernLike;\n  /** The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST). */\n  readPreference?: ReadPreferenceLike;\n  /**\n   * @experimental\n   * Specifies the time an operation will run until it throws a timeout error\n   */\n  timeoutMS?: number;\n}\n\n/** @internal */\nexport interface CollectionPrivate {\n  pkFactory: PkFactory;\n  db: Db;\n  options: any;\n  namespace: MongoDBCollectionNamespace;\n  readPreference?: ReadPreference;\n  bsonOptions: BSONSerializeOptions;\n  collectionHint?: Hint;\n  readConcern?: ReadConcern;\n  writeConcern?: WriteConcern;\n}\n\n/**\n * The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/find/update/delete and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n * @public\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * interface Pet {\n *   name: string;\n *   kind: 'dog' | 'cat' | 'fish';\n * }\n *\n * const client = new MongoClient('mongodb://localhost:27017');\n * const pets = client.db().collection<Pet>('pets');\n *\n * const petCursor = pets.find();\n *\n * for await (const pet of petCursor) {\n *   console.log(`${pet.name} is a ${pet.kind}!`);\n * }\n * ```\n */\nexport class Collection<TSchema extends Document = Document> {\n  /** @internal */\n  s: CollectionPrivate;\n\n  /** @internal */\n  client: MongoClient;\n\n  /**\n   * Create a new Collection instance\n   * @internal\n   */\n  constructor(db: Db, name: string, options?: CollectionOptions) {\n    // Internal state\n    this.s = {\n      db,\n      options,\n      namespace: new MongoDBCollectionNamespace(db.databaseName, name),\n      pkFactory: db.options?.pkFactory ?? DEFAULT_PK_FACTORY,\n      readPreference: ReadPreference.fromOptions(options),\n      bsonOptions: resolveBSONOptions(options, db),\n      readConcern: ReadConcern.fromOptions(options),\n      writeConcern: WriteConcern.fromOptions(options)\n    };\n\n    this.client = db.client;\n  }\n\n  /**\n   * The name of the database this collection belongs to\n   */\n  get dbName(): string {\n    return this.s.namespace.db;\n  }\n\n  /**\n   * The name of this collection\n   */\n  get collectionName(): string {\n    return this.s.namespace.collection;\n  }\n\n  /**\n   * The namespace of this collection, in the format `${this.dbName}.${this.collectionName}`\n   */\n  get namespace(): string {\n    return this.fullNamespace.toString();\n  }\n\n  /**\n   *  @internal\n   *\n   * The `MongoDBNamespace` for the collection.\n   */\n  get fullNamespace(): MongoDBCollectionNamespace {\n    return this.s.namespace;\n  }\n\n  /**\n   * The current readConcern of the collection. If not explicitly defined for\n   * this collection, will be inherited from the parent DB\n   */\n  get readConcern(): ReadConcern | undefined {\n    if (this.s.readConcern == null) {\n      return this.s.db.readConcern;\n    }\n    return this.s.readConcern;\n  }\n\n  /**\n   * The current readPreference of the collection. If not explicitly defined for\n   * this collection, will be inherited from the parent DB\n   */\n  get readPreference(): ReadPreference | undefined {\n    if (this.s.readPreference == null) {\n      return this.s.db.readPreference;\n    }\n\n    return this.s.readPreference;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  /**\n   * The current writeConcern of the collection. If not explicitly defined for\n   * this collection, will be inherited from the parent DB\n   */\n  get writeConcern(): WriteConcern | undefined {\n    if (this.s.writeConcern == null) {\n      return this.s.db.writeConcern;\n    }\n    return this.s.writeConcern;\n  }\n\n  /** The current index hint for the collection */\n  get hint(): Hint | undefined {\n    return this.s.collectionHint;\n  }\n\n  set hint(v: Hint | undefined) {\n    this.s.collectionHint = normalizeHintField(v);\n  }\n\n  public get timeoutMS(): number | undefined {\n    return this.s.options.timeoutMS;\n  }\n\n  /**\n   * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @param doc - The document to insert\n   * @param options - Optional settings for the command\n   */\n  async insertOne(\n    doc: OptionalUnlessRequiredId<TSchema>,\n    options?: InsertOneOptions\n  ): Promise<InsertOneResult<TSchema>> {\n    return await executeOperation(\n      this.client,\n      new InsertOneOperation(\n        this as TODO_NODE_3286,\n        doc,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @param docs - The documents to insert\n   * @param options - Optional settings for the command\n   */\n  async insertMany(\n    docs: ReadonlyArray<OptionalUnlessRequiredId<TSchema>>,\n    options?: BulkWriteOptions\n  ): Promise<InsertManyResult<TSchema>> {\n    return await executeOperation(\n      this.client,\n      new InsertManyOperation(\n        this as TODO_NODE_3286,\n        docs,\n        resolveOptions(this, options ?? { ordered: true })\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Perform a bulkWrite operation without a fluent API\n   *\n   * Legal operation types are\n   * - `insertOne`\n   * - `replaceOne`\n   * - `updateOne`\n   * - `updateMany`\n   * - `deleteOne`\n   * - `deleteMany`\n   *\n   * If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @param operations - Bulk operations to perform\n   * @param options - Optional settings for the command\n   * @throws MongoDriverError if operations is not an array\n   */\n  async bulkWrite(\n    operations: ReadonlyArray<AnyBulkWriteOperation<TSchema>>,\n    options?: BulkWriteOptions\n  ): Promise<BulkWriteResult> {\n    if (!Array.isArray(operations)) {\n      throw new MongoInvalidArgumentError('Argument \"operations\" must be an array of documents');\n    }\n\n    return await executeOperation(\n      this.client,\n      new BulkWriteOperation(\n        this as TODO_NODE_3286,\n        operations,\n        resolveOptions(this, options ?? { ordered: true })\n      )\n    );\n  }\n\n  /**\n   * Update a single document in a collection\n   *\n   * The value of `update` can be either:\n   * - UpdateFilter<TSchema> - A document that contains update operator expressions,\n   * - Document[] - an aggregation pipeline.\n   *\n   * @param filter - The filter used to select the document to update\n   * @param update - The modifications to apply\n   * @param options - Optional settings for the command\n   */\n  async updateOne(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Document[],\n    options?: UpdateOptions\n  ): Promise<UpdateResult<TSchema>> {\n    return await executeOperation(\n      this.client,\n      new UpdateOneOperation(\n        this as TODO_NODE_3286,\n        filter,\n        update,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Replace a document in a collection with another document\n   *\n   * @param filter - The filter used to select the document to replace\n   * @param replacement - The Document that replaces the matching document\n   * @param options - Optional settings for the command\n   */\n  async replaceOne(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options?: ReplaceOptions\n  ): Promise<UpdateResult<TSchema>> {\n    return await executeOperation(\n      this.client,\n      new ReplaceOneOperation(\n        this as TODO_NODE_3286,\n        filter,\n        replacement,\n        resolveOptions(this, options)\n      )\n    );\n  }\n\n  /**\n   * Update multiple documents in a collection\n   *\n   * The value of `update` can be either:\n   * - UpdateFilter<TSchema> - A document that contains update operator expressions,\n   * - Document[] - an aggregation pipeline.\n   *\n   * @param filter - The filter used to select the document to update\n   * @param update - The modifications to apply\n   * @param options - Optional settings for the command\n   */\n  async updateMany(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Document[],\n    options?: UpdateOptions\n  ): Promise<UpdateResult<TSchema>> {\n    return await executeOperation(\n      this.client,\n      new UpdateManyOperation(\n        this as TODO_NODE_3286,\n        filter,\n        update,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Delete a document from a collection\n   *\n   * @param filter - The filter used to select the document to remove\n   * @param options - Optional settings for the command\n   */\n  async deleteOne(\n    filter: Filter<TSchema> = {},\n    options: DeleteOptions = {}\n  ): Promise<DeleteResult> {\n    return await executeOperation(\n      this.client,\n      new DeleteOneOperation(this as TODO_NODE_3286, filter, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Delete multiple documents from a collection\n   *\n   * @param filter - The filter used to select the documents to remove\n   * @param options - Optional settings for the command\n   */\n  async deleteMany(\n    filter: Filter<TSchema> = {},\n    options: DeleteOptions = {}\n  ): Promise<DeleteResult> {\n    return await executeOperation(\n      this.client,\n      new DeleteManyOperation(this as TODO_NODE_3286, filter, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Rename the collection.\n   *\n   * @remarks\n   * This operation does not inherit options from the Db or MongoClient.\n   *\n   * @param newName - New name of of the collection.\n   * @param options - Optional settings for the command\n   */\n  async rename(newName: string, options?: RenameOptions): Promise<Collection> {\n    // Intentionally, we do not inherit options from parent for this operation.\n    return await executeOperation(\n      this.client,\n      new RenameOperation(\n        this as TODO_NODE_3286,\n        newName,\n        resolveOptions(undefined, {\n          ...options,\n          readPreference: ReadPreference.PRIMARY\n        })\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  async drop(options?: DropCollectionOptions): Promise<boolean> {\n    return await executeOperation(\n      this.client,\n      new DropCollectionOperation(this.s.db, this.collectionName, options)\n    );\n  }\n\n  /**\n   * Fetches the first document that matches the filter\n   *\n   * @param filter - Query for find Operation\n   * @param options - Optional settings for the command\n   */\n  async findOne(): Promise<WithId<TSchema> | null>;\n  async findOne(filter: Filter<TSchema>): Promise<WithId<TSchema> | null>;\n  async findOne(\n    filter: Filter<TSchema>,\n    options: Omit<FindOptions, 'timeoutMode'> & Abortable\n  ): Promise<WithId<TSchema> | null>;\n\n  // allow an override of the schema.\n  async findOne<T = TSchema>(): Promise<T | null>;\n  async findOne<T = TSchema>(filter: Filter<TSchema>): Promise<T | null>;\n  async findOne<T = TSchema>(\n    filter: Filter<TSchema>,\n    options?: Omit<FindOptions, 'timeoutMode'> & Abortable\n  ): Promise<T | null>;\n\n  async findOne(\n    filter: Filter<TSchema> = {},\n    options: FindOptions & Abortable = {}\n  ): Promise<WithId<TSchema> | null> {\n    const cursor = this.find(filter, options).limit(-1).batchSize(1);\n    const res = await cursor.next();\n    await cursor.close();\n    return res;\n  }\n\n  /**\n   * Creates a cursor for a filter that can be used to iterate over results from MongoDB\n   *\n   * @param filter - The filter predicate. If unspecified, then all documents in the collection will match the predicate\n   */\n  find(): FindCursor<WithId<TSchema>>;\n  find(filter: Filter<TSchema>, options?: FindOptions & Abortable): FindCursor<WithId<TSchema>>;\n  find<T extends Document>(\n    filter: Filter<TSchema>,\n    options?: FindOptions & Abortable\n  ): FindCursor<T>;\n  find(\n    filter: Filter<TSchema> = {},\n    options: FindOptions & Abortable = {}\n  ): FindCursor<WithId<TSchema>> {\n    return new FindCursor<WithId<TSchema>>(\n      this.client,\n      this.s.namespace,\n      filter,\n      resolveOptions(this as TODO_NODE_3286, options)\n    );\n  }\n\n  /**\n   * Returns the options of the collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  async options(options?: OperationOptions): Promise<Document> {\n    return await executeOperation(\n      this.client,\n      new OptionsOperation(this as TODO_NODE_3286, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Returns if the collection is a capped collection\n   *\n   * @param options - Optional settings for the command\n   */\n  async isCapped(options?: OperationOptions): Promise<boolean> {\n    return await executeOperation(\n      this.client,\n      new IsCappedOperation(this as TODO_NODE_3286, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Creates an index on the db and collection collection.\n   *\n   * @param indexSpec - The field name or index specification to create an index for\n   * @param options - Optional settings for the command\n   *\n   * @example\n   * ```ts\n   * const collection = client.db('foo').collection('bar');\n   *\n   * await collection.createIndex({ a: 1, b: -1 });\n   *\n   * // Alternate syntax for { c: 1, d: -1 } that ensures order of indexes\n   * await collection.createIndex([ [c, 1], [d, -1] ]);\n   *\n   * // Equivalent to { e: 1 }\n   * await collection.createIndex('e');\n   *\n   * // Equivalent to { f: 1, g: 1 }\n   * await collection.createIndex(['f', 'g'])\n   *\n   * // Equivalent to { h: 1, i: -1 }\n   * await collection.createIndex([ { h: 1 }, { i: -1 } ]);\n   *\n   * // Equivalent to { j: 1, k: -1, l: 2d }\n   * await collection.createIndex(['j', ['k', -1], { l: '2d' }])\n   * ```\n   */\n  async createIndex(\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ): Promise<string> {\n    const indexes = await executeOperation(\n      this.client,\n      CreateIndexesOperation.fromIndexSpecification(\n        this,\n        this.collectionName,\n        indexSpec,\n        resolveOptions(this, options)\n      )\n    );\n\n    return indexes[0];\n  }\n\n  /**\n   * Creates multiple indexes in the collection, this method is only supported for\n   * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n   * error.\n   *\n   * **Note**: Unlike {@link Collection#createIndex| createIndex}, this function takes in raw index specifications.\n   * Index specifications are defined {@link https://www.mongodb.com/docs/manual/reference/command/createIndexes/| here}.\n   *\n   * @param indexSpecs - An array of index specifications to be created\n   * @param options - Optional settings for the command\n   *\n   * @example\n   * ```ts\n   * const collection = client.db('foo').collection('bar');\n   * await collection.createIndexes([\n   *   // Simple index on field fizz\n   *   {\n   *     key: { fizz: 1 },\n   *   }\n   *   // wildcard index\n   *   {\n   *     key: { '$**': 1 }\n   *   },\n   *   // named index on darmok and jalad\n   *   {\n   *     key: { darmok: 1, jalad: -1 }\n   *     name: 'tanagra'\n   *   }\n   * ]);\n   * ```\n   */\n  async createIndexes(\n    indexSpecs: IndexDescription[],\n    options?: CreateIndexesOptions\n  ): Promise<string[]> {\n    return await executeOperation(\n      this.client,\n      CreateIndexesOperation.fromIndexDescriptionArray(\n        this,\n        this.collectionName,\n        indexSpecs,\n        resolveOptions(this, { ...options, maxTimeMS: undefined })\n      )\n    );\n  }\n\n  /**\n   * Drops an index from this collection.\n   *\n   * @param indexName - Name of the index to drop.\n   * @param options - Optional settings for the command\n   */\n  async dropIndex(indexName: string, options?: DropIndexesOptions): Promise<Document> {\n    return await executeOperation(\n      this.client,\n      new DropIndexOperation(this as TODO_NODE_3286, indexName, {\n        ...resolveOptions(this, options),\n        readPreference: ReadPreference.primary\n      })\n    );\n  }\n\n  /**\n   * Drops all indexes from this collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  async dropIndexes(options?: DropIndexesOptions): Promise<boolean> {\n    try {\n      await executeOperation(\n        this.client,\n        new DropIndexOperation(this as TODO_NODE_3286, '*', resolveOptions(this, options))\n      );\n      return true;\n    } catch (error) {\n      // TODO(NODE-6517): Driver should only filter for namespace not found error. Other errors should be thrown.\n      if (error instanceof MongoOperationTimeoutError) throw error;\n      return false;\n    }\n  }\n\n  /**\n   * Get the list of all indexes information for the collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  listIndexes(options?: ListIndexesOptions): ListIndexesCursor {\n    return new ListIndexesCursor(this as TODO_NODE_3286, resolveOptions(this, options));\n  }\n\n  /**\n   * Checks if one or more indexes exist on the collection, fails on first non-existing index\n   *\n   * @param indexes - One or more index names to check.\n   * @param options - Optional settings for the command\n   */\n  async indexExists(indexes: string | string[], options?: ListIndexesOptions): Promise<boolean> {\n    const indexNames: string[] = Array.isArray(indexes) ? indexes : [indexes];\n    const allIndexes: Set<string> = new Set(\n      await this.listIndexes(options)\n        .map(({ name }) => name)\n        .toArray()\n    );\n    return indexNames.every(name => allIndexes.has(name));\n  }\n\n  /**\n   * Retrieves this collections index info.\n   *\n   * @param options - Optional settings for the command\n   */\n  indexInformation(\n    options: IndexInformationOptions & { full: true }\n  ): Promise<IndexDescriptionInfo[]>;\n  indexInformation(\n    options: IndexInformationOptions & { full?: false }\n  ): Promise<IndexDescriptionCompact>;\n  indexInformation(\n    options: IndexInformationOptions\n  ): Promise<IndexDescriptionCompact | IndexDescriptionInfo[]>;\n  indexInformation(): Promise<IndexDescriptionCompact>;\n  async indexInformation(\n    options?: IndexInformationOptions\n  ): Promise<IndexDescriptionCompact | IndexDescriptionInfo[]> {\n    return await this.indexes({\n      ...options,\n      full: options?.full ?? false\n    });\n  }\n\n  /**\n   * Gets an estimate of the count of documents in a collection using collection metadata.\n   * This will always run a count command on all server versions.\n   *\n   * due to an oversight in versions 5.0.0-5.0.8 of MongoDB, the count command,\n   * which estimatedDocumentCount uses in its implementation, was not included in v1 of\n   * the Stable API, and so users of the Stable API with estimatedDocumentCount are\n   * recommended to upgrade their server version to 5.0.9+ or set apiStrict: false to avoid\n   * encountering errors.\n   *\n   * @see {@link https://www.mongodb.com/docs/manual/reference/command/count/#behavior|Count: Behavior}\n   * @param options - Optional settings for the command\n   */\n  async estimatedDocumentCount(options?: EstimatedDocumentCountOptions): Promise<number> {\n    return await executeOperation(\n      this.client,\n      new EstimatedDocumentCountOperation(this as TODO_NODE_3286, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Gets the number of documents matching the filter.\n   * For a fast count of the total documents in a collection see {@link Collection#estimatedDocumentCount| estimatedDocumentCount}.\n   *\n   * Due to countDocuments using the $match aggregation pipeline stage, certain query operators cannot be used in countDocuments. This includes the $where and $near query operators, among others. Details can be found in the documentation for the $match aggregation pipeline stage.\n   *\n   * **Note**: When migrating from {@link Collection#count| count} to {@link Collection#countDocuments| countDocuments}\n   * the following query operators must be replaced:\n   *\n   * | Operator | Replacement |\n   * | -------- | ----------- |\n   * | `$where`   | [`$expr`][1] |\n   * | `$near`    | [`$geoWithin`][2] with [`$center`][3] |\n   * | `$nearSphere` | [`$geoWithin`][2] with [`$centerSphere`][4] |\n   *\n   * [1]: https://www.mongodb.com/docs/manual/reference/operator/query/expr/\n   * [2]: https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/\n   * [3]: https://www.mongodb.com/docs/manual/reference/operator/query/center/#op._S_center\n   * [4]: https://www.mongodb.com/docs/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n   *\n   * @param filter - The filter for the count\n   * @param options - Optional settings for the command\n   *\n   * @see https://www.mongodb.com/docs/manual/reference/operator/query/expr/\n   * @see https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/\n   * @see https://www.mongodb.com/docs/manual/reference/operator/query/center/#op._S_center\n   * @see https://www.mongodb.com/docs/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n   */\n  async countDocuments(\n    filter: Filter<TSchema> = {},\n    options: CountDocumentsOptions & Abortable = {}\n  ): Promise<number> {\n    const pipeline = [];\n    pipeline.push({ $match: filter });\n\n    if (typeof options.skip === 'number') {\n      pipeline.push({ $skip: options.skip });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({ $limit: options.limit });\n    }\n\n    pipeline.push({ $group: { _id: 1, n: { $sum: 1 } } });\n\n    const cursor = this.aggregate<{ n: number }>(pipeline, options);\n    const doc = await cursor.next();\n    await cursor.close();\n    return doc?.n ?? 0;\n  }\n\n  /**\n   * The distinct command returns a list of distinct values for the given key across a collection.\n   *\n   * @param key - Field of the document to find distinct values for\n   * @param filter - The filter for filtering the set of documents to which we apply the distinct filter.\n   * @param options - Optional settings for the command\n   */\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key\n  ): Promise<Array<Flatten<WithId<TSchema>[Key]>>>;\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema>\n  ): Promise<Array<Flatten<WithId<TSchema>[Key]>>>;\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema>,\n    options: DistinctOptions\n  ): Promise<Array<Flatten<WithId<TSchema>[Key]>>>;\n\n  // Embedded documents overload\n  distinct(key: string): Promise<any[]>;\n  distinct(key: string, filter: Filter<TSchema>): Promise<any[]>;\n  distinct(key: string, filter: Filter<TSchema>, options: DistinctOptions): Promise<any[]>;\n\n  async distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema> = {},\n    options: DistinctOptions = {}\n  ): Promise<any[]> {\n    return await executeOperation(\n      this.client,\n      new DistinctOperation(\n        this as TODO_NODE_3286,\n        key as TODO_NODE_3286,\n        filter,\n        resolveOptions(this, options)\n      )\n    );\n  }\n\n  /**\n   * Retrieve all the indexes on the collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  indexes(options: IndexInformationOptions & { full?: true }): Promise<IndexDescriptionInfo[]>;\n  indexes(options: IndexInformationOptions & { full: false }): Promise<IndexDescriptionCompact>;\n  indexes(\n    options: IndexInformationOptions\n  ): Promise<IndexDescriptionCompact | IndexDescriptionInfo[]>;\n  indexes(options?: ListIndexesOptions): Promise<IndexDescriptionInfo[]>;\n  async indexes(\n    options?: IndexInformationOptions\n  ): Promise<IndexDescriptionCompact | IndexDescriptionInfo[]> {\n    const indexes: IndexDescriptionInfo[] = await this.listIndexes(options).toArray();\n    const full = options?.full ?? true;\n    if (full) {\n      return indexes;\n    }\n\n    const object: IndexDescriptionCompact = Object.fromEntries(\n      indexes.map(({ name, key }) => [name, Object.entries(key)])\n    );\n\n    return object;\n  }\n\n  /**\n   * Find a document and delete it in one atomic operation. Requires a write lock for the duration of the operation.\n   *\n   * @param filter - The filter used to select the document to remove\n   * @param options - Optional settings for the command\n   */\n  async findOneAndDelete(\n    filter: Filter<TSchema>,\n    options: FindOneAndDeleteOptions & { includeResultMetadata: true }\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndDelete(\n    filter: Filter<TSchema>,\n    options: FindOneAndDeleteOptions & { includeResultMetadata: false }\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndDelete(\n    filter: Filter<TSchema>,\n    options: FindOneAndDeleteOptions\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndDelete(filter: Filter<TSchema>): Promise<WithId<TSchema> | null>;\n  async findOneAndDelete(\n    filter: Filter<TSchema>,\n    options?: FindOneAndDeleteOptions\n  ): Promise<WithId<TSchema> | ModifyResult<TSchema> | null> {\n    return await executeOperation(\n      this.client,\n      new FindOneAndDeleteOperation(\n        this as TODO_NODE_3286,\n        filter,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Find a document and replace it in one atomic operation. Requires a write lock for the duration of the operation.\n   *\n   * @param filter - The filter used to select the document to replace\n   * @param replacement - The Document that replaces the matching document\n   * @param options - Optional settings for the command\n   */\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options: FindOneAndReplaceOptions & { includeResultMetadata: true }\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options: FindOneAndReplaceOptions & { includeResultMetadata: false }\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options: FindOneAndReplaceOptions\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: WithoutId<TSchema>,\n    options?: FindOneAndReplaceOptions\n  ): Promise<WithId<TSchema> | ModifyResult<TSchema> | null> {\n    return await executeOperation(\n      this.client,\n      new FindOneAndReplaceOperation(\n        this as TODO_NODE_3286,\n        filter,\n        replacement,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Find a document and update it in one atomic operation. Requires a write lock for the duration of the operation.\n   *\n   * The value of `update` can be either:\n   * - UpdateFilter<TSchema> - A document that contains update operator expressions,\n   * - Document[] - an aggregation pipeline consisting of the following stages:\n   *   - $addFields and its alias $set\n   *   - $project and its alias $unset\n   *   - $replaceRoot and its alias $replaceWith.\n   * See the [findAndModify command documentation](https://www.mongodb.com/docs/manual/reference/command/findAndModify) for details.\n   *\n   * @param filter - The filter used to select the document to update\n   * @param update - The modifications to apply\n   * @param options - Optional settings for the command\n   */\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Document[],\n    options: FindOneAndUpdateOptions & { includeResultMetadata: true }\n  ): Promise<ModifyResult<TSchema>>;\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Document[],\n    options: FindOneAndUpdateOptions & { includeResultMetadata: false }\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Document[],\n    options: FindOneAndUpdateOptions\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Document[]\n  ): Promise<WithId<TSchema> | null>;\n  async findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Document[],\n    options?: FindOneAndUpdateOptions\n  ): Promise<WithId<TSchema> | ModifyResult<TSchema> | null> {\n    return await executeOperation(\n      this.client,\n      new FindOneAndUpdateOperation(\n        this as TODO_NODE_3286,\n        filter,\n        update,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Execute an aggregation framework pipeline against the collection, needs MongoDB \\>= 2.2\n   *\n   * @param pipeline - An array of aggregation pipelines to execute\n   * @param options - Optional settings for the command\n   */\n  aggregate<T extends Document = Document>(\n    pipeline: Document[] = [],\n    options?: AggregateOptions & Abortable\n  ): AggregationCursor<T> {\n    if (!Array.isArray(pipeline)) {\n      throw new MongoInvalidArgumentError(\n        'Argument \"pipeline\" must be an array of aggregation stages'\n      );\n    }\n\n    return new AggregationCursor(\n      this.client,\n      this.s.namespace,\n      pipeline,\n      resolveOptions(this, options)\n    );\n  }\n\n  /**\n   * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this collection.\n   *\n   * @remarks\n   * watch() accepts two generic arguments for distinct use cases:\n   * - The first is to override the schema that may be defined for this specific collection\n   * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n   * @example\n   * By just providing the first argument I can type the change to be `ChangeStreamDocument<{ _id: number }>`\n   * ```ts\n   * collection.watch<{ _id: number }>()\n   *   .on('change', change => console.log(change._id.toFixed(4)));\n   * ```\n   *\n   * @example\n   * Passing a second argument provides a way to reflect the type changes caused by an advanced pipeline.\n   * Here, we are using a pipeline to have MongoDB filter for insert changes only and add a comment.\n   * No need start from scratch on the ChangeStreamInsertDocument type!\n   * By using an intersection we can save time and ensure defaults remain the same type!\n   * ```ts\n   * collection\n   *   .watch<Schema, ChangeStreamInsertDocument<Schema> & { comment: string }>([\n   *     { $addFields: { comment: 'big changes' } },\n   *     { $match: { operationType: 'insert' } }\n   *   ])\n   *   .on('change', change => {\n   *     change.comment.startsWith('big');\n   *     change.operationType === 'insert';\n   *     // No need to narrow in code because the generics did that for us!\n   *     expectType<Schema>(change.fullDocument);\n   *   });\n   * ```\n   *\n   * @remarks\n   * When `timeoutMS` is configured for a change stream, it will have different behaviour depending\n   * on whether the change stream is in iterator mode or emitter mode. In both cases, a change\n   * stream will time out if it does not receive a change event within `timeoutMS` of the last change\n   * event.\n   *\n   * Note that if a change stream is consistently timing out when watching a collection, database or\n   * client that is being changed, then this may be due to the server timing out before it can finish\n   * processing the existing oplog. To address this, restart the change stream with a higher\n   * `timeoutMS`.\n   *\n   * If the change stream times out the initial aggregate operation to establish the change stream on\n   * the server, then the client will close the change stream. If the getMore calls to the server\n   * time out, then the change stream will be left open, but will throw a MongoOperationTimeoutError\n   * when in iterator mode and emit an error event that returns a MongoOperationTimeoutError in\n   * emitter mode.\n   *\n   * To determine whether or not the change stream is still open following a timeout, check the\n   * {@link ChangeStream.closed} getter.\n   *\n   * @example\n   * In iterator mode, if a next() call throws a timeout error, it will attempt to resume the change stream.\n   * The next call can just be retried after this succeeds.\n   * ```ts\n   * const changeStream = collection.watch([], { timeoutMS: 100 });\n   * try {\n   *     await changeStream.next();\n   * } catch (e) {\n   *     if (e instanceof MongoOperationTimeoutError && !changeStream.closed) {\n   *       await changeStream.next();\n   *     }\n   *     throw e;\n   * }\n   * ```\n   *\n   * @example\n   * In emitter mode, if the change stream goes `timeoutMS` without emitting a change event, it will\n   * emit an error event that returns a MongoOperationTimeoutError, but will not close the change\n   * stream unless the resume attempt fails. There is no need to re-establish change listeners as\n   * this will automatically continue emitting change events once the resume attempt completes.\n   *\n   * ```ts\n   * const changeStream = collection.watch([], { timeoutMS: 100 });\n   * changeStream.on('change', console.log);\n   * changeStream.on('error', e => {\n   *     if (e instanceof MongoOperationTimeoutError && !changeStream.closed) {\n   *         // do nothing\n   *     } else {\n   *         changeStream.close();\n   *     }\n   * });\n   * ```\n   *\n   * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n   * @param options - Optional settings for the command\n   * @typeParam TLocal - Type of the data being detected by the change stream\n   * @typeParam TChange - Type of the whole change stream document emitted\n   */\n  watch<TLocal extends Document = TSchema, TChange extends Document = ChangeStreamDocument<TLocal>>(\n    pipeline: Document[] = [],\n    options: ChangeStreamOptions = {}\n  ): ChangeStream<TLocal, TChange> {\n    // Allow optionally not specifying a pipeline\n    if (!Array.isArray(pipeline)) {\n      options = pipeline;\n      pipeline = [];\n    }\n\n    return new ChangeStream<TLocal, TChange>(this, pipeline, resolveOptions(this, options));\n  }\n\n  /**\n   * Initiate an Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n   *\n   * @throws MongoNotConnectedError\n   * @remarks\n   * **NOTE:** MongoClient must be connected prior to calling this method due to a known limitation in this legacy implementation.\n   * However, `collection.bulkWrite()` provides an equivalent API that does not require prior connecting.\n   */\n  initializeUnorderedBulkOp(options?: BulkWriteOptions): UnorderedBulkOperation {\n    return new UnorderedBulkOperation(this as TODO_NODE_3286, resolveOptions(this, options));\n  }\n\n  /**\n   * Initiate an In order bulk write operation. Operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n   *\n   * @throws MongoNotConnectedError\n   * @remarks\n   * **NOTE:** MongoClient must be connected prior to calling this method due to a known limitation in this legacy implementation.\n   * However, `collection.bulkWrite()` provides an equivalent API that does not require prior connecting.\n   */\n  initializeOrderedBulkOp(options?: BulkWriteOptions): OrderedBulkOperation {\n    return new OrderedBulkOperation(this as TODO_NODE_3286, resolveOptions(this, options));\n  }\n\n  /**\n   * An estimated count of matching documents in the db to a filter.\n   *\n   * **NOTE:** This method has been deprecated, since it does not provide an accurate count of the documents\n   * in a collection. To obtain an accurate count of documents in the collection, use {@link Collection#countDocuments| countDocuments}.\n   * To obtain an estimated count of all documents in the collection, use {@link Collection#estimatedDocumentCount| estimatedDocumentCount}.\n   *\n   * @deprecated use {@link Collection#countDocuments| countDocuments} or {@link Collection#estimatedDocumentCount| estimatedDocumentCount} instead\n   *\n   * @param filter - The filter for the count.\n   * @param options - Optional settings for the command\n   */\n  async count(filter: Filter<TSchema> = {}, options: CountOptions = {}): Promise<number> {\n    return await executeOperation(\n      this.client,\n      new CountOperation(this.fullNamespace, filter, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Returns all search indexes for the current collection.\n   *\n   * @param options - The options for the list indexes operation.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  listSearchIndexes(options?: ListSearchIndexesOptions): ListSearchIndexesCursor;\n  /**\n   * Returns all search indexes for the current collection.\n   *\n   * @param name - The name of the index to search for.  Only indexes with matching index names will be returned.\n   * @param options - The options for the list indexes operation.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  listSearchIndexes(name: string, options?: ListSearchIndexesOptions): ListSearchIndexesCursor;\n  listSearchIndexes(\n    indexNameOrOptions?: string | ListSearchIndexesOptions,\n    options?: ListSearchIndexesOptions\n  ): ListSearchIndexesCursor {\n    options =\n      typeof indexNameOrOptions === 'object' ? indexNameOrOptions : options == null ? {} : options;\n\n    const indexName =\n      indexNameOrOptions == null\n        ? null\n        : typeof indexNameOrOptions === 'object'\n          ? null\n          : indexNameOrOptions;\n\n    return new ListSearchIndexesCursor(this as TODO_NODE_3286, indexName, options);\n  }\n\n  /**\n   * Creates a single search index for the collection.\n   *\n   * @param description - The index description for the new search index.\n   * @returns A promise that resolves to the name of the new search index.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  async createSearchIndex(description: SearchIndexDescription): Promise<string> {\n    const [index] = await this.createSearchIndexes([description]);\n    return index;\n  }\n\n  /**\n   * Creates multiple search indexes for the current collection.\n   *\n   * @param descriptions - An array of `SearchIndexDescription`s for the new search indexes.\n   * @returns A promise that resolves to an array of the newly created search index names.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   * @returns\n   */\n  async createSearchIndexes(descriptions: SearchIndexDescription[]): Promise<string[]> {\n    return await executeOperation(\n      this.client,\n      new CreateSearchIndexesOperation(this as TODO_NODE_3286, descriptions)\n    );\n  }\n\n  /**\n   * Deletes a search index by index name.\n   *\n   * @param name - The name of the search index to be deleted.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  async dropSearchIndex(name: string): Promise<void> {\n    return await executeOperation(\n      this.client,\n      new DropSearchIndexOperation(this as TODO_NODE_3286, name)\n    );\n  }\n\n  /**\n   * Updates a search index by replacing the existing index definition with the provided definition.\n   *\n   * @param name - The name of the search index to update.\n   * @param definition - The new search index definition.\n   *\n   * @remarks Only available when used against a 7.0+ Atlas cluster.\n   */\n  async updateSearchIndex(name: string, definition: Document): Promise<void> {\n    return await executeOperation(\n      this.client,\n      new UpdateSearchIndexOperation(this as TODO_NODE_3286, name, definition)\n    );\n  }\n}\n", "import type { Document } from '../bson';\nimport {\n  ChangeStream,\n  type ChangeStreamDocument,\n  type ChangeStreamEvents,\n  type OperationTime,\n  type ResumeToken\n} from '../change_stream';\nimport { type CursorResponse } from '../cmap/wire_protocol/responses';\nimport { INIT, RESPONSE } from '../constants';\nimport type { MongoClient } from '../mongo_client';\nimport { AggregateOperation } from '../operations/aggregate';\nimport type { CollationOptions } from '../operations/command';\nimport { executeOperation } from '../operations/execute_operation';\nimport type { ClientSession } from '../sessions';\nimport { maxWireVersion, type MongoDBNamespace } from '../utils';\nimport {\n  AbstractCursor,\n  type AbstractCursorOptions,\n  type InitialCursorResponse\n} from './abstract_cursor';\n\n/** @internal */\nexport interface ChangeStreamCursorOptions extends AbstractCursorOptions {\n  startAtOperationTime?: OperationTime;\n  resumeAfter?: ResumeToken;\n  startAfter?: ResumeToken;\n  maxAwaitTimeMS?: number;\n  collation?: CollationOptions;\n  fullDocument?: string;\n}\n\n/** @internal */\nexport class ChangeStreamCursor<\n  TSchema extends Document = Document,\n  TChange extends Document = ChangeStreamDocument<TSchema>\n> extends AbstractCursor<TChange, ChangeStreamEvents> {\n  private _resumeToken: ResumeToken;\n  private startAtOperationTime: OperationTime | null;\n  private hasReceived?: boolean;\n  private readonly changeStreamCursorOptions: ChangeStreamCursorOptions;\n  private postBatchResumeToken?: ResumeToken;\n  private readonly pipeline: Document[];\n\n  /**\n   * @internal\n   *\n   * used to determine change stream resumability\n   */\n  maxWireVersion: number | undefined;\n\n  constructor(\n    client: MongoClient,\n    namespace: MongoDBNamespace,\n    pipeline: Document[] = [],\n    options: ChangeStreamCursorOptions = {}\n  ) {\n    super(client, namespace, { ...options, tailable: true, awaitData: true });\n\n    this.pipeline = pipeline;\n    this.changeStreamCursorOptions = options;\n    this._resumeToken = null;\n    this.startAtOperationTime = options.startAtOperationTime ?? null;\n\n    if (options.startAfter) {\n      this.resumeToken = options.startAfter;\n    } else if (options.resumeAfter) {\n      this.resumeToken = options.resumeAfter;\n    }\n  }\n\n  set resumeToken(token: ResumeToken) {\n    this._resumeToken = token;\n    this.emit(ChangeStream.RESUME_TOKEN_CHANGED, token);\n  }\n\n  get resumeToken(): ResumeToken {\n    return this._resumeToken;\n  }\n\n  get resumeOptions(): ChangeStreamCursorOptions {\n    const options: ChangeStreamCursorOptions = {\n      ...this.changeStreamCursorOptions\n    };\n\n    for (const key of ['resumeAfter', 'startAfter', 'startAtOperationTime'] as const) {\n      delete options[key];\n    }\n\n    if (this.resumeToken != null) {\n      if (this.changeStreamCursorOptions.startAfter && !this.hasReceived) {\n        options.startAfter = this.resumeToken;\n      } else {\n        options.resumeAfter = this.resumeToken;\n      }\n    } else if (this.startAtOperationTime != null && maxWireVersion(this.server) >= 7) {\n      options.startAtOperationTime = this.startAtOperationTime;\n    }\n\n    return options;\n  }\n\n  cacheResumeToken(resumeToken: ResumeToken): void {\n    if (this.bufferedCount() === 0 && this.postBatchResumeToken) {\n      this.resumeToken = this.postBatchResumeToken;\n    } else {\n      this.resumeToken = resumeToken;\n    }\n    this.hasReceived = true;\n  }\n\n  _processBatch(response: CursorResponse): void {\n    const { postBatchResumeToken } = response;\n    if (postBatchResumeToken) {\n      this.postBatchResumeToken = postBatchResumeToken;\n\n      if (response.batchSize === 0) {\n        this.resumeToken = postBatchResumeToken;\n      }\n    }\n  }\n\n  clone(): AbstractCursor<TChange> {\n    return new ChangeStreamCursor(this.client, this.namespace, this.pipeline, {\n      ...this.cursorOptions\n    });\n  }\n\n  async _initialize(session: ClientSession): Promise<InitialCursorResponse> {\n    const aggregateOperation = new AggregateOperation(this.namespace, this.pipeline, {\n      ...this.cursorOptions,\n      ...this.changeStreamCursorOptions,\n      session\n    });\n\n    const response = await executeOperation(\n      session.client,\n      aggregateOperation,\n      this.timeoutContext\n    );\n\n    const server = aggregateOperation.server;\n    this.maxWireVersion = maxWireVersion(server);\n\n    if (\n      this.startAtOperationTime == null &&\n      this.changeStreamCursorOptions.resumeAfter == null &&\n      this.changeStreamCursorOptions.startAfter == null &&\n      this.maxWireVersion >= 7\n    ) {\n      this.startAtOperationTime = response.operationTime;\n    }\n\n    this._processBatch(response);\n\n    this.emit(INIT, response);\n    this.emit(RESPONSE);\n\n    return { server, session, response };\n  }\n\n  override async getMore(batchSize: number): Promise<CursorResponse> {\n    const response = await super.getMore(batchSize);\n\n    this.maxWireVersion = maxWireVersion(this.server);\n    this._processBatch(response);\n\n    this.emit(ChangeStream.MORE, response);\n    this.emit(ChangeStream.RESPONSE);\n    return response;\n  }\n}\n", "import type { Binary, Document } from '../bson';\nimport { CursorResponse } from '../cmap/wire_protocol/responses';\nimport { type CursorTimeoutContext, type CursorTimeoutMode } from '../cursor/abstract_cursor';\nimport type { Db } from '../db';\nimport { type Abortable } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { maxWireVersion } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface ListCollectionsOptions\n  extends Omit<CommandOperationOptions, 'writeConcern'>,\n    Abortable {\n  /** Since 4.0: If true, will only return the collection name in the response, and will omit additional info */\n  nameOnly?: boolean;\n  /** Since 4.0: If true and nameOnly is true, allows a user without the required privilege (i.e. listCollections action on the database) to run the command when access control is enforced. */\n  authorizedCollections?: boolean;\n  /** The batchSize for the returned command cursor or if pre 2.8 the systems batch collection */\n  batchSize?: number;\n  /** @internal */\n  timeoutMode?: CursorTimeoutMode;\n\n  /** @internal */\n  timeoutContext?: CursorTimeoutContext;\n}\n\n/** @internal */\nexport class ListCollectionsOperation extends CommandOperation<CursorResponse> {\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  override options: ListCollectionsOptions & { writeConcern?: never };\n  db: Db;\n  filter: Document;\n  nameOnly: boolean;\n  authorizedCollections: boolean;\n  batchSize?: number;\n\n  constructor(db: Db, filter: Document, options?: ListCollectionsOptions) {\n    super(db, options);\n\n    this.options = { ...options };\n    delete this.options.writeConcern;\n    this.db = db;\n    this.filter = filter;\n    this.nameOnly = !!this.options.nameOnly;\n    this.authorizedCollections = !!this.options.authorizedCollections;\n\n    if (typeof this.options.batchSize === 'number') {\n      this.batchSize = this.options.batchSize;\n    }\n  }\n\n  override get commandName() {\n    return 'listCollections' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<CursorResponse> {\n    return await super.executeCommand(\n      server,\n      session,\n      this.generateCommand(maxWireVersion(server)),\n      timeoutContext,\n      CursorResponse\n    );\n  }\n\n  /* This is here for the purpose of unit testing the final command that gets sent. */\n  generateCommand(wireVersion: number): Document {\n    const command: Document = {\n      listCollections: 1,\n      filter: this.filter,\n      cursor: this.batchSize ? { batchSize: this.batchSize } : {},\n      nameOnly: this.nameOnly,\n      authorizedCollections: this.authorizedCollections\n    };\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (wireVersion >= 9 && this.options.comment !== undefined) {\n      command.comment = this.options.comment;\n    }\n\n    return command;\n  }\n}\n\n/** @public */\nexport interface CollectionInfo extends Document {\n  name: string;\n  type?: string;\n  options?: Document;\n  info?: {\n    readOnly?: false;\n    uuid?: Binary;\n  };\n  idIndex?: Document;\n}\n\ndefineAspects(ListCollectionsOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import type { Document } from '../bson';\nimport type { Db } from '../db';\nimport { type Abortable } from '../mongo_types';\nimport { executeOperation } from '../operations/execute_operation';\nimport {\n  type CollectionInfo,\n  ListCollectionsOperation,\n  type ListCollectionsOptions\n} from '../operations/list_collections';\nimport type { ClientSession } from '../sessions';\nimport { AbstractCursor, type InitialCursorResponse } from './abstract_cursor';\n\n/** @public */\nexport class ListCollectionsCursor<\n  T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo =\n    | Pick<CollectionInfo, 'name' | 'type'>\n    | CollectionInfo\n> extends AbstractCursor<T> {\n  parent: Db;\n  filter: Document;\n  options?: ListCollectionsOptions & Abortable;\n\n  constructor(db: Db, filter: Document, options?: ListCollectionsOptions & Abortable) {\n    super(db.client, db.s.namespace, options);\n    this.parent = db;\n    this.filter = filter;\n    this.options = options;\n  }\n\n  clone(): ListCollectionsCursor<T> {\n    return new ListCollectionsCursor(this.parent, this.filter, {\n      ...this.options,\n      ...this.cursorOptions\n    });\n  }\n\n  /** @internal */\n  async _initialize(session: ClientSession | undefined): Promise<InitialCursorResponse> {\n    const operation = new ListCollectionsOperation(this.parent, this.filter, {\n      ...this.cursorOptions,\n      ...this.options,\n      session,\n      signal: this.signal\n    });\n\n    const response = await executeOperation(this.parent.client, operation, this.timeoutContext);\n\n    return { server: operation.server, session, response };\n  }\n}\n", "import type { BSONSerializeOptions, Document } from '../bson';\nimport { type MongoDBResponseConstructor } from '../cmap/wire_protocol/responses';\nimport { type Db } from '../db';\nimport { type TODO_NODE_3286 } from '../mongo_types';\nimport type { ReadPreferenceLike } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { MongoDBNamespace } from '../utils';\nimport { AbstractOperation } from './operation';\n\n/** @public */\nexport type RunCommandOptions = {\n  /** Specify ClientSession for this command */\n  session?: ClientSession;\n  /** The read preference */\n  readPreference?: ReadPreferenceLike;\n  /**\n   * @experimental\n   * Specifies the time an operation will run until it throws a timeout error\n   */\n  timeoutMS?: number;\n  /** @internal */\n  omitMaxTimeMS?: boolean;\n} & BSONSerializeOptions;\n\n/** @internal */\nexport class RunCommandOperation<T = Document> extends AbstractOperation<T> {\n  constructor(\n    parent: Db,\n    public command: Document,\n    public override options: RunCommandOptions & { responseType?: MongoDBResponseConstructor }\n  ) {\n    super(options);\n    this.ns = parent.s.namespace.withCollection('$cmd');\n  }\n\n  override get commandName() {\n    return 'runCommand' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<T> {\n    this.server = server;\n    const res: TODO_NODE_3286 = await server.command(\n      this.ns,\n      this.command,\n      {\n        ...this.options,\n        readPreference: this.readPreference,\n        session,\n        timeoutContext\n      },\n      this.options.responseType\n    );\n\n    return res;\n  }\n}\n\nexport class RunAdminCommandOperation<T = Document> extends AbstractOperation<T> {\n  constructor(\n    public command: Document,\n    public override options: RunCommandOptions & {\n      noResponse?: boolean;\n      bypassPinningCheck?: boolean;\n    }\n  ) {\n    super(options);\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  override get commandName() {\n    return 'runCommand' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<T> {\n    this.server = server;\n    const res: TODO_NODE_3286 = await server.command(this.ns, this.command, {\n      ...this.options,\n      readPreference: this.readPreference,\n      session,\n      timeoutContext\n    });\n    return res;\n  }\n}\n", "import type { BSONSerializeOptions, Document } from '../bson';\nimport { CursorResponse } from '../cmap/wire_protocol/responses';\nimport type { Db } from '../db';\nimport { MongoAPIError } from '../error';\nimport { executeOperation } from '../operations/execute_operation';\nimport { GetMoreOperation } from '../operations/get_more';\nimport { RunCommandOperation } from '../operations/run_command';\nimport type { ReadConcernLike } from '../read_concern';\nimport type { ReadPreferenceLike } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport { ns } from '../utils';\nimport {\n  AbstractCursor,\n  type CursorTimeoutMode,\n  type InitialCursorResponse\n} from './abstract_cursor';\n\n/** @public */\nexport type RunCursorCommandOptions = {\n  readPreference?: ReadPreferenceLike;\n  session?: ClientSession;\n  /**\n   * @experimental\n   * Specifies the time an operation will run until it throws a timeout error. Note that if\n   * `maxTimeMS` is provided in the command in addition to setting `timeoutMS` in the options, then\n   * the original value of `maxTimeMS` will be overwritten.\n   */\n  timeoutMS?: number;\n  /**\n   * @public\n   * @experimental\n   * Specifies how `timeoutMS` is applied to the cursor. Can be either `'cursorLifeTime'` or `'iteration'`\n   * When set to `'iteration'`, the deadline specified by `timeoutMS` applies to each call of\n   * `cursor.next()`.\n   * When set to `'cursorLifetime'`, the deadline applies to the life of the entire cursor.\n   *\n   * Depending on the type of cursor being used, this option has different default values.\n   * For non-tailable cursors, this value defaults to `'cursorLifetime'`\n   * For tailable cursors, this value defaults to `'iteration'` since tailable cursors, by\n   * definition can have an arbitrarily long lifetime.\n   *\n   * @example\n   * ```ts\n   * const cursor = collection.find({}, {timeoutMS: 100, timeoutMode: 'iteration'});\n   * for await (const doc of cursor) {\n   *  // process doc\n   *  // This will throw a timeout error if any of the iterator's `next()` calls takes more than 100ms, but\n   *  // will continue to iterate successfully otherwise, regardless of the number of batches.\n   * }\n   * ```\n   *\n   * @example\n   * ```ts\n   * const cursor = collection.find({}, { timeoutMS: 1000, timeoutMode: 'cursorLifetime' });\n   * const docs = await cursor.toArray(); // This entire line will throw a timeout error if all batches are not fetched and returned within 1000ms.\n   * ```\n   */\n  timeoutMode?: CursorTimeoutMode;\n  tailable?: boolean;\n  awaitData?: boolean;\n} & BSONSerializeOptions;\n\n/** @public */\nexport class RunCommandCursor extends AbstractCursor {\n  public readonly command: Readonly<Record<string, any>>;\n  public readonly getMoreOptions: {\n    comment?: any;\n    maxAwaitTimeMS?: number;\n    batchSize?: number;\n  } = {};\n\n  /**\n   * Controls the `getMore.comment` field\n   * @param comment - any BSON value\n   */\n  public setComment(comment: any): this {\n    this.getMoreOptions.comment = comment;\n    return this;\n  }\n\n  /**\n   * Controls the `getMore.maxTimeMS` field. Only valid when cursor is tailable await\n   * @param maxTimeMS - the number of milliseconds to wait for new data\n   */\n  public setMaxTimeMS(maxTimeMS: number): this {\n    this.getMoreOptions.maxAwaitTimeMS = maxTimeMS;\n    return this;\n  }\n\n  /**\n   * Controls the `getMore.batchSize` field\n   * @param batchSize - the number documents to return in the `nextBatch`\n   */\n  public setBatchSize(batchSize: number): this {\n    this.getMoreOptions.batchSize = batchSize;\n    return this;\n  }\n\n  /** Unsupported for RunCommandCursor */\n  public override clone(): never {\n    throw new MongoAPIError('Clone not supported, create a new cursor with db.runCursorCommand');\n  }\n\n  /** Unsupported for RunCommandCursor: readConcern must be configured directly on command document */\n  public override withReadConcern(_: ReadConcernLike): never {\n    throw new MongoAPIError(\n      'RunCommandCursor does not support readConcern it must be attached to the command being run'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: various cursor flags must be configured directly on command document */\n  public override addCursorFlag(_: string, __: boolean): never {\n    throw new MongoAPIError(\n      'RunCommandCursor does not support cursor flags, they must be attached to the command being run'\n    );\n  }\n\n  /**\n   * Unsupported for RunCommandCursor: maxTimeMS must be configured directly on command document\n   */\n  public override maxTimeMS(_: number): never {\n    throw new MongoAPIError(\n      'maxTimeMS must be configured on the command document directly, to configure getMore.maxTimeMS use cursor.setMaxTimeMS()'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: batchSize must be configured directly on command document */\n  public override batchSize(_: number): never {\n    throw new MongoAPIError(\n      'batchSize must be configured on the command document directly, to configure getMore.batchSize use cursor.setBatchSize()'\n    );\n  }\n\n  /** @internal */\n  private db: Db;\n\n  /** @internal */\n  constructor(db: Db, command: Document, options: RunCursorCommandOptions = {}) {\n    super(db.client, ns(db.namespace), options);\n    this.db = db;\n    this.command = Object.freeze({ ...command });\n  }\n\n  /** @internal */\n  protected async _initialize(session: ClientSession): Promise<InitialCursorResponse> {\n    const operation = new RunCommandOperation<CursorResponse>(this.db, this.command, {\n      ...this.cursorOptions,\n      session: session,\n      readPreference: this.cursorOptions.readPreference,\n      responseType: CursorResponse\n    });\n\n    const response = await executeOperation(this.client, operation, this.timeoutContext);\n\n    return {\n      server: operation.server,\n      session,\n      response\n    };\n  }\n\n  /** @internal */\n  override async getMore(_batchSize: number): Promise<CursorResponse> {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getMoreOperation = new GetMoreOperation(this.namespace, this.id!, this.server!, {\n      ...this.cursorOptions,\n      session: this.session,\n      ...this.getMoreOptions\n    });\n\n    return await executeOperation(this.client, getMoreOperation, this.timeoutContext);\n  }\n}\n", "import { Collection } from '../collection';\nimport type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { AbstractOperation, type OperationOptions } from './operation';\n\nexport interface CollectionsOptions extends OperationOptions {\n  nameOnly?: boolean;\n}\n\n/** @internal */\nexport class CollectionsOperation extends AbstractOperation<Collection[]> {\n  override options: CollectionsOptions;\n  db: Db;\n\n  constructor(db: Db, options: CollectionsOptions) {\n    super(options);\n    this.options = options;\n    this.db = db;\n  }\n\n  override get commandName() {\n    return 'listCollections' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined\n  ): Promise<Collection[]> {\n    // Let's get the collection names\n    const documents = await this.db\n      .listCollections(\n        {},\n        { ...this.options, nameOnly: true, readPreference: this.readPreference, session }\n      )\n      .toArray();\n    const collections: Collection[] = [];\n    for (const { name } of documents) {\n      if (!name.includes('$')) {\n        // Filter collections removing any illegal ones\n        collections.push(new Collection(this.db, name, this.db.s.options));\n      }\n    }\n    // Return the collection objects\n    return collections;\n  }\n}\n", "import type { Document } from '../bson';\nimport {\n  MIN_SUPPORTED_QE_SERVER_VERSION,\n  MIN_SUPPORTED_QE_WIRE_VERSION\n} from '../cmap/wire_protocol/constants';\nimport { Collection } from '../collection';\nimport type { Db } from '../db';\nimport { MongoCompatibilityError } from '../error';\nimport type { PkFactory } from '../mongo_client';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { CreateIndexesOperation } from './indexes';\nimport { Aspect, defineAspects } from './operation';\n\nconst ILLEGAL_COMMAND_FIELDS = new Set([\n  'w',\n  'wtimeout',\n  'timeoutMS',\n  'j',\n  'fsync',\n  'autoIndexId',\n  'pkFactory',\n  'raw',\n  'readPreference',\n  'session',\n  'readConcern',\n  'writeConcern',\n  'raw',\n  'fieldsAsRaw',\n  'useBigInt64',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bsonRegExp',\n  'serializeFunctions',\n  'ignoreUndefined',\n  'enableUtf8Validation'\n]);\n\n/** @public\n * Configuration options for timeseries collections\n * @see https://www.mongodb.com/docs/manual/core/timeseries-collections/\n */\nexport interface TimeSeriesCollectionOptions extends Document {\n  timeField: string;\n  metaField?: string;\n  granularity?: 'seconds' | 'minutes' | 'hours' | string;\n  bucketMaxSpanSeconds?: number;\n  bucketRoundingSeconds?: number;\n}\n\n/** @public\n * Configuration options for clustered collections\n * @see https://www.mongodb.com/docs/manual/core/clustered-collections/\n */\nexport interface ClusteredCollectionOptions extends Document {\n  name?: string;\n  key: Document;\n  unique: boolean;\n}\n\n/** @public */\nexport interface CreateCollectionOptions extends CommandOperationOptions {\n  /** Create a capped collection */\n  capped?: boolean;\n  /** @deprecated Create an index on the _id field of the document. This option is deprecated in MongoDB 3.2+ and will be removed once no longer supported by the server. */\n  autoIndexId?: boolean;\n  /** The size of the capped collection in bytes */\n  size?: number;\n  /** The maximum number of documents in the capped collection */\n  max?: number;\n  /** Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag */\n  flags?: number;\n  /** Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection */\n  storageEngine?: Document;\n  /** Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation */\n  validator?: Document;\n  /** Determines how strictly MongoDB applies the validation rules to existing documents during an update */\n  validationLevel?: string;\n  /** Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted */\n  validationAction?: string;\n  /** Allows users to specify a default configuration for indexes when creating a collection */\n  indexOptionDefaults?: Document;\n  /** The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view (i.e., does not include the database name and implies the same database as the view to create) */\n  viewOn?: string;\n  /** An array that consists of the aggregation pipeline stage. Creates the view by applying the specified pipeline to the viewOn collection or view */\n  pipeline?: Document[];\n  /** A primary key factory function for generation of custom _id keys. */\n  pkFactory?: PkFactory;\n  /** A document specifying configuration options for timeseries collections. */\n  timeseries?: TimeSeriesCollectionOptions;\n  /** A document specifying configuration options for clustered collections. For MongoDB 5.3 and above. */\n  clusteredIndex?: ClusteredCollectionOptions;\n  /** The number of seconds after which a document in a timeseries or clustered collection expires. */\n  expireAfterSeconds?: number;\n  /** @experimental */\n  encryptedFields?: Document;\n  /**\n   * If set, enables pre-update and post-update document events to be included for any\n   * change streams that listen on this collection.\n   */\n  changeStreamPreAndPostImages?: { enabled: boolean };\n}\n\n/* @internal */\nconst INVALID_QE_VERSION =\n  'Driver support of Queryable Encryption is incompatible with server. Upgrade server to use Queryable Encryption.';\n\n/** @internal */\nexport class CreateCollectionOperation extends CommandOperation<Collection> {\n  override options: CreateCollectionOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options: CreateCollectionOptions = {}) {\n    super(db, options);\n\n    this.options = options;\n    this.db = db;\n    this.name = name;\n  }\n\n  override get commandName() {\n    return 'create' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<Collection> {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n\n    const encryptedFields: Document | undefined =\n      options.encryptedFields ??\n      db.client.s.options.autoEncryption?.encryptedFieldsMap?.[`${db.databaseName}.${name}`];\n\n    if (encryptedFields) {\n      // Creating a QE collection required min server of 7.0.0\n      // TODO(NODE-5353): Get wire version information from connection.\n      if (\n        !server.loadBalanced &&\n        server.description.maxWireVersion < MIN_SUPPORTED_QE_WIRE_VERSION\n      ) {\n        throw new MongoCompatibilityError(\n          `${INVALID_QE_VERSION} The minimum server version required is ${MIN_SUPPORTED_QE_SERVER_VERSION}`\n        );\n      }\n      // Create auxilliary collections for queryable encryption support.\n      const escCollection = encryptedFields.escCollection ?? `enxcol_.${name}.esc`;\n      const ecocCollection = encryptedFields.ecocCollection ?? `enxcol_.${name}.ecoc`;\n\n      for (const collectionName of [escCollection, ecocCollection]) {\n        const createOp = new CreateCollectionOperation(db, collectionName, {\n          clusteredIndex: {\n            key: { _id: 1 },\n            unique: true\n          }\n        });\n        await createOp.executeWithoutEncryptedFieldsCheck(server, session, timeoutContext);\n      }\n\n      if (!options.encryptedFields) {\n        this.options = { ...this.options, encryptedFields };\n      }\n    }\n\n    const coll = await this.executeWithoutEncryptedFieldsCheck(server, session, timeoutContext);\n\n    if (encryptedFields) {\n      // Create the required index for queryable encryption support.\n      const createIndexOp = CreateIndexesOperation.fromIndexSpecification(\n        db,\n        name,\n        { __safeContent__: 1 },\n        {}\n      );\n      await createIndexOp.execute(server, session, timeoutContext);\n    }\n\n    return coll;\n  }\n\n  private async executeWithoutEncryptedFieldsCheck(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<Collection> {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n\n    const cmd: Document = { create: name };\n    for (const n in options) {\n      if (\n        (options as any)[n] != null &&\n        typeof (options as any)[n] !== 'function' &&\n        !ILLEGAL_COMMAND_FIELDS.has(n)\n      ) {\n        cmd[n] = (options as any)[n];\n      }\n    }\n    // otherwise just execute the command\n    await super.executeCommand(server, session, cmd, timeoutContext);\n    return new Collection(db, name, options);\n  }\n}\n\ndefineAspects(CreateCollectionOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Db } from '../db';\nimport { MongoUnexpectedServerResponseError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { CommandOperation, type CommandOperationOptions } from './command';\n\n/** @public */\nexport type ProfilingLevelOptions = CommandOperationOptions;\n\n/** @internal */\nexport class ProfilingLevelOperation extends CommandOperation<string> {\n  override options: ProfilingLevelOptions;\n\n  constructor(db: Db, options: ProfilingLevelOptions) {\n    super(db, options);\n    this.options = options;\n  }\n\n  override get commandName() {\n    return 'profile' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<string> {\n    const doc = await super.executeCommand(server, session, { profile: -1 }, timeoutContext);\n    if (doc.ok === 1) {\n      const was = doc.was;\n      if (was === 0) return 'off';\n      if (was === 1) return 'slow_only';\n      if (was === 2) return 'all';\n      throw new MongoUnexpectedServerResponseError(`Illegal profiling level value ${was}`);\n    } else {\n      throw new MongoUnexpectedServerResponseError('Error with profile command');\n    }\n  }\n}\n", "import type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport type RemoveUserOptions = CommandOperationOptions;\n\n/** @internal */\nexport class RemoveUserOperation extends CommandOperation<boolean> {\n  override options: RemoveUserOptions;\n  username: string;\n\n  constructor(db: Db, username: string, options: RemoveUserOptions) {\n    super(db, options);\n    this.options = options;\n    this.username = username;\n  }\n\n  override get commandName() {\n    return 'dropUser' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<boolean> {\n    await super.executeCommand(server, session, { dropUser: this.username }, timeoutContext);\n    return true;\n  }\n}\n\ndefineAspects(RemoveUserOperation, [Aspect.WRITE_OPERATION]);\n", "import type { Db } from '../db';\nimport { MongoInvalidArgumentError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { enumToString } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\n\nconst levelValues = new Set(['off', 'slow_only', 'all']);\n\n/** @public */\nexport const ProfilingLevel = Object.freeze({\n  off: 'off',\n  slowOnly: 'slow_only',\n  all: 'all'\n} as const);\n\n/** @public */\nexport type ProfilingLevel = (typeof ProfilingLevel)[keyof typeof ProfilingLevel];\n\n/** @public */\nexport type SetProfilingLevelOptions = CommandOperationOptions;\n\n/** @internal */\nexport class SetProfilingLevelOperation extends CommandOperation<ProfilingLevel> {\n  override options: SetProfilingLevelOptions;\n  level: ProfilingLevel;\n  profile: 0 | 1 | 2;\n\n  constructor(db: Db, level: ProfilingLevel, options: SetProfilingLevelOptions) {\n    super(db, options);\n    this.options = options;\n    switch (level) {\n      case ProfilingLevel.off:\n        this.profile = 0;\n        break;\n      case ProfilingLevel.slowOnly:\n        this.profile = 1;\n        break;\n      case ProfilingLevel.all:\n        this.profile = 2;\n        break;\n      default:\n        this.profile = 0;\n        break;\n    }\n\n    this.level = level;\n  }\n\n  override get commandName() {\n    return 'profile' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<ProfilingLevel> {\n    const level = this.level;\n\n    if (!levelValues.has(level)) {\n      throw new MongoInvalidArgumentError(\n        `Profiling level must be one of \"${enumToString(ProfilingLevel)}\"`\n      );\n    }\n\n    // TODO(NODE-3483): Determine error to put here\n    await super.executeCommand(server, session, { profile: this.profile }, timeoutContext);\n    return level;\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface DbStatsOptions extends CommandOperationOptions {\n  /** Divide the returned sizes by scale value. */\n  scale?: number;\n}\n\n/** @internal */\nexport class DbStatsOperation extends CommandOperation<Document> {\n  override options: DbStatsOptions;\n\n  constructor(db: Db, options: DbStatsOptions) {\n    super(db, options);\n    this.options = options;\n  }\n\n  override get commandName() {\n    return 'dbStats' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<Document> {\n    const command: Document = { dbStats: true };\n    if (this.options.scale != null) {\n      command.scale = this.options.scale;\n    }\n\n    return await super.executeCommand(server, session, command, timeoutContext);\n  }\n}\n\ndefineAspects(DbStatsOperation, [Aspect.READ_OPERATION]);\n", "import { Admin } from './admin';\nimport { type BSONSerializeOptions, type Document, resolveBSONOptions } from './bson';\nimport { ChangeStream, type ChangeStreamDocument, type ChangeStreamOptions } from './change_stream';\nimport { Collection, type CollectionOptions } from './collection';\nimport * as CONSTANTS from './constants';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { ListCollectionsCursor } from './cursor/list_collections_cursor';\nimport { RunCommandCursor, type RunCursorCommandOptions } from './cursor/run_command_cursor';\nimport { MongoInvalidArgumentError } from './error';\nimport type { MongoClient, PkFactory } from './mongo_client';\nimport type { Abortable, TODO_NODE_3286 } from './mongo_types';\nimport type { AggregateOptions } from './operations/aggregate';\nimport { CollectionsOperation } from './operations/collections';\nimport {\n  CreateCollectionOperation,\n  type CreateCollectionOptions\n} from './operations/create_collection';\nimport {\n  DropCollectionOperation,\n  type DropCollectionOptions,\n  DropDatabaseOperation,\n  type DropDatabaseOptions\n} from './operations/drop';\nimport { executeOperation } from './operations/execute_operation';\nimport {\n  CreateIndexesOperation,\n  type CreateIndexesOptions,\n  type IndexDescriptionCompact,\n  type IndexDescriptionInfo,\n  type IndexInformationOptions,\n  type IndexSpecification\n} from './operations/indexes';\nimport type { CollectionInfo, ListCollectionsOptions } from './operations/list_collections';\nimport { ProfilingLevelOperation, type ProfilingLevelOptions } from './operations/profiling_level';\nimport { RemoveUserOperation, type RemoveUserOptions } from './operations/remove_user';\nimport { RenameOperation, type RenameOptions } from './operations/rename';\nimport { RunCommandOperation, type RunCommandOptions } from './operations/run_command';\nimport {\n  type ProfilingLevel,\n  SetProfilingLevelOperation,\n  type SetProfilingLevelOptions\n} from './operations/set_profiling_level';\nimport { DbStatsOperation, type DbStatsOptions } from './operations/stats';\nimport { ReadConcern } from './read_concern';\nimport { ReadPreference, type ReadPreferenceLike } from './read_preference';\nimport { DEFAULT_PK_FACTORY, filterOptions, MongoDBNamespace, resolveOptions } from './utils';\nimport { WriteConcern, type WriteConcernOptions } from './write_concern';\n\n// Allowed parameters\nconst DB_OPTIONS_ALLOW_LIST = [\n  'writeConcern',\n  'readPreference',\n  'readPreferenceTags',\n  'native_parser',\n  'forceServerObjectId',\n  'pkFactory',\n  'serializeFunctions',\n  'raw',\n  'authSource',\n  'ignoreUndefined',\n  'readConcern',\n  'retryMiliSeconds',\n  'numberOfRetries',\n  'useBigInt64',\n  'promoteBuffers',\n  'promoteLongs',\n  'bsonRegExp',\n  'enableUtf8Validation',\n  'promoteValues',\n  'compression',\n  'retryWrites',\n  'timeoutMS'\n];\n\n/** @internal */\nexport interface DbPrivate {\n  options?: DbOptions;\n  readPreference?: ReadPreference;\n  pkFactory: PkFactory;\n  readConcern?: ReadConcern;\n  bsonOptions: BSONSerializeOptions;\n  writeConcern?: WriteConcern;\n  namespace: MongoDBNamespace;\n}\n\n/** @public */\nexport interface DbOptions extends BSONSerializeOptions, WriteConcernOptions {\n  /** If the database authentication is dependent on another databaseName. */\n  authSource?: string;\n  /** Force server to assign _id values instead of driver. */\n  forceServerObjectId?: boolean;\n  /** The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST). */\n  readPreference?: ReadPreferenceLike;\n  /** A primary key factory object for generation of custom _id keys. */\n  pkFactory?: PkFactory;\n  /** Specify a read concern for the collection. (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcern;\n  /** Should retry failed writes */\n  retryWrites?: boolean;\n  /**\n   * @experimental\n   * Specifies the time an operation will run until it throws a timeout error\n   */\n  timeoutMS?: number;\n}\n\n/**\n * The **Db** class is a class that represents a MongoDB Database.\n * @public\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * interface Pet {\n *   name: string;\n *   kind: 'dog' | 'cat' | 'fish';\n * }\n *\n * const client = new MongoClient('mongodb://localhost:27017');\n * const db = client.db();\n *\n * // Create a collection that validates our union\n * await db.createCollection<Pet>('pets', {\n *   validator: { $expr: { $in: ['$kind', ['dog', 'cat', 'fish']] } }\n * })\n * ```\n */\nexport class Db {\n  /** @internal */\n  s: DbPrivate;\n\n  /** @internal */\n  readonly client: MongoClient;\n\n  public static SYSTEM_NAMESPACE_COLLECTION = CONSTANTS.SYSTEM_NAMESPACE_COLLECTION;\n  public static SYSTEM_INDEX_COLLECTION = CONSTANTS.SYSTEM_INDEX_COLLECTION;\n  public static SYSTEM_PROFILE_COLLECTION = CONSTANTS.SYSTEM_PROFILE_COLLECTION;\n  public static SYSTEM_USER_COLLECTION = CONSTANTS.SYSTEM_USER_COLLECTION;\n  public static SYSTEM_COMMAND_COLLECTION = CONSTANTS.SYSTEM_COMMAND_COLLECTION;\n  public static SYSTEM_JS_COLLECTION = CONSTANTS.SYSTEM_JS_COLLECTION;\n\n  /**\n   * Creates a new Db instance.\n   *\n   * Db name cannot contain a dot, the server may apply more restrictions when an operation is run.\n   *\n   * @param client - The MongoClient for the database.\n   * @param databaseName - The name of the database this instance represents.\n   * @param options - Optional settings for Db construction.\n   */\n  constructor(client: MongoClient, databaseName: string, options?: DbOptions) {\n    options = options ?? {};\n\n    // Filter the options\n    options = filterOptions(options, DB_OPTIONS_ALLOW_LIST);\n\n    // Ensure there are no dots in database name\n    if (typeof databaseName === 'string' && databaseName.includes('.')) {\n      throw new MongoInvalidArgumentError(`Database names cannot contain the character '.'`);\n    }\n\n    // Internal state of the db object\n    this.s = {\n      // Options\n      options,\n      // Unpack read preference\n      readPreference: ReadPreference.fromOptions(options),\n      // Merge bson options\n      bsonOptions: resolveBSONOptions(options, client),\n      // Set up the primary key factory or fallback to ObjectId\n      pkFactory: options?.pkFactory ?? DEFAULT_PK_FACTORY,\n      // ReadConcern\n      readConcern: ReadConcern.fromOptions(options),\n      writeConcern: WriteConcern.fromOptions(options),\n      // Namespace\n      namespace: new MongoDBNamespace(databaseName)\n    };\n\n    this.client = client;\n  }\n\n  get databaseName(): string {\n    return this.s.namespace.db;\n  }\n\n  // Options\n  get options(): DbOptions | undefined {\n    return this.s.options;\n  }\n\n  /**\n   * Check if a secondary can be used (because the read preference is *not* set to primary)\n   */\n  get secondaryOk(): boolean {\n    return this.s.readPreference?.preference !== 'primary' || false;\n  }\n\n  get readConcern(): ReadConcern | undefined {\n    return this.s.readConcern;\n  }\n\n  /**\n   * The current readPreference of the Db. If not explicitly defined for\n   * this Db, will be inherited from the parent MongoClient\n   */\n  get readPreference(): ReadPreference {\n    if (this.s.readPreference == null) {\n      return this.client.readPreference;\n    }\n\n    return this.s.readPreference;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  // get the write Concern\n  get writeConcern(): WriteConcern | undefined {\n    return this.s.writeConcern;\n  }\n\n  get namespace(): string {\n    return this.s.namespace.toString();\n  }\n\n  public get timeoutMS(): number | undefined {\n    return this.s.options?.timeoutMS;\n  }\n\n  /**\n   * Create a new collection on a server with the specified options. Use this to create capped collections.\n   * More information about command options available at https://www.mongodb.com/docs/manual/reference/command/create/\n   *\n   * Collection namespace validation is performed server-side.\n   *\n   * @param name - The name of the collection to create\n   * @param options - Optional settings for the command\n   */\n  async createCollection<TSchema extends Document = Document>(\n    name: string,\n    options?: CreateCollectionOptions\n  ): Promise<Collection<TSchema>> {\n    return await executeOperation(\n      this.client,\n      new CreateCollectionOperation(this, name, resolveOptions(this, options)) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Execute a command\n   *\n   * @remarks\n   * This command does not inherit options from the MongoClient.\n   *\n   * The driver will ensure the following fields are attached to the command sent to the server:\n   * - `lsid` - sourced from an implicit session or options.session\n   * - `$readPreference` - defaults to primary or can be configured by options.readPreference\n   * - `$db` - sourced from the name of this database\n   *\n   * If the client has a serverApi setting:\n   * - `apiVersion`\n   * - `apiStrict`\n   * - `apiDeprecationErrors`\n   *\n   * When in a transaction:\n   * - `readConcern` - sourced from readConcern set on the TransactionOptions\n   * - `writeConcern` - sourced from writeConcern set on the TransactionOptions\n   *\n   * Attaching any of the above fields to the command will have no effect as the driver will overwrite the value.\n   *\n   * @param command - The command to run\n   * @param options - Optional settings for the command\n   */\n  async command(command: Document, options?: RunCommandOptions & Abortable): Promise<Document> {\n    // Intentionally, we do not inherit options from parent for this operation.\n    return await executeOperation(\n      this.client,\n      new RunCommandOperation(\n        this,\n        command,\n        resolveOptions(undefined, {\n          ...resolveBSONOptions(options),\n          timeoutMS: options?.timeoutMS ?? this.timeoutMS,\n          session: options?.session,\n          readPreference: options?.readPreference,\n          signal: options?.signal\n        })\n      )\n    );\n  }\n\n  /**\n   * Execute an aggregation framework pipeline against the database.\n   *\n   * @param pipeline - An array of aggregation stages to be executed\n   * @param options - Optional settings for the command\n   */\n  aggregate<T extends Document = Document>(\n    pipeline: Document[] = [],\n    options?: AggregateOptions\n  ): AggregationCursor<T> {\n    return new AggregationCursor(\n      this.client,\n      this.s.namespace,\n      pipeline,\n      resolveOptions(this, options)\n    );\n  }\n\n  /** Return the Admin db instance */\n  admin(): Admin {\n    return new Admin(this);\n  }\n\n  /**\n   * Returns a reference to a MongoDB Collection. If it does not exist it will be created implicitly.\n   *\n   * Collection namespace validation is performed server-side.\n   *\n   * @param name - the collection name we wish to access.\n   * @returns return the new Collection instance\n   */\n  collection<TSchema extends Document = Document>(\n    name: string,\n    options: CollectionOptions = {}\n  ): Collection<TSchema> {\n    if (typeof options === 'function') {\n      throw new MongoInvalidArgumentError('The callback form of this helper has been removed.');\n    }\n    return new Collection<TSchema>(this, name, resolveOptions(this, options));\n  }\n\n  /**\n   * Get all the db statistics.\n   *\n   * @param options - Optional settings for the command\n   */\n  async stats(options?: DbStatsOptions): Promise<Document> {\n    return await executeOperation(\n      this.client,\n      new DbStatsOperation(this, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * List all collections of this database with optional filter\n   *\n   * @param filter - Query to filter collections by\n   * @param options - Optional settings for the command\n   */\n  listCollections(\n    filter: Document,\n    options: Exclude<ListCollectionsOptions, 'nameOnly'> & { nameOnly: true } & Abortable\n  ): ListCollectionsCursor<Pick<CollectionInfo, 'name' | 'type'>>;\n  listCollections(\n    filter: Document,\n    options: Exclude<ListCollectionsOptions, 'nameOnly'> & { nameOnly: false } & Abortable\n  ): ListCollectionsCursor<CollectionInfo>;\n  listCollections<\n    T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo =\n      | Pick<CollectionInfo, 'name' | 'type'>\n      | CollectionInfo\n  >(filter?: Document, options?: ListCollectionsOptions & Abortable): ListCollectionsCursor<T>;\n  listCollections<\n    T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo =\n      | Pick<CollectionInfo, 'name' | 'type'>\n      | CollectionInfo\n  >(\n    filter: Document = {},\n    options: ListCollectionsOptions & Abortable = {}\n  ): ListCollectionsCursor<T> {\n    return new ListCollectionsCursor<T>(this, filter, resolveOptions(this, options));\n  }\n\n  /**\n   * Rename a collection.\n   *\n   * @remarks\n   * This operation does not inherit options from the MongoClient.\n   *\n   * @param fromCollection - Name of current collection to rename\n   * @param toCollection - New name of of the collection\n   * @param options - Optional settings for the command\n   */\n  async renameCollection<TSchema extends Document = Document>(\n    fromCollection: string,\n    toCollection: string,\n    options?: RenameOptions\n  ): Promise<Collection<TSchema>> {\n    // Intentionally, we do not inherit options from parent for this operation.\n    return await executeOperation(\n      this.client,\n      new RenameOperation(\n        this.collection<TSchema>(fromCollection) as TODO_NODE_3286,\n        toCollection,\n        resolveOptions(undefined, {\n          ...options,\n          new_collection: true,\n          readPreference: ReadPreference.primary\n        })\n      ) as TODO_NODE_3286\n    );\n  }\n\n  /**\n   * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n   *\n   * @param name - Name of collection to drop\n   * @param options - Optional settings for the command\n   */\n  async dropCollection(name: string, options?: DropCollectionOptions): Promise<boolean> {\n    return await executeOperation(\n      this.client,\n      new DropCollectionOperation(this, name, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Drop a database, removing it permanently from the server.\n   *\n   * @param options - Optional settings for the command\n   */\n  async dropDatabase(options?: DropDatabaseOptions): Promise<boolean> {\n    return await executeOperation(\n      this.client,\n      new DropDatabaseOperation(this, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Fetch all collections for the current db.\n   *\n   * @param options - Optional settings for the command\n   */\n  async collections(options?: ListCollectionsOptions): Promise<Collection[]> {\n    return await executeOperation(\n      this.client,\n      new CollectionsOperation(this, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Creates an index on the db and collection.\n   *\n   * @param name - Name of the collection to create the index on.\n   * @param indexSpec - Specify the field to index, or an index specification\n   * @param options - Optional settings for the command\n   */\n  async createIndex(\n    name: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ): Promise<string> {\n    const indexes = await executeOperation(\n      this.client,\n      CreateIndexesOperation.fromIndexSpecification(this, name, indexSpec, options)\n    );\n    return indexes[0];\n  }\n\n  /**\n   * Remove a user from a database\n   *\n   * @param username - The username to remove\n   * @param options - Optional settings for the command\n   */\n  async removeUser(username: string, options?: RemoveUserOptions): Promise<boolean> {\n    return await executeOperation(\n      this.client,\n      new RemoveUserOperation(this, username, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Set the current profiling level of MongoDB\n   *\n   * @param level - The new profiling level (off, slow_only, all).\n   * @param options - Optional settings for the command\n   */\n  async setProfilingLevel(\n    level: ProfilingLevel,\n    options?: SetProfilingLevelOptions\n  ): Promise<ProfilingLevel> {\n    return await executeOperation(\n      this.client,\n      new SetProfilingLevelOperation(this, level, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Retrieve the current profiling Level for MongoDB\n   *\n   * @param options - Optional settings for the command\n   */\n  async profilingLevel(options?: ProfilingLevelOptions): Promise<string> {\n    return await executeOperation(\n      this.client,\n      new ProfilingLevelOperation(this, resolveOptions(this, options))\n    );\n  }\n\n  /**\n   * Retrieves this collections index info.\n   *\n   * @param name - The name of the collection.\n   * @param options - Optional settings for the command\n   */\n  indexInformation(\n    name: string,\n    options: IndexInformationOptions & { full: true }\n  ): Promise<IndexDescriptionInfo[]>;\n  indexInformation(\n    name: string,\n    options: IndexInformationOptions & { full?: false }\n  ): Promise<IndexDescriptionCompact>;\n  indexInformation(\n    name: string,\n    options: IndexInformationOptions\n  ): Promise<IndexDescriptionCompact | IndexDescriptionInfo[]>;\n  indexInformation(name: string): Promise<IndexDescriptionCompact>;\n  async indexInformation(\n    name: string,\n    options?: IndexInformationOptions\n  ): Promise<IndexDescriptionCompact | IndexDescriptionInfo[]> {\n    return await this.collection(name).indexInformation(resolveOptions(this, options));\n  }\n\n  /**\n   * Create a new Change Stream, watching for new changes (insertions, updates,\n   * replacements, deletions, and invalidations) in this database. Will ignore all\n   * changes to system collections.\n   *\n   * @remarks\n   * watch() accepts two generic arguments for distinct use cases:\n   * - The first is to provide the schema that may be defined for all the collections within this database\n   * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n   *\n   * @remarks\n   * When `timeoutMS` is configured for a change stream, it will have different behaviour depending\n   * on whether the change stream is in iterator mode or emitter mode. In both cases, a change\n   * stream will time out if it does not receive a change event within `timeoutMS` of the last change\n   * event.\n   *\n   * Note that if a change stream is consistently timing out when watching a collection, database or\n   * client that is being changed, then this may be due to the server timing out before it can finish\n   * processing the existing oplog. To address this, restart the change stream with a higher\n   * `timeoutMS`.\n   *\n   * If the change stream times out the initial aggregate operation to establish the change stream on\n   * the server, then the client will close the change stream. If the getMore calls to the server\n   * time out, then the change stream will be left open, but will throw a MongoOperationTimeoutError\n   * when in iterator mode and emit an error event that returns a MongoOperationTimeoutError in\n   * emitter mode.\n   *\n   * To determine whether or not the change stream is still open following a timeout, check the\n   * {@link ChangeStream.closed} getter.\n   *\n   * @example\n   * In iterator mode, if a next() call throws a timeout error, it will attempt to resume the change stream.\n   * The next call can just be retried after this succeeds.\n   * ```ts\n   * const changeStream = collection.watch([], { timeoutMS: 100 });\n   * try {\n   *     await changeStream.next();\n   * } catch (e) {\n   *     if (e instanceof MongoOperationTimeoutError && !changeStream.closed) {\n   *       await changeStream.next();\n   *     }\n   *     throw e;\n   * }\n   * ```\n   *\n   * @example\n   * In emitter mode, if the change stream goes `timeoutMS` without emitting a change event, it will\n   * emit an error event that returns a MongoOperationTimeoutError, but will not close the change\n   * stream unless the resume attempt fails. There is no need to re-establish change listeners as\n   * this will automatically continue emitting change events once the resume attempt completes.\n   *\n   * ```ts\n   * const changeStream = collection.watch([], { timeoutMS: 100 });\n   * changeStream.on('change', console.log);\n   * changeStream.on('error', e => {\n   *     if (e instanceof MongoOperationTimeoutError && !changeStream.closed) {\n   *         // do nothing\n   *     } else {\n   *         changeStream.close();\n   *     }\n   * });\n   * ```\n   * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n   * @param options - Optional settings for the command\n   * @typeParam TSchema - Type of the data being detected by the change stream\n   * @typeParam TChange - Type of the whole change stream document emitted\n   */\n  watch<\n    TSchema extends Document = Document,\n    TChange extends Document = ChangeStreamDocument<TSchema>\n  >(pipeline: Document[] = [], options: ChangeStreamOptions = {}): ChangeStream<TSchema, TChange> {\n    // Allow optionally not specifying a pipeline\n    if (!Array.isArray(pipeline)) {\n      options = pipeline;\n      pipeline = [];\n    }\n\n    return new ChangeStream<TSchema, TChange>(this, pipeline, resolveOptions(this, options));\n  }\n\n  /**\n   * A low level cursor API providing basic driver functionality:\n   * - ClientSession management\n   * - ReadPreference for server selection\n   * - Running getMores automatically when a local batch is exhausted\n   *\n   * @param command - The command that will start a cursor on the server.\n   * @param options - Configurations for running the command, bson options will apply to getMores\n   */\n  runCursorCommand(command: Document, options?: RunCursorCommandOptions): RunCommandCursor {\n    return new RunCommandCursor(this, command, options);\n  }\n}\n", "import type { Readable } from 'stream';\n\nimport type { Binary, Document, Timestamp } from './bson';\nimport { Collection } from './collection';\nimport { CHANGE, CLOSE, END, ERROR, INIT, MORE, RESPONSE, RESUME_TOKEN_CHANGED } from './constants';\nimport { type CursorStreamOptions, CursorTimeoutContext } from './cursor/abstract_cursor';\nimport { ChangeStreamCursor, type ChangeStreamCursorOptions } from './cursor/change_stream_cursor';\nimport { Db } from './db';\nimport {\n  type AnyError,\n  isResumableError,\n  MongoAPIError,\n  MongoChangeStreamError,\n  MongoOperationTimeoutError,\n  MongoRuntimeError\n} from './error';\nimport { MongoClient } from './mongo_client';\nimport { type InferIdType, TypedEventEmitter } from './mongo_types';\nimport type { AggregateOptions } from './operations/aggregate';\nimport type { CollationOptions, OperationParent } from './operations/command';\nimport type { ReadPreference } from './read_preference';\nimport { type AsyncDisposable, configureResourceManagement } from './resource_management';\nimport type { ServerSessionId } from './sessions';\nimport { CSOTTimeoutContext, type TimeoutContext } from './timeout';\nimport { filterOptions, getTopology, type MongoDBNamespace, squashError } from './utils';\n\nconst CHANGE_STREAM_OPTIONS = [\n  'resumeAfter',\n  'startAfter',\n  'startAtOperationTime',\n  'fullDocument',\n  'fullDocumentBeforeChange',\n  'showExpandedEvents'\n] as const;\n\nconst CHANGE_DOMAIN_TYPES = {\n  COLLECTION: Symbol('Collection'),\n  DATABASE: Symbol('Database'),\n  CLUSTER: Symbol('Cluster')\n};\n\nconst CHANGE_STREAM_EVENTS = [RESUME_TOKEN_CHANGED, END, CLOSE] as const;\n\nconst NO_RESUME_TOKEN_ERROR =\n  'A change stream document has been received that lacks a resume token (_id).';\nconst CHANGESTREAM_CLOSED_ERROR = 'ChangeStream is closed';\n\n/**\n * @public\n * @deprecated Please use the ChangeStreamCursorOptions type instead.\n */\nexport interface ResumeOptions {\n  startAtOperationTime?: Timestamp;\n  batchSize?: number;\n  maxAwaitTimeMS?: number;\n  collation?: CollationOptions;\n  readPreference?: ReadPreference;\n  resumeAfter?: ResumeToken;\n  startAfter?: ResumeToken;\n  fullDocument?: string;\n}\n\n/**\n * Represents the logical starting point for a new ChangeStream or resuming a ChangeStream on the server.\n * @see https://www.mongodb.com/docs/manual/changeStreams/#std-label-change-stream-resume\n * @public\n */\nexport type ResumeToken = unknown;\n\n/**\n * Represents a specific point in time on a server. Can be retrieved by using `db.command()`\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/method/db.runCommand/#response\n */\nexport type OperationTime = Timestamp;\n\n/**\n * Options that can be passed to a ChangeStream. Note that startAfter, resumeAfter, and startAtOperationTime are all mutually exclusive, and the server will error if more than one is specified.\n * @public\n */\nexport interface ChangeStreamOptions extends Omit<AggregateOptions, 'writeConcern'> {\n  /**\n   * Allowed values: 'updateLookup', 'whenAvailable', 'required'.\n   *\n   * When set to 'updateLookup', the change notification for partial updates\n   * will include both a delta describing the changes to the document as well\n   * as a copy of the entire document that was changed from some time after\n   * the change occurred.\n   *\n   * When set to 'whenAvailable', configures the change stream to return the\n   * post-image of the modified document for replace and update change events\n   * if the post-image for this event is available.\n   *\n   * When set to 'required', the same behavior as 'whenAvailable' except that\n   * an error is raised if the post-image is not available.\n   */\n  fullDocument?: string;\n\n  /**\n   * Allowed values: 'whenAvailable', 'required', 'off'.\n   *\n   * The default is to not send a value, which is equivalent to 'off'.\n   *\n   * When set to 'whenAvailable', configures the change stream to return the\n   * pre-image of the modified document for replace, update, and delete change\n   * events if it is available.\n   *\n   * When set to 'required', the same behavior as 'whenAvailable' except that\n   * an error is raised if the pre-image is not available.\n   */\n  fullDocumentBeforeChange?: string;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a change stream query. */\n  maxAwaitTimeMS?: number;\n  /**\n   * Allows you to start a changeStream after a specified event.\n   * @see https://www.mongodb.com/docs/manual/changeStreams/#resumeafter-for-change-streams\n   */\n  resumeAfter?: ResumeToken;\n  /**\n   * Similar to resumeAfter, but will allow you to start after an invalidated event.\n   * @see https://www.mongodb.com/docs/manual/changeStreams/#startafter-for-change-streams\n   */\n  startAfter?: ResumeToken;\n  /** Will start the changeStream after the specified operationTime. */\n  startAtOperationTime?: OperationTime;\n  /**\n   * The number of documents to return per batch.\n   * @see https://www.mongodb.com/docs/manual/reference/command/aggregate\n   */\n  batchSize?: number;\n\n  /**\n   * When enabled, configures the change stream to include extra change events.\n   *\n   * - createIndexes\n   * - dropIndexes\n   * - modify\n   * - create\n   * - shardCollection\n   * - reshardCollection\n   * - refineCollectionShardKey\n   */\n  showExpandedEvents?: boolean;\n}\n\n/** @public */\nexport interface ChangeStreamNameSpace {\n  db: string;\n  coll: string;\n}\n\n/** @public */\nexport interface ChangeStreamDocumentKey<TSchema extends Document = Document> {\n  /**\n   * For unsharded collections this contains a single field `_id`.\n   * For sharded collections, this will contain all the components of the shard key\n   */\n  documentKey: { _id: InferIdType<TSchema>; [shardKey: string]: any };\n}\n\n/** @public */\nexport interface ChangeStreamSplitEvent {\n  /** Which fragment of the change this is. */\n  fragment: number;\n  /** The total number of fragments. */\n  of: number;\n}\n\n/** @public */\nexport interface ChangeStreamDocumentCommon {\n  /**\n   * The id functions as an opaque token for use when resuming an interrupted\n   * change stream.\n   */\n  _id: ResumeToken;\n  /**\n   * The timestamp from the oplog entry associated with the event.\n   * For events that happened as part of a multi-document transaction, the associated change stream\n   * notifications will have the same clusterTime value, namely the time when the transaction was committed.\n   * On a sharded cluster, events that occur on different shards can have the same clusterTime but be\n   * associated with different transactions or even not be associated with any transaction.\n   * To identify events for a single transaction, you can use the combination of lsid and txnNumber in the change stream event document.\n   */\n  clusterTime?: Timestamp;\n\n  /**\n   * The transaction number.\n   * Only present if the operation is part of a multi-document transaction.\n   *\n   * **NOTE:** txnNumber can be a Long if promoteLongs is set to false\n   */\n  txnNumber?: number;\n\n  /**\n   * The identifier for the session associated with the transaction.\n   * Only present if the operation is part of a multi-document transaction.\n   */\n  lsid?: ServerSessionId;\n\n  /**\n   * When the change stream's backing aggregation pipeline contains the $changeStreamSplitLargeEvent\n   * stage, events larger than 16MB will be split into multiple events and contain the\n   * following information about which fragment the current event is.\n   */\n  splitEvent?: ChangeStreamSplitEvent;\n}\n\n/** @public */\nexport interface ChangeStreamDocumentCollectionUUID {\n  /**\n   * The UUID (Binary subtype 4) of the collection that the operation was performed on.\n   *\n   * Only present when the `showExpandedEvents` flag is enabled.\n   *\n   * **NOTE:** collectionUUID will be converted to a NodeJS Buffer if the promoteBuffers\n   *    flag is enabled.\n   *\n   * @sinceServerVersion 6.1.0\n   */\n  collectionUUID: Binary;\n}\n\n/** @public */\nexport interface ChangeStreamDocumentOperationDescription {\n  /**\n   * An description of the operation.\n   *\n   * Only present when the `showExpandedEvents` flag is enabled.\n   *\n   * @sinceServerVersion 6.1.0\n   */\n  operationDescription?: Document;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#insert-event\n */\nexport interface ChangeStreamInsertDocument<TSchema extends Document = Document>\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentKey<TSchema>,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'insert';\n  /** This key will contain the document being inserted */\n  fullDocument: TSchema;\n  /** Namespace the insert event occurred on */\n  ns: ChangeStreamNameSpace;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#update-event\n */\nexport interface ChangeStreamUpdateDocument<TSchema extends Document = Document>\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentKey<TSchema>,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'update';\n  /**\n   * This is only set if `fullDocument` is set to `'updateLookup'`\n   * Contains the point-in-time post-image of the modified document if the\n   * post-image is available and either 'required' or 'whenAvailable' was\n   * specified for the 'fullDocument' option when creating the change stream.\n   */\n  fullDocument?: TSchema;\n  /** Contains a description of updated and removed fields in this operation */\n  updateDescription: UpdateDescription<TSchema>;\n  /** Namespace the update event occurred on */\n  ns: ChangeStreamNameSpace;\n  /**\n   * Contains the pre-image of the modified or deleted document if the\n   * pre-image is available for the change event and either 'required' or\n   * 'whenAvailable' was specified for the 'fullDocumentBeforeChange' option\n   * when creating the change stream. If 'whenAvailable' was specified but the\n   * pre-image is unavailable, this will be explicitly set to null.\n   */\n  fullDocumentBeforeChange?: TSchema;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#replace-event\n */\nexport interface ChangeStreamReplaceDocument<TSchema extends Document = Document>\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentKey<TSchema> {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'replace';\n  /** The fullDocument of a replace event represents the document after the insert of the replacement document */\n  fullDocument: TSchema;\n  /** Namespace the replace event occurred on */\n  ns: ChangeStreamNameSpace;\n  /**\n   * Contains the pre-image of the modified or deleted document if the\n   * pre-image is available for the change event and either 'required' or\n   * 'whenAvailable' was specified for the 'fullDocumentBeforeChange' option\n   * when creating the change stream. If 'whenAvailable' was specified but the\n   * pre-image is unavailable, this will be explicitly set to null.\n   */\n  fullDocumentBeforeChange?: TSchema;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#delete-event\n */\nexport interface ChangeStreamDeleteDocument<TSchema extends Document = Document>\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentKey<TSchema>,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'delete';\n  /** Namespace the delete event occurred on */\n  ns: ChangeStreamNameSpace;\n  /**\n   * Contains the pre-image of the modified or deleted document if the\n   * pre-image is available for the change event and either 'required' or\n   * 'whenAvailable' was specified for the 'fullDocumentBeforeChange' option\n   * when creating the change stream. If 'whenAvailable' was specified but the\n   * pre-image is unavailable, this will be explicitly set to null.\n   */\n  fullDocumentBeforeChange?: TSchema;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#drop-event\n */\nexport interface ChangeStreamDropDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'drop';\n  /** Namespace the drop event occurred on */\n  ns: ChangeStreamNameSpace;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#rename-event\n */\nexport interface ChangeStreamRenameDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'rename';\n  /** The new name for the `ns.coll` collection */\n  to: { db: string; coll: string };\n  /** The \"from\" namespace that the rename occurred on */\n  ns: ChangeStreamNameSpace;\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#dropdatabase-event\n */\nexport interface ChangeStreamDropDatabaseDocument extends ChangeStreamDocumentCommon {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'dropDatabase';\n  /** The database dropped */\n  ns: { db: string };\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/#invalidate-event\n */\nexport interface ChangeStreamInvalidateDocument extends ChangeStreamDocumentCommon {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'invalidate';\n}\n\n/**\n * Only present when the `showExpandedEvents` flag is enabled.\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/createIndexes/#mongodb-data-createIndexes\n */\nexport interface ChangeStreamCreateIndexDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'createIndexes';\n}\n\n/**\n * Only present when the `showExpandedEvents` flag is enabled.\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/dropIndexes/#mongodb-data-dropIndexes\n */\nexport interface ChangeStreamDropIndexDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'dropIndexes';\n}\n\n/**\n * Only present when the `showExpandedEvents` flag is enabled.\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/modify/#mongodb-data-modify\n */\nexport interface ChangeStreamCollModDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'modify';\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/create/#mongodb-data-create\n */\nexport interface ChangeStreamCreateDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'create';\n\n  /**\n   * The type of the newly created object.\n   *\n   * @sinceServerVersion 8.1.0\n   */\n  nsType?: 'collection' | 'timeseries' | 'view';\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/shardCollection/#mongodb-data-shardCollection\n */\nexport interface ChangeStreamShardCollectionDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'shardCollection';\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/reshardCollection/#mongodb-data-reshardCollection\n */\nexport interface ChangeStreamReshardCollectionDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'reshardCollection';\n}\n\n/**\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/change-events/refineCollectionShardKey/#mongodb-data-refineCollectionShardKey\n */\nexport interface ChangeStreamRefineCollectionShardKeyDocument\n  extends ChangeStreamDocumentCommon,\n    ChangeStreamDocumentCollectionUUID,\n    ChangeStreamDocumentOperationDescription {\n  /** Describes the type of operation represented in this change notification */\n  operationType: 'refineCollectionShardKey';\n}\n\n/** @public */\nexport type ChangeStreamDocument<TSchema extends Document = Document> =\n  | ChangeStreamInsertDocument<TSchema>\n  | ChangeStreamUpdateDocument<TSchema>\n  | ChangeStreamReplaceDocument<TSchema>\n  | ChangeStreamDeleteDocument<TSchema>\n  | ChangeStreamDropDocument\n  | ChangeStreamRenameDocument\n  | ChangeStreamDropDatabaseDocument\n  | ChangeStreamInvalidateDocument\n  | ChangeStreamCreateIndexDocument\n  | ChangeStreamCreateDocument\n  | ChangeStreamCollModDocument\n  | ChangeStreamDropIndexDocument\n  | ChangeStreamShardCollectionDocument\n  | ChangeStreamReshardCollectionDocument\n  | ChangeStreamRefineCollectionShardKeyDocument;\n\n/** @public */\nexport interface UpdateDescription<TSchema extends Document = Document> {\n  /**\n   * A document containing key:value pairs of names of the fields that were\n   * changed, and the new value for those fields.\n   */\n  updatedFields?: Partial<TSchema>;\n\n  /**\n   * An array of field names that were removed from the document.\n   */\n  removedFields?: string[];\n\n  /**\n   * An array of documents which record array truncations performed with pipeline-based updates using one or more of the following stages:\n   * - $addFields\n   * - $set\n   * - $replaceRoot\n   * - $replaceWith\n   */\n  truncatedArrays?: Array<{\n    /** The name of the truncated field. */\n    field: string;\n    /** The number of elements in the truncated array. */\n    newSize: number;\n  }>;\n\n  /**\n   * A document containing additional information about any ambiguous update paths from the update event.  The document\n   * maps the full ambiguous update path to an array containing the actual resolved components of the path.  For example,\n   * given a document shaped like `{ a: { '0': 0 } }`, and an update of `{ $inc: 'a.0' }`, disambiguated paths would look like\n   * the following:\n   *\n   * ```\n   *   {\n   *     'a.0': ['a', '0']\n   *   }\n   * ```\n   *\n   * This field is only present when there are ambiguous paths that are updated as a part of the update event and `showExpandedEvents`\n   * is enabled for the change stream.\n   * @sinceServerVersion 6.1.0\n   */\n  disambiguatedPaths?: Document;\n}\n\n/** @public */\nexport type ChangeStreamEvents<\n  TSchema extends Document = Document,\n  TChange extends Document = ChangeStreamDocument<TSchema>\n> = {\n  resumeTokenChanged(token: ResumeToken): void;\n  init(response: any): void;\n  more(response?: any): void;\n  response(): void;\n  end(): void;\n  error(error: Error): void;\n  change(change: TChange): void;\n  /**\n   * @remarks Note that the `close` event is currently emitted whenever the internal `ChangeStreamCursor`\n   * instance is closed, which can occur multiple times for a given `ChangeStream` instance.\n   *\n   * TODO(NODE-6434): address this issue in NODE-6434\n   */\n  close(): void;\n};\n\n/**\n * Creates a new Change Stream instance. Normally created using {@link Collection#watch|Collection.watch()}.\n * @public\n */\nexport class ChangeStream<\n    TSchema extends Document = Document,\n    TChange extends Document = ChangeStreamDocument<TSchema>\n  >\n  extends TypedEventEmitter<ChangeStreamEvents<TSchema, TChange>>\n  implements AsyncDisposable\n{\n  /**\n   * @beta\n   * @experimental\n   * An alias for {@link ChangeStream.close|ChangeStream.close()}.\n   */\n  declare [Symbol.asyncDispose]: () => Promise<void>;\n  /** @internal */\n  async asyncDispose() {\n    await this.close();\n  }\n\n  pipeline: Document[];\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  options: ChangeStreamOptions & { writeConcern?: never };\n  parent: MongoClient | Db | Collection;\n  namespace: MongoDBNamespace;\n  type: symbol;\n  /** @internal */\n  private cursor: ChangeStreamCursor<TSchema, TChange>;\n  streamOptions?: CursorStreamOptions;\n  /** @internal */\n  private cursorStream?: Readable & AsyncIterable<TChange>;\n  /** @internal */\n  private isClosed: boolean;\n  /** @internal */\n  private mode: false | 'iterator' | 'emitter';\n\n  /** @event */\n  static readonly RESPONSE = RESPONSE;\n  /** @event */\n  static readonly MORE = MORE;\n  /** @event */\n  static readonly INIT = INIT;\n  /** @event */\n  static readonly CLOSE = CLOSE;\n  /**\n   * Fired for each new matching change in the specified namespace. Attaching a `change`\n   * event listener to a Change Stream will switch the stream into flowing mode. Data will\n   * then be passed as soon as it is available.\n   * @event\n   */\n  static readonly CHANGE = CHANGE;\n  /** @event */\n  static readonly END = END;\n  /** @event */\n  static readonly ERROR = ERROR;\n  /**\n   * Emitted each time the change stream stores a new resume token.\n   * @event\n   */\n  static readonly RESUME_TOKEN_CHANGED = RESUME_TOKEN_CHANGED;\n\n  private timeoutContext?: TimeoutContext;\n  /**\n   * Note that this property is here to uniquely identify a ChangeStream instance as the owner of\n   * the {@link CursorTimeoutContext} instance (see {@link ChangeStream._createChangeStreamCursor}) to ensure\n   * that {@link AbstractCursor.close} does not mutate the timeoutContext.\n   */\n  private contextOwner: symbol;\n  /**\n   * @internal\n   *\n   * @param parent - The parent object that created this change stream\n   * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents\n   */\n  constructor(\n    parent: OperationParent,\n    pipeline: Document[] = [],\n    options: ChangeStreamOptions = {}\n  ) {\n    super();\n\n    this.pipeline = pipeline;\n    this.options = { ...options };\n    let serverSelectionTimeoutMS: number;\n    delete this.options.writeConcern;\n\n    if (parent instanceof Collection) {\n      this.type = CHANGE_DOMAIN_TYPES.COLLECTION;\n      serverSelectionTimeoutMS = parent.s.db.client.options.serverSelectionTimeoutMS;\n    } else if (parent instanceof Db) {\n      this.type = CHANGE_DOMAIN_TYPES.DATABASE;\n      serverSelectionTimeoutMS = parent.client.options.serverSelectionTimeoutMS;\n    } else if (parent instanceof MongoClient) {\n      this.type = CHANGE_DOMAIN_TYPES.CLUSTER;\n      serverSelectionTimeoutMS = parent.options.serverSelectionTimeoutMS;\n    } else {\n      throw new MongoChangeStreamError(\n        'Parent provided to ChangeStream constructor must be an instance of Collection, Db, or MongoClient'\n      );\n    }\n\n    this.contextOwner = Symbol();\n    this.parent = parent;\n    this.namespace = parent.s.namespace;\n    if (!this.options.readPreference && parent.readPreference) {\n      this.options.readPreference = parent.readPreference;\n    }\n\n    // Create contained Change Stream cursor\n    this.cursor = this._createChangeStreamCursor(options);\n\n    this.isClosed = false;\n    this.mode = false;\n\n    // Listen for any `change` listeners being added to ChangeStream\n    this.on('newListener', eventName => {\n      if (eventName === 'change' && this.cursor && this.listenerCount('change') === 0) {\n        this._streamEvents(this.cursor);\n      }\n    });\n\n    this.on('removeListener', eventName => {\n      if (eventName === 'change' && this.listenerCount('change') === 0 && this.cursor) {\n        this.cursorStream?.removeAllListeners('data');\n      }\n    });\n\n    if (this.options.timeoutMS != null) {\n      this.timeoutContext = new CSOTTimeoutContext({\n        timeoutMS: this.options.timeoutMS,\n        serverSelectionTimeoutMS\n      });\n    }\n  }\n\n  /** The cached resume token that is used to resume after the most recently returned change. */\n  get resumeToken(): ResumeToken {\n    return this.cursor?.resumeToken;\n  }\n\n  /** Check if there is any document still available in the Change Stream */\n  async hasNext(): Promise<boolean> {\n    this._setIsIterator();\n    // Change streams must resume indefinitely while each resume event succeeds.\n    // This loop continues until either a change event is received or until a resume attempt\n    // fails.\n\n    this.timeoutContext?.refresh();\n    try {\n      while (true) {\n        try {\n          const hasNext = await this.cursor.hasNext();\n          return hasNext;\n        } catch (error) {\n          try {\n            await this._processErrorIteratorMode(error, this.cursor.id != null);\n          } catch (error) {\n            if (error instanceof MongoOperationTimeoutError && this.cursor.id == null) {\n              throw error;\n            }\n            try {\n              await this.close();\n            } catch (error) {\n              squashError(error);\n            }\n            throw error;\n          }\n        }\n      }\n    } finally {\n      this.timeoutContext?.clear();\n    }\n  }\n\n  /** Get the next available document from the Change Stream. */\n  async next(): Promise<TChange> {\n    this._setIsIterator();\n    // Change streams must resume indefinitely while each resume event succeeds.\n    // This loop continues until either a change event is received or until a resume attempt\n    // fails.\n    this.timeoutContext?.refresh();\n\n    try {\n      while (true) {\n        try {\n          const change = await this.cursor.next();\n          const processedChange = this._processChange(change ?? null);\n          return processedChange;\n        } catch (error) {\n          try {\n            await this._processErrorIteratorMode(error, this.cursor.id != null);\n          } catch (error) {\n            if (error instanceof MongoOperationTimeoutError && this.cursor.id == null) {\n              throw error;\n            }\n            try {\n              await this.close();\n            } catch (error) {\n              squashError(error);\n            }\n            throw error;\n          }\n        }\n      }\n    } finally {\n      this.timeoutContext?.clear();\n    }\n  }\n\n  /**\n   * Try to get the next available document from the Change Stream's cursor or `null` if an empty batch is returned\n   */\n  async tryNext(): Promise<TChange | null> {\n    this._setIsIterator();\n    // Change streams must resume indefinitely while each resume event succeeds.\n    // This loop continues until either a change event is received or until a resume attempt\n    // fails.\n    this.timeoutContext?.refresh();\n\n    try {\n      while (true) {\n        try {\n          const change = await this.cursor.tryNext();\n          return change ?? null;\n        } catch (error) {\n          try {\n            await this._processErrorIteratorMode(error, this.cursor.id != null);\n          } catch (error) {\n            if (error instanceof MongoOperationTimeoutError && this.cursor.id == null) throw error;\n            try {\n              await this.close();\n            } catch (error) {\n              squashError(error);\n            }\n            throw error;\n          }\n        }\n      }\n    } finally {\n      this.timeoutContext?.clear();\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<TChange, void, void> {\n    if (this.closed) {\n      return;\n    }\n\n    try {\n      // Change streams run indefinitely as long as errors are resumable\n      // So the only loop breaking condition is if `next()` throws\n      while (true) {\n        yield await this.next();\n      }\n    } finally {\n      try {\n        await this.close();\n      } catch (error) {\n        squashError(error);\n      }\n    }\n  }\n\n  /** Is the cursor closed */\n  public get closed(): boolean {\n    return this.isClosed || this.cursor.closed;\n  }\n\n  /**\n   * Frees the internal resources used by the change stream.\n   */\n  async close(): Promise<void> {\n    this.timeoutContext?.clear();\n    this.timeoutContext = undefined;\n    this.isClosed = true;\n\n    const cursor = this.cursor;\n    try {\n      await cursor.close();\n    } finally {\n      this._endStream();\n    }\n  }\n\n  /**\n   * Return a modified Readable stream including a possible transform method.\n   *\n   * NOTE: When using a Stream to process change stream events, the stream will\n   * NOT automatically resume in the case a resumable error is encountered.\n   *\n   * @throws MongoChangeStreamError if the underlying cursor or the change stream is closed\n   */\n  stream(options?: CursorStreamOptions): Readable & AsyncIterable<TChange> {\n    if (this.closed) {\n      throw new MongoChangeStreamError(CHANGESTREAM_CLOSED_ERROR);\n    }\n\n    this.streamOptions = options;\n    return this.cursor.stream(options);\n  }\n\n  /** @internal */\n  private _setIsEmitter(): void {\n    if (this.mode === 'iterator') {\n      // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n      throw new MongoAPIError(\n        'ChangeStream cannot be used as an EventEmitter after being used as an iterator'\n      );\n    }\n    this.mode = 'emitter';\n  }\n\n  /** @internal */\n  private _setIsIterator(): void {\n    if (this.mode === 'emitter') {\n      // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n      throw new MongoAPIError(\n        'ChangeStream cannot be used as an iterator after being used as an EventEmitter'\n      );\n    }\n    this.mode = 'iterator';\n  }\n\n  /**\n   * Create a new change stream cursor based on self's configuration\n   * @internal\n   */\n  private _createChangeStreamCursor(\n    options: ChangeStreamOptions | ChangeStreamCursorOptions\n  ): ChangeStreamCursor<TSchema, TChange> {\n    const changeStreamStageOptions = filterOptions(options, CHANGE_STREAM_OPTIONS);\n    if (this.type === CHANGE_DOMAIN_TYPES.CLUSTER) {\n      changeStreamStageOptions.allChangesForCluster = true;\n    }\n    const pipeline = [{ $changeStream: changeStreamStageOptions }, ...this.pipeline];\n\n    const client: MongoClient | null =\n      this.type === CHANGE_DOMAIN_TYPES.CLUSTER\n        ? (this.parent as MongoClient)\n        : this.type === CHANGE_DOMAIN_TYPES.DATABASE\n          ? (this.parent as Db).client\n          : this.type === CHANGE_DOMAIN_TYPES.COLLECTION\n            ? (this.parent as Collection).client\n            : null;\n\n    if (client == null) {\n      // This should never happen because of the assertion in the constructor\n      throw new MongoRuntimeError(\n        `Changestream type should only be one of cluster, database, collection. Found ${this.type.toString()}`\n      );\n    }\n\n    const changeStreamCursor = new ChangeStreamCursor<TSchema, TChange>(\n      client,\n      this.namespace,\n      pipeline,\n      {\n        ...options,\n        timeoutContext: this.timeoutContext\n          ? new CursorTimeoutContext(this.timeoutContext, this.contextOwner)\n          : undefined\n      }\n    );\n\n    for (const event of CHANGE_STREAM_EVENTS) {\n      changeStreamCursor.on(event, e => this.emit(event, e));\n    }\n\n    if (this.listenerCount(ChangeStream.CHANGE) > 0) {\n      this._streamEvents(changeStreamCursor);\n    }\n\n    return changeStreamCursor;\n  }\n\n  /** @internal */\n  private _closeEmitterModeWithError(error: AnyError): void {\n    this.emit(ChangeStream.ERROR, error);\n\n    this.close().then(undefined, squashError);\n  }\n\n  /** @internal */\n  private _streamEvents(cursor: ChangeStreamCursor<TSchema, TChange>): void {\n    this._setIsEmitter();\n    const stream = this.cursorStream ?? cursor.stream();\n    this.cursorStream = stream;\n    stream.on('data', change => {\n      try {\n        const processedChange = this._processChange(change);\n        this.emit(ChangeStream.CHANGE, processedChange);\n      } catch (error) {\n        this.emit(ChangeStream.ERROR, error);\n      }\n      this.timeoutContext?.refresh();\n    });\n    stream.on('error', error => this._processErrorStreamMode(error, this.cursor.id != null));\n  }\n\n  /** @internal */\n  private _endStream(): void {\n    this.cursorStream?.removeAllListeners('data');\n    this.cursorStream?.removeAllListeners('close');\n    this.cursorStream?.removeAllListeners('end');\n    this.cursorStream?.destroy();\n    this.cursorStream = undefined;\n  }\n\n  /** @internal */\n  private _processChange(change: TChange | null): TChange {\n    if (this.isClosed) {\n      // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n      throw new MongoAPIError(CHANGESTREAM_CLOSED_ERROR);\n    }\n\n    // a null change means the cursor has been notified, implicitly closing the change stream\n    if (change == null) {\n      // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n      throw new MongoRuntimeError(CHANGESTREAM_CLOSED_ERROR);\n    }\n\n    if (change && !change._id) {\n      throw new MongoChangeStreamError(NO_RESUME_TOKEN_ERROR);\n    }\n\n    // cache the resume token\n    this.cursor.cacheResumeToken(change._id);\n\n    // wipe the startAtOperationTime if there was one so that there won't be a conflict\n    // between resumeToken and startAtOperationTime if we need to reconnect the cursor\n    this.options.startAtOperationTime = undefined;\n\n    return change;\n  }\n\n  /** @internal */\n  private _processErrorStreamMode(changeStreamError: AnyError, cursorInitialized: boolean) {\n    // If the change stream has been closed explicitly, do not process error.\n    if (this.isClosed) return;\n\n    if (\n      cursorInitialized &&\n      (isResumableError(changeStreamError, this.cursor.maxWireVersion) ||\n        changeStreamError instanceof MongoOperationTimeoutError)\n    ) {\n      this._endStream();\n\n      this.cursor\n        .close()\n        .then(\n          () => this._resume(changeStreamError),\n          e => {\n            squashError(e);\n            return this._resume(changeStreamError);\n          }\n        )\n        .then(\n          () => {\n            if (changeStreamError instanceof MongoOperationTimeoutError)\n              this.emit(ChangeStream.ERROR, changeStreamError);\n          },\n          () => this._closeEmitterModeWithError(changeStreamError)\n        );\n    } else {\n      this._closeEmitterModeWithError(changeStreamError);\n    }\n  }\n\n  /** @internal */\n  private async _processErrorIteratorMode(changeStreamError: AnyError, cursorInitialized: boolean) {\n    if (this.isClosed) {\n      // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n      throw new MongoAPIError(CHANGESTREAM_CLOSED_ERROR);\n    }\n\n    if (\n      cursorInitialized &&\n      (isResumableError(changeStreamError, this.cursor.maxWireVersion) ||\n        changeStreamError instanceof MongoOperationTimeoutError)\n    ) {\n      try {\n        await this.cursor.close();\n      } catch (error) {\n        squashError(error);\n      }\n\n      await this._resume(changeStreamError);\n\n      if (changeStreamError instanceof MongoOperationTimeoutError) throw changeStreamError;\n    } else {\n      try {\n        await this.close();\n      } catch (error) {\n        squashError(error);\n      }\n\n      throw changeStreamError;\n    }\n  }\n\n  private async _resume(changeStreamError: AnyError) {\n    this.timeoutContext?.refresh();\n    const topology = getTopology(this.parent);\n    try {\n      await topology.selectServer(this.cursor.readPreference, {\n        operationName: 'reconnect topology in change stream',\n        timeoutContext: this.timeoutContext\n      });\n      this.cursor = this._createChangeStreamCursor(this.cursor.resumeOptions);\n    } catch {\n      // if the topology can't reconnect, close the stream\n      await this.close();\n      throw changeStreamError;\n    }\n  }\n}\n\nconfigureResourceManagement(ChangeStream.prototype);\n", "import { type Stream } from './cmap/connect';\nimport { MongoMissingDependencyError } from './error';\nimport type { Callback } from './utils';\n\nfunction makeErrorModule(error: any) {\n  const props = error ? { kModuleError: error } : {};\n  return new Proxy(props, {\n    get: (_: any, key: any) => {\n      if (key === 'kModuleError') {\n        return error;\n      }\n      throw error;\n    },\n    set: () => {\n      throw error;\n    }\n  });\n}\n\nexport type Kerberos = typeof import('kerberos') | { kModuleError: MongoMissingDependencyError };\n\nexport function getKerberos(): Kerberos {\n  let kerberos: Kerberos;\n  try {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    kerberos = require('kerberos');\n  } catch (error) {\n    kerberos = makeErrorModule(\n      new MongoMissingDependencyError(\n        'Optional module `kerberos` not found. Please install it to enable kerberos authentication',\n        { cause: error, dependencyName: 'kerberos' }\n      )\n    );\n  }\n  return kerberos;\n}\n\nexport interface KerberosClient {\n  step(challenge: string): Promise<string>;\n  step(challenge: string, callback: Callback<string>): void;\n  wrap(challenge: string, options: { user: string }): Promise<string>;\n  wrap(challenge: string, options: { user: string }, callback: Callback<string>): void;\n  unwrap(challenge: string): Promise<string>;\n  unwrap(challenge: string, callback: Callback<string>): void;\n}\n\ntype ZStandardLib = {\n  /**\n   * Compress using zstd.\n   * @param buf - Buffer to be compressed.\n   */\n  compress(buf: Buffer, level?: number): Promise<Buffer>;\n\n  /**\n   * Decompress using zstd.\n   */\n  decompress(buf: Buffer): Promise<Buffer>;\n};\n\nexport type ZStandard = ZStandardLib | { kModuleError: MongoMissingDependencyError };\n\nexport function getZstdLibrary(): ZStandardLib | { kModuleError: MongoMissingDependencyError } {\n  let ZStandard: ZStandardLib | { kModuleError: MongoMissingDependencyError };\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    ZStandard = require('@mongodb-js/zstd');\n  } catch (error) {\n    ZStandard = makeErrorModule(\n      new MongoMissingDependencyError(\n        'Optional module `@mongodb-js/zstd` not found. Please install it to enable zstd compression',\n        { cause: error, dependencyName: 'zstd' }\n      )\n    );\n  }\n\n  return ZStandard;\n}\n\n/**\n * @public\n * Copy of the AwsCredentialIdentityProvider interface from [`smithy/types`](https://socket.dev/npm/package/\\@smithy/types/files/1.1.1/dist-types/identity/awsCredentialIdentity.d.ts),\n * the return type of the aws-sdk's `fromNodeProviderChain().provider()`.\n */\nexport interface AWSCredentials {\n  accessKeyId: string;\n  secretAccessKey: string;\n  sessionToken?: string;\n  expiration?: Date;\n}\n\ntype CredentialProvider = {\n  fromNodeProviderChain(\n    this: void,\n    options: { clientConfig: { region: string } }\n  ): () => Promise<AWSCredentials>;\n  fromNodeProviderChain(this: void): () => Promise<AWSCredentials>;\n};\n\nexport function getAwsCredentialProvider():\n  | CredentialProvider\n  | { kModuleError: MongoMissingDependencyError } {\n  try {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const credentialProvider = require('@aws-sdk/credential-providers');\n    return credentialProvider;\n  } catch (error) {\n    return makeErrorModule(\n      new MongoMissingDependencyError(\n        'Optional module `@aws-sdk/credential-providers` not found.' +\n          ' Please install it to enable getting aws credentials via the official sdk.',\n        { cause: error, dependencyName: '@aws-sdk/credential-providers' }\n      )\n    );\n  }\n}\n\n/** @internal */\nexport type GcpMetadata =\n  | typeof import('gcp-metadata')\n  | { kModuleError: MongoMissingDependencyError };\n\nexport function getGcpMetadata(): GcpMetadata {\n  try {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const credentialProvider = require('gcp-metadata');\n    return credentialProvider;\n  } catch (error) {\n    return makeErrorModule(\n      new MongoMissingDependencyError(\n        'Optional module `gcp-metadata` not found.' +\n          ' Please install it to enable getting gcp credentials via the official sdk.',\n        { cause: error, dependencyName: 'gcp-metadata' }\n      )\n    );\n  }\n}\n\n/** @internal */\nexport type SnappyLib = {\n  /**\n   * In order to support both we must check the return value of the function\n   * @param buf - Buffer to be compressed\n   */\n  compress(buf: Buffer): Promise<Buffer>;\n\n  /**\n   * In order to support both we must check the return value of the function\n   * @param buf - Buffer to be compressed\n   */\n  uncompress(buf: Buffer, opt: { asBuffer: true }): Promise<Buffer>;\n};\n\nexport function getSnappy(): SnappyLib | { kModuleError: MongoMissingDependencyError } {\n  try {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const value = require('snappy');\n    return value;\n  } catch (error) {\n    const kModuleError = new MongoMissingDependencyError(\n      'Optional module `snappy` not found. Please install it to enable snappy compression',\n      { cause: error, dependencyName: 'snappy' }\n    );\n    return { kModuleError };\n  }\n}\n\nexport type SocksLib = {\n  SocksClient: {\n    createConnection(options: {\n      command: 'connect';\n      destination: { host: string; port: number };\n      proxy: {\n        /** host and port are ignored because we pass existing_socket */\n        host: 'iLoveJavaScript';\n        port: 0;\n        type: 5;\n        userId?: string;\n        password?: string;\n      };\n      timeout?: number;\n      /** We always create our own socket, and pass it to this API for proxy negotiation */\n      existing_socket: Stream;\n    }): Promise<{ socket: Stream }>;\n  };\n};\n\nexport function getSocks(): SocksLib | { kModuleError: MongoMissingDependencyError } {\n  try {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const value = require('socks');\n    return value;\n  } catch (error) {\n    const kModuleError = new MongoMissingDependencyError(\n      'Optional module `socks` not found. Please install it to connections over a SOCKS5 proxy',\n      { cause: error, dependencyName: 'socks' }\n    );\n    return { kModuleError };\n  }\n}\n\ninterface AWS4 {\n  /**\n   * Created these inline types to better assert future usage of this API\n   * @param options - options for request\n   * @param credentials - AWS credential details, sessionToken should be omitted entirely if its false-y\n   */\n  sign(\n    this: void,\n    options: {\n      path: '/';\n      body: string;\n      host: string;\n      method: 'POST';\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded';\n        'Content-Length': number;\n        'X-MongoDB-Server-Nonce': string;\n        'X-MongoDB-GS2-CB-Flag': 'n';\n      };\n      service: string;\n      region: string;\n    },\n    credentials:\n      | {\n          accessKeyId: string;\n          secretAccessKey: string;\n          sessionToken: string;\n        }\n      | {\n          accessKeyId: string;\n          secretAccessKey: string;\n        }\n      | undefined\n  ): {\n    headers: {\n      Authorization: string;\n      'X-Amz-Date': string;\n    };\n  };\n}\n\nexport const aws4: AWS4 | { kModuleError: MongoMissingDependencyError } = loadAws4();\n\nfunction loadAws4() {\n  let aws4: AWS4 | { kModuleError: MongoMissingDependencyError };\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    aws4 = require('aws4');\n  } catch (error) {\n    aws4 = makeErrorModule(\n      new MongoMissingDependencyError(\n        'Optional module `aws4` not found. Please install it to enable AWS authentication',\n        { cause: error, dependencyName: 'aws4' }\n      )\n    );\n  }\n\n  return aws4;\n}\n\n/** A utility function to get the instance of mongodb-client-encryption, if it exists. */\nexport function getMongoDBClientEncryption():\n  | typeof import('mongodb-client-encryption')\n  | { kModuleError: MongoMissingDependencyError } {\n  let mongodbClientEncryption = null;\n\n  try {\n    // NOTE(NODE-3199): Ensure you always wrap an optional require literally in the try block\n    // Cannot be moved to helper utility function, bundlers search and replace the actual require call\n    // in a way that makes this line throw at bundle time, not runtime, catching here will make bundling succeed\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    mongodbClientEncryption = require('mongodb-client-encryption');\n  } catch (error) {\n    const kModuleError = new MongoMissingDependencyError(\n      'Optional module `mongodb-client-encryption` not found. Please install it to use auto encryption or ClientEncryption.',\n      { cause: error, dependencyName: 'mongodb-client-encryption' }\n    );\n    return { kModuleError };\n  }\n\n  return mongodbClientEncryption;\n}\n", "import type { Document } from '../../bson';\nimport { MongoRuntimeError } from '../../error';\nimport type { HandshakeDocument } from '../connect';\nimport type { Connection, ConnectionOptions } from '../connection';\nimport type { MongoCredentials } from './mongo_credentials';\n\n/**\n * Context used during authentication\n * @internal\n */\nexport class AuthContext {\n  /** The connection to authenticate */\n  connection: Connection;\n  /** The credentials to use for authentication */\n  credentials?: MongoCredentials;\n  /** If the context is for reauthentication. */\n  reauthenticating = false;\n  /** The options passed to the `connect` method */\n  options: ConnectionOptions;\n\n  /** A response from an initial auth attempt, only some mechanisms use this (e.g, SCRAM) */\n  response?: Document;\n  /** A random nonce generated for use in an authentication conversation */\n  nonce?: Buffer;\n\n  constructor(\n    connection: Connection,\n    credentials: MongoCredentials | undefined,\n    options: ConnectionOptions\n  ) {\n    this.connection = connection;\n    this.credentials = credentials;\n    this.options = options;\n  }\n}\n\n/**\n * Provider used during authentication.\n * @internal\n */\nexport abstract class AuthProvider {\n  /**\n   * Prepare the handshake document before the initial handshake.\n   *\n   * @param handshakeDoc - The document used for the initial handshake on a connection\n   * @param authContext - Context for authentication flow\n   */\n  async prepare(\n    handshakeDoc: HandshakeDocument,\n    _authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    return handshakeDoc;\n  }\n\n  /**\n   * Authenticate\n   *\n   * @param context - A shared context for authentication flow\n   */\n  abstract auth(context: AuthContext): Promise<void>;\n\n  /**\n   * Reauthenticate.\n   * @param context - The shared auth context.\n   */\n  async reauth(context: AuthContext): Promise<void> {\n    if (context.reauthenticating) {\n      throw new MongoRuntimeError('Reauthentication already in progress.');\n    }\n    try {\n      context.reauthenticating = true;\n      await this.auth(context);\n    } finally {\n      context.reauthenticating = false;\n    }\n  }\n}\n", "import * as dns from 'dns';\n\nimport { getKerberos, type Kerberos, type KerberosClient } from '../../deps';\nimport { MongoInvalidArgumentError, MongoMissingCredentialsError } from '../../error';\nimport { ns } from '../../utils';\nimport type { Connection } from '../connection';\nimport { type AuthContext, AuthProvider } from './auth_provider';\n\n/** @public */\nexport const GSSAPICanonicalizationValue = Object.freeze({\n  on: true,\n  off: false,\n  none: 'none',\n  forward: 'forward',\n  forwardAndReverse: 'forwardAndReverse'\n} as const);\n\n/** @public */\nexport type GSSAPICanonicalizationValue =\n  (typeof GSSAPICanonicalizationValue)[keyof typeof GSSAPICanonicalizationValue];\n\ntype MechanismProperties = {\n  CANONICALIZE_HOST_NAME?: GSSAPICanonicalizationValue;\n  SERVICE_HOST?: string;\n  SERVICE_NAME?: string;\n  SERVICE_REALM?: string;\n};\n\nasync function externalCommand(\n  connection: Connection,\n  command: ReturnType<typeof saslStart> | ReturnType<typeof saslContinue>\n): Promise<{ payload: string; conversationId: number }> {\n  const response = await connection.command(ns('$external.$cmd'), command);\n  return response as { payload: string; conversationId: number };\n}\n\nlet krb: Kerberos;\n\nexport class GSSAPI extends AuthProvider {\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection, credentials } = authContext;\n    if (credentials == null) {\n      throw new MongoMissingCredentialsError('Credentials required for GSSAPI authentication');\n    }\n\n    const { username } = credentials;\n\n    const client = await makeKerberosClient(authContext);\n\n    const payload = await client.step('');\n\n    const saslStartResponse = await externalCommand(connection, saslStart(payload));\n\n    const negotiatedPayload = await negotiate(client, 10, saslStartResponse.payload);\n\n    const saslContinueResponse = await externalCommand(\n      connection,\n      saslContinue(negotiatedPayload, saslStartResponse.conversationId)\n    );\n\n    const finalizePayload = await finalize(client, username, saslContinueResponse.payload);\n\n    await externalCommand(connection, {\n      saslContinue: 1,\n      conversationId: saslContinueResponse.conversationId,\n      payload: finalizePayload\n    });\n  }\n}\n\nasync function makeKerberosClient(authContext: AuthContext): Promise<KerberosClient> {\n  const { hostAddress } = authContext.options;\n  const { credentials } = authContext;\n  if (!hostAddress || typeof hostAddress.host !== 'string' || !credentials) {\n    throw new MongoInvalidArgumentError(\n      'Connection must have host and port and credentials defined.'\n    );\n  }\n\n  loadKrb();\n  if ('kModuleError' in krb) {\n    throw krb['kModuleError'];\n  }\n  const { initializeClient } = krb;\n\n  const { username, password } = credentials;\n  const mechanismProperties = credentials.mechanismProperties as MechanismProperties;\n\n  const serviceName = mechanismProperties.SERVICE_NAME ?? 'mongodb';\n\n  const host = await performGSSAPICanonicalizeHostName(hostAddress.host, mechanismProperties);\n\n  const initOptions = {};\n  if (password != null) {\n    // TODO(NODE-5139): These do not match the typescript options in initializeClient\n    Object.assign(initOptions, { user: username, password: password });\n  }\n\n  const spnHost = mechanismProperties.SERVICE_HOST ?? host;\n  let spn = `${serviceName}${process.platform === 'win32' ? '/' : '@'}${spnHost}`;\n  if ('SERVICE_REALM' in mechanismProperties) {\n    spn = `${spn}@${mechanismProperties.SERVICE_REALM}`;\n  }\n\n  return await initializeClient(spn, initOptions);\n}\n\nfunction saslStart(payload: string) {\n  return {\n    saslStart: 1,\n    mechanism: 'GSSAPI',\n    payload,\n    autoAuthorize: 1\n  } as const;\n}\n\nfunction saslContinue(payload: string, conversationId: number) {\n  return {\n    saslContinue: 1,\n    conversationId,\n    payload\n  } as const;\n}\n\nasync function negotiate(\n  client: KerberosClient,\n  retries: number,\n  payload: string\n): Promise<string> {\n  try {\n    const response = await client.step(payload);\n    return response || '';\n  } catch (error) {\n    if (retries === 0) {\n      // Retries exhausted, raise error\n      throw error;\n    }\n    // Adjust number of retries and call step again\n    return await negotiate(client, retries - 1, payload);\n  }\n}\n\nasync function finalize(client: KerberosClient, user: string, payload: string): Promise<string> {\n  // GSS Client Unwrap\n  const response = await client.unwrap(payload);\n  return await client.wrap(response || '', { user });\n}\n\nexport async function performGSSAPICanonicalizeHostName(\n  host: string,\n  mechanismProperties: MechanismProperties\n): Promise<string> {\n  const mode = mechanismProperties.CANONICALIZE_HOST_NAME;\n  if (!mode || mode === GSSAPICanonicalizationValue.none) {\n    return host;\n  }\n\n  // If forward and reverse or true\n  if (\n    mode === GSSAPICanonicalizationValue.on ||\n    mode === GSSAPICanonicalizationValue.forwardAndReverse\n  ) {\n    // Perform the lookup of the ip address.\n    const { address } = await dns.promises.lookup(host);\n\n    try {\n      // Perform a reverse ptr lookup on the ip address.\n      const results = await dns.promises.resolvePtr(address);\n      // If the ptr did not error but had no results, return the host.\n      return results.length > 0 ? results[0] : host;\n    } catch {\n      // This can error as ptr records may not exist for all ips. In this case\n      // fallback to a cname lookup as dns.lookup() does not return the\n      // cname.\n      return await resolveCname(host);\n    }\n  } else {\n    // The case for forward is just to resolve the cname as dns.lookup()\n    // will not return it.\n    return await resolveCname(host);\n  }\n}\n\nexport async function resolveCname(host: string): Promise<string> {\n  // Attempt to resolve the host name\n  try {\n    const results = await dns.promises.resolveCname(host);\n    // Get the first resolved host id\n    return results.length > 0 ? results[0] : host;\n  } catch {\n    return host;\n  }\n}\n\n/**\n * Load the Kerberos library.\n */\nfunction loadKrb() {\n  if (!krb) {\n    krb = getKerberos();\n  }\n}\n", "/** @public */\nexport const AuthMechanism = Object.freeze({\n  MONGODB_AWS: 'MONGODB-AWS',\n  MONGODB_CR: 'MONGODB-CR',\n  MONGODB_DEFAULT: 'DEFAULT',\n  MONGODB_GSSAPI: 'GSSAPI',\n  MONGODB_PLAIN: 'PLAIN',\n  MONGODB_SCRAM_SHA1: 'SCRAM-SHA-1',\n  MONGODB_SCRAM_SHA256: 'SCRAM-SHA-256',\n  MONGODB_X509: 'MONGODB-X509',\n  MONGODB_OIDC: 'MONGODB-OIDC'\n} as const);\n\n/** @public */\nexport type AuthMechanism = (typeof AuthMechanism)[keyof typeof AuthMechanism];\n\n/** @internal */\nexport const AUTH_MECHS_AUTH_SRC_EXTERNAL = new Set<AuthMechanism>([\n  AuthMechanism.MONGODB_GSSAPI,\n  AuthMechanism.MONGODB_AWS,\n  AuthMechanism.MONGODB_OIDC,\n  AuthMechanism.MONGODB_X509\n]);\n", "// Resolves the default auth mechanism according to\n// Resolves the default auth mechanism according to\nimport type { Document } from '../../bson';\nimport {\n  MongoAPIError,\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError\n} from '../../error';\nimport type { AWSCredentialProvider } from './aws_temporary_credentials';\nimport { GSSAPICanonicalizationValue } from './gssapi';\nimport type { OIDCCallbackFunction } from './mongodb_oidc';\nimport { AUTH_MECHS_AUTH_SRC_EXTERNAL, AuthMechanism } from './providers';\n\n/**\n * @see https://github.com/mongodb/specifications/blob/master/source/auth/auth.md\n */\nfunction getDefaultAuthMechanism(hello: Document | null): AuthMechanism {\n  if (hello) {\n    // If hello contains saslSupportedMechs, use scram-sha-256\n    // if it is available, else scram-sha-1\n    if (Array.isArray(hello.saslSupportedMechs)) {\n      return hello.saslSupportedMechs.includes(AuthMechanism.MONGODB_SCRAM_SHA256)\n        ? AuthMechanism.MONGODB_SCRAM_SHA256\n        : AuthMechanism.MONGODB_SCRAM_SHA1;\n    }\n  }\n\n  // Default auth mechanism for 4.0 and higher.\n  return AuthMechanism.MONGODB_SCRAM_SHA256;\n}\n\nconst ALLOWED_ENVIRONMENT_NAMES: AuthMechanismProperties['ENVIRONMENT'][] = [\n  'test',\n  'azure',\n  'gcp',\n  'k8s'\n];\nconst ALLOWED_HOSTS_ERROR = 'Auth mechanism property ALLOWED_HOSTS must be an array of strings.';\n\n/** @internal */\nexport const DEFAULT_ALLOWED_HOSTS = [\n  '*.mongodb.net',\n  '*.mongodb-qa.net',\n  '*.mongodb-dev.net',\n  '*.mongodbgov.net',\n  'localhost',\n  '127.0.0.1',\n  '::1'\n];\n\n/** Error for when the token audience is missing in the environment. */\nconst TOKEN_RESOURCE_MISSING_ERROR =\n  'TOKEN_RESOURCE must be set in the auth mechanism properties when ENVIRONMENT is azure or gcp.';\n\n/** @public */\nexport interface AuthMechanismProperties extends Document {\n  SERVICE_HOST?: string;\n  SERVICE_NAME?: string;\n  SERVICE_REALM?: string;\n  CANONICALIZE_HOST_NAME?: GSSAPICanonicalizationValue;\n  AWS_SESSION_TOKEN?: string;\n  /** A user provided OIDC machine callback function. */\n  OIDC_CALLBACK?: OIDCCallbackFunction;\n  /** A user provided OIDC human interacted callback function. */\n  OIDC_HUMAN_CALLBACK?: OIDCCallbackFunction;\n  /** The OIDC environment. Note that 'test' is for internal use only. */\n  ENVIRONMENT?: 'test' | 'azure' | 'gcp' | 'k8s';\n  /** Allowed hosts that OIDC auth can connect to. */\n  ALLOWED_HOSTS?: string[];\n  /** The resource token for OIDC auth in Azure and GCP. */\n  TOKEN_RESOURCE?: string;\n  /**\n   * A custom AWS credential provider to use. An example using the AWS SDK default provider chain:\n   *\n   * ```ts\n   * const client = new MongoClient(process.env.MONGODB_URI, {\n   *   authMechanismProperties: {\n   *     AWS_CREDENTIAL_PROVIDER: fromNodeProviderChain()\n   *   }\n   * });\n   * ```\n   *\n   * Using a custom function that returns AWS credentials:\n   *\n   * ```ts\n   * const client = new MongoClient(process.env.MONGODB_URI, {\n   *   authMechanismProperties: {\n   *     AWS_CREDENTIAL_PROVIDER: async () => {\n   *       return {\n   *         accessKeyId: process.env.ACCESS_KEY_ID,\n   *         secretAccessKey: process.env.SECRET_ACCESS_KEY\n   *       }\n   *     }\n   *   }\n   * });\n   * ```\n   */\n  AWS_CREDENTIAL_PROVIDER?: AWSCredentialProvider;\n}\n\n/** @public */\nexport interface MongoCredentialsOptions {\n  username?: string;\n  password: string;\n  source: string;\n  db?: string;\n  mechanism?: AuthMechanism;\n  mechanismProperties: AuthMechanismProperties;\n}\n\n/**\n * A representation of the credentials used by MongoDB\n * @public\n */\nexport class MongoCredentials {\n  /** The username used for authentication */\n  readonly username: string;\n  /** The password used for authentication */\n  readonly password: string;\n  /** The database that the user should authenticate against */\n  readonly source: string;\n  /** The method used to authenticate */\n  readonly mechanism: AuthMechanism;\n  /** Special properties used by some types of auth mechanisms */\n  readonly mechanismProperties: AuthMechanismProperties;\n\n  constructor(options: MongoCredentialsOptions) {\n    this.username = options.username ?? '';\n    this.password = options.password;\n    this.source = options.source;\n    if (!this.source && options.db) {\n      this.source = options.db;\n    }\n    this.mechanism = options.mechanism || AuthMechanism.MONGODB_DEFAULT;\n    this.mechanismProperties = options.mechanismProperties || {};\n\n    if (this.mechanism.match(/MONGODB-AWS/i)) {\n      if (!this.username && process.env.AWS_ACCESS_KEY_ID) {\n        this.username = process.env.AWS_ACCESS_KEY_ID;\n      }\n\n      if (!this.password && process.env.AWS_SECRET_ACCESS_KEY) {\n        this.password = process.env.AWS_SECRET_ACCESS_KEY;\n      }\n\n      if (\n        this.mechanismProperties.AWS_SESSION_TOKEN == null &&\n        process.env.AWS_SESSION_TOKEN != null\n      ) {\n        this.mechanismProperties = {\n          ...this.mechanismProperties,\n          AWS_SESSION_TOKEN: process.env.AWS_SESSION_TOKEN\n        };\n      }\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_OIDC && !this.mechanismProperties.ALLOWED_HOSTS) {\n      this.mechanismProperties = {\n        ...this.mechanismProperties,\n        ALLOWED_HOSTS: DEFAULT_ALLOWED_HOSTS\n      };\n    }\n\n    Object.freeze(this.mechanismProperties);\n    Object.freeze(this);\n  }\n\n  /** Determines if two MongoCredentials objects are equivalent */\n  equals(other: MongoCredentials): boolean {\n    return (\n      this.mechanism === other.mechanism &&\n      this.username === other.username &&\n      this.password === other.password &&\n      this.source === other.source\n    );\n  }\n\n  /**\n   * If the authentication mechanism is set to \"default\", resolves the authMechanism\n   * based on the server version and server supported sasl mechanisms.\n   *\n   * @param hello - A hello response from the server\n   */\n  resolveAuthMechanism(hello: Document | null): MongoCredentials {\n    // If the mechanism is not \"default\", then it does not need to be resolved\n    if (this.mechanism.match(/DEFAULT/i)) {\n      return new MongoCredentials({\n        username: this.username,\n        password: this.password,\n        source: this.source,\n        mechanism: getDefaultAuthMechanism(hello),\n        mechanismProperties: this.mechanismProperties\n      });\n    }\n\n    return this;\n  }\n\n  validate(): void {\n    if (\n      (this.mechanism === AuthMechanism.MONGODB_GSSAPI ||\n        this.mechanism === AuthMechanism.MONGODB_PLAIN ||\n        this.mechanism === AuthMechanism.MONGODB_SCRAM_SHA1 ||\n        this.mechanism === AuthMechanism.MONGODB_SCRAM_SHA256) &&\n      !this.username\n    ) {\n      throw new MongoMissingCredentialsError(`Username required for mechanism '${this.mechanism}'`);\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_OIDC) {\n      if (\n        this.username &&\n        this.mechanismProperties.ENVIRONMENT &&\n        this.mechanismProperties.ENVIRONMENT !== 'azure'\n      ) {\n        throw new MongoInvalidArgumentError(\n          `username and ENVIRONMENT '${this.mechanismProperties.ENVIRONMENT}' may not be used together for mechanism '${this.mechanism}'.`\n        );\n      }\n\n      if (this.username && this.password) {\n        throw new MongoInvalidArgumentError(\n          `No password is allowed in ENVIRONMENT '${this.mechanismProperties.ENVIRONMENT}' for '${this.mechanism}'.`\n        );\n      }\n\n      if (\n        (this.mechanismProperties.ENVIRONMENT === 'azure' ||\n          this.mechanismProperties.ENVIRONMENT === 'gcp') &&\n        !this.mechanismProperties.TOKEN_RESOURCE\n      ) {\n        throw new MongoInvalidArgumentError(TOKEN_RESOURCE_MISSING_ERROR);\n      }\n\n      if (\n        this.mechanismProperties.ENVIRONMENT &&\n        !ALLOWED_ENVIRONMENT_NAMES.includes(this.mechanismProperties.ENVIRONMENT)\n      ) {\n        throw new MongoInvalidArgumentError(\n          `Currently only a ENVIRONMENT in ${ALLOWED_ENVIRONMENT_NAMES.join(\n            ','\n          )} is supported for mechanism '${this.mechanism}'.`\n        );\n      }\n\n      if (\n        !this.mechanismProperties.ENVIRONMENT &&\n        !this.mechanismProperties.OIDC_CALLBACK &&\n        !this.mechanismProperties.OIDC_HUMAN_CALLBACK\n      ) {\n        throw new MongoInvalidArgumentError(\n          `Either a ENVIRONMENT, OIDC_CALLBACK, or OIDC_HUMAN_CALLBACK must be specified for mechanism '${this.mechanism}'.`\n        );\n      }\n\n      if (this.mechanismProperties.ALLOWED_HOSTS) {\n        const hosts = this.mechanismProperties.ALLOWED_HOSTS;\n        if (!Array.isArray(hosts)) {\n          throw new MongoInvalidArgumentError(ALLOWED_HOSTS_ERROR);\n        }\n        for (const host of hosts) {\n          if (typeof host !== 'string') {\n            throw new MongoInvalidArgumentError(ALLOWED_HOSTS_ERROR);\n          }\n        }\n      }\n    }\n\n    if (AUTH_MECHS_AUTH_SRC_EXTERNAL.has(this.mechanism)) {\n      if (this.source != null && this.source !== '$external') {\n        // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n        throw new MongoAPIError(\n          `Invalid source '${this.source}' for mechanism '${this.mechanism}' specified.`\n        );\n      }\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_PLAIN && this.source == null) {\n      // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n      throw new MongoAPIError('PLAIN Authentication Mechanism needs an auth source');\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_X509 && this.password != null) {\n      if (this.password === '') {\n        Reflect.set(this, 'password', undefined);\n        return;\n      }\n      // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n      throw new MongoAPIError(`Password not allowed for mechanism MONGODB-X509`);\n    }\n\n    const canonicalization = this.mechanismProperties.CANONICALIZE_HOST_NAME ?? false;\n    if (!Object.values(GSSAPICanonicalizationValue).includes(canonicalization)) {\n      throw new MongoAPIError(`Invalid CANONICALIZE_HOST_NAME value: ${canonicalization}`);\n    }\n  }\n\n  static merge(\n    creds: MongoCredentials | undefined,\n    options: Partial<MongoCredentialsOptions>\n  ): MongoCredentials {\n    return new MongoCredentials({\n      username: options.username ?? creds?.username ?? '',\n      password: options.password ?? creds?.password ?? '',\n      mechanism: options.mechanism ?? creds?.mechanism ?? AuthMechanism.MONGODB_DEFAULT,\n      mechanismProperties: options.mechanismProperties ?? creds?.mechanismProperties ?? {},\n      source: options.source ?? options.db ?? creds?.source ?? 'admin'\n    });\n  }\n}\n", "\"use strict\";\n\nfunction makeException(ErrorType, message, options) {\n  if (options.globals) {\n    ErrorType = options.globals[ErrorType.name];\n  }\n  return new ErrorType(`${options.context ? options.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, options) {\n  if (typeof value === \"bigint\") {\n    throw makeException(TypeError, \"is a BigInt which cannot be converted to a number\", options);\n  }\n  if (!options.globals) {\n    return Number(value);\n  }\n  return options.globals.Number(value);\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n    return censorNegativeZero(Math.floor(x));\n  }\n\n  return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, { unsigned }) {\n  let lowerBound, upperBound;\n  if (unsigned) {\n    lowerBound = 0;\n    upperBound = 2 ** bitLength - 1;\n  } else {\n    lowerBound = -(2 ** (bitLength - 1));\n    upperBound = 2 ** (bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = 2 ** bitLength;\n  const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64, but oh well. See the README for more details.\n    x = modulo(x, twoToTheBitLength);\n    if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength, { unsigned }) {\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nexports.any = value => {\n  return value;\n};\n\nexports.undefined = () => {\n  return undefined;\n};\n\nexports.boolean = value => {\n  return Boolean(value);\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createLongLongConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createLongLongConversion(64, { unsigned: true });\n\nexports.double = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  return x;\n};\n\nexports[\"unrestricted double\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  return x;\n};\n\nexports.float = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  const y = Math.fround(x);\n\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", options);\n  }\n\n  return y;\n};\n\nexports[\"unrestricted float\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  return Math.fround(x);\n};\n\nexports.DOMString = (value, options = {}) => {\n  if (options.treatNullAsEmptyString && value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", options);\n  }\n\n  const StringCtor = options.globals ? options.globals.String : String;\n  return StringCtor(value);\n};\n\nexports.ByteString = (value, options = {}) => {\n  const x = exports.DOMString(value, options);\n  let c;\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", options);\n    }\n  }\n\n  return x;\n};\n\nexports.USVString = (value, options = {}) => {\n  const S = exports.DOMString(value, options);\n  const n = S.length;\n  const U = [];\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n\n  return U.join(\"\");\n};\n\nexports.object = (value, options = {}) => {\n  if (value === null || (typeof value !== \"object\" && typeof value !== \"function\")) {\n    throw makeException(TypeError, \"is not an object\", options);\n  }\n\n  return value;\n};\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter =\n    typeof SharedArrayBuffer === \"function\" ?\n      Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get :\n      null;\n\nfunction isNonSharedArrayBuffer(value) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(value);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isSharedArrayBuffer(value) {\n  try {\n    sabByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isArrayBufferDetached(value) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(value);\n    return false;\n  } catch {\n    return true;\n  }\n}\n\nexports.ArrayBuffer = (value, options = {}) => {\n  if (!isNonSharedArrayBuffer(value)) {\n    if (options.allowShared && !isSharedArrayBuffer(value)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", options);\n    }\n    throw makeException(TypeError, \"is not an ArrayBuffer\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (value, options = {}) => {\n  try {\n    dvByteLengthGetter.call(value);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", options);\n  }\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n  Object.getPrototypeOf(Uint8Array).prototype,\n  Symbol.toStringTag\n).get;\n[\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray,\n  Float32Array,\n  Float64Array\n].forEach(func => {\n  const { name } = func;\n  const article = /^[AEIOU]/u.test(name) ? \"an\" : \"a\";\n  exports[name] = (value, options = {}) => {\n    if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, options);\n    }\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (value, options = {}) => {\n  if (!ArrayBuffer.isView(value)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n  }\n  return value;\n};\n\nexports.BufferSource = (value, options = {}) => {\n  if (ArrayBuffer.isView(value)) {\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n    return value;\n  }\n\n  if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", options);\n  }\n  if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBuffer, or a view on one\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n", "\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return (typeof value === \"object\" && value !== null) || typeof value === \"function\";\n}\n\nconst hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\n// Like `Object.assign`, but using `[[GetOwnProperty]]` and `[[DefineOwnProperty]]`\n// instead of `[[Get]]` and `[[Set]]` and only allowing objects\nfunction define(target, source) {\n  for (const key of Reflect.ownKeys(source)) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(source, key);\n    if (descriptor && !Reflect.defineProperty(target, key, descriptor)) {\n      throw new TypeError(`Cannot redefine property: ${String(key)}`);\n    }\n  }\n}\n\nfunction newObjectInRealm(globalObject, object) {\n  const ctorRegistry = initCtorRegistry(globalObject);\n  return Object.defineProperties(\n    Object.create(ctorRegistry[\"%Object.prototype%\"]),\n    Object.getOwnPropertyDescriptors(object)\n  );\n}\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\nconst ctorRegistrySymbol = Symbol.for(\"[webidl2js] constructor registry\");\n\nconst AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {}).prototype);\n\nfunction initCtorRegistry(globalObject) {\n  if (hasOwn(globalObject, ctorRegistrySymbol)) {\n    return globalObject[ctorRegistrySymbol];\n  }\n\n  const ctorRegistry = Object.create(null);\n\n  // In addition to registering all the WebIDL2JS-generated types in the constructor registry,\n  // we also register a few intrinsics that we make use of in generated code, since they are not\n  // easy to grab from the globalObject variable.\n  ctorRegistry[\"%Object.prototype%\"] = globalObject.Object.prototype;\n  ctorRegistry[\"%IteratorPrototype%\"] = Object.getPrototypeOf(\n    Object.getPrototypeOf(new globalObject.Array()[Symbol.iterator]())\n  );\n\n  try {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        globalObject.eval(\"(async function* () {})\").prototype\n      )\n    );\n  } catch {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = AsyncIteratorPrototype;\n  }\n\n  globalObject[ctorRegistrySymbol] = ctorRegistry;\n  return ctorRegistry;\n}\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === 2 ** 32 - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst byteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction iteratorResult([key, value], kind) {\n  let result;\n  switch (kind) {\n    case \"key\":\n      result = key;\n      break;\n    case \"value\":\n      result = value;\n      break;\n    case \"key+value\":\n      result = [key, value];\n      break;\n  }\n  return { value: result, done: false };\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nconst asyncIteratorNext = Symbol(\"async iterator get the next iteration result\");\nconst asyncIteratorReturn = Symbol(\"async iterator return steps\");\nconst asyncIteratorInit = Symbol(\"async iterator initialization steps\");\nconst asyncIteratorEOI = Symbol(\"async iterator end of iteration\");\n\nmodule.exports = exports = {\n  isObject,\n  hasOwn,\n  define,\n  newObjectInRealm,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  ctorRegistrySymbol,\n  initCtorRegistry,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  isArrayBuffer,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete,\n  asyncIteratorNext,\n  asyncIteratorReturn,\n  asyncIteratorInit,\n  asyncIteratorEOI,\n  iteratorResult\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nmodule.exports = punycode;\n", "\"use strict\";\n\nconst combiningMarks = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0897-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CF3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10D69}-\\u{10D6D}\\u{10EAB}\\u{10EAC}\\u{10EFC}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{11002}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11082}\\u{110B0}-\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{11134}\\u{11145}\\u{11146}\\u{11173}\\u{11180}-\\u{11182}\\u{111B3}-\\u{111C0}\\u{111C9}-\\u{111CC}\\u{111CE}\\u{111CF}\\u{1122C}-\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}-\\u{112EA}\\u{11300}-\\u{11303}\\u{1133B}\\u{1133C}\\u{1133E}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11357}\\u{11362}\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{113B8}-\\u{113C0}\\u{113C2}\\u{113C5}\\u{113C7}-\\u{113CA}\\u{113CC}-\\u{113D0}\\u{113D2}\\u{113E1}\\u{113E2}\\u{11435}-\\u{11446}\\u{1145E}\\u{114B0}-\\u{114C3}\\u{115AF}-\\u{115B5}\\u{115B8}-\\u{115C0}\\u{115DC}\\u{115DD}\\u{11630}-\\u{11640}\\u{116AB}-\\u{116B7}\\u{1171D}-\\u{1172B}\\u{1182C}-\\u{1183A}\\u{11930}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{1193E}\\u{11940}\\u{11942}\\u{11943}\\u{119D1}-\\u{119D7}\\u{119DA}-\\u{119E0}\\u{119E4}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A39}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A5B}\\u{11A8A}-\\u{11A99}\\u{11C2F}-\\u{11C36}\\u{11C38}-\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D8A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D97}\\u{11EF3}-\\u{11EF6}\\u{11F00}\\u{11F01}\\u{11F03}\\u{11F34}-\\u{11F3A}\\u{11F3E}-\\u{11F42}\\u{11F5A}\\u{13440}\\u{13447}-\\u{13455}\\u{1611E}-\\u{1612F}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F51}-\\u{16F87}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D165}-\\u{1D169}\\u{1D16D}-\\u{1D172}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E5EE}\\u{1E5EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]/u;\nconst combiningClassVirama = /[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0BCD\\u0C4D\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E3A\\u0EBA\\u0F84\\u1039\\u103A\\u1714\\u1715\\u1734\\u17D2\\u1A60\\u1B44\\u1BAA\\u1BAB\\u1BF2\\u1BF3\\u2D7F\\uA806\\uA82C\\uA8C4\\uA953\\uA9C0\\uAAF6\\uABED\\u{10A3F}\\u{11046}\\u{11070}\\u{1107F}\\u{110B9}\\u{11133}\\u{11134}\\u{111C0}\\u{11235}\\u{112EA}\\u{1134D}\\u{113CE}-\\u{113D0}\\u{11442}\\u{114C2}\\u{115BF}\\u{1163F}\\u{116B6}\\u{1172B}\\u{11839}\\u{1193D}\\u{1193E}\\u{119E0}\\u{11A34}\\u{11A47}\\u{11A99}\\u{11C3F}\\u{11D44}\\u{11D45}\\u{11D97}\\u{11F41}\\u{11F42}\\u{1612F}]/u;\nconst validZWNJ = /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u063F\\u0641-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u0886\\u0889-\\u088D\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3-\\u08B8\\u08BA-\\u08C8\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA872\\u{10AC0}-\\u{10AC4}\\u{10ACD}\\u{10AD3}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D00}-\\u{10D21}\\u{10D23}\\u{10EC3}\\u{10EC4}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{10F70}-\\u{10F73}\\u{10F76}-\\u{10F81}\\u{10FB0}\\u{10FB2}\\u{10FB3}\\u{10FB8}\\u{10FBB}\\u{10FBC}\\u{10FBE}\\u{10FBF}\\u{10FC1}\\u{10FC4}\\u{10FCA}\\u{10FCB}\\u{1E900}-\\u{1E943}][\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0897-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10D69}-\\u{10D6D}\\u{10EAB}\\u{10EAC}\\u{10EFC}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{113BB}-\\u{113C0}\\u{113CE}\\u{113D0}\\u{113D2}\\u{113E1}\\u{113E2}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{11F5A}\\u{13430}-\\u{13440}\\u{13447}-\\u{13455}\\u{1611E}-\\u{16129}\\u{1612D}-\\u{1612F}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E5EE}\\u{1E5EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*\\u200C[\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0897-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10D69}-\\u{10D6D}\\u{10EAB}\\u{10EAC}\\u{10EFC}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{113BB}-\\u{113C0}\\u{113CE}\\u{113D0}\\u{113D2}\\u{113E1}\\u{113E2}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{11F5A}\\u{13430}-\\u{13440}\\u{13447}-\\u{13455}\\u{1611E}-\\u{16129}\\u{1612D}-\\u{1612F}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E5EE}\\u{1E5EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*[\\u0620\\u0622-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u0673\\u0675-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u077F\\u07CA-\\u07EA\\u0840-\\u0858\\u0860\\u0862-\\u0865\\u0867-\\u086A\\u0870-\\u0882\\u0886\\u0889-\\u088E\\u08A0-\\u08AC\\u08AE-\\u08C8\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA871\\u{10AC0}-\\u{10AC5}\\u{10AC7}\\u{10AC9}\\u{10ACA}\\u{10ACE}-\\u{10AD6}\\u{10AD8}-\\u{10AE1}\\u{10AE4}\\u{10AEB}-\\u{10AEF}\\u{10B80}-\\u{10B91}\\u{10BA9}-\\u{10BAE}\\u{10D01}-\\u{10D23}\\u{10EC2}-\\u{10EC4}\\u{10F30}-\\u{10F44}\\u{10F51}-\\u{10F54}\\u{10F70}-\\u{10F81}\\u{10FB0}\\u{10FB2}-\\u{10FB6}\\u{10FB8}-\\u{10FBF}\\u{10FC1}-\\u{10FC4}\\u{10FC9}\\u{10FCA}\\u{1E900}-\\u{1E943}]/u;\nconst bidiDomain = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10D40}-\\u{10D65}\\u{10D6F}-\\u{10D85}\\u{10D8E}\\u{10D8F}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10EC2}-\\u{10EC4}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS1LTR = /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B4E-\\u1B6A\\u1B74-\\u1B7F\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C8A\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u249C-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CD\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7DC\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{105C0}-\\u{105F3}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{1123F}\\u{11240}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11380}-\\u{11389}\\u{1138B}\\u{1138E}\\u{11390}-\\u{113B5}\\u{113B7}-\\u{113BA}\\u{113C2}\\u{113C5}\\u{113C7}-\\u{113CA}\\u{113CC}\\u{113CD}\\u{113CF}\\u{113D1}\\u{113D3}-\\u{113D5}\\u{113D7}\\u{113D8}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{116D0}-\\u{116E3}\\u{11700}-\\u{1171A}\\u{1171E}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11B00}-\\u{11B09}\\u{11BC0}-\\u{11BE1}\\u{11BF0}-\\u{11BF9}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11F02}-\\u{11F10}\\u{11F12}-\\u{11F35}\\u{11F3E}\\u{11F3F}\\u{11F41}\\u{11F43}-\\u{11F59}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1343F}\\u{13441}-\\u{13446}\\u{13460}-\\u{143FA}\\u{14400}-\\u{14646}\\u{16100}-\\u{1611D}\\u{1612A}-\\u{1612C}\\u{16130}-\\u{16139}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16D40}-\\u{16D79}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18CFF}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B132}\\u{1B150}-\\u{1B152}\\u{1B155}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CCD6}-\\u{1CCEF}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2C0}-\\u{1D2D3}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6C0}\\u{1D6C2}-\\u{1D6DA}\\u{1D6DC}-\\u{1D6FA}\\u{1D6FC}-\\u{1D714}\\u{1D716}-\\u{1D734}\\u{1D736}-\\u{1D74E}\\u{1D750}-\\u{1D76E}\\u{1D770}-\\u{1D788}\\u{1D78A}-\\u{1D7A8}\\u{1D7AA}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1DF25}-\\u{1DF2A}\\u{1E030}-\\u{1E06D}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E4D0}-\\u{1E4EB}\\u{1E4F0}-\\u{1E4F9}\\u{1E5D0}-\\u{1E5ED}\\u{1E5F0}-\\u{1E5FA}\\u{1E5FF}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B739}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2EBF0}-\\u{2EE5D}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{31350}-\\u{323AF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]/u;\nconst bidiS1RTL = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D4A}-\\u{10D65}\\u{10D6F}-\\u{10D85}\\u{10D8E}\\u{10D8F}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10EC2}-\\u{10EC4}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS2 = /^[\\0-\\x08\\x0E-\\x1B!-@\\[-`\\{-\\x84\\x86-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9\\u02BA\\u02C2-\\u02CF\\u02D2-\\u02DF\\u02E5-\\u02ED\\u02EF-\\u036F\\u0374\\u0375\\u037E\\u0384\\u0385\\u0387\\u03F6\\u0483-\\u0489\\u058A\\u058D-\\u058F\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u070D\\u070F-\\u074A\\u074D-\\u07B1\\u07C0-\\u07FA\\u07FD-\\u082D\\u0830-\\u083E\\u0840-\\u085B\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u0897-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09F2\\u09F3\\u09FB\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AF1\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0BF3-\\u0BFA\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C78-\\u0C7E\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E3F\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39-\\u0F3D\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1390-\\u1399\\u1400\\u169B\\u169C\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DB\\u17DD\\u17F0-\\u17F9\\u1800-\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1940\\u1944\\u1945\\u19DE-\\u19FF\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u200B-\\u200D\\u200F-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u2150-\\u215F\\u2189-\\u218B\\u2190-\\u2335\\u237B-\\u2394\\u2396-\\u2429\\u2440-\\u244A\\u2460-\\u249B\\u24EA-\\u26AB\\u26AD-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF9-\\u2CFF\\u2D7F\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3001-\\u3004\\u3008-\\u3020\\u302A-\\u302D\\u3030\\u3036\\u3037\\u303D-\\u303F\\u3099-\\u309C\\u30A0\\u30FB\\u31C0-\\u31E5\\u31EF\\u321D\\u321E\\u3250-\\u325F\\u327C-\\u327E\\u32B1-\\u32BF\\u32CC-\\u32CF\\u3377-\\u337A\\u33DE\\u33DF\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA60D-\\uA60F\\uA66F-\\uA67F\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA828-\\uA82C\\uA838\\uA839\\uA874-\\uA877\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uAB6A\\uAB6B\\uABE5\\uABE8\\uABED\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10101}\\u{10140}-\\u{1018C}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101FD}\\u{102E0}-\\u{102FB}\\u{10376}-\\u{1037A}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{1091F}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A38}-\\u{10A3A}\\u{10A3F}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE6}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B39}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D27}\\u{10D30}-\\u{10D39}\\u{10D40}-\\u{10D65}\\u{10D69}-\\u{10D85}\\u{10D8E}\\u{10D8F}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAB}-\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10EC2}-\\u{10EC4}\\u{10EFC}-\\u{10F27}\\u{10F30}-\\u{10F59}\\u{10F70}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{11001}\\u{11038}-\\u{11046}\\u{11052}-\\u{11065}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{113BB}-\\u{113C0}\\u{113CE}\\u{113D0}\\u{113D2}\\u{113E1}\\u{113E2}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{11660}-\\u{1166C}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{11F5A}\\u{11FD5}-\\u{11FF1}\\u{13440}\\u{13447}-\\u{13455}\\u{1611E}-\\u{16129}\\u{1612D}-\\u{1612F}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE2}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CC00}-\\u{1CCD5}\\u{1CCF0}-\\u{1CCF9}\\u{1CD00}-\\u{1CEB3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D1E9}\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D300}-\\u{1D356}\\u{1D6C1}\\u{1D6DB}\\u{1D6FB}\\u{1D715}\\u{1D735}\\u{1D74F}\\u{1D76F}\\u{1D789}\\u{1D7A9}\\u{1D7C3}\\u{1D7CE}-\\u{1D7FF}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E2FF}\\u{1E4EC}-\\u{1E4EF}\\u{1E5EE}\\u{1E5EF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8D6}\\u{1E900}-\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10F}\\u{1F12F}\\u{1F16A}-\\u{1F16F}\\u{1F1AD}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DC}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F776}\\u{1F77B}-\\u{1F7D9}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}-\\u{1F8BB}\\u{1F8C0}\\u{1F8C1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA7C}\\u{1FA80}-\\u{1FA89}\\u{1FA8F}-\\u{1FAC6}\\u{1FACE}-\\u{1FADC}\\u{1FADF}-\\u{1FAE9}\\u{1FAF0}-\\u{1FAF8}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBF9}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS3 = /[0-9\\xB2\\xB3\\xB9\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10D40}-\\u{10D65}\\u{10D6F}-\\u{10D85}\\u{10D8E}\\u{10D8F}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10EC2}-\\u{10EC4}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1CCF0}-\\u{1CCF9}\\u{1D7CE}-\\u{1D7FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0897-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10D69}-\\u{10D6D}\\u{10EAB}\\u{10EAC}\\u{10EFC}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{113BB}-\\u{113C0}\\u{113CE}\\u{113D0}\\u{113D2}\\u{113E1}\\u{113E2}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{11F5A}\\u{13440}\\u{13447}-\\u{13455}\\u{1611E}-\\u{16129}\\u{1612D}-\\u{1612F}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E5EE}\\u{1E5EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS4EN = /[0-9\\xB2\\xB3\\xB9\\u06F0-\\u06F9\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{1CCF0}-\\u{1CCF9}\\u{1D7CE}-\\u{1D7FF}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}]/u;\nconst bidiS4AN = /[\\u0600-\\u0605\\u0660-\\u0669\\u066B\\u066C\\u06DD\\u0890\\u0891\\u08E2\\u{10D30}-\\u{10D39}\\u{10D40}-\\u{10D49}\\u{10E60}-\\u{10E7E}]/u;\nconst bidiS5 = /^[\\0-\\x08\\x0E-\\x1B!-\\x84\\x86-\\u0377\\u037A-\\u037F\\u0384-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u052F\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0606\\u0607\\u0609\\u060A\\u060C\\u060E-\\u061A\\u064B-\\u065F\\u066A\\u0670\\u06D6-\\u06DC\\u06DE-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0897-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E3A\\u0E3F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1400-\\u167F\\u1681-\\u169C\\u16A0-\\u16F8\\u1700-\\u1715\\u171F-\\u1736\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1800-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE-\\u1A1B\\u1A1E-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1AB0-\\u1ACE\\u1B00-\\u1B4C\\u1B4E-\\u1BF3\\u1BFC-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C8A\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD0-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u200B-\\u200E\\u2010-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2071\\u2074-\\u208E\\u2090-\\u209C\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100-\\u218B\\u2190-\\u2429\\u2440-\\u244A\\u2460-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2CF3\\u2CF9-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3001-\\u303F\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31E5\\u31EF-\\u321E\\u3220-\\uA48C\\uA490-\\uA4C6\\uA4D0-\\uA62B\\uA640-\\uA6F7\\uA700-\\uA7CD\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7DC\\uA7F2-\\uA82C\\uA830-\\uA839\\uA840-\\uA877\\uA880-\\uA8C5\\uA8CE-\\uA8D9\\uA8E0-\\uA953\\uA95F-\\uA97C\\uA980-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAAC2\\uAADB-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB6B\\uAB70-\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E\\uFB29\\uFD3E-\\uFD4F\\uFDCF\\uFDFD-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}-\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1018E}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101D0}-\\u{101FD}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E0}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{1037A}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{105C0}-\\u{105F3}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{1091F}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10B39}-\\u{10B3F}\\u{10D24}-\\u{10D27}\\u{10D69}-\\u{10D6E}\\u{10EAB}\\u{10EAC}\\u{10EFC}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{1104D}\\u{11052}-\\u{11075}\\u{1107F}-\\u{110C2}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11100}-\\u{11134}\\u{11136}-\\u{11147}\\u{11150}-\\u{11176}\\u{11180}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{11241}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112EA}\\u{112F0}-\\u{112F9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133B}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11380}-\\u{11389}\\u{1138B}\\u{1138E}\\u{11390}-\\u{113B5}\\u{113B7}-\\u{113C0}\\u{113C2}\\u{113C5}\\u{113C7}-\\u{113CA}\\u{113CC}-\\u{113D5}\\u{113D7}\\u{113D8}\\u{113E1}\\u{113E2}\\u{11400}-\\u{1145B}\\u{1145D}-\\u{11461}\\u{11480}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B5}\\u{115B8}-\\u{115DD}\\u{11600}-\\u{11644}\\u{11650}-\\u{11659}\\u{11660}-\\u{1166C}\\u{11680}-\\u{116B9}\\u{116C0}-\\u{116C9}\\u{116D0}-\\u{116E3}\\u{11700}-\\u{1171A}\\u{1171D}-\\u{1172B}\\u{11730}-\\u{11746}\\u{11800}-\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D7}\\u{119DA}-\\u{119E4}\\u{11A00}-\\u{11A47}\\u{11A50}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11B00}-\\u{11B09}\\u{11BC0}-\\u{11BE1}\\u{11BF0}-\\u{11BF9}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C36}\\u{11C38}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D47}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF8}\\u{11F00}-\\u{11F10}\\u{11F12}-\\u{11F3A}\\u{11F3E}-\\u{11F5A}\\u{11FB0}\\u{11FC0}-\\u{11FF1}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{13455}\\u{13460}-\\u{143FA}\\u{14400}-\\u{14646}\\u{16100}-\\u{16139}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF0}-\\u{16AF5}\\u{16B00}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16D40}-\\u{16D79}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F4F}-\\u{16F87}\\u{16F8F}-\\u{16F9F}\\u{16FE0}-\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18CFF}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B132}\\u{1B150}-\\u{1B152}\\u{1B155}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}-\\u{1BCA3}\\u{1CC00}-\\u{1CCF9}\\u{1CD00}-\\u{1CEB3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D2C0}-\\u{1D2D3}\\u{1D2E0}-\\u{1D2F3}\\u{1D300}-\\u{1D356}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D7CB}\\u{1D7CE}-\\u{1DA8B}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1DF00}-\\u{1DF1E}\\u{1DF25}-\\u{1DF2A}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E030}-\\u{1E06D}\\u{1E08F}\\u{1E100}-\\u{1E12C}\\u{1E130}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AE}\\u{1E2C0}-\\u{1E2F9}\\u{1E2FF}\\u{1E4D0}-\\u{1E4F9}\\u{1E5D0}-\\u{1E5FA}\\u{1E5FF}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F1AD}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DC}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F776}\\u{1F77B}-\\u{1F7D9}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}-\\u{1F8BB}\\u{1F8C0}\\u{1F8C1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA7C}\\u{1FA80}-\\u{1FA89}\\u{1FA8F}-\\u{1FAC6}\\u{1FACE}-\\u{1FADC}\\u{1FADF}-\\u{1FAE9}\\u{1FAF0}-\\u{1FAF8}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B739}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2EBF0}-\\u{2EE5D}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{31350}-\\u{323AF}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]*$/u;\nconst bidiS6 = /[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u06F0-\\u06F9\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B4E-\\u1B6A\\u1B74-\\u1B7F\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C8A\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u2488-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CD\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7DC\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E1}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{105C0}-\\u{105F3}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{1123F}\\u{11240}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11380}-\\u{11389}\\u{1138B}\\u{1138E}\\u{11390}-\\u{113B5}\\u{113B7}-\\u{113BA}\\u{113C2}\\u{113C5}\\u{113C7}-\\u{113CA}\\u{113CC}\\u{113CD}\\u{113CF}\\u{113D1}\\u{113D3}-\\u{113D5}\\u{113D7}\\u{113D8}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{116D0}-\\u{116E3}\\u{11700}-\\u{1171A}\\u{1171E}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11B00}-\\u{11B09}\\u{11BC0}-\\u{11BE1}\\u{11BF0}-\\u{11BF9}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11F02}-\\u{11F10}\\u{11F12}-\\u{11F35}\\u{11F3E}\\u{11F3F}\\u{11F41}\\u{11F43}-\\u{11F59}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1343F}\\u{13441}-\\u{13446}\\u{13460}-\\u{143FA}\\u{14400}-\\u{14646}\\u{16100}-\\u{1611D}\\u{1612A}-\\u{1612C}\\u{16130}-\\u{16139}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16D40}-\\u{16D79}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18CFF}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B132}\\u{1B150}-\\u{1B152}\\u{1B155}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CCD6}-\\u{1CCF9}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2C0}-\\u{1D2D3}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6C0}\\u{1D6C2}-\\u{1D6DA}\\u{1D6DC}-\\u{1D6FA}\\u{1D6FC}-\\u{1D714}\\u{1D716}-\\u{1D734}\\u{1D736}-\\u{1D74E}\\u{1D750}-\\u{1D76E}\\u{1D770}-\\u{1D788}\\u{1D78A}-\\u{1D7A8}\\u{1D7AA}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D7CE}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1DF25}-\\u{1DF2A}\\u{1E030}-\\u{1E06D}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E4D0}-\\u{1E4EB}\\u{1E4F0}-\\u{1E4F9}\\u{1E5D0}-\\u{1E5ED}\\u{1E5F0}-\\u{1E5FA}\\u{1E5FF}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F100}-\\u{1F10A}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B739}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2EBF0}-\\u{2EE5D}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{31350}-\\u{323AF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0897-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10D69}-\\u{10D6D}\\u{10EAB}\\u{10EAC}\\u{10EFC}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{113BB}-\\u{113C0}\\u{113CE}\\u{113D0}\\u{113D2}\\u{113E1}\\u{113E2}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{11F5A}\\u{13440}\\u{13447}-\\u{13455}\\u{1611E}-\\u{16129}\\u{1612D}-\\u{1612F}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E5EE}\\u{1E5EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n\nmodule.exports = {\n    combiningMarks,\n  combiningClassVirama,\n  validZWNJ,\n  bidiDomain,\n  bidiS1LTR,\n  bidiS1RTL,\n  bidiS2,\n  bidiS3,\n  bidiS4EN,\n  bidiS4AN,\n  bidiS5,\n  bidiS6\n  };\n", "[[[0,44],2],[[45,46],2],[47,2],[[48,57],2],[[58,64],2],[65,1,\"a\"],[66,1,\"b\"],[67,1,\"c\"],[68,1,\"d\"],[69,1,\"e\"],[70,1,\"f\"],[71,1,\"g\"],[72,1,\"h\"],[73,1,\"i\"],[74,1,\"j\"],[75,1,\"k\"],[76,1,\"l\"],[77,1,\"m\"],[78,1,\"n\"],[79,1,\"o\"],[80,1,\"p\"],[81,1,\"q\"],[82,1,\"r\"],[83,1,\"s\"],[84,1,\"t\"],[85,1,\"u\"],[86,1,\"v\"],[87,1,\"w\"],[88,1,\"x\"],[89,1,\"y\"],[90,1,\"z\"],[[91,96],2],[[97,122],2],[[123,127],2],[[128,159],3],[160,1,\" \"],[[161,167],2],[168,1,\" \u0308\"],[169,2],[170,1,\"a\"],[[171,172],2],[173,7],[174,2],[175,1,\" \u0304\"],[[176,177],2],[178,1,\"2\"],[179,1,\"3\"],[180,1,\" \u0301\"],[181,1,\"\u03BC\"],[182,2],[183,2],[184,1,\" \u0327\"],[185,1,\"1\"],[186,1,\"o\"],[187,2],[188,1,\"1\u20444\"],[189,1,\"1\u20442\"],[190,1,\"3\u20444\"],[191,2],[192,1,\"\u00E0\"],[193,1,\"\u00E1\"],[194,1,\"\u00E2\"],[195,1,\"\u00E3\"],[196,1,\"\u00E4\"],[197,1,\"\u00E5\"],[198,1,\"\u00E6\"],[199,1,\"\u00E7\"],[200,1,\"\u00E8\"],[201,1,\"\u00E9\"],[202,1,\"\u00EA\"],[203,1,\"\u00EB\"],[204,1,\"\u00EC\"],[205,1,\"\u00ED\"],[206,1,\"\u00EE\"],[207,1,\"\u00EF\"],[208,1,\"\u00F0\"],[209,1,\"\u00F1\"],[210,1,\"\u00F2\"],[211,1,\"\u00F3\"],[212,1,\"\u00F4\"],[213,1,\"\u00F5\"],[214,1,\"\u00F6\"],[215,2],[216,1,\"\u00F8\"],[217,1,\"\u00F9\"],[218,1,\"\u00FA\"],[219,1,\"\u00FB\"],[220,1,\"\u00FC\"],[221,1,\"\u00FD\"],[222,1,\"\u00FE\"],[223,6,\"ss\"],[[224,246],2],[247,2],[[248,255],2],[256,1,\"\u0101\"],[257,2],[258,1,\"\u0103\"],[259,2],[260,1,\"\u0105\"],[261,2],[262,1,\"\u0107\"],[263,2],[264,1,\"\u0109\"],[265,2],[266,1,\"\u010B\"],[267,2],[268,1,\"\u010D\"],[269,2],[270,1,\"\u010F\"],[271,2],[272,1,\"\u0111\"],[273,2],[274,1,\"\u0113\"],[275,2],[276,1,\"\u0115\"],[277,2],[278,1,\"\u0117\"],[279,2],[280,1,\"\u0119\"],[281,2],[282,1,\"\u011B\"],[283,2],[284,1,\"\u011D\"],[285,2],[286,1,\"\u011F\"],[287,2],[288,1,\"\u0121\"],[289,2],[290,1,\"\u0123\"],[291,2],[292,1,\"\u0125\"],[293,2],[294,1,\"\u0127\"],[295,2],[296,1,\"\u0129\"],[297,2],[298,1,\"\u012B\"],[299,2],[300,1,\"\u012D\"],[301,2],[302,1,\"\u012F\"],[303,2],[304,1,\"i\u0307\"],[305,2],[[306,307],1,\"ij\"],[308,1,\"\u0135\"],[309,2],[310,1,\"\u0137\"],[[311,312],2],[313,1,\"\u013A\"],[314,2],[315,1,\"\u013C\"],[316,2],[317,1,\"\u013E\"],[318,2],[[319,320],1,\"l\u00B7\"],[321,1,\"\u0142\"],[322,2],[323,1,\"\u0144\"],[324,2],[325,1,\"\u0146\"],[326,2],[327,1,\"\u0148\"],[328,2],[329,1,\"\u02BCn\"],[330,1,\"\u014B\"],[331,2],[332,1,\"\u014D\"],[333,2],[334,1,\"\u014F\"],[335,2],[336,1,\"\u0151\"],[337,2],[338,1,\"\u0153\"],[339,2],[340,1,\"\u0155\"],[341,2],[342,1,\"\u0157\"],[343,2],[344,1,\"\u0159\"],[345,2],[346,1,\"\u015B\"],[347,2],[348,1,\"\u015D\"],[349,2],[350,1,\"\u015F\"],[351,2],[352,1,\"\u0161\"],[353,2],[354,1,\"\u0163\"],[355,2],[356,1,\"\u0165\"],[357,2],[358,1,\"\u0167\"],[359,2],[360,1,\"\u0169\"],[361,2],[362,1,\"\u016B\"],[363,2],[364,1,\"\u016D\"],[365,2],[366,1,\"\u016F\"],[367,2],[368,1,\"\u0171\"],[369,2],[370,1,\"\u0173\"],[371,2],[372,1,\"\u0175\"],[373,2],[374,1,\"\u0177\"],[375,2],[376,1,\"\u00FF\"],[377,1,\"\u017A\"],[378,2],[379,1,\"\u017C\"],[380,2],[381,1,\"\u017E\"],[382,2],[383,1,\"s\"],[384,2],[385,1,\"\u0253\"],[386,1,\"\u0183\"],[387,2],[388,1,\"\u0185\"],[389,2],[390,1,\"\u0254\"],[391,1,\"\u0188\"],[392,2],[393,1,\"\u0256\"],[394,1,\"\u0257\"],[395,1,\"\u018C\"],[[396,397],2],[398,1,\"\u01DD\"],[399,1,\"\u0259\"],[400,1,\"\u025B\"],[401,1,\"\u0192\"],[402,2],[403,1,\"\u0260\"],[404,1,\"\u0263\"],[405,2],[406,1,\"\u0269\"],[407,1,\"\u0268\"],[408,1,\"\u0199\"],[[409,411],2],[412,1,\"\u026F\"],[413,1,\"\u0272\"],[414,2],[415,1,\"\u0275\"],[416,1,\"\u01A1\"],[417,2],[418,1,\"\u01A3\"],[419,2],[420,1,\"\u01A5\"],[421,2],[422,1,\"\u0280\"],[423,1,\"\u01A8\"],[424,2],[425,1,\"\u0283\"],[[426,427],2],[428,1,\"\u01AD\"],[429,2],[430,1,\"\u0288\"],[431,1,\"\u01B0\"],[432,2],[433,1,\"\u028A\"],[434,1,\"\u028B\"],[435,1,\"\u01B4\"],[436,2],[437,1,\"\u01B6\"],[438,2],[439,1,\"\u0292\"],[440,1,\"\u01B9\"],[[441,443],2],[444,1,\"\u01BD\"],[[445,451],2],[[452,454],1,\"d\u017E\"],[[455,457],1,\"lj\"],[[458,460],1,\"nj\"],[461,1,\"\u01CE\"],[462,2],[463,1,\"\u01D0\"],[464,2],[465,1,\"\u01D2\"],[466,2],[467,1,\"\u01D4\"],[468,2],[469,1,\"\u01D6\"],[470,2],[471,1,\"\u01D8\"],[472,2],[473,1,\"\u01DA\"],[474,2],[475,1,\"\u01DC\"],[[476,477],2],[478,1,\"\u01DF\"],[479,2],[480,1,\"\u01E1\"],[481,2],[482,1,\"\u01E3\"],[483,2],[484,1,\"\u01E5\"],[485,2],[486,1,\"\u01E7\"],[487,2],[488,1,\"\u01E9\"],[489,2],[490,1,\"\u01EB\"],[491,2],[492,1,\"\u01ED\"],[493,2],[494,1,\"\u01EF\"],[[495,496],2],[[497,499],1,\"dz\"],[500,1,\"\u01F5\"],[501,2],[502,1,\"\u0195\"],[503,1,\"\u01BF\"],[504,1,\"\u01F9\"],[505,2],[506,1,\"\u01FB\"],[507,2],[508,1,\"\u01FD\"],[509,2],[510,1,\"\u01FF\"],[511,2],[512,1,\"\u0201\"],[513,2],[514,1,\"\u0203\"],[515,2],[516,1,\"\u0205\"],[517,2],[518,1,\"\u0207\"],[519,2],[520,1,\"\u0209\"],[521,2],[522,1,\"\u020B\"],[523,2],[524,1,\"\u020D\"],[525,2],[526,1,\"\u020F\"],[527,2],[528,1,\"\u0211\"],[529,2],[530,1,\"\u0213\"],[531,2],[532,1,\"\u0215\"],[533,2],[534,1,\"\u0217\"],[535,2],[536,1,\"\u0219\"],[537,2],[538,1,\"\u021B\"],[539,2],[540,1,\"\u021D\"],[541,2],[542,1,\"\u021F\"],[543,2],[544,1,\"\u019E\"],[545,2],[546,1,\"\u0223\"],[547,2],[548,1,\"\u0225\"],[549,2],[550,1,\"\u0227\"],[551,2],[552,1,\"\u0229\"],[553,2],[554,1,\"\u022B\"],[555,2],[556,1,\"\u022D\"],[557,2],[558,1,\"\u022F\"],[559,2],[560,1,\"\u0231\"],[561,2],[562,1,\"\u0233\"],[563,2],[[564,566],2],[[567,569],2],[570,1,\"\u2C65\"],[571,1,\"\u023C\"],[572,2],[573,1,\"\u019A\"],[574,1,\"\u2C66\"],[[575,576],2],[577,1,\"\u0242\"],[578,2],[579,1,\"\u0180\"],[580,1,\"\u0289\"],[581,1,\"\u028C\"],[582,1,\"\u0247\"],[583,2],[584,1,\"\u0249\"],[585,2],[586,1,\"\u024B\"],[587,2],[588,1,\"\u024D\"],[589,2],[590,1,\"\u024F\"],[591,2],[[592,680],2],[[681,685],2],[[686,687],2],[688,1,\"h\"],[689,1,\"\u0266\"],[690,1,\"j\"],[691,1,\"r\"],[692,1,\"\u0279\"],[693,1,\"\u027B\"],[694,1,\"\u0281\"],[695,1,\"w\"],[696,1,\"y\"],[[697,705],2],[[706,709],2],[[710,721],2],[[722,727],2],[728,1,\" \u0306\"],[729,1,\" \u0307\"],[730,1,\" \u030A\"],[731,1,\" \u0328\"],[732,1,\" \u0303\"],[733,1,\" \u030B\"],[734,2],[735,2],[736,1,\"\u0263\"],[737,1,\"l\"],[738,1,\"s\"],[739,1,\"x\"],[740,1,\"\u0295\"],[[741,745],2],[[746,747],2],[748,2],[749,2],[750,2],[[751,767],2],[[768,831],2],[832,1,\"\u0300\"],[833,1,\"\u0301\"],[834,2],[835,1,\"\u0313\"],[836,1,\"\u0308\u0301\"],[837,1,\"\u03B9\"],[[838,846],2],[847,7],[[848,855],2],[[856,860],2],[[861,863],2],[[864,865],2],[866,2],[[867,879],2],[880,1,\"\u0371\"],[881,2],[882,1,\"\u0373\"],[883,2],[884,1,\"\u02B9\"],[885,2],[886,1,\"\u0377\"],[887,2],[[888,889],3],[890,1,\" \u03B9\"],[[891,893],2],[894,1,\";\"],[895,1,\"\u03F3\"],[[896,899],3],[900,1,\" \u0301\"],[901,1,\" \u0308\u0301\"],[902,1,\"\u03AC\"],[903,1,\"\u00B7\"],[904,1,\"\u03AD\"],[905,1,\"\u03AE\"],[906,1,\"\u03AF\"],[907,3],[908,1,\"\u03CC\"],[909,3],[910,1,\"\u03CD\"],[911,1,\"\u03CE\"],[912,2],[913,1,\"\u03B1\"],[914,1,\"\u03B2\"],[915,1,\"\u03B3\"],[916,1,\"\u03B4\"],[917,1,\"\u03B5\"],[918,1,\"\u03B6\"],[919,1,\"\u03B7\"],[920,1,\"\u03B8\"],[921,1,\"\u03B9\"],[922,1,\"\u03BA\"],[923,1,\"\u03BB\"],[924,1,\"\u03BC\"],[925,1,\"\u03BD\"],[926,1,\"\u03BE\"],[927,1,\"\u03BF\"],[928,1,\"\u03C0\"],[929,1,\"\u03C1\"],[930,3],[931,1,\"\u03C3\"],[932,1,\"\u03C4\"],[933,1,\"\u03C5\"],[934,1,\"\u03C6\"],[935,1,\"\u03C7\"],[936,1,\"\u03C8\"],[937,1,\"\u03C9\"],[938,1,\"\u03CA\"],[939,1,\"\u03CB\"],[[940,961],2],[962,6,\"\u03C3\"],[[963,974],2],[975,1,\"\u03D7\"],[976,1,\"\u03B2\"],[977,1,\"\u03B8\"],[978,1,\"\u03C5\"],[979,1,\"\u03CD\"],[980,1,\"\u03CB\"],[981,1,\"\u03C6\"],[982,1,\"\u03C0\"],[983,2],[984,1,\"\u03D9\"],[985,2],[986,1,\"\u03DB\"],[987,2],[988,1,\"\u03DD\"],[989,2],[990,1,\"\u03DF\"],[991,2],[992,1,\"\u03E1\"],[993,2],[994,1,\"\u03E3\"],[995,2],[996,1,\"\u03E5\"],[997,2],[998,1,\"\u03E7\"],[999,2],[1000,1,\"\u03E9\"],[1001,2],[1002,1,\"\u03EB\"],[1003,2],[1004,1,\"\u03ED\"],[1005,2],[1006,1,\"\u03EF\"],[1007,2],[1008,1,\"\u03BA\"],[1009,1,\"\u03C1\"],[1010,1,\"\u03C3\"],[1011,2],[1012,1,\"\u03B8\"],[1013,1,\"\u03B5\"],[1014,2],[1015,1,\"\u03F8\"],[1016,2],[1017,1,\"\u03C3\"],[1018,1,\"\u03FB\"],[1019,2],[1020,2],[1021,1,\"\u037B\"],[1022,1,\"\u037C\"],[1023,1,\"\u037D\"],[1024,1,\"\u0450\"],[1025,1,\"\u0451\"],[1026,1,\"\u0452\"],[1027,1,\"\u0453\"],[1028,1,\"\u0454\"],[1029,1,\"\u0455\"],[1030,1,\"\u0456\"],[1031,1,\"\u0457\"],[1032,1,\"\u0458\"],[1033,1,\"\u0459\"],[1034,1,\"\u045A\"],[1035,1,\"\u045B\"],[1036,1,\"\u045C\"],[1037,1,\"\u045D\"],[1038,1,\"\u045E\"],[1039,1,\"\u045F\"],[1040,1,\"\u0430\"],[1041,1,\"\u0431\"],[1042,1,\"\u0432\"],[1043,1,\"\u0433\"],[1044,1,\"\u0434\"],[1045,1,\"\u0435\"],[1046,1,\"\u0436\"],[1047,1,\"\u0437\"],[1048,1,\"\u0438\"],[1049,1,\"\u0439\"],[1050,1,\"\u043A\"],[1051,1,\"\u043B\"],[1052,1,\"\u043C\"],[1053,1,\"\u043D\"],[1054,1,\"\u043E\"],[1055,1,\"\u043F\"],[1056,1,\"\u0440\"],[1057,1,\"\u0441\"],[1058,1,\"\u0442\"],[1059,1,\"\u0443\"],[1060,1,\"\u0444\"],[1061,1,\"\u0445\"],[1062,1,\"\u0446\"],[1063,1,\"\u0447\"],[1064,1,\"\u0448\"],[1065,1,\"\u0449\"],[1066,1,\"\u044A\"],[1067,1,\"\u044B\"],[1068,1,\"\u044C\"],[1069,1,\"\u044D\"],[1070,1,\"\u044E\"],[1071,1,\"\u044F\"],[[1072,1103],2],[1104,2],[[1105,1116],2],[1117,2],[[1118,1119],2],[1120,1,\"\u0461\"],[1121,2],[1122,1,\"\u0463\"],[1123,2],[1124,1,\"\u0465\"],[1125,2],[1126,1,\"\u0467\"],[1127,2],[1128,1,\"\u0469\"],[1129,2],[1130,1,\"\u046B\"],[1131,2],[1132,1,\"\u046D\"],[1133,2],[1134,1,\"\u046F\"],[1135,2],[1136,1,\"\u0471\"],[1137,2],[1138,1,\"\u0473\"],[1139,2],[1140,1,\"\u0475\"],[1141,2],[1142,1,\"\u0477\"],[1143,2],[1144,1,\"\u0479\"],[1145,2],[1146,1,\"\u047B\"],[1147,2],[1148,1,\"\u047D\"],[1149,2],[1150,1,\"\u047F\"],[1151,2],[1152,1,\"\u0481\"],[1153,2],[1154,2],[[1155,1158],2],[1159,2],[[1160,1161],2],[1162,1,\"\u048B\"],[1163,2],[1164,1,\"\u048D\"],[1165,2],[1166,1,\"\u048F\"],[1167,2],[1168,1,\"\u0491\"],[1169,2],[1170,1,\"\u0493\"],[1171,2],[1172,1,\"\u0495\"],[1173,2],[1174,1,\"\u0497\"],[1175,2],[1176,1,\"\u0499\"],[1177,2],[1178,1,\"\u049B\"],[1179,2],[1180,1,\"\u049D\"],[1181,2],[1182,1,\"\u049F\"],[1183,2],[1184,1,\"\u04A1\"],[1185,2],[1186,1,\"\u04A3\"],[1187,2],[1188,1,\"\u04A5\"],[1189,2],[1190,1,\"\u04A7\"],[1191,2],[1192,1,\"\u04A9\"],[1193,2],[1194,1,\"\u04AB\"],[1195,2],[1196,1,\"\u04AD\"],[1197,2],[1198,1,\"\u04AF\"],[1199,2],[1200,1,\"\u04B1\"],[1201,2],[1202,1,\"\u04B3\"],[1203,2],[1204,1,\"\u04B5\"],[1205,2],[1206,1,\"\u04B7\"],[1207,2],[1208,1,\"\u04B9\"],[1209,2],[1210,1,\"\u04BB\"],[1211,2],[1212,1,\"\u04BD\"],[1213,2],[1214,1,\"\u04BF\"],[1215,2],[1216,1,\"\u04CF\"],[1217,1,\"\u04C2\"],[1218,2],[1219,1,\"\u04C4\"],[1220,2],[1221,1,\"\u04C6\"],[1222,2],[1223,1,\"\u04C8\"],[1224,2],[1225,1,\"\u04CA\"],[1226,2],[1227,1,\"\u04CC\"],[1228,2],[1229,1,\"\u04CE\"],[1230,2],[1231,2],[1232,1,\"\u04D1\"],[1233,2],[1234,1,\"\u04D3\"],[1235,2],[1236,1,\"\u04D5\"],[1237,2],[1238,1,\"\u04D7\"],[1239,2],[1240,1,\"\u04D9\"],[1241,2],[1242,1,\"\u04DB\"],[1243,2],[1244,1,\"\u04DD\"],[1245,2],[1246,1,\"\u04DF\"],[1247,2],[1248,1,\"\u04E1\"],[1249,2],[1250,1,\"\u04E3\"],[1251,2],[1252,1,\"\u04E5\"],[1253,2],[1254,1,\"\u04E7\"],[1255,2],[1256,1,\"\u04E9\"],[1257,2],[1258,1,\"\u04EB\"],[1259,2],[1260,1,\"\u04ED\"],[1261,2],[1262,1,\"\u04EF\"],[1263,2],[1264,1,\"\u04F1\"],[1265,2],[1266,1,\"\u04F3\"],[1267,2],[1268,1,\"\u04F5\"],[1269,2],[1270,1,\"\u04F7\"],[1271,2],[1272,1,\"\u04F9\"],[1273,2],[1274,1,\"\u04FB\"],[1275,2],[1276,1,\"\u04FD\"],[1277,2],[1278,1,\"\u04FF\"],[1279,2],[1280,1,\"\u0501\"],[1281,2],[1282,1,\"\u0503\"],[1283,2],[1284,1,\"\u0505\"],[1285,2],[1286,1,\"\u0507\"],[1287,2],[1288,1,\"\u0509\"],[1289,2],[1290,1,\"\u050B\"],[1291,2],[1292,1,\"\u050D\"],[1293,2],[1294,1,\"\u050F\"],[1295,2],[1296,1,\"\u0511\"],[1297,2],[1298,1,\"\u0513\"],[1299,2],[1300,1,\"\u0515\"],[1301,2],[1302,1,\"\u0517\"],[1303,2],[1304,1,\"\u0519\"],[1305,2],[1306,1,\"\u051B\"],[1307,2],[1308,1,\"\u051D\"],[1309,2],[1310,1,\"\u051F\"],[1311,2],[1312,1,\"\u0521\"],[1313,2],[1314,1,\"\u0523\"],[1315,2],[1316,1,\"\u0525\"],[1317,2],[1318,1,\"\u0527\"],[1319,2],[1320,1,\"\u0529\"],[1321,2],[1322,1,\"\u052B\"],[1323,2],[1324,1,\"\u052D\"],[1325,2],[1326,1,\"\u052F\"],[1327,2],[1328,3],[1329,1,\"\u0561\"],[1330,1,\"\u0562\"],[1331,1,\"\u0563\"],[1332,1,\"\u0564\"],[1333,1,\"\u0565\"],[1334,1,\"\u0566\"],[1335,1,\"\u0567\"],[1336,1,\"\u0568\"],[1337,1,\"\u0569\"],[1338,1,\"\u056A\"],[1339,1,\"\u056B\"],[1340,1,\"\u056C\"],[1341,1,\"\u056D\"],[1342,1,\"\u056E\"],[1343,1,\"\u056F\"],[1344,1,\"\u0570\"],[1345,1,\"\u0571\"],[1346,1,\"\u0572\"],[1347,1,\"\u0573\"],[1348,1,\"\u0574\"],[1349,1,\"\u0575\"],[1350,1,\"\u0576\"],[1351,1,\"\u0577\"],[1352,1,\"\u0578\"],[1353,1,\"\u0579\"],[1354,1,\"\u057A\"],[1355,1,\"\u057B\"],[1356,1,\"\u057C\"],[1357,1,\"\u057D\"],[1358,1,\"\u057E\"],[1359,1,\"\u057F\"],[1360,1,\"\u0580\"],[1361,1,\"\u0581\"],[1362,1,\"\u0582\"],[1363,1,\"\u0583\"],[1364,1,\"\u0584\"],[1365,1,\"\u0585\"],[1366,1,\"\u0586\"],[[1367,1368],3],[1369,2],[[1370,1375],2],[1376,2],[[1377,1414],2],[1415,1,\"\u0565\u0582\"],[1416,2],[1417,2],[1418,2],[[1419,1420],3],[[1421,1422],2],[1423,2],[1424,3],[[1425,1441],2],[1442,2],[[1443,1455],2],[[1456,1465],2],[1466,2],[[1467,1469],2],[1470,2],[1471,2],[1472,2],[[1473,1474],2],[1475,2],[1476,2],[1477,2],[1478,2],[1479,2],[[1480,1487],3],[[1488,1514],2],[[1515,1518],3],[1519,2],[[1520,1524],2],[[1525,1535],3],[[1536,1539],3],[1540,3],[1541,3],[[1542,1546],2],[1547,2],[1548,2],[[1549,1551],2],[[1552,1557],2],[[1558,1562],2],[1563,2],[1564,3],[1565,2],[1566,2],[1567,2],[1568,2],[[1569,1594],2],[[1595,1599],2],[1600,2],[[1601,1618],2],[[1619,1621],2],[[1622,1624],2],[[1625,1630],2],[1631,2],[[1632,1641],2],[[1642,1645],2],[[1646,1647],2],[[1648,1652],2],[1653,1,\"\u0627\u0674\"],[1654,1,\"\u0648\u0674\"],[1655,1,\"\u06C7\u0674\"],[1656,1,\"\u064A\u0674\"],[[1657,1719],2],[[1720,1721],2],[[1722,1726],2],[1727,2],[[1728,1742],2],[1743,2],[[1744,1747],2],[1748,2],[[1749,1756],2],[1757,3],[1758,2],[[1759,1768],2],[1769,2],[[1770,1773],2],[[1774,1775],2],[[1776,1785],2],[[1786,1790],2],[1791,2],[[1792,1805],2],[1806,3],[1807,3],[[1808,1836],2],[[1837,1839],2],[[1840,1866],2],[[1867,1868],3],[[1869,1871],2],[[1872,1901],2],[[1902,1919],2],[[1920,1968],2],[1969,2],[[1970,1983],3],[[1984,2037],2],[[2038,2042],2],[[2043,2044],3],[2045,2],[[2046,2047],2],[[2048,2093],2],[[2094,2095],3],[[2096,2110],2],[2111,3],[[2112,2139],2],[[2140,2141],3],[2142,2],[2143,3],[[2144,2154],2],[[2155,2159],3],[[2160,2183],2],[2184,2],[[2185,2190],2],[2191,3],[[2192,2193],3],[[2194,2198],3],[2199,2],[[2200,2207],2],[2208,2],[2209,2],[[2210,2220],2],[[2221,2226],2],[[2227,2228],2],[2229,2],[[2230,2237],2],[[2238,2247],2],[[2248,2258],2],[2259,2],[[2260,2273],2],[2274,3],[2275,2],[[2276,2302],2],[2303,2],[2304,2],[[2305,2307],2],[2308,2],[[2309,2361],2],[[2362,2363],2],[[2364,2381],2],[2382,2],[2383,2],[[2384,2388],2],[2389,2],[[2390,2391],2],[2392,1,\"\u0915\u093C\"],[2393,1,\"\u0916\u093C\"],[2394,1,\"\u0917\u093C\"],[2395,1,\"\u091C\u093C\"],[2396,1,\"\u0921\u093C\"],[2397,1,\"\u0922\u093C\"],[2398,1,\"\u092B\u093C\"],[2399,1,\"\u092F\u093C\"],[[2400,2403],2],[[2404,2405],2],[[2406,2415],2],[2416,2],[[2417,2418],2],[[2419,2423],2],[2424,2],[[2425,2426],2],[[2427,2428],2],[2429,2],[[2430,2431],2],[2432,2],[[2433,2435],2],[2436,3],[[2437,2444],2],[[2445,2446],3],[[2447,2448],2],[[2449,2450],3],[[2451,2472],2],[2473,3],[[2474,2480],2],[2481,3],[2482,2],[[2483,2485],3],[[2486,2489],2],[[2490,2491],3],[2492,2],[2493,2],[[2494,2500],2],[[2501,2502],3],[[2503,2504],2],[[2505,2506],3],[[2507,2509],2],[2510,2],[[2511,2518],3],[2519,2],[[2520,2523],3],[2524,1,\"\u09A1\u09BC\"],[2525,1,\"\u09A2\u09BC\"],[2526,3],[2527,1,\"\u09AF\u09BC\"],[[2528,2531],2],[[2532,2533],3],[[2534,2545],2],[[2546,2554],2],[2555,2],[2556,2],[2557,2],[2558,2],[[2559,2560],3],[2561,2],[2562,2],[2563,2],[2564,3],[[2565,2570],2],[[2571,2574],3],[[2575,2576],2],[[2577,2578],3],[[2579,2600],2],[2601,3],[[2602,2608],2],[2609,3],[2610,2],[2611,1,\"\u0A32\u0A3C\"],[2612,3],[2613,2],[2614,1,\"\u0A38\u0A3C\"],[2615,3],[[2616,2617],2],[[2618,2619],3],[2620,2],[2621,3],[[2622,2626],2],[[2627,2630],3],[[2631,2632],2],[[2633,2634],3],[[2635,2637],2],[[2638,2640],3],[2641,2],[[2642,2648],3],[2649,1,\"\u0A16\u0A3C\"],[2650,1,\"\u0A17\u0A3C\"],[2651,1,\"\u0A1C\u0A3C\"],[2652,2],[2653,3],[2654,1,\"\u0A2B\u0A3C\"],[[2655,2661],3],[[2662,2676],2],[2677,2],[2678,2],[[2679,2688],3],[[2689,2691],2],[2692,3],[[2693,2699],2],[2700,2],[2701,2],[2702,3],[[2703,2705],2],[2706,3],[[2707,2728],2],[2729,3],[[2730,2736],2],[2737,3],[[2738,2739],2],[2740,3],[[2741,2745],2],[[2746,2747],3],[[2748,2757],2],[2758,3],[[2759,2761],2],[2762,3],[[2763,2765],2],[[2766,2767],3],[2768,2],[[2769,2783],3],[2784,2],[[2785,2787],2],[[2788,2789],3],[[2790,2799],2],[2800,2],[2801,2],[[2802,2808],3],[2809,2],[[2810,2815],2],[2816,3],[[2817,2819],2],[2820,3],[[2821,2828],2],[[2829,2830],3],[[2831,2832],2],[[2833,2834],3],[[2835,2856],2],[2857,3],[[2858,2864],2],[2865,3],[[2866,2867],2],[2868,3],[2869,2],[[2870,2873],2],[[2874,2875],3],[[2876,2883],2],[2884,2],[[2885,2886],3],[[2887,2888],2],[[2889,2890],3],[[2891,2893],2],[[2894,2900],3],[2901,2],[[2902,2903],2],[[2904,2907],3],[2908,1,\"\u0B21\u0B3C\"],[2909,1,\"\u0B22\u0B3C\"],[2910,3],[[2911,2913],2],[[2914,2915],2],[[2916,2917],3],[[2918,2927],2],[2928,2],[2929,2],[[2930,2935],2],[[2936,2945],3],[[2946,2947],2],[2948,3],[[2949,2954],2],[[2955,2957],3],[[2958,2960],2],[2961,3],[[2962,2965],2],[[2966,2968],3],[[2969,2970],2],[2971,3],[2972,2],[2973,3],[[2974,2975],2],[[2976,2978],3],[[2979,2980],2],[[2981,2983],3],[[2984,2986],2],[[2987,2989],3],[[2990,2997],2],[2998,2],[[2999,3001],2],[[3002,3005],3],[[3006,3010],2],[[3011,3013],3],[[3014,3016],2],[3017,3],[[3018,3021],2],[[3022,3023],3],[3024,2],[[3025,3030],3],[3031,2],[[3032,3045],3],[3046,2],[[3047,3055],2],[[3056,3058],2],[[3059,3066],2],[[3067,3071],3],[3072,2],[[3073,3075],2],[3076,2],[[3077,3084],2],[3085,3],[[3086,3088],2],[3089,3],[[3090,3112],2],[3113,3],[[3114,3123],2],[3124,2],[[3125,3129],2],[[3130,3131],3],[3132,2],[3133,2],[[3134,3140],2],[3141,3],[[3142,3144],2],[3145,3],[[3146,3149],2],[[3150,3156],3],[[3157,3158],2],[3159,3],[[3160,3161],2],[3162,2],[[3163,3164],3],[3165,2],[[3166,3167],3],[[3168,3169],2],[[3170,3171],2],[[3172,3173],3],[[3174,3183],2],[[3184,3190],3],[3191,2],[[3192,3199],2],[3200,2],[3201,2],[[3202,3203],2],[3204,2],[[3205,3212],2],[3213,3],[[3214,3216],2],[3217,3],[[3218,3240],2],[3241,3],[[3242,3251],2],[3252,3],[[3253,3257],2],[[3258,3259],3],[[3260,3261],2],[[3262,3268],2],[3269,3],[[3270,3272],2],[3273,3],[[3274,3277],2],[[3278,3284],3],[[3285,3286],2],[[3287,3292],3],[3293,2],[3294,2],[3295,3],[[3296,3297],2],[[3298,3299],2],[[3300,3301],3],[[3302,3311],2],[3312,3],[[3313,3314],2],[3315,2],[[3316,3327],3],[3328,2],[3329,2],[[3330,3331],2],[3332,2],[[3333,3340],2],[3341,3],[[3342,3344],2],[3345,3],[[3346,3368],2],[3369,2],[[3370,3385],2],[3386,2],[[3387,3388],2],[3389,2],[[3390,3395],2],[3396,2],[3397,3],[[3398,3400],2],[3401,3],[[3402,3405],2],[3406,2],[3407,2],[[3408,3411],3],[[3412,3414],2],[3415,2],[[3416,3422],2],[3423,2],[[3424,3425],2],[[3426,3427],2],[[3428,3429],3],[[3430,3439],2],[[3440,3445],2],[[3446,3448],2],[3449,2],[[3450,3455],2],[3456,3],[3457,2],[[3458,3459],2],[3460,3],[[3461,3478],2],[[3479,3481],3],[[3482,3505],2],[3506,3],[[3507,3515],2],[3516,3],[3517,2],[[3518,3519],3],[[3520,3526],2],[[3527,3529],3],[3530,2],[[3531,3534],3],[[3535,3540],2],[3541,3],[3542,2],[3543,3],[[3544,3551],2],[[3552,3557],3],[[3558,3567],2],[[3568,3569],3],[[3570,3571],2],[3572,2],[[3573,3584],3],[[3585,3634],2],[3635,1,\"\u0E4D\u0E32\"],[[3636,3642],2],[[3643,3646],3],[3647,2],[[3648,3662],2],[3663,2],[[3664,3673],2],[[3674,3675],2],[[3676,3712],3],[[3713,3714],2],[3715,3],[3716,2],[3717,3],[3718,2],[[3719,3720],2],[3721,2],[3722,2],[3723,3],[3724,2],[3725,2],[[3726,3731],2],[[3732,3735],2],[3736,2],[[3737,3743],2],[3744,2],[[3745,3747],2],[3748,3],[3749,2],[3750,3],[3751,2],[[3752,3753],2],[[3754,3755],2],[3756,2],[[3757,3762],2],[3763,1,\"\u0ECD\u0EB2\"],[[3764,3769],2],[3770,2],[[3771,3773],2],[[3774,3775],3],[[3776,3780],2],[3781,3],[3782,2],[3783,3],[[3784,3789],2],[3790,2],[3791,3],[[3792,3801],2],[[3802,3803],3],[3804,1,\"\u0EAB\u0E99\"],[3805,1,\"\u0EAB\u0EA1\"],[[3806,3807],2],[[3808,3839],3],[3840,2],[[3841,3850],2],[3851,2],[3852,1,\"\u0F0B\"],[[3853,3863],2],[[3864,3865],2],[[3866,3871],2],[[3872,3881],2],[[3882,3892],2],[3893,2],[3894,2],[3895,2],[3896,2],[3897,2],[[3898,3901],2],[[3902,3906],2],[3907,1,\"\u0F42\u0FB7\"],[[3908,3911],2],[3912,3],[[3913,3916],2],[3917,1,\"\u0F4C\u0FB7\"],[[3918,3921],2],[3922,1,\"\u0F51\u0FB7\"],[[3923,3926],2],[3927,1,\"\u0F56\u0FB7\"],[[3928,3931],2],[3932,1,\"\u0F5B\u0FB7\"],[[3933,3944],2],[3945,1,\"\u0F40\u0FB5\"],[3946,2],[[3947,3948],2],[[3949,3952],3],[[3953,3954],2],[3955,1,\"\u0F71\u0F72\"],[3956,2],[3957,1,\"\u0F71\u0F74\"],[3958,1,\"\u0FB2\u0F80\"],[3959,1,\"\u0FB2\u0F71\u0F80\"],[3960,1,\"\u0FB3\u0F80\"],[3961,1,\"\u0FB3\u0F71\u0F80\"],[[3962,3968],2],[3969,1,\"\u0F71\u0F80\"],[[3970,3972],2],[3973,2],[[3974,3979],2],[[3980,3983],2],[[3984,3986],2],[3987,1,\"\u0F92\u0FB7\"],[[3988,3989],2],[3990,2],[3991,2],[3992,3],[[3993,3996],2],[3997,1,\"\u0F9C\u0FB7\"],[[3998,4001],2],[4002,1,\"\u0FA1\u0FB7\"],[[4003,4006],2],[4007,1,\"\u0FA6\u0FB7\"],[[4008,4011],2],[4012,1,\"\u0FAB\u0FB7\"],[4013,2],[[4014,4016],2],[[4017,4023],2],[4024,2],[4025,1,\"\u0F90\u0FB5\"],[[4026,4028],2],[4029,3],[[4030,4037],2],[4038,2],[[4039,4044],2],[4045,3],[4046,2],[4047,2],[[4048,4049],2],[[4050,4052],2],[[4053,4056],2],[[4057,4058],2],[[4059,4095],3],[[4096,4129],2],[4130,2],[[4131,4135],2],[4136,2],[[4137,4138],2],[4139,2],[[4140,4146],2],[[4147,4149],2],[[4150,4153],2],[[4154,4159],2],[[4160,4169],2],[[4170,4175],2],[[4176,4185],2],[[4186,4249],2],[[4250,4253],2],[[4254,4255],2],[4256,1,\"\u2D00\"],[4257,1,\"\u2D01\"],[4258,1,\"\u2D02\"],[4259,1,\"\u2D03\"],[4260,1,\"\u2D04\"],[4261,1,\"\u2D05\"],[4262,1,\"\u2D06\"],[4263,1,\"\u2D07\"],[4264,1,\"\u2D08\"],[4265,1,\"\u2D09\"],[4266,1,\"\u2D0A\"],[4267,1,\"\u2D0B\"],[4268,1,\"\u2D0C\"],[4269,1,\"\u2D0D\"],[4270,1,\"\u2D0E\"],[4271,1,\"\u2D0F\"],[4272,1,\"\u2D10\"],[4273,1,\"\u2D11\"],[4274,1,\"\u2D12\"],[4275,1,\"\u2D13\"],[4276,1,\"\u2D14\"],[4277,1,\"\u2D15\"],[4278,1,\"\u2D16\"],[4279,1,\"\u2D17\"],[4280,1,\"\u2D18\"],[4281,1,\"\u2D19\"],[4282,1,\"\u2D1A\"],[4283,1,\"\u2D1B\"],[4284,1,\"\u2D1C\"],[4285,1,\"\u2D1D\"],[4286,1,\"\u2D1E\"],[4287,1,\"\u2D1F\"],[4288,1,\"\u2D20\"],[4289,1,\"\u2D21\"],[4290,1,\"\u2D22\"],[4291,1,\"\u2D23\"],[4292,1,\"\u2D24\"],[4293,1,\"\u2D25\"],[4294,3],[4295,1,\"\u2D27\"],[[4296,4300],3],[4301,1,\"\u2D2D\"],[[4302,4303],3],[[4304,4342],2],[[4343,4344],2],[[4345,4346],2],[4347,2],[4348,1,\"\u10DC\"],[[4349,4351],2],[[4352,4441],2],[[4442,4446],2],[[4447,4448],7],[[4449,4514],2],[[4515,4519],2],[[4520,4601],2],[[4602,4607],2],[[4608,4614],2],[4615,2],[[4616,4678],2],[4679,2],[4680,2],[4681,3],[[4682,4685],2],[[4686,4687],3],[[4688,4694],2],[4695,3],[4696,2],[4697,3],[[4698,4701],2],[[4702,4703],3],[[4704,4742],2],[4743,2],[4744,2],[4745,3],[[4746,4749],2],[[4750,4751],3],[[4752,4782],2],[4783,2],[4784,2],[4785,3],[[4786,4789],2],[[4790,4791],3],[[4792,4798],2],[4799,3],[4800,2],[4801,3],[[4802,4805],2],[[4806,4807],3],[[4808,4814],2],[4815,2],[[4816,4822],2],[4823,3],[[4824,4846],2],[4847,2],[[4848,4878],2],[4879,2],[4880,2],[4881,3],[[4882,4885],2],[[4886,4887],3],[[4888,4894],2],[4895,2],[[4896,4934],2],[4935,2],[[4936,4954],2],[[4955,4956],3],[[4957,4958],2],[4959,2],[4960,2],[[4961,4988],2],[[4989,4991],3],[[4992,5007],2],[[5008,5017],2],[[5018,5023],3],[[5024,5108],2],[5109,2],[[5110,5111],3],[5112,1,\"\u13F0\"],[5113,1,\"\u13F1\"],[5114,1,\"\u13F2\"],[5115,1,\"\u13F3\"],[5116,1,\"\u13F4\"],[5117,1,\"\u13F5\"],[[5118,5119],3],[5120,2],[[5121,5740],2],[[5741,5742],2],[[5743,5750],2],[[5751,5759],2],[5760,3],[[5761,5786],2],[[5787,5788],2],[[5789,5791],3],[[5792,5866],2],[[5867,5872],2],[[5873,5880],2],[[5881,5887],3],[[5888,5900],2],[5901,2],[[5902,5908],2],[5909,2],[[5910,5918],3],[5919,2],[[5920,5940],2],[[5941,5942],2],[[5943,5951],3],[[5952,5971],2],[[5972,5983],3],[[5984,5996],2],[5997,3],[[5998,6000],2],[6001,3],[[6002,6003],2],[[6004,6015],3],[[6016,6067],2],[[6068,6069],7],[[6070,6099],2],[[6100,6102],2],[6103,2],[[6104,6107],2],[6108,2],[6109,2],[[6110,6111],3],[[6112,6121],2],[[6122,6127],3],[[6128,6137],2],[[6138,6143],3],[[6144,6154],2],[[6155,6158],7],[6159,7],[[6160,6169],2],[[6170,6175],3],[[6176,6263],2],[6264,2],[[6265,6271],3],[[6272,6313],2],[6314,2],[[6315,6319],3],[[6320,6389],2],[[6390,6399],3],[[6400,6428],2],[[6429,6430],2],[6431,3],[[6432,6443],2],[[6444,6447],3],[[6448,6459],2],[[6460,6463],3],[6464,2],[[6465,6467],3],[[6468,6469],2],[[6470,6509],2],[[6510,6511],3],[[6512,6516],2],[[6517,6527],3],[[6528,6569],2],[[6570,6571],2],[[6572,6575],3],[[6576,6601],2],[[6602,6607],3],[[6608,6617],2],[6618,2],[[6619,6621],3],[[6622,6623],2],[[6624,6655],2],[[6656,6683],2],[[6684,6685],3],[[6686,6687],2],[[6688,6750],2],[6751,3],[[6752,6780],2],[[6781,6782],3],[[6783,6793],2],[[6794,6799],3],[[6800,6809],2],[[6810,6815],3],[[6816,6822],2],[6823,2],[[6824,6829],2],[[6830,6831],3],[[6832,6845],2],[6846,2],[[6847,6848],2],[[6849,6862],2],[[6863,6911],3],[[6912,6987],2],[6988,2],[6989,3],[[6990,6991],2],[[6992,7001],2],[[7002,7018],2],[[7019,7027],2],[[7028,7036],2],[[7037,7038],2],[7039,2],[[7040,7082],2],[[7083,7085],2],[[7086,7097],2],[[7098,7103],2],[[7104,7155],2],[[7156,7163],3],[[7164,7167],2],[[7168,7223],2],[[7224,7226],3],[[7227,7231],2],[[7232,7241],2],[[7242,7244],3],[[7245,7293],2],[[7294,7295],2],[7296,1,\"\u0432\"],[7297,1,\"\u0434\"],[7298,1,\"\u043E\"],[7299,1,\"\u0441\"],[[7300,7301],1,\"\u0442\"],[7302,1,\"\u044A\"],[7303,1,\"\u0463\"],[7304,1,\"\uA64B\"],[7305,1,\"\u1C8A\"],[7306,2],[[7307,7311],3],[7312,1,\"\u10D0\"],[7313,1,\"\u10D1\"],[7314,1,\"\u10D2\"],[7315,1,\"\u10D3\"],[7316,1,\"\u10D4\"],[7317,1,\"\u10D5\"],[7318,1,\"\u10D6\"],[7319,1,\"\u10D7\"],[7320,1,\"\u10D8\"],[7321,1,\"\u10D9\"],[7322,1,\"\u10DA\"],[7323,1,\"\u10DB\"],[7324,1,\"\u10DC\"],[7325,1,\"\u10DD\"],[7326,1,\"\u10DE\"],[7327,1,\"\u10DF\"],[7328,1,\"\u10E0\"],[7329,1,\"\u10E1\"],[7330,1,\"\u10E2\"],[7331,1,\"\u10E3\"],[7332,1,\"\u10E4\"],[7333,1,\"\u10E5\"],[7334,1,\"\u10E6\"],[7335,1,\"\u10E7\"],[7336,1,\"\u10E8\"],[7337,1,\"\u10E9\"],[7338,1,\"\u10EA\"],[7339,1,\"\u10EB\"],[7340,1,\"\u10EC\"],[7341,1,\"\u10ED\"],[7342,1,\"\u10EE\"],[7343,1,\"\u10EF\"],[7344,1,\"\u10F0\"],[7345,1,\"\u10F1\"],[7346,1,\"\u10F2\"],[7347,1,\"\u10F3\"],[7348,1,\"\u10F4\"],[7349,1,\"\u10F5\"],[7350,1,\"\u10F6\"],[7351,1,\"\u10F7\"],[7352,1,\"\u10F8\"],[7353,1,\"\u10F9\"],[7354,1,\"\u10FA\"],[[7355,7356],3],[7357,1,\"\u10FD\"],[7358,1,\"\u10FE\"],[7359,1,\"\u10FF\"],[[7360,7367],2],[[7368,7375],3],[[7376,7378],2],[7379,2],[[7380,7410],2],[[7411,7414],2],[7415,2],[[7416,7417],2],[7418,2],[[7419,7423],3],[[7424,7467],2],[7468,1,\"a\"],[7469,1,\"\u00E6\"],[7470,1,\"b\"],[7471,2],[7472,1,\"d\"],[7473,1,\"e\"],[7474,1,\"\u01DD\"],[7475,1,\"g\"],[7476,1,\"h\"],[7477,1,\"i\"],[7478,1,\"j\"],[7479,1,\"k\"],[7480,1,\"l\"],[7481,1,\"m\"],[7482,1,\"n\"],[7483,2],[7484,1,\"o\"],[7485,1,\"\u0223\"],[7486,1,\"p\"],[7487,1,\"r\"],[7488,1,\"t\"],[7489,1,\"u\"],[7490,1,\"w\"],[7491,1,\"a\"],[7492,1,\"\u0250\"],[7493,1,\"\u0251\"],[7494,1,\"\u1D02\"],[7495,1,\"b\"],[7496,1,\"d\"],[7497,1,\"e\"],[7498,1,\"\u0259\"],[7499,1,\"\u025B\"],[7500,1,\"\u025C\"],[7501,1,\"g\"],[7502,2],[7503,1,\"k\"],[7504,1,\"m\"],[7505,1,\"\u014B\"],[7506,1,\"o\"],[7507,1,\"\u0254\"],[7508,1,\"\u1D16\"],[7509,1,\"\u1D17\"],[7510,1,\"p\"],[7511,1,\"t\"],[7512,1,\"u\"],[7513,1,\"\u1D1D\"],[7514,1,\"\u026F\"],[7515,1,\"v\"],[7516,1,\"\u1D25\"],[7517,1,\"\u03B2\"],[7518,1,\"\u03B3\"],[7519,1,\"\u03B4\"],[7520,1,\"\u03C6\"],[7521,1,\"\u03C7\"],[7522,1,\"i\"],[7523,1,\"r\"],[7524,1,\"u\"],[7525,1,\"v\"],[7526,1,\"\u03B2\"],[7527,1,\"\u03B3\"],[7528,1,\"\u03C1\"],[7529,1,\"\u03C6\"],[7530,1,\"\u03C7\"],[7531,2],[[7532,7543],2],[7544,1,\"\u043D\"],[[7545,7578],2],[7579,1,\"\u0252\"],[7580,1,\"c\"],[7581,1,\"\u0255\"],[7582,1,\"\u00F0\"],[7583,1,\"\u025C\"],[7584,1,\"f\"],[7585,1,\"\u025F\"],[7586,1,\"\u0261\"],[7587,1,\"\u0265\"],[7588,1,\"\u0268\"],[7589,1,\"\u0269\"],[7590,1,\"\u026A\"],[7591,1,\"\u1D7B\"],[7592,1,\"\u029D\"],[7593,1,\"\u026D\"],[7594,1,\"\u1D85\"],[7595,1,\"\u029F\"],[7596,1,\"\u0271\"],[7597,1,\"\u0270\"],[7598,1,\"\u0272\"],[7599,1,\"\u0273\"],[7600,1,\"\u0274\"],[7601,1,\"\u0275\"],[7602,1,\"\u0278\"],[7603,1,\"\u0282\"],[7604,1,\"\u0283\"],[7605,1,\"\u01AB\"],[7606,1,\"\u0289\"],[7607,1,\"\u028A\"],[7608,1,\"\u1D1C\"],[7609,1,\"\u028B\"],[7610,1,\"\u028C\"],[7611,1,\"z\"],[7612,1,\"\u0290\"],[7613,1,\"\u0291\"],[7614,1,\"\u0292\"],[7615,1,\"\u03B8\"],[[7616,7619],2],[[7620,7626],2],[[7627,7654],2],[[7655,7669],2],[[7670,7673],2],[7674,2],[7675,2],[7676,2],[7677,2],[[7678,7679],2],[7680,1,\"\u1E01\"],[7681,2],[7682,1,\"\u1E03\"],[7683,2],[7684,1,\"\u1E05\"],[7685,2],[7686,1,\"\u1E07\"],[7687,2],[7688,1,\"\u1E09\"],[7689,2],[7690,1,\"\u1E0B\"],[7691,2],[7692,1,\"\u1E0D\"],[7693,2],[7694,1,\"\u1E0F\"],[7695,2],[7696,1,\"\u1E11\"],[7697,2],[7698,1,\"\u1E13\"],[7699,2],[7700,1,\"\u1E15\"],[7701,2],[7702,1,\"\u1E17\"],[7703,2],[7704,1,\"\u1E19\"],[7705,2],[7706,1,\"\u1E1B\"],[7707,2],[7708,1,\"\u1E1D\"],[7709,2],[7710,1,\"\u1E1F\"],[7711,2],[7712,1,\"\u1E21\"],[7713,2],[7714,1,\"\u1E23\"],[7715,2],[7716,1,\"\u1E25\"],[7717,2],[7718,1,\"\u1E27\"],[7719,2],[7720,1,\"\u1E29\"],[7721,2],[7722,1,\"\u1E2B\"],[7723,2],[7724,1,\"\u1E2D\"],[7725,2],[7726,1,\"\u1E2F\"],[7727,2],[7728,1,\"\u1E31\"],[7729,2],[7730,1,\"\u1E33\"],[7731,2],[7732,1,\"\u1E35\"],[7733,2],[7734,1,\"\u1E37\"],[7735,2],[7736,1,\"\u1E39\"],[7737,2],[7738,1,\"\u1E3B\"],[7739,2],[7740,1,\"\u1E3D\"],[7741,2],[7742,1,\"\u1E3F\"],[7743,2],[7744,1,\"\u1E41\"],[7745,2],[7746,1,\"\u1E43\"],[7747,2],[7748,1,\"\u1E45\"],[7749,2],[7750,1,\"\u1E47\"],[7751,2],[7752,1,\"\u1E49\"],[7753,2],[7754,1,\"\u1E4B\"],[7755,2],[7756,1,\"\u1E4D\"],[7757,2],[7758,1,\"\u1E4F\"],[7759,2],[7760,1,\"\u1E51\"],[7761,2],[7762,1,\"\u1E53\"],[7763,2],[7764,1,\"\u1E55\"],[7765,2],[7766,1,\"\u1E57\"],[7767,2],[7768,1,\"\u1E59\"],[7769,2],[7770,1,\"\u1E5B\"],[7771,2],[7772,1,\"\u1E5D\"],[7773,2],[7774,1,\"\u1E5F\"],[7775,2],[7776,1,\"\u1E61\"],[7777,2],[7778,1,\"\u1E63\"],[7779,2],[7780,1,\"\u1E65\"],[7781,2],[7782,1,\"\u1E67\"],[7783,2],[7784,1,\"\u1E69\"],[7785,2],[7786,1,\"\u1E6B\"],[7787,2],[7788,1,\"\u1E6D\"],[7789,2],[7790,1,\"\u1E6F\"],[7791,2],[7792,1,\"\u1E71\"],[7793,2],[7794,1,\"\u1E73\"],[7795,2],[7796,1,\"\u1E75\"],[7797,2],[7798,1,\"\u1E77\"],[7799,2],[7800,1,\"\u1E79\"],[7801,2],[7802,1,\"\u1E7B\"],[7803,2],[7804,1,\"\u1E7D\"],[7805,2],[7806,1,\"\u1E7F\"],[7807,2],[7808,1,\"\u1E81\"],[7809,2],[7810,1,\"\u1E83\"],[7811,2],[7812,1,\"\u1E85\"],[7813,2],[7814,1,\"\u1E87\"],[7815,2],[7816,1,\"\u1E89\"],[7817,2],[7818,1,\"\u1E8B\"],[7819,2],[7820,1,\"\u1E8D\"],[7821,2],[7822,1,\"\u1E8F\"],[7823,2],[7824,1,\"\u1E91\"],[7825,2],[7826,1,\"\u1E93\"],[7827,2],[7828,1,\"\u1E95\"],[[7829,7833],2],[7834,1,\"a\u02BE\"],[7835,1,\"\u1E61\"],[[7836,7837],2],[7838,1,\"\u00DF\"],[7839,2],[7840,1,\"\u1EA1\"],[7841,2],[7842,1,\"\u1EA3\"],[7843,2],[7844,1,\"\u1EA5\"],[7845,2],[7846,1,\"\u1EA7\"],[7847,2],[7848,1,\"\u1EA9\"],[7849,2],[7850,1,\"\u1EAB\"],[7851,2],[7852,1,\"\u1EAD\"],[7853,2],[7854,1,\"\u1EAF\"],[7855,2],[7856,1,\"\u1EB1\"],[7857,2],[7858,1,\"\u1EB3\"],[7859,2],[7860,1,\"\u1EB5\"],[7861,2],[7862,1,\"\u1EB7\"],[7863,2],[7864,1,\"\u1EB9\"],[7865,2],[7866,1,\"\u1EBB\"],[7867,2],[7868,1,\"\u1EBD\"],[7869,2],[7870,1,\"\u1EBF\"],[7871,2],[7872,1,\"\u1EC1\"],[7873,2],[7874,1,\"\u1EC3\"],[7875,2],[7876,1,\"\u1EC5\"],[7877,2],[7878,1,\"\u1EC7\"],[7879,2],[7880,1,\"\u1EC9\"],[7881,2],[7882,1,\"\u1ECB\"],[7883,2],[7884,1,\"\u1ECD\"],[7885,2],[7886,1,\"\u1ECF\"],[7887,2],[7888,1,\"\u1ED1\"],[7889,2],[7890,1,\"\u1ED3\"],[7891,2],[7892,1,\"\u1ED5\"],[7893,2],[7894,1,\"\u1ED7\"],[7895,2],[7896,1,\"\u1ED9\"],[7897,2],[7898,1,\"\u1EDB\"],[7899,2],[7900,1,\"\u1EDD\"],[7901,2],[7902,1,\"\u1EDF\"],[7903,2],[7904,1,\"\u1EE1\"],[7905,2],[7906,1,\"\u1EE3\"],[7907,2],[7908,1,\"\u1EE5\"],[7909,2],[7910,1,\"\u1EE7\"],[7911,2],[7912,1,\"\u1EE9\"],[7913,2],[7914,1,\"\u1EEB\"],[7915,2],[7916,1,\"\u1EED\"],[7917,2],[7918,1,\"\u1EEF\"],[7919,2],[7920,1,\"\u1EF1\"],[7921,2],[7922,1,\"\u1EF3\"],[7923,2],[7924,1,\"\u1EF5\"],[7925,2],[7926,1,\"\u1EF7\"],[7927,2],[7928,1,\"\u1EF9\"],[7929,2],[7930,1,\"\u1EFB\"],[7931,2],[7932,1,\"\u1EFD\"],[7933,2],[7934,1,\"\u1EFF\"],[7935,2],[[7936,7943],2],[7944,1,\"\u1F00\"],[7945,1,\"\u1F01\"],[7946,1,\"\u1F02\"],[7947,1,\"\u1F03\"],[7948,1,\"\u1F04\"],[7949,1,\"\u1F05\"],[7950,1,\"\u1F06\"],[7951,1,\"\u1F07\"],[[7952,7957],2],[[7958,7959],3],[7960,1,\"\u1F10\"],[7961,1,\"\u1F11\"],[7962,1,\"\u1F12\"],[7963,1,\"\u1F13\"],[7964,1,\"\u1F14\"],[7965,1,\"\u1F15\"],[[7966,7967],3],[[7968,7975],2],[7976,1,\"\u1F20\"],[7977,1,\"\u1F21\"],[7978,1,\"\u1F22\"],[7979,1,\"\u1F23\"],[7980,1,\"\u1F24\"],[7981,1,\"\u1F25\"],[7982,1,\"\u1F26\"],[7983,1,\"\u1F27\"],[[7984,7991],2],[7992,1,\"\u1F30\"],[7993,1,\"\u1F31\"],[7994,1,\"\u1F32\"],[7995,1,\"\u1F33\"],[7996,1,\"\u1F34\"],[7997,1,\"\u1F35\"],[7998,1,\"\u1F36\"],[7999,1,\"\u1F37\"],[[8000,8005],2],[[8006,8007],3],[8008,1,\"\u1F40\"],[8009,1,\"\u1F41\"],[8010,1,\"\u1F42\"],[8011,1,\"\u1F43\"],[8012,1,\"\u1F44\"],[8013,1,\"\u1F45\"],[[8014,8015],3],[[8016,8023],2],[8024,3],[8025,1,\"\u1F51\"],[8026,3],[8027,1,\"\u1F53\"],[8028,3],[8029,1,\"\u1F55\"],[8030,3],[8031,1,\"\u1F57\"],[[8032,8039],2],[8040,1,\"\u1F60\"],[8041,1,\"\u1F61\"],[8042,1,\"\u1F62\"],[8043,1,\"\u1F63\"],[8044,1,\"\u1F64\"],[8045,1,\"\u1F65\"],[8046,1,\"\u1F66\"],[8047,1,\"\u1F67\"],[8048,2],[8049,1,\"\u03AC\"],[8050,2],[8051,1,\"\u03AD\"],[8052,2],[8053,1,\"\u03AE\"],[8054,2],[8055,1,\"\u03AF\"],[8056,2],[8057,1,\"\u03CC\"],[8058,2],[8059,1,\"\u03CD\"],[8060,2],[8061,1,\"\u03CE\"],[[8062,8063],3],[8064,1,\"\u1F00\u03B9\"],[8065,1,\"\u1F01\u03B9\"],[8066,1,\"\u1F02\u03B9\"],[8067,1,\"\u1F03\u03B9\"],[8068,1,\"\u1F04\u03B9\"],[8069,1,\"\u1F05\u03B9\"],[8070,1,\"\u1F06\u03B9\"],[8071,1,\"\u1F07\u03B9\"],[8072,1,\"\u1F00\u03B9\"],[8073,1,\"\u1F01\u03B9\"],[8074,1,\"\u1F02\u03B9\"],[8075,1,\"\u1F03\u03B9\"],[8076,1,\"\u1F04\u03B9\"],[8077,1,\"\u1F05\u03B9\"],[8078,1,\"\u1F06\u03B9\"],[8079,1,\"\u1F07\u03B9\"],[8080,1,\"\u1F20\u03B9\"],[8081,1,\"\u1F21\u03B9\"],[8082,1,\"\u1F22\u03B9\"],[8083,1,\"\u1F23\u03B9\"],[8084,1,\"\u1F24\u03B9\"],[8085,1,\"\u1F25\u03B9\"],[8086,1,\"\u1F26\u03B9\"],[8087,1,\"\u1F27\u03B9\"],[8088,1,\"\u1F20\u03B9\"],[8089,1,\"\u1F21\u03B9\"],[8090,1,\"\u1F22\u03B9\"],[8091,1,\"\u1F23\u03B9\"],[8092,1,\"\u1F24\u03B9\"],[8093,1,\"\u1F25\u03B9\"],[8094,1,\"\u1F26\u03B9\"],[8095,1,\"\u1F27\u03B9\"],[8096,1,\"\u1F60\u03B9\"],[8097,1,\"\u1F61\u03B9\"],[8098,1,\"\u1F62\u03B9\"],[8099,1,\"\u1F63\u03B9\"],[8100,1,\"\u1F64\u03B9\"],[8101,1,\"\u1F65\u03B9\"],[8102,1,\"\u1F66\u03B9\"],[8103,1,\"\u1F67\u03B9\"],[8104,1,\"\u1F60\u03B9\"],[8105,1,\"\u1F61\u03B9\"],[8106,1,\"\u1F62\u03B9\"],[8107,1,\"\u1F63\u03B9\"],[8108,1,\"\u1F64\u03B9\"],[8109,1,\"\u1F65\u03B9\"],[8110,1,\"\u1F66\u03B9\"],[8111,1,\"\u1F67\u03B9\"],[[8112,8113],2],[8114,1,\"\u1F70\u03B9\"],[8115,1,\"\u03B1\u03B9\"],[8116,1,\"\u03AC\u03B9\"],[8117,3],[8118,2],[8119,1,\"\u1FB6\u03B9\"],[8120,1,\"\u1FB0\"],[8121,1,\"\u1FB1\"],[8122,1,\"\u1F70\"],[8123,1,\"\u03AC\"],[8124,1,\"\u03B1\u03B9\"],[8125,1,\" \u0313\"],[8126,1,\"\u03B9\"],[8127,1,\" \u0313\"],[8128,1,\" \u0342\"],[8129,1,\" \u0308\u0342\"],[8130,1,\"\u1F74\u03B9\"],[8131,1,\"\u03B7\u03B9\"],[8132,1,\"\u03AE\u03B9\"],[8133,3],[8134,2],[8135,1,\"\u1FC6\u03B9\"],[8136,1,\"\u1F72\"],[8137,1,\"\u03AD\"],[8138,1,\"\u1F74\"],[8139,1,\"\u03AE\"],[8140,1,\"\u03B7\u03B9\"],[8141,1,\" \u0313\u0300\"],[8142,1,\" \u0313\u0301\"],[8143,1,\" \u0313\u0342\"],[[8144,8146],2],[8147,1,\"\u0390\"],[[8148,8149],3],[[8150,8151],2],[8152,1,\"\u1FD0\"],[8153,1,\"\u1FD1\"],[8154,1,\"\u1F76\"],[8155,1,\"\u03AF\"],[8156,3],[8157,1,\" \u0314\u0300\"],[8158,1,\" \u0314\u0301\"],[8159,1,\" \u0314\u0342\"],[[8160,8162],2],[8163,1,\"\u03B0\"],[[8164,8167],2],[8168,1,\"\u1FE0\"],[8169,1,\"\u1FE1\"],[8170,1,\"\u1F7A\"],[8171,1,\"\u03CD\"],[8172,1,\"\u1FE5\"],[8173,1,\" \u0308\u0300\"],[8174,1,\" \u0308\u0301\"],[8175,1,\"`\"],[[8176,8177],3],[8178,1,\"\u1F7C\u03B9\"],[8179,1,\"\u03C9\u03B9\"],[8180,1,\"\u03CE\u03B9\"],[8181,3],[8182,2],[8183,1,\"\u1FF6\u03B9\"],[8184,1,\"\u1F78\"],[8185,1,\"\u03CC\"],[8186,1,\"\u1F7C\"],[8187,1,\"\u03CE\"],[8188,1,\"\u03C9\u03B9\"],[8189,1,\" \u0301\"],[8190,1,\" \u0314\"],[8191,3],[[8192,8202],1,\" \"],[8203,7],[[8204,8205],6,\"\"],[[8206,8207],3],[8208,2],[8209,1,\"\u2010\"],[[8210,8214],2],[8215,1,\" \u0333\"],[[8216,8227],2],[[8228,8230],3],[8231,2],[[8232,8238],3],[8239,1,\" \"],[[8240,8242],2],[8243,1,\"\u2032\u2032\"],[8244,1,\"\u2032\u2032\u2032\"],[8245,2],[8246,1,\"\u2035\u2035\"],[8247,1,\"\u2035\u2035\u2035\"],[[8248,8251],2],[8252,1,\"!!\"],[8253,2],[8254,1,\" \u0305\"],[[8255,8262],2],[8263,1,\"??\"],[8264,1,\"?!\"],[8265,1,\"!?\"],[[8266,8269],2],[[8270,8274],2],[[8275,8276],2],[[8277,8278],2],[8279,1,\"\u2032\u2032\u2032\u2032\"],[[8280,8286],2],[8287,1,\" \"],[[8288,8291],7],[8292,7],[8293,3],[[8294,8297],3],[[8298,8303],7],[8304,1,\"0\"],[8305,1,\"i\"],[[8306,8307],3],[8308,1,\"4\"],[8309,1,\"5\"],[8310,1,\"6\"],[8311,1,\"7\"],[8312,1,\"8\"],[8313,1,\"9\"],[8314,1,\"+\"],[8315,1,\"\u2212\"],[8316,1,\"=\"],[8317,1,\"(\"],[8318,1,\")\"],[8319,1,\"n\"],[8320,1,\"0\"],[8321,1,\"1\"],[8322,1,\"2\"],[8323,1,\"3\"],[8324,1,\"4\"],[8325,1,\"5\"],[8326,1,\"6\"],[8327,1,\"7\"],[8328,1,\"8\"],[8329,1,\"9\"],[8330,1,\"+\"],[8331,1,\"\u2212\"],[8332,1,\"=\"],[8333,1,\"(\"],[8334,1,\")\"],[8335,3],[8336,1,\"a\"],[8337,1,\"e\"],[8338,1,\"o\"],[8339,1,\"x\"],[8340,1,\"\u0259\"],[8341,1,\"h\"],[8342,1,\"k\"],[8343,1,\"l\"],[8344,1,\"m\"],[8345,1,\"n\"],[8346,1,\"p\"],[8347,1,\"s\"],[8348,1,\"t\"],[[8349,8351],3],[[8352,8359],2],[8360,1,\"rs\"],[[8361,8362],2],[8363,2],[8364,2],[[8365,8367],2],[[8368,8369],2],[[8370,8373],2],[[8374,8376],2],[8377,2],[8378,2],[[8379,8381],2],[8382,2],[8383,2],[8384,2],[[8385,8399],3],[[8400,8417],2],[[8418,8419],2],[[8420,8426],2],[8427,2],[[8428,8431],2],[8432,2],[[8433,8447],3],[8448,1,\"a/c\"],[8449,1,\"a/s\"],[8450,1,\"c\"],[8451,1,\"\u00B0c\"],[8452,2],[8453,1,\"c/o\"],[8454,1,\"c/u\"],[8455,1,\"\u025B\"],[8456,2],[8457,1,\"\u00B0f\"],[8458,1,\"g\"],[[8459,8462],1,\"h\"],[8463,1,\"\u0127\"],[[8464,8465],1,\"i\"],[[8466,8467],1,\"l\"],[8468,2],[8469,1,\"n\"],[8470,1,\"no\"],[[8471,8472],2],[8473,1,\"p\"],[8474,1,\"q\"],[[8475,8477],1,\"r\"],[[8478,8479],2],[8480,1,\"sm\"],[8481,1,\"tel\"],[8482,1,\"tm\"],[8483,2],[8484,1,\"z\"],[8485,2],[8486,1,\"\u03C9\"],[8487,2],[8488,1,\"z\"],[8489,2],[8490,1,\"k\"],[8491,1,\"\u00E5\"],[8492,1,\"b\"],[8493,1,\"c\"],[8494,2],[[8495,8496],1,\"e\"],[8497,1,\"f\"],[8498,1,\"\u214E\"],[8499,1,\"m\"],[8500,1,\"o\"],[8501,1,\"\u05D0\"],[8502,1,\"\u05D1\"],[8503,1,\"\u05D2\"],[8504,1,\"\u05D3\"],[8505,1,\"i\"],[8506,2],[8507,1,\"fax\"],[8508,1,\"\u03C0\"],[[8509,8510],1,\"\u03B3\"],[8511,1,\"\u03C0\"],[8512,1,\"\u2211\"],[[8513,8516],2],[[8517,8518],1,\"d\"],[8519,1,\"e\"],[8520,1,\"i\"],[8521,1,\"j\"],[[8522,8523],2],[8524,2],[8525,2],[8526,2],[8527,2],[8528,1,\"1\u20447\"],[8529,1,\"1\u20449\"],[8530,1,\"1\u204410\"],[8531,1,\"1\u20443\"],[8532,1,\"2\u20443\"],[8533,1,\"1\u20445\"],[8534,1,\"2\u20445\"],[8535,1,\"3\u20445\"],[8536,1,\"4\u20445\"],[8537,1,\"1\u20446\"],[8538,1,\"5\u20446\"],[8539,1,\"1\u20448\"],[8540,1,\"3\u20448\"],[8541,1,\"5\u20448\"],[8542,1,\"7\u20448\"],[8543,1,\"1\u2044\"],[8544,1,\"i\"],[8545,1,\"ii\"],[8546,1,\"iii\"],[8547,1,\"iv\"],[8548,1,\"v\"],[8549,1,\"vi\"],[8550,1,\"vii\"],[8551,1,\"viii\"],[8552,1,\"ix\"],[8553,1,\"x\"],[8554,1,\"xi\"],[8555,1,\"xii\"],[8556,1,\"l\"],[8557,1,\"c\"],[8558,1,\"d\"],[8559,1,\"m\"],[8560,1,\"i\"],[8561,1,\"ii\"],[8562,1,\"iii\"],[8563,1,\"iv\"],[8564,1,\"v\"],[8565,1,\"vi\"],[8566,1,\"vii\"],[8567,1,\"viii\"],[8568,1,\"ix\"],[8569,1,\"x\"],[8570,1,\"xi\"],[8571,1,\"xii\"],[8572,1,\"l\"],[8573,1,\"c\"],[8574,1,\"d\"],[8575,1,\"m\"],[[8576,8578],2],[8579,1,\"\u2184\"],[8580,2],[[8581,8584],2],[8585,1,\"0\u20443\"],[[8586,8587],2],[[8588,8591],3],[[8592,8682],2],[[8683,8691],2],[[8692,8703],2],[[8704,8747],2],[8748,1,\"\u222B\u222B\"],[8749,1,\"\u222B\u222B\u222B\"],[8750,2],[8751,1,\"\u222E\u222E\"],[8752,1,\"\u222E\u222E\u222E\"],[[8753,8945],2],[[8946,8959],2],[8960,2],[8961,2],[[8962,9000],2],[9001,1,\"\u3008\"],[9002,1,\"\u3009\"],[[9003,9082],2],[9083,2],[9084,2],[[9085,9114],2],[[9115,9166],2],[[9167,9168],2],[[9169,9179],2],[[9180,9191],2],[9192,2],[[9193,9203],2],[[9204,9210],2],[[9211,9214],2],[9215,2],[[9216,9252],2],[[9253,9254],2],[[9255,9257],2],[[9258,9279],3],[[9280,9290],2],[[9291,9311],3],[9312,1,\"1\"],[9313,1,\"2\"],[9314,1,\"3\"],[9315,1,\"4\"],[9316,1,\"5\"],[9317,1,\"6\"],[9318,1,\"7\"],[9319,1,\"8\"],[9320,1,\"9\"],[9321,1,\"10\"],[9322,1,\"11\"],[9323,1,\"12\"],[9324,1,\"13\"],[9325,1,\"14\"],[9326,1,\"15\"],[9327,1,\"16\"],[9328,1,\"17\"],[9329,1,\"18\"],[9330,1,\"19\"],[9331,1,\"20\"],[9332,1,\"(1)\"],[9333,1,\"(2)\"],[9334,1,\"(3)\"],[9335,1,\"(4)\"],[9336,1,\"(5)\"],[9337,1,\"(6)\"],[9338,1,\"(7)\"],[9339,1,\"(8)\"],[9340,1,\"(9)\"],[9341,1,\"(10)\"],[9342,1,\"(11)\"],[9343,1,\"(12)\"],[9344,1,\"(13)\"],[9345,1,\"(14)\"],[9346,1,\"(15)\"],[9347,1,\"(16)\"],[9348,1,\"(17)\"],[9349,1,\"(18)\"],[9350,1,\"(19)\"],[9351,1,\"(20)\"],[[9352,9371],3],[9372,1,\"(a)\"],[9373,1,\"(b)\"],[9374,1,\"(c)\"],[9375,1,\"(d)\"],[9376,1,\"(e)\"],[9377,1,\"(f)\"],[9378,1,\"(g)\"],[9379,1,\"(h)\"],[9380,1,\"(i)\"],[9381,1,\"(j)\"],[9382,1,\"(k)\"],[9383,1,\"(l)\"],[9384,1,\"(m)\"],[9385,1,\"(n)\"],[9386,1,\"(o)\"],[9387,1,\"(p)\"],[9388,1,\"(q)\"],[9389,1,\"(r)\"],[9390,1,\"(s)\"],[9391,1,\"(t)\"],[9392,1,\"(u)\"],[9393,1,\"(v)\"],[9394,1,\"(w)\"],[9395,1,\"(x)\"],[9396,1,\"(y)\"],[9397,1,\"(z)\"],[9398,1,\"a\"],[9399,1,\"b\"],[9400,1,\"c\"],[9401,1,\"d\"],[9402,1,\"e\"],[9403,1,\"f\"],[9404,1,\"g\"],[9405,1,\"h\"],[9406,1,\"i\"],[9407,1,\"j\"],[9408,1,\"k\"],[9409,1,\"l\"],[9410,1,\"m\"],[9411,1,\"n\"],[9412,1,\"o\"],[9413,1,\"p\"],[9414,1,\"q\"],[9415,1,\"r\"],[9416,1,\"s\"],[9417,1,\"t\"],[9418,1,\"u\"],[9419,1,\"v\"],[9420,1,\"w\"],[9421,1,\"x\"],[9422,1,\"y\"],[9423,1,\"z\"],[9424,1,\"a\"],[9425,1,\"b\"],[9426,1,\"c\"],[9427,1,\"d\"],[9428,1,\"e\"],[9429,1,\"f\"],[9430,1,\"g\"],[9431,1,\"h\"],[9432,1,\"i\"],[9433,1,\"j\"],[9434,1,\"k\"],[9435,1,\"l\"],[9436,1,\"m\"],[9437,1,\"n\"],[9438,1,\"o\"],[9439,1,\"p\"],[9440,1,\"q\"],[9441,1,\"r\"],[9442,1,\"s\"],[9443,1,\"t\"],[9444,1,\"u\"],[9445,1,\"v\"],[9446,1,\"w\"],[9447,1,\"x\"],[9448,1,\"y\"],[9449,1,\"z\"],[9450,1,\"0\"],[[9451,9470],2],[9471,2],[[9472,9621],2],[[9622,9631],2],[[9632,9711],2],[[9712,9719],2],[[9720,9727],2],[[9728,9747],2],[[9748,9749],2],[[9750,9751],2],[9752,2],[9753,2],[[9754,9839],2],[[9840,9841],2],[[9842,9853],2],[[9854,9855],2],[[9856,9865],2],[[9866,9873],2],[[9874,9884],2],[9885,2],[[9886,9887],2],[[9888,9889],2],[[9890,9905],2],[9906,2],[[9907,9916],2],[[9917,9919],2],[[9920,9923],2],[[9924,9933],2],[9934,2],[[9935,9953],2],[9954,2],[9955,2],[[9956,9959],2],[[9960,9983],2],[9984,2],[[9985,9988],2],[9989,2],[[9990,9993],2],[[9994,9995],2],[[9996,10023],2],[10024,2],[[10025,10059],2],[10060,2],[10061,2],[10062,2],[[10063,10066],2],[[10067,10069],2],[10070,2],[10071,2],[[10072,10078],2],[[10079,10080],2],[[10081,10087],2],[[10088,10101],2],[[10102,10132],2],[[10133,10135],2],[[10136,10159],2],[10160,2],[[10161,10174],2],[10175,2],[[10176,10182],2],[[10183,10186],2],[10187,2],[10188,2],[10189,2],[[10190,10191],2],[[10192,10219],2],[[10220,10223],2],[[10224,10239],2],[[10240,10495],2],[[10496,10763],2],[10764,1,\"\u222B\u222B\u222B\u222B\"],[[10765,10867],2],[10868,1,\"::=\"],[10869,1,\"==\"],[10870,1,\"===\"],[[10871,10971],2],[10972,1,\"\u2ADD\u0338\"],[[10973,11007],2],[[11008,11021],2],[[11022,11027],2],[[11028,11034],2],[[11035,11039],2],[[11040,11043],2],[[11044,11084],2],[[11085,11087],2],[[11088,11092],2],[[11093,11097],2],[[11098,11123],2],[[11124,11125],3],[[11126,11157],2],[11158,3],[11159,2],[[11160,11193],2],[[11194,11196],2],[[11197,11208],2],[11209,2],[[11210,11217],2],[11218,2],[[11219,11243],2],[[11244,11247],2],[[11248,11262],2],[11263,2],[11264,1,\"\u2C30\"],[11265,1,\"\u2C31\"],[11266,1,\"\u2C32\"],[11267,1,\"\u2C33\"],[11268,1,\"\u2C34\"],[11269,1,\"\u2C35\"],[11270,1,\"\u2C36\"],[11271,1,\"\u2C37\"],[11272,1,\"\u2C38\"],[11273,1,\"\u2C39\"],[11274,1,\"\u2C3A\"],[11275,1,\"\u2C3B\"],[11276,1,\"\u2C3C\"],[11277,1,\"\u2C3D\"],[11278,1,\"\u2C3E\"],[11279,1,\"\u2C3F\"],[11280,1,\"\u2C40\"],[11281,1,\"\u2C41\"],[11282,1,\"\u2C42\"],[11283,1,\"\u2C43\"],[11284,1,\"\u2C44\"],[11285,1,\"\u2C45\"],[11286,1,\"\u2C46\"],[11287,1,\"\u2C47\"],[11288,1,\"\u2C48\"],[11289,1,\"\u2C49\"],[11290,1,\"\u2C4A\"],[11291,1,\"\u2C4B\"],[11292,1,\"\u2C4C\"],[11293,1,\"\u2C4D\"],[11294,1,\"\u2C4E\"],[11295,1,\"\u2C4F\"],[11296,1,\"\u2C50\"],[11297,1,\"\u2C51\"],[11298,1,\"\u2C52\"],[11299,1,\"\u2C53\"],[11300,1,\"\u2C54\"],[11301,1,\"\u2C55\"],[11302,1,\"\u2C56\"],[11303,1,\"\u2C57\"],[11304,1,\"\u2C58\"],[11305,1,\"\u2C59\"],[11306,1,\"\u2C5A\"],[11307,1,\"\u2C5B\"],[11308,1,\"\u2C5C\"],[11309,1,\"\u2C5D\"],[11310,1,\"\u2C5E\"],[11311,1,\"\u2C5F\"],[[11312,11358],2],[11359,2],[11360,1,\"\u2C61\"],[11361,2],[11362,1,\"\u026B\"],[11363,1,\"\u1D7D\"],[11364,1,\"\u027D\"],[[11365,11366],2],[11367,1,\"\u2C68\"],[11368,2],[11369,1,\"\u2C6A\"],[11370,2],[11371,1,\"\u2C6C\"],[11372,2],[11373,1,\"\u0251\"],[11374,1,\"\u0271\"],[11375,1,\"\u0250\"],[11376,1,\"\u0252\"],[11377,2],[11378,1,\"\u2C73\"],[11379,2],[11380,2],[11381,1,\"\u2C76\"],[[11382,11383],2],[[11384,11387],2],[11388,1,\"j\"],[11389,1,\"v\"],[11390,1,\"\u023F\"],[11391,1,\"\u0240\"],[11392,1,\"\u2C81\"],[11393,2],[11394,1,\"\u2C83\"],[11395,2],[11396,1,\"\u2C85\"],[11397,2],[11398,1,\"\u2C87\"],[11399,2],[11400,1,\"\u2C89\"],[11401,2],[11402,1,\"\u2C8B\"],[11403,2],[11404,1,\"\u2C8D\"],[11405,2],[11406,1,\"\u2C8F\"],[11407,2],[11408,1,\"\u2C91\"],[11409,2],[11410,1,\"\u2C93\"],[11411,2],[11412,1,\"\u2C95\"],[11413,2],[11414,1,\"\u2C97\"],[11415,2],[11416,1,\"\u2C99\"],[11417,2],[11418,1,\"\u2C9B\"],[11419,2],[11420,1,\"\u2C9D\"],[11421,2],[11422,1,\"\u2C9F\"],[11423,2],[11424,1,\"\u2CA1\"],[11425,2],[11426,1,\"\u2CA3\"],[11427,2],[11428,1,\"\u2CA5\"],[11429,2],[11430,1,\"\u2CA7\"],[11431,2],[11432,1,\"\u2CA9\"],[11433,2],[11434,1,\"\u2CAB\"],[11435,2],[11436,1,\"\u2CAD\"],[11437,2],[11438,1,\"\u2CAF\"],[11439,2],[11440,1,\"\u2CB1\"],[11441,2],[11442,1,\"\u2CB3\"],[11443,2],[11444,1,\"\u2CB5\"],[11445,2],[11446,1,\"\u2CB7\"],[11447,2],[11448,1,\"\u2CB9\"],[11449,2],[11450,1,\"\u2CBB\"],[11451,2],[11452,1,\"\u2CBD\"],[11453,2],[11454,1,\"\u2CBF\"],[11455,2],[11456,1,\"\u2CC1\"],[11457,2],[11458,1,\"\u2CC3\"],[11459,2],[11460,1,\"\u2CC5\"],[11461,2],[11462,1,\"\u2CC7\"],[11463,2],[11464,1,\"\u2CC9\"],[11465,2],[11466,1,\"\u2CCB\"],[11467,2],[11468,1,\"\u2CCD\"],[11469,2],[11470,1,\"\u2CCF\"],[11471,2],[11472,1,\"\u2CD1\"],[11473,2],[11474,1,\"\u2CD3\"],[11475,2],[11476,1,\"\u2CD5\"],[11477,2],[11478,1,\"\u2CD7\"],[11479,2],[11480,1,\"\u2CD9\"],[11481,2],[11482,1,\"\u2CDB\"],[11483,2],[11484,1,\"\u2CDD\"],[11485,2],[11486,1,\"\u2CDF\"],[11487,2],[11488,1,\"\u2CE1\"],[11489,2],[11490,1,\"\u2CE3\"],[[11491,11492],2],[[11493,11498],2],[11499,1,\"\u2CEC\"],[11500,2],[11501,1,\"\u2CEE\"],[[11502,11505],2],[11506,1,\"\u2CF3\"],[11507,2],[[11508,11512],3],[[11513,11519],2],[[11520,11557],2],[11558,3],[11559,2],[[11560,11564],3],[11565,2],[[11566,11567],3],[[11568,11621],2],[[11622,11623],2],[[11624,11630],3],[11631,1,\"\u2D61\"],[11632,2],[[11633,11646],3],[11647,2],[[11648,11670],2],[[11671,11679],3],[[11680,11686],2],[11687,3],[[11688,11694],2],[11695,3],[[11696,11702],2],[11703,3],[[11704,11710],2],[11711,3],[[11712,11718],2],[11719,3],[[11720,11726],2],[11727,3],[[11728,11734],2],[11735,3],[[11736,11742],2],[11743,3],[[11744,11775],2],[[11776,11799],2],[[11800,11803],2],[[11804,11805],2],[[11806,11822],2],[11823,2],[11824,2],[11825,2],[[11826,11835],2],[[11836,11842],2],[[11843,11844],2],[[11845,11849],2],[[11850,11854],2],[11855,2],[[11856,11858],2],[[11859,11869],2],[[11870,11903],3],[[11904,11929],2],[11930,3],[[11931,11934],2],[11935,1,\"\u6BCD\"],[[11936,12018],2],[12019,1,\"\u9F9F\"],[[12020,12031],3],[12032,1,\"\u4E00\"],[12033,1,\"\u4E28\"],[12034,1,\"\u4E36\"],[12035,1,\"\u4E3F\"],[12036,1,\"\u4E59\"],[12037,1,\"\u4E85\"],[12038,1,\"\u4E8C\"],[12039,1,\"\u4EA0\"],[12040,1,\"\u4EBA\"],[12041,1,\"\u513F\"],[12042,1,\"\u5165\"],[12043,1,\"\u516B\"],[12044,1,\"\u5182\"],[12045,1,\"\u5196\"],[12046,1,\"\u51AB\"],[12047,1,\"\u51E0\"],[12048,1,\"\u51F5\"],[12049,1,\"\u5200\"],[12050,1,\"\u529B\"],[12051,1,\"\u52F9\"],[12052,1,\"\u5315\"],[12053,1,\"\u531A\"],[12054,1,\"\u5338\"],[12055,1,\"\u5341\"],[12056,1,\"\u535C\"],[12057,1,\"\u5369\"],[12058,1,\"\u5382\"],[12059,1,\"\u53B6\"],[12060,1,\"\u53C8\"],[12061,1,\"\u53E3\"],[12062,1,\"\u56D7\"],[12063,1,\"\u571F\"],[12064,1,\"\u58EB\"],[12065,1,\"\u5902\"],[12066,1,\"\u590A\"],[12067,1,\"\u5915\"],[12068,1,\"\u5927\"],[12069,1,\"\u5973\"],[12070,1,\"\u5B50\"],[12071,1,\"\u5B80\"],[12072,1,\"\u5BF8\"],[12073,1,\"\u5C0F\"],[12074,1,\"\u5C22\"],[12075,1,\"\u5C38\"],[12076,1,\"\u5C6E\"],[12077,1,\"\u5C71\"],[12078,1,\"\u5DDB\"],[12079,1,\"\u5DE5\"],[12080,1,\"\u5DF1\"],[12081,1,\"\u5DFE\"],[12082,1,\"\u5E72\"],[12083,1,\"\u5E7A\"],[12084,1,\"\u5E7F\"],[12085,1,\"\u5EF4\"],[12086,1,\"\u5EFE\"],[12087,1,\"\u5F0B\"],[12088,1,\"\u5F13\"],[12089,1,\"\u5F50\"],[12090,1,\"\u5F61\"],[12091,1,\"\u5F73\"],[12092,1,\"\u5FC3\"],[12093,1,\"\u6208\"],[12094,1,\"\u6236\"],[12095,1,\"\u624B\"],[12096,1,\"\u652F\"],[12097,1,\"\u6534\"],[12098,1,\"\u6587\"],[12099,1,\"\u6597\"],[12100,1,\"\u65A4\"],[12101,1,\"\u65B9\"],[12102,1,\"\u65E0\"],[12103,1,\"\u65E5\"],[12104,1,\"\u66F0\"],[12105,1,\"\u6708\"],[12106,1,\"\u6728\"],[12107,1,\"\u6B20\"],[12108,1,\"\u6B62\"],[12109,1,\"\u6B79\"],[12110,1,\"\u6BB3\"],[12111,1,\"\u6BCB\"],[12112,1,\"\u6BD4\"],[12113,1,\"\u6BDB\"],[12114,1,\"\u6C0F\"],[12115,1,\"\u6C14\"],[12116,1,\"\u6C34\"],[12117,1,\"\u706B\"],[12118,1,\"\u722A\"],[12119,1,\"\u7236\"],[12120,1,\"\u723B\"],[12121,1,\"\u723F\"],[12122,1,\"\u7247\"],[12123,1,\"\u7259\"],[12124,1,\"\u725B\"],[12125,1,\"\u72AC\"],[12126,1,\"\u7384\"],[12127,1,\"\u7389\"],[12128,1,\"\u74DC\"],[12129,1,\"\u74E6\"],[12130,1,\"\u7518\"],[12131,1,\"\u751F\"],[12132,1,\"\u7528\"],[12133,1,\"\u7530\"],[12134,1,\"\u758B\"],[12135,1,\"\u7592\"],[12136,1,\"\u7676\"],[12137,1,\"\u767D\"],[12138,1,\"\u76AE\"],[12139,1,\"\u76BF\"],[12140,1,\"\u76EE\"],[12141,1,\"\u77DB\"],[12142,1,\"\u77E2\"],[12143,1,\"\u77F3\"],[12144,1,\"\u793A\"],[12145,1,\"\u79B8\"],[12146,1,\"\u79BE\"],[12147,1,\"\u7A74\"],[12148,1,\"\u7ACB\"],[12149,1,\"\u7AF9\"],[12150,1,\"\u7C73\"],[12151,1,\"\u7CF8\"],[12152,1,\"\u7F36\"],[12153,1,\"\u7F51\"],[12154,1,\"\u7F8A\"],[12155,1,\"\u7FBD\"],[12156,1,\"\u8001\"],[12157,1,\"\u800C\"],[12158,1,\"\u8012\"],[12159,1,\"\u8033\"],[12160,1,\"\u807F\"],[12161,1,\"\u8089\"],[12162,1,\"\u81E3\"],[12163,1,\"\u81EA\"],[12164,1,\"\u81F3\"],[12165,1,\"\u81FC\"],[12166,1,\"\u820C\"],[12167,1,\"\u821B\"],[12168,1,\"\u821F\"],[12169,1,\"\u826E\"],[12170,1,\"\u8272\"],[12171,1,\"\u8278\"],[12172,1,\"\u864D\"],[12173,1,\"\u866B\"],[12174,1,\"\u8840\"],[12175,1,\"\u884C\"],[12176,1,\"\u8863\"],[12177,1,\"\u897E\"],[12178,1,\"\u898B\"],[12179,1,\"\u89D2\"],[12180,1,\"\u8A00\"],[12181,1,\"\u8C37\"],[12182,1,\"\u8C46\"],[12183,1,\"\u8C55\"],[12184,1,\"\u8C78\"],[12185,1,\"\u8C9D\"],[12186,1,\"\u8D64\"],[12187,1,\"\u8D70\"],[12188,1,\"\u8DB3\"],[12189,1,\"\u8EAB\"],[12190,1,\"\u8ECA\"],[12191,1,\"\u8F9B\"],[12192,1,\"\u8FB0\"],[12193,1,\"\u8FB5\"],[12194,1,\"\u9091\"],[12195,1,\"\u9149\"],[12196,1,\"\u91C6\"],[12197,1,\"\u91CC\"],[12198,1,\"\u91D1\"],[12199,1,\"\u9577\"],[12200,1,\"\u9580\"],[12201,1,\"\u961C\"],[12202,1,\"\u96B6\"],[12203,1,\"\u96B9\"],[12204,1,\"\u96E8\"],[12205,1,\"\u9751\"],[12206,1,\"\u975E\"],[12207,1,\"\u9762\"],[12208,1,\"\u9769\"],[12209,1,\"\u97CB\"],[12210,1,\"\u97ED\"],[12211,1,\"\u97F3\"],[12212,1,\"\u9801\"],[12213,1,\"\u98A8\"],[12214,1,\"\u98DB\"],[12215,1,\"\u98DF\"],[12216,1,\"\u9996\"],[12217,1,\"\u9999\"],[12218,1,\"\u99AC\"],[12219,1,\"\u9AA8\"],[12220,1,\"\u9AD8\"],[12221,1,\"\u9ADF\"],[12222,1,\"\u9B25\"],[12223,1,\"\u9B2F\"],[12224,1,\"\u9B32\"],[12225,1,\"\u9B3C\"],[12226,1,\"\u9B5A\"],[12227,1,\"\u9CE5\"],[12228,1,\"\u9E75\"],[12229,1,\"\u9E7F\"],[12230,1,\"\u9EA5\"],[12231,1,\"\u9EBB\"],[12232,1,\"\u9EC3\"],[12233,1,\"\u9ECD\"],[12234,1,\"\u9ED1\"],[12235,1,\"\u9EF9\"],[12236,1,\"\u9EFD\"],[12237,1,\"\u9F0E\"],[12238,1,\"\u9F13\"],[12239,1,\"\u9F20\"],[12240,1,\"\u9F3B\"],[12241,1,\"\u9F4A\"],[12242,1,\"\u9F52\"],[12243,1,\"\u9F8D\"],[12244,1,\"\u9F9C\"],[12245,1,\"\u9FA0\"],[[12246,12271],3],[[12272,12283],3],[[12284,12287],3],[12288,1,\" \"],[12289,2],[12290,1,\".\"],[[12291,12292],2],[[12293,12295],2],[[12296,12329],2],[[12330,12333],2],[[12334,12341],2],[12342,1,\"\u3012\"],[12343,2],[12344,1,\"\u5341\"],[12345,1,\"\u5344\"],[12346,1,\"\u5345\"],[12347,2],[12348,2],[12349,2],[12350,2],[12351,2],[12352,3],[[12353,12436],2],[[12437,12438],2],[[12439,12440],3],[[12441,12442],2],[12443,1,\" \u3099\"],[12444,1,\" \u309A\"],[[12445,12446],2],[12447,1,\"\u3088\u308A\"],[12448,2],[[12449,12542],2],[12543,1,\"\u30B3\u30C8\"],[[12544,12548],3],[[12549,12588],2],[12589,2],[12590,2],[12591,2],[12592,3],[12593,1,\"\u1100\"],[12594,1,\"\u1101\"],[12595,1,\"\u11AA\"],[12596,1,\"\u1102\"],[12597,1,\"\u11AC\"],[12598,1,\"\u11AD\"],[12599,1,\"\u1103\"],[12600,1,\"\u1104\"],[12601,1,\"\u1105\"],[12602,1,\"\u11B0\"],[12603,1,\"\u11B1\"],[12604,1,\"\u11B2\"],[12605,1,\"\u11B3\"],[12606,1,\"\u11B4\"],[12607,1,\"\u11B5\"],[12608,1,\"\u111A\"],[12609,1,\"\u1106\"],[12610,1,\"\u1107\"],[12611,1,\"\u1108\"],[12612,1,\"\u1121\"],[12613,1,\"\u1109\"],[12614,1,\"\u110A\"],[12615,1,\"\u110B\"],[12616,1,\"\u110C\"],[12617,1,\"\u110D\"],[12618,1,\"\u110E\"],[12619,1,\"\u110F\"],[12620,1,\"\u1110\"],[12621,1,\"\u1111\"],[12622,1,\"\u1112\"],[12623,1,\"\u1161\"],[12624,1,\"\u1162\"],[12625,1,\"\u1163\"],[12626,1,\"\u1164\"],[12627,1,\"\u1165\"],[12628,1,\"\u1166\"],[12629,1,\"\u1167\"],[12630,1,\"\u1168\"],[12631,1,\"\u1169\"],[12632,1,\"\u116A\"],[12633,1,\"\u116B\"],[12634,1,\"\u116C\"],[12635,1,\"\u116D\"],[12636,1,\"\u116E\"],[12637,1,\"\u116F\"],[12638,1,\"\u1170\"],[12639,1,\"\u1171\"],[12640,1,\"\u1172\"],[12641,1,\"\u1173\"],[12642,1,\"\u1174\"],[12643,1,\"\u1175\"],[12644,7],[12645,1,\"\u1114\"],[12646,1,\"\u1115\"],[12647,1,\"\u11C7\"],[12648,1,\"\u11C8\"],[12649,1,\"\u11CC\"],[12650,1,\"\u11CE\"],[12651,1,\"\u11D3\"],[12652,1,\"\u11D7\"],[12653,1,\"\u11D9\"],[12654,1,\"\u111C\"],[12655,1,\"\u11DD\"],[12656,1,\"\u11DF\"],[12657,1,\"\u111D\"],[12658,1,\"\u111E\"],[12659,1,\"\u1120\"],[12660,1,\"\u1122\"],[12661,1,\"\u1123\"],[12662,1,\"\u1127\"],[12663,1,\"\u1129\"],[12664,1,\"\u112B\"],[12665,1,\"\u112C\"],[12666,1,\"\u112D\"],[12667,1,\"\u112E\"],[12668,1,\"\u112F\"],[12669,1,\"\u1132\"],[12670,1,\"\u1136\"],[12671,1,\"\u1140\"],[12672,1,\"\u1147\"],[12673,1,\"\u114C\"],[12674,1,\"\u11F1\"],[12675,1,\"\u11F2\"],[12676,1,\"\u1157\"],[12677,1,\"\u1158\"],[12678,1,\"\u1159\"],[12679,1,\"\u1184\"],[12680,1,\"\u1185\"],[12681,1,\"\u1188\"],[12682,1,\"\u1191\"],[12683,1,\"\u1192\"],[12684,1,\"\u1194\"],[12685,1,\"\u119E\"],[12686,1,\"\u11A1\"],[12687,3],[[12688,12689],2],[12690,1,\"\u4E00\"],[12691,1,\"\u4E8C\"],[12692,1,\"\u4E09\"],[12693,1,\"\u56DB\"],[12694,1,\"\u4E0A\"],[12695,1,\"\u4E2D\"],[12696,1,\"\u4E0B\"],[12697,1,\"\u7532\"],[12698,1,\"\u4E59\"],[12699,1,\"\u4E19\"],[12700,1,\"\u4E01\"],[12701,1,\"\u5929\"],[12702,1,\"\u5730\"],[12703,1,\"\u4EBA\"],[[12704,12727],2],[[12728,12730],2],[[12731,12735],2],[[12736,12751],2],[[12752,12771],2],[[12772,12773],2],[[12774,12782],3],[12783,3],[[12784,12799],2],[12800,1,\"(\u1100)\"],[12801,1,\"(\u1102)\"],[12802,1,\"(\u1103)\"],[12803,1,\"(\u1105)\"],[12804,1,\"(\u1106)\"],[12805,1,\"(\u1107)\"],[12806,1,\"(\u1109)\"],[12807,1,\"(\u110B)\"],[12808,1,\"(\u110C)\"],[12809,1,\"(\u110E)\"],[12810,1,\"(\u110F)\"],[12811,1,\"(\u1110)\"],[12812,1,\"(\u1111)\"],[12813,1,\"(\u1112)\"],[12814,1,\"(\uAC00)\"],[12815,1,\"(\uB098)\"],[12816,1,\"(\uB2E4)\"],[12817,1,\"(\uB77C)\"],[12818,1,\"(\uB9C8)\"],[12819,1,\"(\uBC14)\"],[12820,1,\"(\uC0AC)\"],[12821,1,\"(\uC544)\"],[12822,1,\"(\uC790)\"],[12823,1,\"(\uCC28)\"],[12824,1,\"(\uCE74)\"],[12825,1,\"(\uD0C0)\"],[12826,1,\"(\uD30C)\"],[12827,1,\"(\uD558)\"],[12828,1,\"(\uC8FC)\"],[12829,1,\"(\uC624\uC804)\"],[12830,1,\"(\uC624\uD6C4)\"],[12831,3],[12832,1,\"(\u4E00)\"],[12833,1,\"(\u4E8C)\"],[12834,1,\"(\u4E09)\"],[12835,1,\"(\u56DB)\"],[12836,1,\"(\u4E94)\"],[12837,1,\"(\u516D)\"],[12838,1,\"(\u4E03)\"],[12839,1,\"(\u516B)\"],[12840,1,\"(\u4E5D)\"],[12841,1,\"(\u5341)\"],[12842,1,\"(\u6708)\"],[12843,1,\"(\u706B)\"],[12844,1,\"(\u6C34)\"],[12845,1,\"(\u6728)\"],[12846,1,\"(\u91D1)\"],[12847,1,\"(\u571F)\"],[12848,1,\"(\u65E5)\"],[12849,1,\"(\u682A)\"],[12850,1,\"(\u6709)\"],[12851,1,\"(\u793E)\"],[12852,1,\"(\u540D)\"],[12853,1,\"(\u7279)\"],[12854,1,\"(\u8CA1)\"],[12855,1,\"(\u795D)\"],[12856,1,\"(\u52B4)\"],[12857,1,\"(\u4EE3)\"],[12858,1,\"(\u547C)\"],[12859,1,\"(\u5B66)\"],[12860,1,\"(\u76E3)\"],[12861,1,\"(\u4F01)\"],[12862,1,\"(\u8CC7)\"],[12863,1,\"(\u5354)\"],[12864,1,\"(\u796D)\"],[12865,1,\"(\u4F11)\"],[12866,1,\"(\u81EA)\"],[12867,1,\"(\u81F3)\"],[12868,1,\"\u554F\"],[12869,1,\"\u5E7C\"],[12870,1,\"\u6587\"],[12871,1,\"\u7B8F\"],[[12872,12879],2],[12880,1,\"pte\"],[12881,1,\"21\"],[12882,1,\"22\"],[12883,1,\"23\"],[12884,1,\"24\"],[12885,1,\"25\"],[12886,1,\"26\"],[12887,1,\"27\"],[12888,1,\"28\"],[12889,1,\"29\"],[12890,1,\"30\"],[12891,1,\"31\"],[12892,1,\"32\"],[12893,1,\"33\"],[12894,1,\"34\"],[12895,1,\"35\"],[12896,1,\"\u1100\"],[12897,1,\"\u1102\"],[12898,1,\"\u1103\"],[12899,1,\"\u1105\"],[12900,1,\"\u1106\"],[12901,1,\"\u1107\"],[12902,1,\"\u1109\"],[12903,1,\"\u110B\"],[12904,1,\"\u110C\"],[12905,1,\"\u110E\"],[12906,1,\"\u110F\"],[12907,1,\"\u1110\"],[12908,1,\"\u1111\"],[12909,1,\"\u1112\"],[12910,1,\"\uAC00\"],[12911,1,\"\uB098\"],[12912,1,\"\uB2E4\"],[12913,1,\"\uB77C\"],[12914,1,\"\uB9C8\"],[12915,1,\"\uBC14\"],[12916,1,\"\uC0AC\"],[12917,1,\"\uC544\"],[12918,1,\"\uC790\"],[12919,1,\"\uCC28\"],[12920,1,\"\uCE74\"],[12921,1,\"\uD0C0\"],[12922,1,\"\uD30C\"],[12923,1,\"\uD558\"],[12924,1,\"\uCC38\uACE0\"],[12925,1,\"\uC8FC\uC758\"],[12926,1,\"\uC6B0\"],[12927,2],[12928,1,\"\u4E00\"],[12929,1,\"\u4E8C\"],[12930,1,\"\u4E09\"],[12931,1,\"\u56DB\"],[12932,1,\"\u4E94\"],[12933,1,\"\u516D\"],[12934,1,\"\u4E03\"],[12935,1,\"\u516B\"],[12936,1,\"\u4E5D\"],[12937,1,\"\u5341\"],[12938,1,\"\u6708\"],[12939,1,\"\u706B\"],[12940,1,\"\u6C34\"],[12941,1,\"\u6728\"],[12942,1,\"\u91D1\"],[12943,1,\"\u571F\"],[12944,1,\"\u65E5\"],[12945,1,\"\u682A\"],[12946,1,\"\u6709\"],[12947,1,\"\u793E\"],[12948,1,\"\u540D\"],[12949,1,\"\u7279\"],[12950,1,\"\u8CA1\"],[12951,1,\"\u795D\"],[12952,1,\"\u52B4\"],[12953,1,\"\u79D8\"],[12954,1,\"\u7537\"],[12955,1,\"\u5973\"],[12956,1,\"\u9069\"],[12957,1,\"\u512A\"],[12958,1,\"\u5370\"],[12959,1,\"\u6CE8\"],[12960,1,\"\u9805\"],[12961,1,\"\u4F11\"],[12962,1,\"\u5199\"],[12963,1,\"\u6B63\"],[12964,1,\"\u4E0A\"],[12965,1,\"\u4E2D\"],[12966,1,\"\u4E0B\"],[12967,1,\"\u5DE6\"],[12968,1,\"\u53F3\"],[12969,1,\"\u533B\"],[12970,1,\"\u5B97\"],[12971,1,\"\u5B66\"],[12972,1,\"\u76E3\"],[12973,1,\"\u4F01\"],[12974,1,\"\u8CC7\"],[12975,1,\"\u5354\"],[12976,1,\"\u591C\"],[12977,1,\"36\"],[12978,1,\"37\"],[12979,1,\"38\"],[12980,1,\"39\"],[12981,1,\"40\"],[12982,1,\"41\"],[12983,1,\"42\"],[12984,1,\"43\"],[12985,1,\"44\"],[12986,1,\"45\"],[12987,1,\"46\"],[12988,1,\"47\"],[12989,1,\"48\"],[12990,1,\"49\"],[12991,1,\"50\"],[12992,1,\"1\u6708\"],[12993,1,\"2\u6708\"],[12994,1,\"3\u6708\"],[12995,1,\"4\u6708\"],[12996,1,\"5\u6708\"],[12997,1,\"6\u6708\"],[12998,1,\"7\u6708\"],[12999,1,\"8\u6708\"],[13000,1,\"9\u6708\"],[13001,1,\"10\u6708\"],[13002,1,\"11\u6708\"],[13003,1,\"12\u6708\"],[13004,1,\"hg\"],[13005,1,\"erg\"],[13006,1,\"ev\"],[13007,1,\"ltd\"],[13008,1,\"\u30A2\"],[13009,1,\"\u30A4\"],[13010,1,\"\u30A6\"],[13011,1,\"\u30A8\"],[13012,1,\"\u30AA\"],[13013,1,\"\u30AB\"],[13014,1,\"\u30AD\"],[13015,1,\"\u30AF\"],[13016,1,\"\u30B1\"],[13017,1,\"\u30B3\"],[13018,1,\"\u30B5\"],[13019,1,\"\u30B7\"],[13020,1,\"\u30B9\"],[13021,1,\"\u30BB\"],[13022,1,\"\u30BD\"],[13023,1,\"\u30BF\"],[13024,1,\"\u30C1\"],[13025,1,\"\u30C4\"],[13026,1,\"\u30C6\"],[13027,1,\"\u30C8\"],[13028,1,\"\u30CA\"],[13029,1,\"\u30CB\"],[13030,1,\"\u30CC\"],[13031,1,\"\u30CD\"],[13032,1,\"\u30CE\"],[13033,1,\"\u30CF\"],[13034,1,\"\u30D2\"],[13035,1,\"\u30D5\"],[13036,1,\"\u30D8\"],[13037,1,\"\u30DB\"],[13038,1,\"\u30DE\"],[13039,1,\"\u30DF\"],[13040,1,\"\u30E0\"],[13041,1,\"\u30E1\"],[13042,1,\"\u30E2\"],[13043,1,\"\u30E4\"],[13044,1,\"\u30E6\"],[13045,1,\"\u30E8\"],[13046,1,\"\u30E9\"],[13047,1,\"\u30EA\"],[13048,1,\"\u30EB\"],[13049,1,\"\u30EC\"],[13050,1,\"\u30ED\"],[13051,1,\"\u30EF\"],[13052,1,\"\u30F0\"],[13053,1,\"\u30F1\"],[13054,1,\"\u30F2\"],[13055,1,\"\u4EE4\u548C\"],[13056,1,\"\u30A2\u30D1\u30FC\u30C8\"],[13057,1,\"\u30A2\u30EB\u30D5\u30A1\"],[13058,1,\"\u30A2\u30F3\u30DA\u30A2\"],[13059,1,\"\u30A2\u30FC\u30EB\"],[13060,1,\"\u30A4\u30CB\u30F3\u30B0\"],[13061,1,\"\u30A4\u30F3\u30C1\"],[13062,1,\"\u30A6\u30A9\u30F3\"],[13063,1,\"\u30A8\u30B9\u30AF\u30FC\u30C9\"],[13064,1,\"\u30A8\u30FC\u30AB\u30FC\"],[13065,1,\"\u30AA\u30F3\u30B9\"],[13066,1,\"\u30AA\u30FC\u30E0\"],[13067,1,\"\u30AB\u30A4\u30EA\"],[13068,1,\"\u30AB\u30E9\u30C3\u30C8\"],[13069,1,\"\u30AB\u30ED\u30EA\u30FC\"],[13070,1,\"\u30AC\u30ED\u30F3\"],[13071,1,\"\u30AC\u30F3\u30DE\"],[13072,1,\"\u30AE\u30AC\"],[13073,1,\"\u30AE\u30CB\u30FC\"],[13074,1,\"\u30AD\u30E5\u30EA\u30FC\"],[13075,1,\"\u30AE\u30EB\u30C0\u30FC\"],[13076,1,\"\u30AD\u30ED\"],[13077,1,\"\u30AD\u30ED\u30B0\u30E9\u30E0\"],[13078,1,\"\u30AD\u30ED\u30E1\u30FC\u30C8\u30EB\"],[13079,1,\"\u30AD\u30ED\u30EF\u30C3\u30C8\"],[13080,1,\"\u30B0\u30E9\u30E0\"],[13081,1,\"\u30B0\u30E9\u30E0\u30C8\u30F3\"],[13082,1,\"\u30AF\u30EB\u30BC\u30A4\u30ED\"],[13083,1,\"\u30AF\u30ED\u30FC\u30CD\"],[13084,1,\"\u30B1\u30FC\u30B9\"],[13085,1,\"\u30B3\u30EB\u30CA\"],[13086,1,\"\u30B3\u30FC\u30DD\"],[13087,1,\"\u30B5\u30A4\u30AF\u30EB\"],[13088,1,\"\u30B5\u30F3\u30C1\u30FC\u30E0\"],[13089,1,\"\u30B7\u30EA\u30F3\u30B0\"],[13090,1,\"\u30BB\u30F3\u30C1\"],[13091,1,\"\u30BB\u30F3\u30C8\"],[13092,1,\"\u30C0\u30FC\u30B9\"],[13093,1,\"\u30C7\u30B7\"],[13094,1,\"\u30C9\u30EB\"],[13095,1,\"\u30C8\u30F3\"],[13096,1,\"\u30CA\u30CE\"],[13097,1,\"\u30CE\u30C3\u30C8\"],[13098,1,\"\u30CF\u30A4\u30C4\"],[13099,1,\"\u30D1\u30FC\u30BB\u30F3\u30C8\"],[13100,1,\"\u30D1\u30FC\u30C4\"],[13101,1,\"\u30D0\u30FC\u30EC\u30EB\"],[13102,1,\"\u30D4\u30A2\u30B9\u30C8\u30EB\"],[13103,1,\"\u30D4\u30AF\u30EB\"],[13104,1,\"\u30D4\u30B3\"],[13105,1,\"\u30D3\u30EB\"],[13106,1,\"\u30D5\u30A1\u30E9\u30C3\u30C9\"],[13107,1,\"\u30D5\u30A3\u30FC\u30C8\"],[13108,1,\"\u30D6\u30C3\u30B7\u30A7\u30EB\"],[13109,1,\"\u30D5\u30E9\u30F3\"],[13110,1,\"\u30D8\u30AF\u30BF\u30FC\u30EB\"],[13111,1,\"\u30DA\u30BD\"],[13112,1,\"\u30DA\u30CB\u30D2\"],[13113,1,\"\u30D8\u30EB\u30C4\"],[13114,1,\"\u30DA\u30F3\u30B9\"],[13115,1,\"\u30DA\u30FC\u30B8\"],[13116,1,\"\u30D9\u30FC\u30BF\"],[13117,1,\"\u30DD\u30A4\u30F3\u30C8\"],[13118,1,\"\u30DC\u30EB\u30C8\"],[13119,1,\"\u30DB\u30F3\"],[13120,1,\"\u30DD\u30F3\u30C9\"],[13121,1,\"\u30DB\u30FC\u30EB\"],[13122,1,\"\u30DB\u30FC\u30F3\"],[13123,1,\"\u30DE\u30A4\u30AF\u30ED\"],[13124,1,\"\u30DE\u30A4\u30EB\"],[13125,1,\"\u30DE\u30C3\u30CF\"],[13126,1,\"\u30DE\u30EB\u30AF\"],[13127,1,\"\u30DE\u30F3\u30B7\u30E7\u30F3\"],[13128,1,\"\u30DF\u30AF\u30ED\u30F3\"],[13129,1,\"\u30DF\u30EA\"],[13130,1,\"\u30DF\u30EA\u30D0\u30FC\u30EB\"],[13131,1,\"\u30E1\u30AC\"],[13132,1,\"\u30E1\u30AC\u30C8\u30F3\"],[13133,1,\"\u30E1\u30FC\u30C8\u30EB\"],[13134,1,\"\u30E4\u30FC\u30C9\"],[13135,1,\"\u30E4\u30FC\u30EB\"],[13136,1,\"\u30E6\u30A2\u30F3\"],[13137,1,\"\u30EA\u30C3\u30C8\u30EB\"],[13138,1,\"\u30EA\u30E9\"],[13139,1,\"\u30EB\u30D4\u30FC\"],[13140,1,\"\u30EB\u30FC\u30D6\u30EB\"],[13141,1,\"\u30EC\u30E0\"],[13142,1,\"\u30EC\u30F3\u30C8\u30B2\u30F3\"],[13143,1,\"\u30EF\u30C3\u30C8\"],[13144,1,\"0\u70B9\"],[13145,1,\"1\u70B9\"],[13146,1,\"2\u70B9\"],[13147,1,\"3\u70B9\"],[13148,1,\"4\u70B9\"],[13149,1,\"5\u70B9\"],[13150,1,\"6\u70B9\"],[13151,1,\"7\u70B9\"],[13152,1,\"8\u70B9\"],[13153,1,\"9\u70B9\"],[13154,1,\"10\u70B9\"],[13155,1,\"11\u70B9\"],[13156,1,\"12\u70B9\"],[13157,1,\"13\u70B9\"],[13158,1,\"14\u70B9\"],[13159,1,\"15\u70B9\"],[13160,1,\"16\u70B9\"],[13161,1,\"17\u70B9\"],[13162,1,\"18\u70B9\"],[13163,1,\"19\u70B9\"],[13164,1,\"20\u70B9\"],[13165,1,\"21\u70B9\"],[13166,1,\"22\u70B9\"],[13167,1,\"23\u70B9\"],[13168,1,\"24\u70B9\"],[13169,1,\"hpa\"],[13170,1,\"da\"],[13171,1,\"au\"],[13172,1,\"bar\"],[13173,1,\"ov\"],[13174,1,\"pc\"],[13175,1,\"dm\"],[13176,1,\"dm2\"],[13177,1,\"dm3\"],[13178,1,\"iu\"],[13179,1,\"\u5E73\u6210\"],[13180,1,\"\u662D\u548C\"],[13181,1,\"\u5927\u6B63\"],[13182,1,\"\u660E\u6CBB\"],[13183,1,\"\u682A\u5F0F\u4F1A\u793E\"],[13184,1,\"pa\"],[13185,1,\"na\"],[13186,1,\"\u03BCa\"],[13187,1,\"ma\"],[13188,1,\"ka\"],[13189,1,\"kb\"],[13190,1,\"mb\"],[13191,1,\"gb\"],[13192,1,\"cal\"],[13193,1,\"kcal\"],[13194,1,\"pf\"],[13195,1,\"nf\"],[13196,1,\"\u03BCf\"],[13197,1,\"\u03BCg\"],[13198,1,\"mg\"],[13199,1,\"kg\"],[13200,1,\"hz\"],[13201,1,\"khz\"],[13202,1,\"mhz\"],[13203,1,\"ghz\"],[13204,1,\"thz\"],[13205,1,\"\u03BCl\"],[13206,1,\"ml\"],[13207,1,\"dl\"],[13208,1,\"kl\"],[13209,1,\"fm\"],[13210,1,\"nm\"],[13211,1,\"\u03BCm\"],[13212,1,\"mm\"],[13213,1,\"cm\"],[13214,1,\"km\"],[13215,1,\"mm2\"],[13216,1,\"cm2\"],[13217,1,\"m2\"],[13218,1,\"km2\"],[13219,1,\"mm3\"],[13220,1,\"cm3\"],[13221,1,\"m3\"],[13222,1,\"km3\"],[13223,1,\"m\u2215s\"],[13224,1,\"m\u2215s2\"],[13225,1,\"pa\"],[13226,1,\"kpa\"],[13227,1,\"mpa\"],[13228,1,\"gpa\"],[13229,1,\"rad\"],[13230,1,\"rad\u2215s\"],[13231,1,\"rad\u2215s2\"],[13232,1,\"ps\"],[13233,1,\"ns\"],[13234,1,\"\u03BCs\"],[13235,1,\"ms\"],[13236,1,\"pv\"],[13237,1,\"nv\"],[13238,1,\"\u03BCv\"],[13239,1,\"mv\"],[13240,1,\"kv\"],[13241,1,\"mv\"],[13242,1,\"pw\"],[13243,1,\"nw\"],[13244,1,\"\u03BCw\"],[13245,1,\"mw\"],[13246,1,\"kw\"],[13247,1,\"mw\"],[13248,1,\"k\u03C9\"],[13249,1,\"m\u03C9\"],[13250,3],[13251,1,\"bq\"],[13252,1,\"cc\"],[13253,1,\"cd\"],[13254,1,\"c\u2215kg\"],[13255,3],[13256,1,\"db\"],[13257,1,\"gy\"],[13258,1,\"ha\"],[13259,1,\"hp\"],[13260,1,\"in\"],[13261,1,\"kk\"],[13262,1,\"km\"],[13263,1,\"kt\"],[13264,1,\"lm\"],[13265,1,\"ln\"],[13266,1,\"log\"],[13267,1,\"lx\"],[13268,1,\"mb\"],[13269,1,\"mil\"],[13270,1,\"mol\"],[13271,1,\"ph\"],[13272,3],[13273,1,\"ppm\"],[13274,1,\"pr\"],[13275,1,\"sr\"],[13276,1,\"sv\"],[13277,1,\"wb\"],[13278,1,\"v\u2215m\"],[13279,1,\"a\u2215m\"],[13280,1,\"1\u65E5\"],[13281,1,\"2\u65E5\"],[13282,1,\"3\u65E5\"],[13283,1,\"4\u65E5\"],[13284,1,\"5\u65E5\"],[13285,1,\"6\u65E5\"],[13286,1,\"7\u65E5\"],[13287,1,\"8\u65E5\"],[13288,1,\"9\u65E5\"],[13289,1,\"10\u65E5\"],[13290,1,\"11\u65E5\"],[13291,1,\"12\u65E5\"],[13292,1,\"13\u65E5\"],[13293,1,\"14\u65E5\"],[13294,1,\"15\u65E5\"],[13295,1,\"16\u65E5\"],[13296,1,\"17\u65E5\"],[13297,1,\"18\u65E5\"],[13298,1,\"19\u65E5\"],[13299,1,\"20\u65E5\"],[13300,1,\"21\u65E5\"],[13301,1,\"22\u65E5\"],[13302,1,\"23\u65E5\"],[13303,1,\"24\u65E5\"],[13304,1,\"25\u65E5\"],[13305,1,\"26\u65E5\"],[13306,1,\"27\u65E5\"],[13307,1,\"28\u65E5\"],[13308,1,\"29\u65E5\"],[13309,1,\"30\u65E5\"],[13310,1,\"31\u65E5\"],[13311,1,\"gal\"],[[13312,19893],2],[[19894,19903],2],[[19904,19967],2],[[19968,40869],2],[[40870,40891],2],[[40892,40899],2],[[40900,40907],2],[40908,2],[[40909,40917],2],[[40918,40938],2],[[40939,40943],2],[[40944,40956],2],[[40957,40959],2],[[40960,42124],2],[[42125,42127],3],[[42128,42145],2],[[42146,42147],2],[[42148,42163],2],[42164,2],[[42165,42176],2],[42177,2],[[42178,42180],2],[42181,2],[42182,2],[[42183,42191],3],[[42192,42237],2],[[42238,42239],2],[[42240,42508],2],[[42509,42511],2],[[42512,42539],2],[[42540,42559],3],[42560,1,\"\uA641\"],[42561,2],[42562,1,\"\uA643\"],[42563,2],[42564,1,\"\uA645\"],[42565,2],[42566,1,\"\uA647\"],[42567,2],[42568,1,\"\uA649\"],[42569,2],[42570,1,\"\uA64B\"],[42571,2],[42572,1,\"\uA64D\"],[42573,2],[42574,1,\"\uA64F\"],[42575,2],[42576,1,\"\uA651\"],[42577,2],[42578,1,\"\uA653\"],[42579,2],[42580,1,\"\uA655\"],[42581,2],[42582,1,\"\uA657\"],[42583,2],[42584,1,\"\uA659\"],[42585,2],[42586,1,\"\uA65B\"],[42587,2],[42588,1,\"\uA65D\"],[42589,2],[42590,1,\"\uA65F\"],[42591,2],[42592,1,\"\uA661\"],[42593,2],[42594,1,\"\uA663\"],[42595,2],[42596,1,\"\uA665\"],[42597,2],[42598,1,\"\uA667\"],[42599,2],[42600,1,\"\uA669\"],[42601,2],[42602,1,\"\uA66B\"],[42603,2],[42604,1,\"\uA66D\"],[[42605,42607],2],[[42608,42611],2],[[42612,42619],2],[[42620,42621],2],[42622,2],[42623,2],[42624,1,\"\uA681\"],[42625,2],[42626,1,\"\uA683\"],[42627,2],[42628,1,\"\uA685\"],[42629,2],[42630,1,\"\uA687\"],[42631,2],[42632,1,\"\uA689\"],[42633,2],[42634,1,\"\uA68B\"],[42635,2],[42636,1,\"\uA68D\"],[42637,2],[42638,1,\"\uA68F\"],[42639,2],[42640,1,\"\uA691\"],[42641,2],[42642,1,\"\uA693\"],[42643,2],[42644,1,\"\uA695\"],[42645,2],[42646,1,\"\uA697\"],[42647,2],[42648,1,\"\uA699\"],[42649,2],[42650,1,\"\uA69B\"],[42651,2],[42652,1,\"\u044A\"],[42653,1,\"\u044C\"],[42654,2],[42655,2],[[42656,42725],2],[[42726,42735],2],[[42736,42737],2],[[42738,42743],2],[[42744,42751],3],[[42752,42774],2],[[42775,42778],2],[[42779,42783],2],[[42784,42785],2],[42786,1,\"\uA723\"],[42787,2],[42788,1,\"\uA725\"],[42789,2],[42790,1,\"\uA727\"],[42791,2],[42792,1,\"\uA729\"],[42793,2],[42794,1,\"\uA72B\"],[42795,2],[42796,1,\"\uA72D\"],[42797,2],[42798,1,\"\uA72F\"],[[42799,42801],2],[42802,1,\"\uA733\"],[42803,2],[42804,1,\"\uA735\"],[42805,2],[42806,1,\"\uA737\"],[42807,2],[42808,1,\"\uA739\"],[42809,2],[42810,1,\"\uA73B\"],[42811,2],[42812,1,\"\uA73D\"],[42813,2],[42814,1,\"\uA73F\"],[42815,2],[42816,1,\"\uA741\"],[42817,2],[42818,1,\"\uA743\"],[42819,2],[42820,1,\"\uA745\"],[42821,2],[42822,1,\"\uA747\"],[42823,2],[42824,1,\"\uA749\"],[42825,2],[42826,1,\"\uA74B\"],[42827,2],[42828,1,\"\uA74D\"],[42829,2],[42830,1,\"\uA74F\"],[42831,2],[42832,1,\"\uA751\"],[42833,2],[42834,1,\"\uA753\"],[42835,2],[42836,1,\"\uA755\"],[42837,2],[42838,1,\"\uA757\"],[42839,2],[42840,1,\"\uA759\"],[42841,2],[42842,1,\"\uA75B\"],[42843,2],[42844,1,\"\uA75D\"],[42845,2],[42846,1,\"\uA75F\"],[42847,2],[42848,1,\"\uA761\"],[42849,2],[42850,1,\"\uA763\"],[42851,2],[42852,1,\"\uA765\"],[42853,2],[42854,1,\"\uA767\"],[42855,2],[42856,1,\"\uA769\"],[42857,2],[42858,1,\"\uA76B\"],[42859,2],[42860,1,\"\uA76D\"],[42861,2],[42862,1,\"\uA76F\"],[42863,2],[42864,1,\"\uA76F\"],[[42865,42872],2],[42873,1,\"\uA77A\"],[42874,2],[42875,1,\"\uA77C\"],[42876,2],[42877,1,\"\u1D79\"],[42878,1,\"\uA77F\"],[42879,2],[42880,1,\"\uA781\"],[42881,2],[42882,1,\"\uA783\"],[42883,2],[42884,1,\"\uA785\"],[42885,2],[42886,1,\"\uA787\"],[[42887,42888],2],[[42889,42890],2],[42891,1,\"\uA78C\"],[42892,2],[42893,1,\"\u0265\"],[42894,2],[42895,2],[42896,1,\"\uA791\"],[42897,2],[42898,1,\"\uA793\"],[42899,2],[[42900,42901],2],[42902,1,\"\uA797\"],[42903,2],[42904,1,\"\uA799\"],[42905,2],[42906,1,\"\uA79B\"],[42907,2],[42908,1,\"\uA79D\"],[42909,2],[42910,1,\"\uA79F\"],[42911,2],[42912,1,\"\uA7A1\"],[42913,2],[42914,1,\"\uA7A3\"],[42915,2],[42916,1,\"\uA7A5\"],[42917,2],[42918,1,\"\uA7A7\"],[42919,2],[42920,1,\"\uA7A9\"],[42921,2],[42922,1,\"\u0266\"],[42923,1,\"\u025C\"],[42924,1,\"\u0261\"],[42925,1,\"\u026C\"],[42926,1,\"\u026A\"],[42927,2],[42928,1,\"\u029E\"],[42929,1,\"\u0287\"],[42930,1,\"\u029D\"],[42931,1,\"\uAB53\"],[42932,1,\"\uA7B5\"],[42933,2],[42934,1,\"\uA7B7\"],[42935,2],[42936,1,\"\uA7B9\"],[42937,2],[42938,1,\"\uA7BB\"],[42939,2],[42940,1,\"\uA7BD\"],[42941,2],[42942,1,\"\uA7BF\"],[42943,2],[42944,1,\"\uA7C1\"],[42945,2],[42946,1,\"\uA7C3\"],[42947,2],[42948,1,\"\uA794\"],[42949,1,\"\u0282\"],[42950,1,\"\u1D8E\"],[42951,1,\"\uA7C8\"],[42952,2],[42953,1,\"\uA7CA\"],[42954,2],[42955,1,\"\u0264\"],[42956,1,\"\uA7CD\"],[42957,2],[[42958,42959],3],[42960,1,\"\uA7D1\"],[42961,2],[42962,3],[42963,2],[42964,3],[42965,2],[42966,1,\"\uA7D7\"],[42967,2],[42968,1,\"\uA7D9\"],[42969,2],[42970,1,\"\uA7DB\"],[42971,2],[42972,1,\"\u019B\"],[[42973,42993],3],[42994,1,\"c\"],[42995,1,\"f\"],[42996,1,\"q\"],[42997,1,\"\uA7F6\"],[42998,2],[42999,2],[43000,1,\"\u0127\"],[43001,1,\"\u0153\"],[43002,2],[[43003,43007],2],[[43008,43047],2],[[43048,43051],2],[43052,2],[[43053,43055],3],[[43056,43065],2],[[43066,43071],3],[[43072,43123],2],[[43124,43127],2],[[43128,43135],3],[[43136,43204],2],[43205,2],[[43206,43213],3],[[43214,43215],2],[[43216,43225],2],[[43226,43231],3],[[43232,43255],2],[[43256,43258],2],[43259,2],[43260,2],[43261,2],[[43262,43263],2],[[43264,43309],2],[[43310,43311],2],[[43312,43347],2],[[43348,43358],3],[43359,2],[[43360,43388],2],[[43389,43391],3],[[43392,43456],2],[[43457,43469],2],[43470,3],[[43471,43481],2],[[43482,43485],3],[[43486,43487],2],[[43488,43518],2],[43519,3],[[43520,43574],2],[[43575,43583],3],[[43584,43597],2],[[43598,43599],3],[[43600,43609],2],[[43610,43611],3],[[43612,43615],2],[[43616,43638],2],[[43639,43641],2],[[43642,43643],2],[[43644,43647],2],[[43648,43714],2],[[43715,43738],3],[[43739,43741],2],[[43742,43743],2],[[43744,43759],2],[[43760,43761],2],[[43762,43766],2],[[43767,43776],3],[[43777,43782],2],[[43783,43784],3],[[43785,43790],2],[[43791,43792],3],[[43793,43798],2],[[43799,43807],3],[[43808,43814],2],[43815,3],[[43816,43822],2],[43823,3],[[43824,43866],2],[43867,2],[43868,1,\"\uA727\"],[43869,1,\"\uAB37\"],[43870,1,\"\u026B\"],[43871,1,\"\uAB52\"],[[43872,43875],2],[[43876,43877],2],[[43878,43879],2],[43880,2],[43881,1,\"\u028D\"],[[43882,43883],2],[[43884,43887],3],[43888,1,\"\u13A0\"],[43889,1,\"\u13A1\"],[43890,1,\"\u13A2\"],[43891,1,\"\u13A3\"],[43892,1,\"\u13A4\"],[43893,1,\"\u13A5\"],[43894,1,\"\u13A6\"],[43895,1,\"\u13A7\"],[43896,1,\"\u13A8\"],[43897,1,\"\u13A9\"],[43898,1,\"\u13AA\"],[43899,1,\"\u13AB\"],[43900,1,\"\u13AC\"],[43901,1,\"\u13AD\"],[43902,1,\"\u13AE\"],[43903,1,\"\u13AF\"],[43904,1,\"\u13B0\"],[43905,1,\"\u13B1\"],[43906,1,\"\u13B2\"],[43907,1,\"\u13B3\"],[43908,1,\"\u13B4\"],[43909,1,\"\u13B5\"],[43910,1,\"\u13B6\"],[43911,1,\"\u13B7\"],[43912,1,\"\u13B8\"],[43913,1,\"\u13B9\"],[43914,1,\"\u13BA\"],[43915,1,\"\u13BB\"],[43916,1,\"\u13BC\"],[43917,1,\"\u13BD\"],[43918,1,\"\u13BE\"],[43919,1,\"\u13BF\"],[43920,1,\"\u13C0\"],[43921,1,\"\u13C1\"],[43922,1,\"\u13C2\"],[43923,1,\"\u13C3\"],[43924,1,\"\u13C4\"],[43925,1,\"\u13C5\"],[43926,1,\"\u13C6\"],[43927,1,\"\u13C7\"],[43928,1,\"\u13C8\"],[43929,1,\"\u13C9\"],[43930,1,\"\u13CA\"],[43931,1,\"\u13CB\"],[43932,1,\"\u13CC\"],[43933,1,\"\u13CD\"],[43934,1,\"\u13CE\"],[43935,1,\"\u13CF\"],[43936,1,\"\u13D0\"],[43937,1,\"\u13D1\"],[43938,1,\"\u13D2\"],[43939,1,\"\u13D3\"],[43940,1,\"\u13D4\"],[43941,1,\"\u13D5\"],[43942,1,\"\u13D6\"],[43943,1,\"\u13D7\"],[43944,1,\"\u13D8\"],[43945,1,\"\u13D9\"],[43946,1,\"\u13DA\"],[43947,1,\"\u13DB\"],[43948,1,\"\u13DC\"],[43949,1,\"\u13DD\"],[43950,1,\"\u13DE\"],[43951,1,\"\u13DF\"],[43952,1,\"\u13E0\"],[43953,1,\"\u13E1\"],[43954,1,\"\u13E2\"],[43955,1,\"\u13E3\"],[43956,1,\"\u13E4\"],[43957,1,\"\u13E5\"],[43958,1,\"\u13E6\"],[43959,1,\"\u13E7\"],[43960,1,\"\u13E8\"],[43961,1,\"\u13E9\"],[43962,1,\"\u13EA\"],[43963,1,\"\u13EB\"],[43964,1,\"\u13EC\"],[43965,1,\"\u13ED\"],[43966,1,\"\u13EE\"],[43967,1,\"\u13EF\"],[[43968,44010],2],[44011,2],[[44012,44013],2],[[44014,44015],3],[[44016,44025],2],[[44026,44031],3],[[44032,55203],2],[[55204,55215],3],[[55216,55238],2],[[55239,55242],3],[[55243,55291],2],[[55292,55295],3],[[55296,57343],3],[[57344,63743],3],[63744,1,\"\u8C48\"],[63745,1,\"\u66F4\"],[63746,1,\"\u8ECA\"],[63747,1,\"\u8CC8\"],[63748,1,\"\u6ED1\"],[63749,1,\"\u4E32\"],[63750,1,\"\u53E5\"],[[63751,63752],1,\"\u9F9C\"],[63753,1,\"\u5951\"],[63754,1,\"\u91D1\"],[63755,1,\"\u5587\"],[63756,1,\"\u5948\"],[63757,1,\"\u61F6\"],[63758,1,\"\u7669\"],[63759,1,\"\u7F85\"],[63760,1,\"\u863F\"],[63761,1,\"\u87BA\"],[63762,1,\"\u88F8\"],[63763,1,\"\u908F\"],[63764,1,\"\u6A02\"],[63765,1,\"\u6D1B\"],[63766,1,\"\u70D9\"],[63767,1,\"\u73DE\"],[63768,1,\"\u843D\"],[63769,1,\"\u916A\"],[63770,1,\"\u99F1\"],[63771,1,\"\u4E82\"],[63772,1,\"\u5375\"],[63773,1,\"\u6B04\"],[63774,1,\"\u721B\"],[63775,1,\"\u862D\"],[63776,1,\"\u9E1E\"],[63777,1,\"\u5D50\"],[63778,1,\"\u6FEB\"],[63779,1,\"\u85CD\"],[63780,1,\"\u8964\"],[63781,1,\"\u62C9\"],[63782,1,\"\u81D8\"],[63783,1,\"\u881F\"],[63784,1,\"\u5ECA\"],[63785,1,\"\u6717\"],[63786,1,\"\u6D6A\"],[63787,1,\"\u72FC\"],[63788,1,\"\u90CE\"],[63789,1,\"\u4F86\"],[63790,1,\"\u51B7\"],[63791,1,\"\u52DE\"],[63792,1,\"\u64C4\"],[63793,1,\"\u6AD3\"],[63794,1,\"\u7210\"],[63795,1,\"\u76E7\"],[63796,1,\"\u8001\"],[63797,1,\"\u8606\"],[63798,1,\"\u865C\"],[63799,1,\"\u8DEF\"],[63800,1,\"\u9732\"],[63801,1,\"\u9B6F\"],[63802,1,\"\u9DFA\"],[63803,1,\"\u788C\"],[63804,1,\"\u797F\"],[63805,1,\"\u7DA0\"],[63806,1,\"\u83C9\"],[63807,1,\"\u9304\"],[63808,1,\"\u9E7F\"],[63809,1,\"\u8AD6\"],[63810,1,\"\u58DF\"],[63811,1,\"\u5F04\"],[63812,1,\"\u7C60\"],[63813,1,\"\u807E\"],[63814,1,\"\u7262\"],[63815,1,\"\u78CA\"],[63816,1,\"\u8CC2\"],[63817,1,\"\u96F7\"],[63818,1,\"\u58D8\"],[63819,1,\"\u5C62\"],[63820,1,\"\u6A13\"],[63821,1,\"\u6DDA\"],[63822,1,\"\u6F0F\"],[63823,1,\"\u7D2F\"],[63824,1,\"\u7E37\"],[63825,1,\"\u964B\"],[63826,1,\"\u52D2\"],[63827,1,\"\u808B\"],[63828,1,\"\u51DC\"],[63829,1,\"\u51CC\"],[63830,1,\"\u7A1C\"],[63831,1,\"\u7DBE\"],[63832,1,\"\u83F1\"],[63833,1,\"\u9675\"],[63834,1,\"\u8B80\"],[63835,1,\"\u62CF\"],[63836,1,\"\u6A02\"],[63837,1,\"\u8AFE\"],[63838,1,\"\u4E39\"],[63839,1,\"\u5BE7\"],[63840,1,\"\u6012\"],[63841,1,\"\u7387\"],[63842,1,\"\u7570\"],[63843,1,\"\u5317\"],[63844,1,\"\u78FB\"],[63845,1,\"\u4FBF\"],[63846,1,\"\u5FA9\"],[63847,1,\"\u4E0D\"],[63848,1,\"\u6CCC\"],[63849,1,\"\u6578\"],[63850,1,\"\u7D22\"],[63851,1,\"\u53C3\"],[63852,1,\"\u585E\"],[63853,1,\"\u7701\"],[63854,1,\"\u8449\"],[63855,1,\"\u8AAA\"],[63856,1,\"\u6BBA\"],[63857,1,\"\u8FB0\"],[63858,1,\"\u6C88\"],[63859,1,\"\u62FE\"],[63860,1,\"\u82E5\"],[63861,1,\"\u63A0\"],[63862,1,\"\u7565\"],[63863,1,\"\u4EAE\"],[63864,1,\"\u5169\"],[63865,1,\"\u51C9\"],[63866,1,\"\u6881\"],[63867,1,\"\u7CE7\"],[63868,1,\"\u826F\"],[63869,1,\"\u8AD2\"],[63870,1,\"\u91CF\"],[63871,1,\"\u52F5\"],[63872,1,\"\u5442\"],[63873,1,\"\u5973\"],[63874,1,\"\u5EEC\"],[63875,1,\"\u65C5\"],[63876,1,\"\u6FFE\"],[63877,1,\"\u792A\"],[63878,1,\"\u95AD\"],[63879,1,\"\u9A6A\"],[63880,1,\"\u9E97\"],[63881,1,\"\u9ECE\"],[63882,1,\"\u529B\"],[63883,1,\"\u66C6\"],[63884,1,\"\u6B77\"],[63885,1,\"\u8F62\"],[63886,1,\"\u5E74\"],[63887,1,\"\u6190\"],[63888,1,\"\u6200\"],[63889,1,\"\u649A\"],[63890,1,\"\u6F23\"],[63891,1,\"\u7149\"],[63892,1,\"\u7489\"],[63893,1,\"\u79CA\"],[63894,1,\"\u7DF4\"],[63895,1,\"\u806F\"],[63896,1,\"\u8F26\"],[63897,1,\"\u84EE\"],[63898,1,\"\u9023\"],[63899,1,\"\u934A\"],[63900,1,\"\u5217\"],[63901,1,\"\u52A3\"],[63902,1,\"\u54BD\"],[63903,1,\"\u70C8\"],[63904,1,\"\u88C2\"],[63905,1,\"\u8AAA\"],[63906,1,\"\u5EC9\"],[63907,1,\"\u5FF5\"],[63908,1,\"\u637B\"],[63909,1,\"\u6BAE\"],[63910,1,\"\u7C3E\"],[63911,1,\"\u7375\"],[63912,1,\"\u4EE4\"],[63913,1,\"\u56F9\"],[63914,1,\"\u5BE7\"],[63915,1,\"\u5DBA\"],[63916,1,\"\u601C\"],[63917,1,\"\u73B2\"],[63918,1,\"\u7469\"],[63919,1,\"\u7F9A\"],[63920,1,\"\u8046\"],[63921,1,\"\u9234\"],[63922,1,\"\u96F6\"],[63923,1,\"\u9748\"],[63924,1,\"\u9818\"],[63925,1,\"\u4F8B\"],[63926,1,\"\u79AE\"],[63927,1,\"\u91B4\"],[63928,1,\"\u96B8\"],[63929,1,\"\u60E1\"],[63930,1,\"\u4E86\"],[63931,1,\"\u50DA\"],[63932,1,\"\u5BEE\"],[63933,1,\"\u5C3F\"],[63934,1,\"\u6599\"],[63935,1,\"\u6A02\"],[63936,1,\"\u71CE\"],[63937,1,\"\u7642\"],[63938,1,\"\u84FC\"],[63939,1,\"\u907C\"],[63940,1,\"\u9F8D\"],[63941,1,\"\u6688\"],[63942,1,\"\u962E\"],[63943,1,\"\u5289\"],[63944,1,\"\u677B\"],[63945,1,\"\u67F3\"],[63946,1,\"\u6D41\"],[63947,1,\"\u6E9C\"],[63948,1,\"\u7409\"],[63949,1,\"\u7559\"],[63950,1,\"\u786B\"],[63951,1,\"\u7D10\"],[63952,1,\"\u985E\"],[63953,1,\"\u516D\"],[63954,1,\"\u622E\"],[63955,1,\"\u9678\"],[63956,1,\"\u502B\"],[63957,1,\"\u5D19\"],[63958,1,\"\u6DEA\"],[63959,1,\"\u8F2A\"],[63960,1,\"\u5F8B\"],[63961,1,\"\u6144\"],[63962,1,\"\u6817\"],[63963,1,\"\u7387\"],[63964,1,\"\u9686\"],[63965,1,\"\u5229\"],[63966,1,\"\u540F\"],[63967,1,\"\u5C65\"],[63968,1,\"\u6613\"],[63969,1,\"\u674E\"],[63970,1,\"\u68A8\"],[63971,1,\"\u6CE5\"],[63972,1,\"\u7406\"],[63973,1,\"\u75E2\"],[63974,1,\"\u7F79\"],[63975,1,\"\u88CF\"],[63976,1,\"\u88E1\"],[63977,1,\"\u91CC\"],[63978,1,\"\u96E2\"],[63979,1,\"\u533F\"],[63980,1,\"\u6EBA\"],[63981,1,\"\u541D\"],[63982,1,\"\u71D0\"],[63983,1,\"\u7498\"],[63984,1,\"\u85FA\"],[63985,1,\"\u96A3\"],[63986,1,\"\u9C57\"],[63987,1,\"\u9E9F\"],[63988,1,\"\u6797\"],[63989,1,\"\u6DCB\"],[63990,1,\"\u81E8\"],[63991,1,\"\u7ACB\"],[63992,1,\"\u7B20\"],[63993,1,\"\u7C92\"],[63994,1,\"\u72C0\"],[63995,1,\"\u7099\"],[63996,1,\"\u8B58\"],[63997,1,\"\u4EC0\"],[63998,1,\"\u8336\"],[63999,1,\"\u523A\"],[64000,1,\"\u5207\"],[64001,1,\"\u5EA6\"],[64002,1,\"\u62D3\"],[64003,1,\"\u7CD6\"],[64004,1,\"\u5B85\"],[64005,1,\"\u6D1E\"],[64006,1,\"\u66B4\"],[64007,1,\"\u8F3B\"],[64008,1,\"\u884C\"],[64009,1,\"\u964D\"],[64010,1,\"\u898B\"],[64011,1,\"\u5ED3\"],[64012,1,\"\u5140\"],[64013,1,\"\u55C0\"],[[64014,64015],2],[64016,1,\"\u585A\"],[64017,2],[64018,1,\"\u6674\"],[[64019,64020],2],[64021,1,\"\u51DE\"],[64022,1,\"\u732A\"],[64023,1,\"\u76CA\"],[64024,1,\"\u793C\"],[64025,1,\"\u795E\"],[64026,1,\"\u7965\"],[64027,1,\"\u798F\"],[64028,1,\"\u9756\"],[64029,1,\"\u7CBE\"],[64030,1,\"\u7FBD\"],[64031,2],[64032,1,\"\u8612\"],[64033,2],[64034,1,\"\u8AF8\"],[[64035,64036],2],[64037,1,\"\u9038\"],[64038,1,\"\u90FD\"],[[64039,64041],2],[64042,1,\"\u98EF\"],[64043,1,\"\u98FC\"],[64044,1,\"\u9928\"],[64045,1,\"\u9DB4\"],[64046,1,\"\u90DE\"],[64047,1,\"\u96B7\"],[64048,1,\"\u4FAE\"],[64049,1,\"\u50E7\"],[64050,1,\"\u514D\"],[64051,1,\"\u52C9\"],[64052,1,\"\u52E4\"],[64053,1,\"\u5351\"],[64054,1,\"\u559D\"],[64055,1,\"\u5606\"],[64056,1,\"\u5668\"],[64057,1,\"\u5840\"],[64058,1,\"\u58A8\"],[64059,1,\"\u5C64\"],[64060,1,\"\u5C6E\"],[64061,1,\"\u6094\"],[64062,1,\"\u6168\"],[64063,1,\"\u618E\"],[64064,1,\"\u61F2\"],[64065,1,\"\u654F\"],[64066,1,\"\u65E2\"],[64067,1,\"\u6691\"],[64068,1,\"\u6885\"],[64069,1,\"\u6D77\"],[64070,1,\"\u6E1A\"],[64071,1,\"\u6F22\"],[64072,1,\"\u716E\"],[64073,1,\"\u722B\"],[64074,1,\"\u7422\"],[64075,1,\"\u7891\"],[64076,1,\"\u793E\"],[64077,1,\"\u7949\"],[64078,1,\"\u7948\"],[64079,1,\"\u7950\"],[64080,1,\"\u7956\"],[64081,1,\"\u795D\"],[64082,1,\"\u798D\"],[64083,1,\"\u798E\"],[64084,1,\"\u7A40\"],[64085,1,\"\u7A81\"],[64086,1,\"\u7BC0\"],[64087,1,\"\u7DF4\"],[64088,1,\"\u7E09\"],[64089,1,\"\u7E41\"],[64090,1,\"\u7F72\"],[64091,1,\"\u8005\"],[64092,1,\"\u81ED\"],[[64093,64094],1,\"\u8279\"],[64095,1,\"\u8457\"],[64096,1,\"\u8910\"],[64097,1,\"\u8996\"],[64098,1,\"\u8B01\"],[64099,1,\"\u8B39\"],[64100,1,\"\u8CD3\"],[64101,1,\"\u8D08\"],[64102,1,\"\u8FB6\"],[64103,1,\"\u9038\"],[64104,1,\"\u96E3\"],[64105,1,\"\u97FF\"],[64106,1,\"\u983B\"],[64107,1,\"\u6075\"],[64108,1,\"\uD850\uDEEE\"],[64109,1,\"\u8218\"],[[64110,64111],3],[64112,1,\"\u4E26\"],[64113,1,\"\u51B5\"],[64114,1,\"\u5168\"],[64115,1,\"\u4F80\"],[64116,1,\"\u5145\"],[64117,1,\"\u5180\"],[64118,1,\"\u52C7\"],[64119,1,\"\u52FA\"],[64120,1,\"\u559D\"],[64121,1,\"\u5555\"],[64122,1,\"\u5599\"],[64123,1,\"\u55E2\"],[64124,1,\"\u585A\"],[64125,1,\"\u58B3\"],[64126,1,\"\u5944\"],[64127,1,\"\u5954\"],[64128,1,\"\u5A62\"],[64129,1,\"\u5B28\"],[64130,1,\"\u5ED2\"],[64131,1,\"\u5ED9\"],[64132,1,\"\u5F69\"],[64133,1,\"\u5FAD\"],[64134,1,\"\u60D8\"],[64135,1,\"\u614E\"],[64136,1,\"\u6108\"],[64137,1,\"\u618E\"],[64138,1,\"\u6160\"],[64139,1,\"\u61F2\"],[64140,1,\"\u6234\"],[64141,1,\"\u63C4\"],[64142,1,\"\u641C\"],[64143,1,\"\u6452\"],[64144,1,\"\u6556\"],[64145,1,\"\u6674\"],[64146,1,\"\u6717\"],[64147,1,\"\u671B\"],[64148,1,\"\u6756\"],[64149,1,\"\u6B79\"],[64150,1,\"\u6BBA\"],[64151,1,\"\u6D41\"],[64152,1,\"\u6EDB\"],[64153,1,\"\u6ECB\"],[64154,1,\"\u6F22\"],[64155,1,\"\u701E\"],[64156,1,\"\u716E\"],[64157,1,\"\u77A7\"],[64158,1,\"\u7235\"],[64159,1,\"\u72AF\"],[64160,1,\"\u732A\"],[64161,1,\"\u7471\"],[64162,1,\"\u7506\"],[64163,1,\"\u753B\"],[64164,1,\"\u761D\"],[64165,1,\"\u761F\"],[64166,1,\"\u76CA\"],[64167,1,\"\u76DB\"],[64168,1,\"\u76F4\"],[64169,1,\"\u774A\"],[64170,1,\"\u7740\"],[64171,1,\"\u78CC\"],[64172,1,\"\u7AB1\"],[64173,1,\"\u7BC0\"],[64174,1,\"\u7C7B\"],[64175,1,\"\u7D5B\"],[64176,1,\"\u7DF4\"],[64177,1,\"\u7F3E\"],[64178,1,\"\u8005\"],[64179,1,\"\u8352\"],[64180,1,\"\u83EF\"],[64181,1,\"\u8779\"],[64182,1,\"\u8941\"],[64183,1,\"\u8986\"],[64184,1,\"\u8996\"],[64185,1,\"\u8ABF\"],[64186,1,\"\u8AF8\"],[64187,1,\"\u8ACB\"],[64188,1,\"\u8B01\"],[64189,1,\"\u8AFE\"],[64190,1,\"\u8AED\"],[64191,1,\"\u8B39\"],[64192,1,\"\u8B8A\"],[64193,1,\"\u8D08\"],[64194,1,\"\u8F38\"],[64195,1,\"\u9072\"],[64196,1,\"\u9199\"],[64197,1,\"\u9276\"],[64198,1,\"\u967C\"],[64199,1,\"\u96E3\"],[64200,1,\"\u9756\"],[64201,1,\"\u97DB\"],[64202,1,\"\u97FF\"],[64203,1,\"\u980B\"],[64204,1,\"\u983B\"],[64205,1,\"\u9B12\"],[64206,1,\"\u9F9C\"],[64207,1,\"\uD84A\uDC4A\"],[64208,1,\"\uD84A\uDC44\"],[64209,1,\"\uD84C\uDFD5\"],[64210,1,\"\u3B9D\"],[64211,1,\"\u4018\"],[64212,1,\"\u4039\"],[64213,1,\"\uD854\uDE49\"],[64214,1,\"\uD857\uDCD0\"],[64215,1,\"\uD85F\uDED3\"],[64216,1,\"\u9F43\"],[64217,1,\"\u9F8E\"],[[64218,64255],3],[64256,1,\"ff\"],[64257,1,\"fi\"],[64258,1,\"fl\"],[64259,1,\"ffi\"],[64260,1,\"ffl\"],[[64261,64262],1,\"st\"],[[64263,64274],3],[64275,1,\"\u0574\u0576\"],[64276,1,\"\u0574\u0565\"],[64277,1,\"\u0574\u056B\"],[64278,1,\"\u057E\u0576\"],[64279,1,\"\u0574\u056D\"],[[64280,64284],3],[64285,1,\"\u05D9\u05B4\"],[64286,2],[64287,1,\"\u05F2\u05B7\"],[64288,1,\"\u05E2\"],[64289,1,\"\u05D0\"],[64290,1,\"\u05D3\"],[64291,1,\"\u05D4\"],[64292,1,\"\u05DB\"],[64293,1,\"\u05DC\"],[64294,1,\"\u05DD\"],[64295,1,\"\u05E8\"],[64296,1,\"\u05EA\"],[64297,1,\"+\"],[64298,1,\"\u05E9\u05C1\"],[64299,1,\"\u05E9\u05C2\"],[64300,1,\"\u05E9\u05BC\u05C1\"],[64301,1,\"\u05E9\u05BC\u05C2\"],[64302,1,\"\u05D0\u05B7\"],[64303,1,\"\u05D0\u05B8\"],[64304,1,\"\u05D0\u05BC\"],[64305,1,\"\u05D1\u05BC\"],[64306,1,\"\u05D2\u05BC\"],[64307,1,\"\u05D3\u05BC\"],[64308,1,\"\u05D4\u05BC\"],[64309,1,\"\u05D5\u05BC\"],[64310,1,\"\u05D6\u05BC\"],[64311,3],[64312,1,\"\u05D8\u05BC\"],[64313,1,\"\u05D9\u05BC\"],[64314,1,\"\u05DA\u05BC\"],[64315,1,\"\u05DB\u05BC\"],[64316,1,\"\u05DC\u05BC\"],[64317,3],[64318,1,\"\u05DE\u05BC\"],[64319,3],[64320,1,\"\u05E0\u05BC\"],[64321,1,\"\u05E1\u05BC\"],[64322,3],[64323,1,\"\u05E3\u05BC\"],[64324,1,\"\u05E4\u05BC\"],[64325,3],[64326,1,\"\u05E6\u05BC\"],[64327,1,\"\u05E7\u05BC\"],[64328,1,\"\u05E8\u05BC\"],[64329,1,\"\u05E9\u05BC\"],[64330,1,\"\u05EA\u05BC\"],[64331,1,\"\u05D5\u05B9\"],[64332,1,\"\u05D1\u05BF\"],[64333,1,\"\u05DB\u05BF\"],[64334,1,\"\u05E4\u05BF\"],[64335,1,\"\u05D0\u05DC\"],[[64336,64337],1,\"\u0671\"],[[64338,64341],1,\"\u067B\"],[[64342,64345],1,\"\u067E\"],[[64346,64349],1,\"\u0680\"],[[64350,64353],1,\"\u067A\"],[[64354,64357],1,\"\u067F\"],[[64358,64361],1,\"\u0679\"],[[64362,64365],1,\"\u06A4\"],[[64366,64369],1,\"\u06A6\"],[[64370,64373],1,\"\u0684\"],[[64374,64377],1,\"\u0683\"],[[64378,64381],1,\"\u0686\"],[[64382,64385],1,\"\u0687\"],[[64386,64387],1,\"\u068D\"],[[64388,64389],1,\"\u068C\"],[[64390,64391],1,\"\u068E\"],[[64392,64393],1,\"\u0688\"],[[64394,64395],1,\"\u0698\"],[[64396,64397],1,\"\u0691\"],[[64398,64401],1,\"\u06A9\"],[[64402,64405],1,\"\u06AF\"],[[64406,64409],1,\"\u06B3\"],[[64410,64413],1,\"\u06B1\"],[[64414,64415],1,\"\u06BA\"],[[64416,64419],1,\"\u06BB\"],[[64420,64421],1,\"\u06C0\"],[[64422,64425],1,\"\u06C1\"],[[64426,64429],1,\"\u06BE\"],[[64430,64431],1,\"\u06D2\"],[[64432,64433],1,\"\u06D3\"],[[64434,64449],2],[64450,2],[[64451,64466],3],[[64467,64470],1,\"\u06AD\"],[[64471,64472],1,\"\u06C7\"],[[64473,64474],1,\"\u06C6\"],[[64475,64476],1,\"\u06C8\"],[64477,1,\"\u06C7\u0674\"],[[64478,64479],1,\"\u06CB\"],[[64480,64481],1,\"\u06C5\"],[[64482,64483],1,\"\u06C9\"],[[64484,64487],1,\"\u06D0\"],[[64488,64489],1,\"\u0649\"],[[64490,64491],1,\"\u0626\u0627\"],[[64492,64493],1,\"\u0626\u06D5\"],[[64494,64495],1,\"\u0626\u0648\"],[[64496,64497],1,\"\u0626\u06C7\"],[[64498,64499],1,\"\u0626\u06C6\"],[[64500,64501],1,\"\u0626\u06C8\"],[[64502,64504],1,\"\u0626\u06D0\"],[[64505,64507],1,\"\u0626\u0649\"],[[64508,64511],1,\"\u06CC\"],[64512,1,\"\u0626\u062C\"],[64513,1,\"\u0626\u062D\"],[64514,1,\"\u0626\u0645\"],[64515,1,\"\u0626\u0649\"],[64516,1,\"\u0626\u064A\"],[64517,1,\"\u0628\u062C\"],[64518,1,\"\u0628\u062D\"],[64519,1,\"\u0628\u062E\"],[64520,1,\"\u0628\u0645\"],[64521,1,\"\u0628\u0649\"],[64522,1,\"\u0628\u064A\"],[64523,1,\"\u062A\u062C\"],[64524,1,\"\u062A\u062D\"],[64525,1,\"\u062A\u062E\"],[64526,1,\"\u062A\u0645\"],[64527,1,\"\u062A\u0649\"],[64528,1,\"\u062A\u064A\"],[64529,1,\"\u062B\u062C\"],[64530,1,\"\u062B\u0645\"],[64531,1,\"\u062B\u0649\"],[64532,1,\"\u062B\u064A\"],[64533,1,\"\u062C\u062D\"],[64534,1,\"\u062C\u0645\"],[64535,1,\"\u062D\u062C\"],[64536,1,\"\u062D\u0645\"],[64537,1,\"\u062E\u062C\"],[64538,1,\"\u062E\u062D\"],[64539,1,\"\u062E\u0645\"],[64540,1,\"\u0633\u062C\"],[64541,1,\"\u0633\u062D\"],[64542,1,\"\u0633\u062E\"],[64543,1,\"\u0633\u0645\"],[64544,1,\"\u0635\u062D\"],[64545,1,\"\u0635\u0645\"],[64546,1,\"\u0636\u062C\"],[64547,1,\"\u0636\u062D\"],[64548,1,\"\u0636\u062E\"],[64549,1,\"\u0636\u0645\"],[64550,1,\"\u0637\u062D\"],[64551,1,\"\u0637\u0645\"],[64552,1,\"\u0638\u0645\"],[64553,1,\"\u0639\u062C\"],[64554,1,\"\u0639\u0645\"],[64555,1,\"\u063A\u062C\"],[64556,1,\"\u063A\u0645\"],[64557,1,\"\u0641\u062C\"],[64558,1,\"\u0641\u062D\"],[64559,1,\"\u0641\u062E\"],[64560,1,\"\u0641\u0645\"],[64561,1,\"\u0641\u0649\"],[64562,1,\"\u0641\u064A\"],[64563,1,\"\u0642\u062D\"],[64564,1,\"\u0642\u0645\"],[64565,1,\"\u0642\u0649\"],[64566,1,\"\u0642\u064A\"],[64567,1,\"\u0643\u0627\"],[64568,1,\"\u0643\u062C\"],[64569,1,\"\u0643\u062D\"],[64570,1,\"\u0643\u062E\"],[64571,1,\"\u0643\u0644\"],[64572,1,\"\u0643\u0645\"],[64573,1,\"\u0643\u0649\"],[64574,1,\"\u0643\u064A\"],[64575,1,\"\u0644\u062C\"],[64576,1,\"\u0644\u062D\"],[64577,1,\"\u0644\u062E\"],[64578,1,\"\u0644\u0645\"],[64579,1,\"\u0644\u0649\"],[64580,1,\"\u0644\u064A\"],[64581,1,\"\u0645\u062C\"],[64582,1,\"\u0645\u062D\"],[64583,1,\"\u0645\u062E\"],[64584,1,\"\u0645\u0645\"],[64585,1,\"\u0645\u0649\"],[64586,1,\"\u0645\u064A\"],[64587,1,\"\u0646\u062C\"],[64588,1,\"\u0646\u062D\"],[64589,1,\"\u0646\u062E\"],[64590,1,\"\u0646\u0645\"],[64591,1,\"\u0646\u0649\"],[64592,1,\"\u0646\u064A\"],[64593,1,\"\u0647\u062C\"],[64594,1,\"\u0647\u0645\"],[64595,1,\"\u0647\u0649\"],[64596,1,\"\u0647\u064A\"],[64597,1,\"\u064A\u062C\"],[64598,1,\"\u064A\u062D\"],[64599,1,\"\u064A\u062E\"],[64600,1,\"\u064A\u0645\"],[64601,1,\"\u064A\u0649\"],[64602,1,\"\u064A\u064A\"],[64603,1,\"\u0630\u0670\"],[64604,1,\"\u0631\u0670\"],[64605,1,\"\u0649\u0670\"],[64606,1,\" \u064C\u0651\"],[64607,1,\" \u064D\u0651\"],[64608,1,\" \u064E\u0651\"],[64609,1,\" \u064F\u0651\"],[64610,1,\" \u0650\u0651\"],[64611,1,\" \u0651\u0670\"],[64612,1,\"\u0626\u0631\"],[64613,1,\"\u0626\u0632\"],[64614,1,\"\u0626\u0645\"],[64615,1,\"\u0626\u0646\"],[64616,1,\"\u0626\u0649\"],[64617,1,\"\u0626\u064A\"],[64618,1,\"\u0628\u0631\"],[64619,1,\"\u0628\u0632\"],[64620,1,\"\u0628\u0645\"],[64621,1,\"\u0628\u0646\"],[64622,1,\"\u0628\u0649\"],[64623,1,\"\u0628\u064A\"],[64624,1,\"\u062A\u0631\"],[64625,1,\"\u062A\u0632\"],[64626,1,\"\u062A\u0645\"],[64627,1,\"\u062A\u0646\"],[64628,1,\"\u062A\u0649\"],[64629,1,\"\u062A\u064A\"],[64630,1,\"\u062B\u0631\"],[64631,1,\"\u062B\u0632\"],[64632,1,\"\u062B\u0645\"],[64633,1,\"\u062B\u0646\"],[64634,1,\"\u062B\u0649\"],[64635,1,\"\u062B\u064A\"],[64636,1,\"\u0641\u0649\"],[64637,1,\"\u0641\u064A\"],[64638,1,\"\u0642\u0649\"],[64639,1,\"\u0642\u064A\"],[64640,1,\"\u0643\u0627\"],[64641,1,\"\u0643\u0644\"],[64642,1,\"\u0643\u0645\"],[64643,1,\"\u0643\u0649\"],[64644,1,\"\u0643\u064A\"],[64645,1,\"\u0644\u0645\"],[64646,1,\"\u0644\u0649\"],[64647,1,\"\u0644\u064A\"],[64648,1,\"\u0645\u0627\"],[64649,1,\"\u0645\u0645\"],[64650,1,\"\u0646\u0631\"],[64651,1,\"\u0646\u0632\"],[64652,1,\"\u0646\u0645\"],[64653,1,\"\u0646\u0646\"],[64654,1,\"\u0646\u0649\"],[64655,1,\"\u0646\u064A\"],[64656,1,\"\u0649\u0670\"],[64657,1,\"\u064A\u0631\"],[64658,1,\"\u064A\u0632\"],[64659,1,\"\u064A\u0645\"],[64660,1,\"\u064A\u0646\"],[64661,1,\"\u064A\u0649\"],[64662,1,\"\u064A\u064A\"],[64663,1,\"\u0626\u062C\"],[64664,1,\"\u0626\u062D\"],[64665,1,\"\u0626\u062E\"],[64666,1,\"\u0626\u0645\"],[64667,1,\"\u0626\u0647\"],[64668,1,\"\u0628\u062C\"],[64669,1,\"\u0628\u062D\"],[64670,1,\"\u0628\u062E\"],[64671,1,\"\u0628\u0645\"],[64672,1,\"\u0628\u0647\"],[64673,1,\"\u062A\u062C\"],[64674,1,\"\u062A\u062D\"],[64675,1,\"\u062A\u062E\"],[64676,1,\"\u062A\u0645\"],[64677,1,\"\u062A\u0647\"],[64678,1,\"\u062B\u0645\"],[64679,1,\"\u062C\u062D\"],[64680,1,\"\u062C\u0645\"],[64681,1,\"\u062D\u062C\"],[64682,1,\"\u062D\u0645\"],[64683,1,\"\u062E\u062C\"],[64684,1,\"\u062E\u0645\"],[64685,1,\"\u0633\u062C\"],[64686,1,\"\u0633\u062D\"],[64687,1,\"\u0633\u062E\"],[64688,1,\"\u0633\u0645\"],[64689,1,\"\u0635\u062D\"],[64690,1,\"\u0635\u062E\"],[64691,1,\"\u0635\u0645\"],[64692,1,\"\u0636\u062C\"],[64693,1,\"\u0636\u062D\"],[64694,1,\"\u0636\u062E\"],[64695,1,\"\u0636\u0645\"],[64696,1,\"\u0637\u062D\"],[64697,1,\"\u0638\u0645\"],[64698,1,\"\u0639\u062C\"],[64699,1,\"\u0639\u0645\"],[64700,1,\"\u063A\u062C\"],[64701,1,\"\u063A\u0645\"],[64702,1,\"\u0641\u062C\"],[64703,1,\"\u0641\u062D\"],[64704,1,\"\u0641\u062E\"],[64705,1,\"\u0641\u0645\"],[64706,1,\"\u0642\u062D\"],[64707,1,\"\u0642\u0645\"],[64708,1,\"\u0643\u062C\"],[64709,1,\"\u0643\u062D\"],[64710,1,\"\u0643\u062E\"],[64711,1,\"\u0643\u0644\"],[64712,1,\"\u0643\u0645\"],[64713,1,\"\u0644\u062C\"],[64714,1,\"\u0644\u062D\"],[64715,1,\"\u0644\u062E\"],[64716,1,\"\u0644\u0645\"],[64717,1,\"\u0644\u0647\"],[64718,1,\"\u0645\u062C\"],[64719,1,\"\u0645\u062D\"],[64720,1,\"\u0645\u062E\"],[64721,1,\"\u0645\u0645\"],[64722,1,\"\u0646\u062C\"],[64723,1,\"\u0646\u062D\"],[64724,1,\"\u0646\u062E\"],[64725,1,\"\u0646\u0645\"],[64726,1,\"\u0646\u0647\"],[64727,1,\"\u0647\u062C\"],[64728,1,\"\u0647\u0645\"],[64729,1,\"\u0647\u0670\"],[64730,1,\"\u064A\u062C\"],[64731,1,\"\u064A\u062D\"],[64732,1,\"\u064A\u062E\"],[64733,1,\"\u064A\u0645\"],[64734,1,\"\u064A\u0647\"],[64735,1,\"\u0626\u0645\"],[64736,1,\"\u0626\u0647\"],[64737,1,\"\u0628\u0645\"],[64738,1,\"\u0628\u0647\"],[64739,1,\"\u062A\u0645\"],[64740,1,\"\u062A\u0647\"],[64741,1,\"\u062B\u0645\"],[64742,1,\"\u062B\u0647\"],[64743,1,\"\u0633\u0645\"],[64744,1,\"\u0633\u0647\"],[64745,1,\"\u0634\u0645\"],[64746,1,\"\u0634\u0647\"],[64747,1,\"\u0643\u0644\"],[64748,1,\"\u0643\u0645\"],[64749,1,\"\u0644\u0645\"],[64750,1,\"\u0646\u0645\"],[64751,1,\"\u0646\u0647\"],[64752,1,\"\u064A\u0645\"],[64753,1,\"\u064A\u0647\"],[64754,1,\"\u0640\u064E\u0651\"],[64755,1,\"\u0640\u064F\u0651\"],[64756,1,\"\u0640\u0650\u0651\"],[64757,1,\"\u0637\u0649\"],[64758,1,\"\u0637\u064A\"],[64759,1,\"\u0639\u0649\"],[64760,1,\"\u0639\u064A\"],[64761,1,\"\u063A\u0649\"],[64762,1,\"\u063A\u064A\"],[64763,1,\"\u0633\u0649\"],[64764,1,\"\u0633\u064A\"],[64765,1,\"\u0634\u0649\"],[64766,1,\"\u0634\u064A\"],[64767,1,\"\u062D\u0649\"],[64768,1,\"\u062D\u064A\"],[64769,1,\"\u062C\u0649\"],[64770,1,\"\u062C\u064A\"],[64771,1,\"\u062E\u0649\"],[64772,1,\"\u062E\u064A\"],[64773,1,\"\u0635\u0649\"],[64774,1,\"\u0635\u064A\"],[64775,1,\"\u0636\u0649\"],[64776,1,\"\u0636\u064A\"],[64777,1,\"\u0634\u062C\"],[64778,1,\"\u0634\u062D\"],[64779,1,\"\u0634\u062E\"],[64780,1,\"\u0634\u0645\"],[64781,1,\"\u0634\u0631\"],[64782,1,\"\u0633\u0631\"],[64783,1,\"\u0635\u0631\"],[64784,1,\"\u0636\u0631\"],[64785,1,\"\u0637\u0649\"],[64786,1,\"\u0637\u064A\"],[64787,1,\"\u0639\u0649\"],[64788,1,\"\u0639\u064A\"],[64789,1,\"\u063A\u0649\"],[64790,1,\"\u063A\u064A\"],[64791,1,\"\u0633\u0649\"],[64792,1,\"\u0633\u064A\"],[64793,1,\"\u0634\u0649\"],[64794,1,\"\u0634\u064A\"],[64795,1,\"\u062D\u0649\"],[64796,1,\"\u062D\u064A\"],[64797,1,\"\u062C\u0649\"],[64798,1,\"\u062C\u064A\"],[64799,1,\"\u062E\u0649\"],[64800,1,\"\u062E\u064A\"],[64801,1,\"\u0635\u0649\"],[64802,1,\"\u0635\u064A\"],[64803,1,\"\u0636\u0649\"],[64804,1,\"\u0636\u064A\"],[64805,1,\"\u0634\u062C\"],[64806,1,\"\u0634\u062D\"],[64807,1,\"\u0634\u062E\"],[64808,1,\"\u0634\u0645\"],[64809,1,\"\u0634\u0631\"],[64810,1,\"\u0633\u0631\"],[64811,1,\"\u0635\u0631\"],[64812,1,\"\u0636\u0631\"],[64813,1,\"\u0634\u062C\"],[64814,1,\"\u0634\u062D\"],[64815,1,\"\u0634\u062E\"],[64816,1,\"\u0634\u0645\"],[64817,1,\"\u0633\u0647\"],[64818,1,\"\u0634\u0647\"],[64819,1,\"\u0637\u0645\"],[64820,1,\"\u0633\u062C\"],[64821,1,\"\u0633\u062D\"],[64822,1,\"\u0633\u062E\"],[64823,1,\"\u0634\u062C\"],[64824,1,\"\u0634\u062D\"],[64825,1,\"\u0634\u062E\"],[64826,1,\"\u0637\u0645\"],[64827,1,\"\u0638\u0645\"],[[64828,64829],1,\"\u0627\u064B\"],[[64830,64831],2],[[64832,64847],2],[64848,1,\"\u062A\u062C\u0645\"],[[64849,64850],1,\"\u062A\u062D\u062C\"],[64851,1,\"\u062A\u062D\u0645\"],[64852,1,\"\u062A\u062E\u0645\"],[64853,1,\"\u062A\u0645\u062C\"],[64854,1,\"\u062A\u0645\u062D\"],[64855,1,\"\u062A\u0645\u062E\"],[[64856,64857],1,\"\u062C\u0645\u062D\"],[64858,1,\"\u062D\u0645\u064A\"],[64859,1,\"\u062D\u0645\u0649\"],[64860,1,\"\u0633\u062D\u062C\"],[64861,1,\"\u0633\u062C\u062D\"],[64862,1,\"\u0633\u062C\u0649\"],[[64863,64864],1,\"\u0633\u0645\u062D\"],[64865,1,\"\u0633\u0645\u062C\"],[[64866,64867],1,\"\u0633\u0645\u0645\"],[[64868,64869],1,\"\u0635\u062D\u062D\"],[64870,1,\"\u0635\u0645\u0645\"],[[64871,64872],1,\"\u0634\u062D\u0645\"],[64873,1,\"\u0634\u062C\u064A\"],[[64874,64875],1,\"\u0634\u0645\u062E\"],[[64876,64877],1,\"\u0634\u0645\u0645\"],[64878,1,\"\u0636\u062D\u0649\"],[[64879,64880],1,\"\u0636\u062E\u0645\"],[[64881,64882],1,\"\u0637\u0645\u062D\"],[64883,1,\"\u0637\u0645\u0645\"],[64884,1,\"\u0637\u0645\u064A\"],[64885,1,\"\u0639\u062C\u0645\"],[[64886,64887],1,\"\u0639\u0645\u0645\"],[64888,1,\"\u0639\u0645\u0649\"],[64889,1,\"\u063A\u0645\u0645\"],[64890,1,\"\u063A\u0645\u064A\"],[64891,1,\"\u063A\u0645\u0649\"],[[64892,64893],1,\"\u0641\u062E\u0645\"],[64894,1,\"\u0642\u0645\u062D\"],[64895,1,\"\u0642\u0645\u0645\"],[64896,1,\"\u0644\u062D\u0645\"],[64897,1,\"\u0644\u062D\u064A\"],[64898,1,\"\u0644\u062D\u0649\"],[[64899,64900],1,\"\u0644\u062C\u062C\"],[[64901,64902],1,\"\u0644\u062E\u0645\"],[[64903,64904],1,\"\u0644\u0645\u062D\"],[64905,1,\"\u0645\u062D\u062C\"],[64906,1,\"\u0645\u062D\u0645\"],[64907,1,\"\u0645\u062D\u064A\"],[64908,1,\"\u0645\u062C\u062D\"],[64909,1,\"\u0645\u062C\u0645\"],[64910,1,\"\u0645\u062E\u062C\"],[64911,1,\"\u0645\u062E\u0645\"],[[64912,64913],3],[64914,1,\"\u0645\u062C\u062E\"],[64915,1,\"\u0647\u0645\u062C\"],[64916,1,\"\u0647\u0645\u0645\"],[64917,1,\"\u0646\u062D\u0645\"],[64918,1,\"\u0646\u062D\u0649\"],[[64919,64920],1,\"\u0646\u062C\u0645\"],[64921,1,\"\u0646\u062C\u0649\"],[64922,1,\"\u0646\u0645\u064A\"],[64923,1,\"\u0646\u0645\u0649\"],[[64924,64925],1,\"\u064A\u0645\u0645\"],[64926,1,\"\u0628\u062E\u064A\"],[64927,1,\"\u062A\u062C\u064A\"],[64928,1,\"\u062A\u062C\u0649\"],[64929,1,\"\u062A\u062E\u064A\"],[64930,1,\"\u062A\u062E\u0649\"],[64931,1,\"\u062A\u0645\u064A\"],[64932,1,\"\u062A\u0645\u0649\"],[64933,1,\"\u062C\u0645\u064A\"],[64934,1,\"\u062C\u062D\u0649\"],[64935,1,\"\u062C\u0645\u0649\"],[64936,1,\"\u0633\u062E\u0649\"],[64937,1,\"\u0635\u062D\u064A\"],[64938,1,\"\u0634\u062D\u064A\"],[64939,1,\"\u0636\u062D\u064A\"],[64940,1,\"\u0644\u062C\u064A\"],[64941,1,\"\u0644\u0645\u064A\"],[64942,1,\"\u064A\u062D\u064A\"],[64943,1,\"\u064A\u062C\u064A\"],[64944,1,\"\u064A\u0645\u064A\"],[64945,1,\"\u0645\u0645\u064A\"],[64946,1,\"\u0642\u0645\u064A\"],[64947,1,\"\u0646\u062D\u064A\"],[64948,1,\"\u0642\u0645\u062D\"],[64949,1,\"\u0644\u062D\u0645\"],[64950,1,\"\u0639\u0645\u064A\"],[64951,1,\"\u0643\u0645\u064A\"],[64952,1,\"\u0646\u062C\u062D\"],[64953,1,\"\u0645\u062E\u064A\"],[64954,1,\"\u0644\u062C\u0645\"],[64955,1,\"\u0643\u0645\u0645\"],[64956,1,\"\u0644\u062C\u0645\"],[64957,1,\"\u0646\u062C\u062D\"],[64958,1,\"\u062C\u062D\u064A\"],[64959,1,\"\u062D\u062C\u064A\"],[64960,1,\"\u0645\u062C\u064A\"],[64961,1,\"\u0641\u0645\u064A\"],[64962,1,\"\u0628\u062D\u064A\"],[64963,1,\"\u0643\u0645\u0645\"],[64964,1,\"\u0639\u062C\u0645\"],[64965,1,\"\u0635\u0645\u0645\"],[64966,1,\"\u0633\u062E\u064A\"],[64967,1,\"\u0646\u062C\u064A\"],[[64968,64974],3],[64975,2],[[64976,65007],3],[65008,1,\"\u0635\u0644\u06D2\"],[65009,1,\"\u0642\u0644\u06D2\"],[65010,1,\"\u0627\u0644\u0644\u0647\"],[65011,1,\"\u0627\u0643\u0628\u0631\"],[65012,1,\"\u0645\u062D\u0645\u062F\"],[65013,1,\"\u0635\u0644\u0639\u0645\"],[65014,1,\"\u0631\u0633\u0648\u0644\"],[65015,1,\"\u0639\u0644\u064A\u0647\"],[65016,1,\"\u0648\u0633\u0644\u0645\"],[65017,1,\"\u0635\u0644\u0649\"],[65018,1,\"\u0635\u0644\u0649 \u0627\u0644\u0644\u0647 \u0639\u0644\u064A\u0647 \u0648\u0633\u0644\u0645\"],[65019,1,\"\u062C\u0644 \u062C\u0644\u0627\u0644\u0647\"],[65020,1,\"\u0631\u06CC\u0627\u0644\"],[65021,2],[[65022,65023],2],[[65024,65039],7],[65040,1,\",\"],[65041,1,\"\u3001\"],[65042,3],[65043,1,\":\"],[65044,1,\";\"],[65045,1,\"!\"],[65046,1,\"?\"],[65047,1,\"\u3016\"],[65048,1,\"\u3017\"],[65049,3],[[65050,65055],3],[[65056,65059],2],[[65060,65062],2],[[65063,65069],2],[[65070,65071],2],[65072,3],[65073,1,\"\u2014\"],[65074,1,\"\u2013\"],[[65075,65076],1,\"_\"],[65077,1,\"(\"],[65078,1,\")\"],[65079,1,\"{\"],[65080,1,\"}\"],[65081,1,\"\u3014\"],[65082,1,\"\u3015\"],[65083,1,\"\u3010\"],[65084,1,\"\u3011\"],[65085,1,\"\u300A\"],[65086,1,\"\u300B\"],[65087,1,\"\u3008\"],[65088,1,\"\u3009\"],[65089,1,\"\u300C\"],[65090,1,\"\u300D\"],[65091,1,\"\u300E\"],[65092,1,\"\u300F\"],[[65093,65094],2],[65095,1,\"[\"],[65096,1,\"]\"],[[65097,65100],1,\" \u0305\"],[[65101,65103],1,\"_\"],[65104,1,\",\"],[65105,1,\"\u3001\"],[65106,3],[65107,3],[65108,1,\";\"],[65109,1,\":\"],[65110,1,\"?\"],[65111,1,\"!\"],[65112,1,\"\u2014\"],[65113,1,\"(\"],[65114,1,\")\"],[65115,1,\"{\"],[65116,1,\"}\"],[65117,1,\"\u3014\"],[65118,1,\"\u3015\"],[65119,1,\"#\"],[65120,1,\"&\"],[65121,1,\"*\"],[65122,1,\"+\"],[65123,1,\"-\"],[65124,1,\"<\"],[65125,1,\">\"],[65126,1,\"=\"],[65127,3],[65128,1,\"\\\\\"],[65129,1,\"$\"],[65130,1,\"%\"],[65131,1,\"@\"],[[65132,65135],3],[65136,1,\" \u064B\"],[65137,1,\"\u0640\u064B\"],[65138,1,\" \u064C\"],[65139,2],[65140,1,\" \u064D\"],[65141,3],[65142,1,\" \u064E\"],[65143,1,\"\u0640\u064E\"],[65144,1,\" \u064F\"],[65145,1,\"\u0640\u064F\"],[65146,1,\" \u0650\"],[65147,1,\"\u0640\u0650\"],[65148,1,\" \u0651\"],[65149,1,\"\u0640\u0651\"],[65150,1,\" \u0652\"],[65151,1,\"\u0640\u0652\"],[65152,1,\"\u0621\"],[[65153,65154],1,\"\u0622\"],[[65155,65156],1,\"\u0623\"],[[65157,65158],1,\"\u0624\"],[[65159,65160],1,\"\u0625\"],[[65161,65164],1,\"\u0626\"],[[65165,65166],1,\"\u0627\"],[[65167,65170],1,\"\u0628\"],[[65171,65172],1,\"\u0629\"],[[65173,65176],1,\"\u062A\"],[[65177,65180],1,\"\u062B\"],[[65181,65184],1,\"\u062C\"],[[65185,65188],1,\"\u062D\"],[[65189,65192],1,\"\u062E\"],[[65193,65194],1,\"\u062F\"],[[65195,65196],1,\"\u0630\"],[[65197,65198],1,\"\u0631\"],[[65199,65200],1,\"\u0632\"],[[65201,65204],1,\"\u0633\"],[[65205,65208],1,\"\u0634\"],[[65209,65212],1,\"\u0635\"],[[65213,65216],1,\"\u0636\"],[[65217,65220],1,\"\u0637\"],[[65221,65224],1,\"\u0638\"],[[65225,65228],1,\"\u0639\"],[[65229,65232],1,\"\u063A\"],[[65233,65236],1,\"\u0641\"],[[65237,65240],1,\"\u0642\"],[[65241,65244],1,\"\u0643\"],[[65245,65248],1,\"\u0644\"],[[65249,65252],1,\"\u0645\"],[[65253,65256],1,\"\u0646\"],[[65257,65260],1,\"\u0647\"],[[65261,65262],1,\"\u0648\"],[[65263,65264],1,\"\u0649\"],[[65265,65268],1,\"\u064A\"],[[65269,65270],1,\"\u0644\u0622\"],[[65271,65272],1,\"\u0644\u0623\"],[[65273,65274],1,\"\u0644\u0625\"],[[65275,65276],1,\"\u0644\ua\"],[65314,1,\"b\"],[65315,1,\"c\"],[65316,1,\"d\"],[65317,1,\"e\"],[65318,1,\"f\"],[65319,1,\"g\"],[65320,1,\"h\"],[65321,1,\"i\"],[65322,1,\"j\"],[65323,1,\"k\"],[65324,1,\"l\"],[65325,1,\"m\"],[65326,1,\"n\"],[65327,1,\"o\"],[65328,1,\"p\"],[65329,1,\"q\"],[65330,1,\"r\"],[65331,1,\"s\"],[65332,1,\"t\"],[65333,1,\"u\"],[65334,1,\"v\"],[65335,1,\"w\"],[65336,1,\"x\"],[65337,1,\"y\"],[65338,1,\"z\"],[65339,1,\"[\"],[65340,1,\"\\\\\"],[65341,1,\"]\"],[65342,1,\"^\"],[65343,1,\"_\"],[65344,1,\"`\"],[65345,1,\"a\"],[65346,1,\"b\"],[65347,1,\"c\"],[65348,1,\"d\"],[65349,1,\"e\"],[65350,1,\"f\"],[65351,1,\"g\"],[65352,1,\"h\"],[65353,1,\"i\"],[65354,1,\"j\"],[65355,1,\"k\"],[65356,1,\"l\"],[65357,1,\"m\"],[65358,1,\"n\"],[65359,1,\"o\"],[65360,1,\"p\"],[65361,1,\"q\"],[65362,1,\"r\"],[65363,1,\"s\"],[65364,1,\"t\"],[65365,1,\"u\"],[65366,1,\"v\"],[65367,1,\"w\"],[65368,1,\"x\"],[65369,1,\"y\"],[65370,1,\"z\"],[65371,1,\"{\"],[65372,1,\"|\"],[65373,1,\"}\"],[65374,1,\"~\"],[65375,1,\"\u2985\"],[65376,1,\"\u2986\"],[65377,1,\".\"],[65378,1,\"\u300C\"],[65379,1,\"\u300D\"],[65380,1,\"\u3001\"],[65381,1,\"\u30FB\"],[65382,1,\"\u30F2\"],[65383,1,\"\u30A1\"],[65384,1,\"\u30A3\"],[65385,1,\"\u30A5\"],[65386,1,\"\u30A7\"],[65387,1,\"\u30A9\"],[65388,1,\"\u30E3\"],[65389,1,\"\u30E5\"],[65390,1,\"\u30E7\"],[65391,1,\"\u30C3\"],[65392,1,\"\u30FC\"],[65393,1,\"\u30A2\"],[65394,1,\"\u30A4\"],[65395,1,\"\u30A6\"],[65396,1,\"\u30A8\"],[65397,1,\"\u30AA\"],[65398,1,\"\u30AB\"],[65399,1,\"\u30AD\"],[65400,1,\"\u30AF\"],[65401,1,\"\u30B1\"],[65402,1,\"\u30B3\"],[65403,1,\"\u30B5\"],[65404,1,\"\u30B7\"],[65405,1,\"\u30B9\"],[65406,1,\"\u30BB\"],[65407,1,\"\u30BD\"],[65408,1,\"\u30BF\"],[65409,1,\"\u30C1\"],[65410,1,\"\u30C4\"],[65411,1,\"\u30C6\"],[65412,1,\"\u30C8\"],[65413,1,\"\u30CA\"],[65414,1,\"\u30CB\"],[65415,1,\"\u30CC\"],[65416,1,\"\u30CD\"],[65417,1,\"\u30CE\"],[65418,1,\"\u30CF\"],[65419,1,\"\u30D2\"],[65420,1,\"\u30D5\"],[65421,1,\"\u30D8\"],[65422,1,\"\u30DB\"],[65423,1,\"\u30DE\"],[65424,1,\"\u30DF\"],[65425,1,\"\u30E0\"],[65426,1,\"\u30E1\"],[65427,1,\"\u30E2\"],[65428,1,\"\u30E4\"],[65429,1,\"\u30E6\"],[65430,1,\"\u30E8\"],[65431,1,\"\u30E9\"],[65432,1,\"\u30EA\"],[65433,1,\"\u30EB\"],[65434,1,\"\u30EC\"],[65435,1,\"\u30ED\"],[65436,1,\"\u30EF\"],[65437,1,\"\u30F3\"],[65438,1,\"\u3099\"],[65439,1,\"\u309A\"],[65440,7],[65441,1,\"\u1100\"],[65442,1,\"\u1101\"],[65443,1,\"\u11AA\"],[65444,1,\"\u1102\"],[65445,1,\"\u11AC\"],[65446,1,\"\u11AD\"],[65447,1,\"\u1103\"],[65448,1,\"\u1104\"],[65449,1,\"\u1105\"],[65450,1,\"\u11B0\"],[65451,1,\"\u11B1\"],[65452,1,\"\u11B2\"],[65453,1,\"\u11B3\"],[65454,1,\"\u11B4\"],[65455,1,\"\u11B5\"],[65456,1,\"\u111A\"],[65457,1,\"\u1106\"],[65458,1,\"\u1107\"],[65459,1,\"\u1108\"],[65460,1,\"\u1121\"],[65461,1,\"\u1109\"],[65462,1,\"\u110A\"],[65463,1,\"\u110B\"],[65464,1,\"\u110C\"],[65465,1,\"\u110D\"],[65466,1,\"\u110E\"],[65467,1,\"\u110F\"],[65468,1,\"\u1110\"],[65469,1,\"\u1111\"],[65470,1,\"\u1112\"],[[65471,65473],3],[65474,1,\"\u1161\"],[65475,1,\"\u1162\"],[65476,1,\"\u1163\"],[65477,1,\"\u1164\"],[65478,1,\"\u1165\"],[65479,1,\"\u1166\"],[[65480,65481],3],[65482,1,\"\u1167\"],[65483,1,\"\u1168\"],[65484,1,\"\u1169\"],[65485,1,\"\u116A\"],[65486,1,\"\u116B\"],[65487,1,\"\u116C\"],[[65488,65489],3],[65490,1,\"\u116D\"],[65491,1,\"\u116E\"],[65492,1,\"\u116F\"],[65493,1,\"\u1170\"],[65494,1,\"\u1171\"],[65495,1,\"\u1172\"],[[65496,65497],3],[65498,1,\"\u1173\"],[65499,1,\"\u1174\"],[65500,1,\"\u1175\"],[[65501,65503],3],[65504,1,\"\u00A2\"],[65505,1,\"\u00A3\"],[65506,1,\"\u00AC\"],[65507,1,\" \u0304\"],[65508,1,\"\u00A6\"],[65509,1,\"\u00A5\"],[65510,1,\"\u20A9\"],[65511,3],[65512,1,\"\u2502\"],[65513,1,\"\u2190\"],[65514,1,\"\u2191\"],[65515,1,\"\u2192\"],[65516,1,\"\u2193\"],[65517,1,\"\u25A0\"],[65518,1,\"\u25CB\"],[[65519,65528],3],[[65529,65531],3],[65532,3],[65533,3],[[65534,65535],3],[[65536,65547],2],[65548,3],[[65549,65574],2],[65575,3],[[65576,65594],2],[65595,3],[[65596,65597],2],[65598,3],[[65599,65613],2],[[65614,65615],3],[[65616,65629],2],[[65630,65663],3],[[65664,65786],2],[[65787,65791],3],[[65792,65794],2],[[65795,65798],3],[[65799,65843],2],[[65844,65846],3],[[65847,65855],2],[[65856,65930],2],[[65931,65932],2],[[65933,65934],2],[65935,3],[[65936,65947],2],[65948,2],[[65949,65951],3],[65952,2],[[65953,65999],3],[[66000,66044],2],[66045,2],[[66046,66175],3],[[66176,66204],2],[[66205,66207],3],[[66208,66256],2],[[66257,66271],3],[66272,2],[[66273,66299],2],[[66300,66303],3],[[66304,66334],2],[66335,2],[[66336,66339],2],[[66340,66348],3],[[66349,66351],2],[[66352,66368],2],[66369,2],[[66370,66377],2],[66378,2],[[66379,66383],3],[[66384,66426],2],[[66427,66431],3],[[66432,66461],2],[66462,3],[66463,2],[[66464,66499],2],[[66500,66503],3],[[66504,66511],2],[[66512,66517],2],[[66518,66559],3],[66560,1,\"\uD801\uDC28\"],[66561,1,\"\uD801\uDC29\"],[66562,1,\"\uD801\uDC2A\"],[66563,1,\"\uD801\uDC2B\"],[66564,1,\"\uD801\uDC2C\"],[66565,1,\"\uD801\uDC2D\"],[66566,1,\"\uD801\uDC2E\"],[66567,1,\"\uD801\uDC2F\"],[66568,1,\"\uD801\uDC30\"],[66569,1,\"\uD801\uDC31\"],[66570,1,\"\uD801\uDC32\"],[66571,1,\"\uD801\uDC33\"],[66572,1,\"\uD801\uDC34\"],[66573,1,\"\uD801\uDC35\"],[66574,1,\"\uD801\uDC36\"],[66575,1,\"\uD801\uDC37\"],[66576,1,\"\uD801\uDC38\"],[66577,1,\"\uD801\uDC39\"],[66578,1,\"\uD801\uDC3A\"],[66579,1,\"\uD801\uDC3B\"],[66580,1,\"\uD801\uDC3C\"],[66581,1,\"\uD801\uDC3D\"],[66582,1,\"\uD801\uDC3E\"],[66583,1,\"\uD801\uDC3F\"],[66584,1,\"\uD801\uDC40\"],[66585,1,\"\uD801\uDC41\"],[66586,1,\"\uD801\uDC42\"],[66587,1,\"\uD801\uDC43\"],[66588,1,\"\uD801\uDC44\"],[66589,1,\"\uD801\uDC45\"],[66590,1,\"\uD801\uDC46\"],[66591,1,\"\uD801\uDC47\"],[66592,1,\"\uD801\uDC48\"],[66593,1,\"\uD801\uDC49\"],[66594,1,\"\uD801\uDC4A\"],[66595,1,\"\uD801\uDC4B\"],[66596,1,\"\uD801\uDC4C\"],[66597,1,\"\uD801\uDC4D\"],[66598,1,\"\uD801\uDC4E\"],[66599,1,\"\uD801\uDC4F\"],[[66600,66637],2],[[66638,66717],2],[[66718,66719],3],[[66720,66729],2],[[66730,66735],3],[66736,1,\"\uD801\uDCD8\"],[66737,1,\"\uD801\uDCD9\"],[66738,1,\"\uD801\uDCDA\"],[66739,1,\"\uD801\uDCDB\"],[66740,1,\"\uD801\uDCDC\"],[66741,1,\"\uD801\uDCDD\"],[66742,1,\"\uD801\uDCDE\"],[66743,1,\"\uD801\uDCDF\"],[66744,1,\"\uD801\uDCE0\"],[66745,1,\"\uD801\uDCE1\"],[66746,1,\"\uD801\uDCE2\"],[66747,1,\"\uD801\uDCE3\"],[66748,1,\"\uD801\uDCE4\"],[66749,1,\"\uD801\uDCE5\"],[66750,1,\"\uD801\uDCE6\"],[66751,1,\"\uD801\uDCE7\"],[66752,1,\"\uD801\uDCE8\"],[66753,1,\"\uD801\uDCE9\"],[66754,1,\"\uD801\uDCEA\"],[66755,1,\"\uD801\uDCEB\"],[66756,1,\"\uD801\uDCEC\"],[66757,1,\"\uD801\uDCED\"],[66758,1,\"\uD801\uDCEE\"],[66759,1,\"\uD801\uDCEF\"],[66760,1,\"\uD801\uDCF0\"],[66761,1,\"\uD801\uDCF1\"],[66762,1,\"\uD801\uDCF2\"],[66763,1,\"\uD801\uDCF3\"],[66764,1,\"\uD801\uDCF4\"],[66765,1,\"\uD801\uDCF5\"],[66766,1,\"\uD801\uDCF6\"],[66767,1,\"\uD801\uDCF7\"],[66768,1,\"\uD801\uDCF8\"],[66769,1,\"\uD801\uDCF9\"],[66770,1,\"\uD801\uDCFA\"],[66771,1,\"\uD801\uDCFB\"],[[66772,66775],3],[[66776,66811],2],[[66812,66815],3],[[66816,66855],2],[[66856,66863],3],[[66864,66915],2],[[66916,66926],3],[66927,2],[66928,1,\"\uD801\uDD97\"],[66929,1,\"\uD801\uDD98\"],[66930,1,\"\uD801\uDD99\"],[66931,1,\"\uD801\uDD9A\"],[66932,1,\"\uD801\uDD9B\"],[66933,1,\"\uD801\uDD9C\"],[66934,1,\"\uD801\uDD9D\"],[66935,1,\"\uD801\uDD9E\"],[66936,1,\"\uD801\uDD9F\"],[66937,1,\"\uD801\uDDA0\"],[66938,1,\"\uD801\uDDA1\"],[66939,3],[66940,1,\"\uD801\uDDA3\"],[66941,1,\"\uD801\uDDA4\"],[66942,1,\"\uD801\uDDA5\"],[66943,1,\"\uD801\uDDA6\"],[66944,1,\"\uD801\uDDA7\"],[66945,1,\"\uD801\uDDA8\"],[66946,1,\"\uD801\uDDA9\"],[66947,1,\"\uD801\uDDAA\"],[66948,1,\"\uD801\uDDAB\"],[66949,1,\"\uD801\uDDAC\"],[66950,1,\"\uD801\uDDAD\"],[66951,1,\"\uD801\uDDAE\"],[66952,1,\"\uD801\uDDAF\"],[66953,1,\"\uD801\uDDB0\"],[66954,1,\"\uD801\uDDB1\"],[66955,3],[66956,1,\"\uD801\uDDB3\"],[66957,1,\"\uD801\uDDB4\"],[66958,1,\"\uD801\uDDB5\"],[66959,1,\"\uD801\uDDB6\"],[66960,1,\"\uD801\uDDB7\"],[66961,1,\"\uD801\uDDB8\"],[66962,1,\"\uD801\uDDB9\"],[66963,3],[66964,1,\"\uD801\uDDBB\"],[66965,1,\"\uD801\uDDBC\"],[66966,3],[[66967,66977],2],[66978,3],[[66979,66993],2],[66994,3],[[66995,67001],2],[67002,3],[[67003,67004],2],[[67005,67007],3],[[67008,67059],2],[[67060,67071],3],[[67072,67382],2],[[67383,67391],3],[[67392,67413],2],[[67414,67423],3],[[67424,67431],2],[[67432,67455],3],[67456,2],[67457,1,\"\u02D0\"],[67458,1,\"\u02D1\"],[67459,1,\"\u00E6\"],[67460,1,\"\u0299\"],[67461,1,\"\u0253\"],[67462,3],[67463,1,\"\u02A3\"],[67464,1,\"\uAB66\"],[67465,1,\"\u02A5\"],[67466,1,\"\u02A4\"],[67467,1,\"\u0256\"],[67468,1,\"\u0257\"],[67469,1,\"\u1D91\"],[67470,1,\"\u0258\"],[67471,1,\"\u025E\"],[67472,1,\"\u02A9\"],[67473,1,\"\u0264\"],[67474,1,\"\u0262\"],[67475,1,\"\u0260\"],[67476,1,\"\u029B\"],[67477,1,\"\u0127\"],[67478,1,\"\u029C\"],[67479,1,\"\u0267\"],[67480,1,\"\u0284\"],[67481,1,\"\u02AA\"],[67482,1,\"\u02AB\"],[67483,1,\"\u026C\"],[67484,1,\"\uD837\uDF04\"],[67485,1,\"\uA78E\"],[67486,1,\"\u026E\"],[67487,1,\"\uD837\uDF05\"],[67488,1,\"\u028E\"],[67489,1,\"\uD837\uDF06\"],[67490,1,\"\u00F8\"],[67491,1,\"\u0276\"],[67492,1,\"\u0277\"],[67493,1,\"q\"],[67494,1,\"\u027A\"],[67495,1,\"\uD837\uDF08\"],[67496,1,\"\u027D\"],[67497,1,\"\u027E\"],[67498,1,\"\u0280\"],[67499,1,\"\u02A8\"],[67500,1,\"\u02A6\"],[67501,1,\"\uAB67\"],[67502,1,\"\u02A7\"],[67503,1,\"\u0288\"],[67504,1,\"\u2C71\"],[67505,3],[67506,1,\"\u028F\"],[67507,1,\"\u02A1\"],[67508,1,\"\u02A2\"],[67509,1,\"\u0298\"],[67510,1,\"\u01C0\"],[67511,1,\"\u01C1\"],[67512,1,\"\u01C2\"],[67513,1,\"\uD837\uDF0A\"],[67514,1,\"\uD837\uDF1E\"],[[67515,67583],3],[[67584,67589],2],[[67590,67591],3],[67592,2],[67593,3],[[67594,67637],2],[67638,3],[[67639,67640],2],[[67641,67643],3],[67644,2],[[67645,67646],3],[67647,2],[[67648,67669],2],[67670,3],[[67671,67679],2],[[67680,67702],2],[[67703,67711],2],[[67712,67742],2],[[67743,67750],3],[[67751,67759],2],[[67760,67807],3],[[67808,67826],2],[67827,3],[[67828,67829],2],[[67830,67834],3],[[67835,67839],2],[[67840,67861],2],[[67862,67865],2],[[67866,67867],2],[[67868,67870],3],[67871,2],[[67872,67897],2],[[67898,67902],3],[67903,2],[[67904,67967],3],[[67968,68023],2],[[68024,68027],3],[[68028,68029],2],[[68030,68031],2],[[68032,68047],2],[[68048,68049],3],[[68050,68095],2],[[68096,68099],2],[68100,3],[[68101,68102],2],[[68103,68107],3],[[68108,68115],2],[68116,3],[[68117,68119],2],[68120,3],[[68121,68147],2],[[68148,68149],2],[[68150,68151],3],[[68152,68154],2],[[68155,68158],3],[68159,2],[[68160,68167],2],[68168,2],[[68169,68175],3],[[68176,68184],2],[[68185,68191],3],[[68192,68220],2],[[68221,68223],2],[[68224,68252],2],[[68253,68255],2],[[68256,68287],3],[[68288,68295],2],[68296,2],[[68297,68326],2],[[68327,68330],3],[[68331,68342],2],[[68343,68351],3],[[68352,68405],2],[[68406,68408],3],[[68409,68415],2],[[68416,68437],2],[[68438,68439],3],[[68440,68447],2],[[68448,68466],2],[[68467,68471],3],[[68472,68479],2],[[68480,68497],2],[[68498,68504],3],[[68505,68508],2],[[68509,68520],3],[[68521,68527],2],[[68528,68607],3],[[68608,68680],2],[[68681,68735],3],[68736,1,\"\uD803\uDCC0\"],[68737,1,\"\uD803\uDCC1\"],[68738,1,\"\uD803\uDCC2\"],[68739,1,\"\uD803\uDCC3\"],[68740,1,\"\uD803\uDCC4\"],[68741,1,\"\uD803\uDCC5\"],[68742,1,\"\uD803\uDCC6\"],[68743,1,\"\uD803\uDCC7\"],[68744,1,\"\uD803\uDCC8\"],[68745,1,\"\uD803\uDCC9\"],[68746,1,\"\uD803\uDCCA\"],[68747,1,\"\uD803\uDCCB\"],[68748,1,\"\uD803\uDCCC\"],[68749,1,\"\uD803\uDCCD\"],[68750,1,\"\uD803\uDCCE\"],[68751,1,\"\uD803\uDCCF\"],[68752,1,\"\uD803\uDCD0\"],[68753,1,\"\uD803\uDCD1\"],[68754,1,\"\uD803\uDCD2\"],[68755,1,\"\uD803\uDCD3\"],[68756,1,\"\uD803\uDCD4\"],[68757,1,\"\uD803\uDCD5\"],[68758,1,\"\uD803\uDCD6\"],[68759,1,\"\uD803\uDCD7\"],[68760,1,\"\uD803\uDCD8\"],[68761,1,\"\uD803\uDCD9\"],[68762,1,\"\uD803\uDCDA\"],[68763,1,\"\uD803\uDCDB\"],[68764,1,\"\uD803\uDCDC\"],[68765,1,\"\uD803\uDCDD\"],[68766,1,\"\uD803\uDCDE\"],[68767,1,\"\uD803\uDCDF\"],[68768,1,\"\uD803\uDCE0\"],[68769,1,\"\uD803\uDCE1\"],[68770,1,\"\uD803\uDCE2\"],[68771,1,\"\uD803\uDCE3\"],[68772,1,\"\uD803\uDCE4\"],[68773,1,\"\uD803\uDCE5\"],[68774,1,\"\uD803\uDCE6\"],[68775,1,\"\uD803\uDCE7\"],[68776,1,\"\uD803\uDCE8\"],[68777,1,\"\uD803\uDCE9\"],[68778,1,\"\uD803\uDCEA\"],[68779,1,\"\uD803\uDCEB\"],[68780,1,\"\uD803\uDCEC\"],[68781,1,\"\uD803\uDCED\"],[68782,1,\"\uD803\uDCEE\"],[68783,1,\"\uD803\uDCEF\"],[68784,1,\"\uD803\uDCF0\"],[68785,1,\"\uD803\uDCF1\"],[68786,1,\"\uD803\uDCF2\"],[[68787,68799],3],[[68800,68850],2],[[68851,68857],3],[[68858,68863],2],[[68864,68903],2],[[68904,68911],3],[[68912,68921],2],[[68922,68927],3],[[68928,68943],2],[68944,1,\"\uD803\uDD70\"],[68945,1,\"\uD803\uDD71\"],[68946,1,\"\uD803\uDD72\"],[68947,1,\"\uD803\uDD73\"],[68948,1,\"\uD803\uDD74\"],[68949,1,\"\uD803\uDD75\"],[68950,1,\"\uD803\uDD76\"],[68951,1,\"\uD803\uDD77\"],[68952,1,\"\uD803\uDD78\"],[68953,1,\"\uD803\uDD79\"],[68954,1,\"\uD803\uDD7A\"],[68955,1,\"\uD803\uDD7B\"],[68956,1,\"\uD803\uDD7C\"],[68957,1,\"\uD803\uDD7D\"],[68958,1,\"\uD803\uDD7E\"],[68959,1,\"\uD803\uDD7F\"],[68960,1,\"\uD803\uDD80\"],[68961,1,\"\uD803\uDD81\"],[68962,1,\"\uD803\uDD82\"],[68963,1,\"\uD803\uDD83\"],[68964,1,\"\uD803\uDD84\"],[68965,1,\"\uD803\uDD85\"],[[68966,68968],3],[[68969,68973],2],[68974,2],[[68975,68997],2],[[68998,69005],3],[[69006,69007],2],[[69008,69215],3],[[69216,69246],2],[69247,3],[[69248,69289],2],[69290,3],[[69291,69292],2],[69293,2],[[69294,69295],3],[[69296,69297],2],[[69298,69313],3],[[69314,69316],2],[[69317,69371],3],[69372,2],[[69373,69375],2],[[69376,69404],2],[[69405,69414],2],[69415,2],[[69416,69423],3],[[69424,69456],2],[[69457,69465],2],[[69466,69487],3],[[69488,69509],2],[[69510,69513],2],[[69514,69551],3],[[69552,69572],2],[[69573,69579],2],[[69580,69599],3],[[69600,69622],2],[[69623,69631],3],[[69632,69702],2],[[69703,69709],2],[[69710,69713],3],[[69714,69733],2],[[69734,69743],2],[[69744,69749],2],[[69750,69758],3],[69759,2],[[69760,69818],2],[[69819,69820],2],[69821,3],[[69822,69825],2],[69826,2],[[69827,69836],3],[69837,3],[[69838,69839],3],[[69840,69864],2],[[69865,69871],3],[[69872,69881],2],[[69882,69887],3],[[69888,69940],2],[69941,3],[[69942,69951],2],[[69952,69955],2],[[69956,69958],2],[69959,2],[[69960,69967],3],[[69968,70003],2],[[70004,70005],2],[70006,2],[[70007,70015],3],[[70016,70084],2],[[70085,70088],2],[[70089,70092],2],[70093,2],[[70094,70095],2],[[70096,70105],2],[70106,2],[70107,2],[70108,2],[[70109,70111],2],[70112,3],[[70113,70132],2],[[70133,70143],3],[[70144,70161],2],[70162,3],[[70163,70199],2],[[70200,70205],2],[70206,2],[[70207,70209],2],[[70210,70271],3],[[70272,70278],2],[70279,3],[70280,2],[70281,3],[[70282,70285],2],[70286,3],[[70287,70301],2],[70302,3],[[70303,70312],2],[70313,2],[[70314,70319],3],[[70320,70378],2],[[70379,70383],3],[[70384,70393],2],[[70394,70399],3],[70400,2],[[70401,70403],2],[70404,3],[[70405,70412],2],[[70413,70414],3],[[70415,70416],2],[[70417,70418],3],[[70419,70440],2],[70441,3],[[70442,70448],2],[70449,3],[[70450,70451],2],[70452,3],[[70453,70457],2],[70458,3],[70459,2],[[70460,70468],2],[[70469,70470],3],[[70471,70472],2],[[70473,70474],3],[[70475,70477],2],[[70478,70479],3],[70480,2],[[70481,70486],3],[70487,2],[[70488,70492],3],[[70493,70499],2],[[70500,70501],3],[[70502,70508],2],[[70509,70511],3],[[70512,70516],2],[[70517,70527],3],[[70528,70537],2],[70538,3],[70539,2],[[70540,70541],3],[70542,2],[70543,3],[[70544,70581],2],[70582,3],[[70583,70592],2],[70593,3],[70594,2],[[70595,70596],3],[70597,2],[70598,3],[[70599,70602],2],[70603,3],[[70604,70611],2],[[70612,70613],2],[70614,3],[[70615,70616],2],[[70617,70624],3],[[70625,70626],2],[[70627,70655],3],[[70656,70730],2],[[70731,70735],2],[[70736,70745],2],[70746,2],[70747,2],[70748,3],[70749,2],[70750,2],[70751,2],[[70752,70753],2],[[70754,70783],3],[[70784,70853],2],[70854,2],[70855,2],[[70856,70863],3],[[70864,70873],2],[[70874,71039],3],[[71040,71093],2],[[71094,71095],3],[[71096,71104],2],[[71105,71113],2],[[71114,71127],2],[[71128,71133],2],[[71134,71167],3],[[71168,71232],2],[[71233,71235],2],[71236,2],[[71237,71247],3],[[71248,71257],2],[[71258,71263],3],[[71264,71276],2],[[71277,71295],3],[[71296,71351],2],[71352,2],[71353,2],[[71354,71359],3],[[71360,71369],2],[[71370,71375],3],[[71376,71395],2],[[71396,71423],3],[[71424,71449],2],[71450,2],[[71451,71452],3],[[71453,71467],2],[[71468,71471],3],[[71472,71481],2],[[71482,71487],2],[[71488,71494],2],[[71495,71679],3],[[71680,71738],2],[71739,2],[[71740,71839],3],[71840,1,\"\uD806\uDCC0\"],[71841,1,\"\uD806\uDCC1\"],[71842,1,\"\uD806\uDCC2\"],[71843,1,\"\uD806\uDCC3\"],[71844,1,\"\uD806\uDCC4\"],[71845,1,\"\uD806\uDCC5\"],[71846,1,\"\uD806\uDCC6\"],[71847,1,\"\uD806\uDCC7\"],[71848,1,\"\uD806\uDCC8\"],[71849,1,\"\uD806\uDCC9\"],[71850,1,\"\uD806\uDCCA\"],[71851,1,\"\uD806\uDCCB\"],[71852,1,\"\uD806\uDCCC\"],[71853,1,\"\uD806\uDCCD\"],[71854,1,\"\uD806\uDCCE\"],[71855,1,\"\uD806\uDCCF\"],[71856,1,\"\uD806\uDCD0\"],[71857,1,\"\uD806\uDCD1\"],[71858,1,\"\uD806\uDCD2\"],[71859,1,\"\uD806\uDCD3\"],[71860,1,\"\uD806\uDCD4\"],[71861,1,\"\uD806\uDCD5\"],[71862,1,\"\uD806\uDCD6\"],[71863,1,\"\uD806\uDCD7\"],[71864,1,\"\uD806\uDCD8\"],[71865,1,\"\uD806\uDCD9\"],[71866,1,\"\uD806\uDCDA\"],[71867,1,\"\uD806\uDCDB\"],[71868,1,\"\uD806\uDCDC\"],[71869,1,\"\uD806\uDCDD\"],[71870,1,\"\uD806\uDCDE\"],[71871,1,\"\uD806\uDCDF\"],[[71872,71913],2],[[71914,71922],2],[[71923,71934],3],[71935,2],[[71936,71942],2],[[71943,71944],3],[71945,2],[[71946,71947],3],[[71948,71955],2],[71956,3],[[71957,71958],2],[71959,3],[[71960,71989],2],[71990,3],[[71991,71992],2],[[71993,71994],3],[[71995,72003],2],[[72004,72006],2],[[72007,72015],3],[[72016,72025],2],[[72026,72095],3],[[72096,72103],2],[[72104,72105],3],[[72106,72151],2],[[72152,72153],3],[[72154,72161],2],[72162,2],[[72163,72164],2],[[72165,72191],3],[[72192,72254],2],[[72255,72262],2],[72263,2],[[72264,72271],3],[[72272,72323],2],[[72324,72325],2],[[72326,72345],2],[[72346,72348],2],[72349,2],[[72350,72354],2],[[72355,72367],3],[[72368,72383],2],[[72384,72440],2],[[72441,72447],3],[[72448,72457],2],[[72458,72639],3],[[72640,72672],2],[72673,2],[[72674,72687],3],[[72688,72697],2],[[72698,72703],3],[[72704,72712],2],[72713,3],[[72714,72758],2],[72759,3],[[72760,72768],2],[[72769,72773],2],[[72774,72783],3],[[72784,72793],2],[[72794,72812],2],[[72813,72815],3],[[72816,72817],2],[[72818,72847],2],[[72848,72849],3],[[72850,72871],2],[72872,3],[[72873,72886],2],[[72887,72959],3],[[72960,72966],2],[72967,3],[[72968,72969],2],[72970,3],[[72971,73014],2],[[73015,73017],3],[73018,2],[73019,3],[[73020,73021],2],[73022,3],[[73023,73031],2],[[73032,73039],3],[[73040,73049],2],[[73050,73055],3],[[73056,73061],2],[73062,3],[[73063,73064],2],[73065,3],[[73066,73102],2],[73103,3],[[73104,73105],2],[73106,3],[[73107,73112],2],[[73113,73119],3],[[73120,73129],2],[[73130,73439],3],[[73440,73462],2],[[73463,73464],2],[[73465,73471],3],[[73472,73488],2],[73489,3],[[73490,73530],2],[[73531,73533],3],[[73534,73538],2],[[73539,73551],2],[[73552,73561],2],[73562,2],[[73563,73647],3],[73648,2],[[73649,73663],3],[[73664,73713],2],[[73714,73726],3],[73727,2],[[73728,74606],2],[[74607,74648],2],[74649,2],[[74650,74751],3],[[74752,74850],2],[[74851,74862],2],[74863,3],[[74864,74867],2],[74868,2],[[74869,74879],3],[[74880,75075],2],[[75076,77711],3],[[77712,77808],2],[[77809,77810],2],[[77811,77823],3],[[77824,78894],2],[78895,2],[[78896,78904],3],[[78905,78911],3],[[78912,78933],2],[[78934,78943],3],[[78944,82938],2],[[82939,82943],3],[[82944,83526],2],[[83527,90367],3],[[90368,90425],2],[[90426,92159],3],[[92160,92728],2],[[92729,92735],3],[[92736,92766],2],[92767,3],[[92768,92777],2],[[92778,92781],3],[[92782,92783],2],[[92784,92862],2],[92863,3],[[92864,92873],2],[[92874,92879],3],[[92880,92909],2],[[92910,92911],3],[[92912,92916],2],[92917,2],[[92918,92927],3],[[92928,92982],2],[[92983,92991],2],[[92992,92995],2],[[92996,92997],2],[[92998,93007],3],[[93008,93017],2],[93018,3],[[93019,93025],2],[93026,3],[[93027,93047],2],[[93048,93052],3],[[93053,93071],2],[[93072,93503],3],[[93504,93548],2],[[93549,93551],2],[[93552,93561],2],[[93562,93759],3],[93760,1,\"\uD81B\uDE60\"],[93761,1,\"\uD81B\uDE61\"],[93762,1,\"\uD81B\uDE62\"],[93763,1,\"\uD81B\uDE63\"],[93764,1,\"\uD81B\uDE64\"],[93765,1,\"\uD81B\uDE65\"],[93766,1,\"\uD81B\uDE66\"],[93767,1,\"\uD81B\uDE67\"],[93768,1,\"\uD81B\uDE68\"],[93769,1,\"\uD81B\uDE69\"],[93770,1,\"\uD81B\uDE6A\"],[93771,1,\"\uD81B\uDE6B\"],[93772,1,\"\uD81B\uDE6C\"],[93773,1,\"\uD81B\uDE6D\"],[93774,1,\"\uD81B\uDE6E\"],[93775,1,\"\uD81B\uDE6F\"],[93776,1,\"\uD81B\uDE70\"],[93777,1,\"\uD81B\uDE71\"],[93778,1,\"\uD81B\uDE72\"],[93779,1,\"\uD81B\uDE73\"],[93780,1,\"\uD81B\uDE74\"],[93781,1,\"\uD81B\uDE75\"],[93782,1,\"\uD81B\uDE76\"],[93783,1,\"\uD81B\uDE77\"],[93784,1,\"\uD81B\uDE78\"],[93785,1,\"\uD81B\uDE79\"],[93786,1,\"\uD81B\uDE7A\"],[93787,1,\"\uD81B\uDE7B\"],[93788,1,\"\uD81B\uDE7C\"],[93789,1,\"\uD81B\uDE7D\"],[93790,1,\"\uD81B\uDE7E\"],[93791,1,\"\uD81B\uDE7F\"],[[93792,93823],2],[[93824,93850],2],[[93851,93951],3],[[93952,94020],2],[[94021,94026],2],[[94027,94030],3],[94031,2],[[94032,94078],2],[[94079,94087],2],[[94088,94094],3],[[94095,94111],2],[[94112,94175],3],[94176,2],[94177,2],[94178,2],[94179,2],[94180,2],[[94181,94191],3],[[94192,94193],2],[[94194,94207],3],[[94208,100332],2],[[100333,100337],2],[[100338,100343],2],[[100344,100351],3],[[100352,101106],2],[[101107,101589],2],[[101590,101630],3],[101631,2],[[101632,101640],2],[[101641,110575],3],[[110576,110579],2],[110580,3],[[110581,110587],2],[110588,3],[[110589,110590],2],[110591,3],[[110592,110593],2],[[110594,110878],2],[[110879,110882],2],[[110883,110897],3],[110898,2],[[110899,110927],3],[[110928,110930],2],[[110931,110932],3],[110933,2],[[110934,110947],3],[[110948,110951],2],[[110952,110959],3],[[110960,111355],2],[[111356,113663],3],[[113664,113770],2],[[113771,113775],3],[[113776,113788],2],[[113789,113791],3],[[113792,113800],2],[[113801,113807],3],[[113808,113817],2],[[113818,113819],3],[113820,2],[[113821,113822],2],[113823,2],[[113824,113827],7],[[113828,117759],3],[[117760,117973],2],[117974,1,\"a\"],[117975,1,\"b\"],[117976,1,\"c\"],[117977,1,\"d\"],[117978,1,\"e\"],[117979,1,\"f\"],[117980,1,\"g\"],[117981,1,\"h\"],[117982,1,\"i\"],[117983,1,\"j\"],[117984,1,\"k\"],[117985,1,\"l\"],[117986,1,\"m\"],[117987,1,\"n\"],[117988,1,\"o\"],[117989,1,\"p\"],[117990,1,\"q\"],[117991,1,\"r\"],[117992,1,\"s\"],[117993,1,\"t\"],[117994,1,\"u\"],[117995,1,\"v\"],[117996,1,\"w\"],[117997,1,\"x\"],[117998,1,\"y\"],[117999,1,\"z\"],[118000,1,\"0\"],[118001,1,\"1\"],[118002,1,\"2\"],[118003,1,\"3\"],[118004,1,\"4\"],[118005,1,\"5\"],[118006,1,\"6\"],[118007,1,\"7\"],[118008,1,\"8\"],[118009,1,\"9\"],[[118010,118015],3],[[118016,118451],2],[[118452,118527],3],[[118528,118573],2],[[118574,118575],3],[[118576,118598],2],[[118599,118607],3],[[118608,118723],2],[[118724,118783],3],[[118784,119029],2],[[119030,119039],3],[[119040,119078],2],[[119079,119080],3],[119081,2],[[119082,119133],2],[119134,1,\"\uD834\uDD57\uD834\uDD65\"],[119135,1,\"\uD834\uDD58\uD834\uDD65\"],[119136,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD6E\"],[119137,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD6F\"],[119138,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD70\"],[119139,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD71\"],[119140,1,\"\uD834\uDD58\uD834\uDD65\uD834\uDD72\"],[[119141,119154],2],[[119155,119162],7],[[119163,119226],2],[119227,1,\"\uD834\uDDB9\uD834\uDD65\"],[119228,1,\"\uD834\uDDBA\uD834\uDD65\"],[119229,1,\"\uD834\uDDB9\uD834\uDD65\uD834\uDD6E\"],[119230,1,\"\uD834\uDDBA\uD834\uDD65\uD834\uDD6E\"],[119231,1,\"\uD834\uDDB9\uD834\uDD65\uD834\uDD6F\"],[119232,1,\"\uD834\uDDBA\uD834\uDD65\uD834\uDD6F\"],[[119233,119261],2],[[119262,119272],2],[[119273,119274],2],[[119275,119295],3],[[119296,119365],2],[[119366,119487],3],[[119488,119507],2],[[119508,119519],3],[[119520,119539],2],[[119540,119551],3],[[119552,119638],2],[[119639,119647],3],[[119648,119665],2],[[119666,119672],2],[[119673,119807],3],[119808,1,\"a\"],[119809,1,\"b\"],[119810,1,\"c\"],[119811,1,\"d\"],[119812,1,\"e\"],[119813,1,\"f\"],[119814,1,\"g\"],[119815,1,\"h\"],[119816,1,\"i\"],[119817,1,\"j\"],[119818,1,\"k\"],[119819,1,\"l\"],[119820,1,\"m\"],[119821,1,\"n\"],[119822,1,\"o\"],[119823,1,\"p\"],[119824,1,\"q\"],[119825,1,\"r\"],[119826,1,\"s\"],[119827,1,\"t\"],[119828,1,\"u\"],[119829,1,\"v\"],[119830,1,\"w\"],[119831,1,\"x\"],[119832,1,\"y\"],[119833,1,\"z\"],[119834,1,\"a\"],[119835,1,\"b\"],[119836,1,\"c\"],[119837,1,\"d\"],[119838,1,\"e\"],[119839,1,\"f\"],[119840,1,\"g\"],[119841,1,\"h\"],[119842,1,\"i\"],[119843,1,\"j\"],[119844,1,\"k\"],[119845,1,\"l\"],[119846,1,\"m\"],[119847,1,\"n\"],[119848,1,\"o\"],[119849,1,\"p\"],[119850,1,\"q\"],[119851,1,\"r\"],[119852,1,\"s\"],[119853,1,\"t\"],[119854,1,\"u\"],[119855,1,\"v\"],[119856,1,\"w\"],[119857,1,\"x\"],[119858,1,\"y\"],[119859,1,\"z\"],[119860,1,\"a\"],[119861,1,\"b\"],[119862,1,\"c\"],[119863,1,\"d\"],[119864,1,\"e\"],[119865,1,\"f\"],[119866,1,\"g\"],[119867,1,\"h\"],[119868,1,\"i\"],[119869,1,\"j\"],[119870,1,\"k\"],[119871,1,\"l\"],[119872,1,\"m\"],[119873,1,\"n\"],[119874,1,\"o\"],[119875,1,\"p\"],[119876,1,\"q\"],[119877,1,\"r\"],[119878,1,\"s\"],[119879,1,\"t\"],[119880,1,\"u\"],[119881,1,\"v\"],[119882,1,\"w\"],[119883,1,\"x\"],[119884,1,\"y\"],[119885,1,\"z\"],[119886,1,\"a\"],[119887,1,\"b\"],[119888,1,\"c\"],[119889,1,\"d\"],[119890,1,\"e\"],[119891,1,\"f\"],[119892,1,\"g\"],[119893,3],[119894,1,\"i\"],[119895,1,\"j\"],[119896,1,\"k\"],[119897,1,\"l\"],[119898,1,\"m\"],[119899,1,\"n\"],[119900,1,\"o\"],[119901,1,\"p\"],[119902,1,\"q\"],[119903,1,\"r\"],[119904,1,\"s\"],[119905,1,\"t\"],[119906,1,\"u\"],[119907,1,\"v\"],[119908,1,\"w\"],[119909,1,\"x\"],[119910,1,\"y\"],[119911,1,\"z\"],[119912,1,\"a\"],[119913,1,\"b\"],[119914,1,\"c\"],[119915,1,\"d\"],[119916,1,\"e\"],[119917,1,\"f\"],[119918,1,\"g\"],[119919,1,\"h\"],[119920,1,\"i\"],[119921,1,\"j\"],[119922,1,\"k\"],[119923,1,\"l\"],[119924,1,\"m\"],[119925,1,\"n\"],[119926,1,\"o\"],[119927,1,\"p\"],[119928,1,\"q\"],[119929,1,\"r\"],[119930,1,\"s\"],[119931,1,\"t\"],[119932,1,\"u\"],[119933,1,\"v\"],[119934,1,\"w\"],[119935,1,\"x\"],[119936,1,\"y\"],[119937,1,\"z\"],[119938,1,\"a\"],[119939,1,\"b\"],[119940,1,\"c\"],[119941,1,\"d\"],[119942,1,\"e\"],[119943,1,\"f\"],[119944,1,\"g\"],[119945,1,\"h\"],[119946,1,\"i\"],[119947,1,\"j\"],[119948,1,\"k\"],[119949,1,\"l\"],[119950,1,\"m\"],[119951,1,\"n\"],[119952,1,\"o\"],[119953,1,\"p\"],[119954,1,\"q\"],[119955,1,\"r\"],[119956,1,\"s\"],[119957,1,\"t\"],[119958,1,\"u\"],[119959,1,\"v\"],[119960,1,\"w\"],[119961,1,\"x\"],[119962,1,\"y\"],[119963,1,\"z\"],[119964,1,\"a\"],[119965,3],[119966,1,\"c\"],[119967,1,\"d\"],[[119968,119969],3],[119970,1,\"g\"],[[119971,119972],3],[119973,1,\"j\"],[119974,1,\"k\"],[[119975,119976],3],[119977,1,\"n\"],[119978,1,\"o\"],[119979,1,\"p\"],[119980,1,\"q\"],[119981,3],[119982,1,\"s\"],[119983,1,\"t\"],[119984,1,\"u\"],[119985,1,\"v\"],[119986,1,\"w\"],[119987,1,\"x\"],[119988,1,\"y\"],[119989,1,\"z\"],[119990,1,\"a\"],[119991,1,\"b\"],[119992,1,\"c\"],[119993,1,\"d\"],[119994,3],[119995,1,\"f\"],[119996,3],[119997,1,\"h\"],[119998,1,\"i\"],[119999,1,\"j\"],[120000,1,\"k\"],[120001,1,\"l\"],[120002,1,\"m\"],[120003,1,\"n\"],[120004,3],[120005,1,\"p\"],[120006,1,\"q\"],[120007,1,\"r\"],[120008,1,\"s\"],[120009,1,\"t\"],[120010,1,\"u\"],[120011,1,\"v\"],[120012,1,\"w\"],[120013,1,\"x\"],[120014,1,\"y\"],[120015,1,\"z\"],[120016,1,\"a\"],[120017,1,\"b\"],[120018,1,\"c\"],[120019,1,\"d\"],[120020,1,\"e\"],[120021,1,\"f\"],[120022,1,\"g\"],[120023,1,\"h\"],[120024,1,\"i\"],[120025,1,\"j\"],[120026,1,\"k\"],[120027,1,\"l\"],[120028,1,\"m\"],[120029,1,\"n\"],[120030,1,\"o\"],[120031,1,\"p\"],[120032,1,\"q\"],[120033,1,\"r\"],[120034,1,\"s\"],[120035,1,\"t\"],[120036,1,\"u\"],[120037,1,\"v\"],[120038,1,\"w\"],[120039,1,\"x\"],[120040,1,\"y\"],[120041,1,\"z\"],[120042,1,\"a\"],[120043,1,\"b\"],[120044,1,\"c\"],[120045,1,\"d\"],[120046,1,\"e\"],[120047,1,\"f\"],[120048,1,\"g\"],[120049,1,\"h\"],[120050,1,\"i\"],[120051,1,\"j\"],[120052,1,\"k\"],[120053,1,\"l\"],[120054,1,\"m\"],[120055,1,\"n\"],[120056,1,\"o\"],[120057,1,\"p\"],[120058,1,\"q\"],[120059,1,\"r\"],[120060,1,\"s\"],[120061,1,\"t\"],[120062,1,\"u\"],[120063,1,\"v\"],[120064,1,\"w\"],[120065,1,\"x\"],[120066,1,\"y\"],[120067,1,\"z\"],[120068,1,\"a\"],[120069,1,\"b\"],[120070,3],[120071,1,\"d\"],[120072,1,\"e\"],[120073,1,\"f\"],[120074,1,\"g\"],[[120075,120076],3],[120077,1,\"j\"],[120078,1,\"k\"],[120079,1,\"l\"],[120080,1,\"m\"],[120081,1,\"n\"],[120082,1,\"o\"],[120083,1,\"p\"],[120084,1,\"q\"],[120085,3],[120086,1,\"s\"],[120087,1,\"t\"],[120088,1,\"u\"],[120089,1,\"v\"],[120090,1,\"w\"],[120091,1,\"x\"],[120092,1,\"y\"],[120093,3],[120094,1,\"a\"],[120095,1,\"b\"],[120096,1,\"c\"],[120097,1,\"d\"],[120098,1,\"e\"],[120099,1,\"f\"],[120100,1,\"g\"],[120101,1,\"h\"],[120102,1,\"i\"],[120103,1,\"j\"],[120104,1,\"k\"],[120105,1,\"l\"],[120106,1,\"m\"],[120107,1,\"n\"],[120108,1,\"o\"],[120109,1,\"p\"],[120110,1,\"q\"],[120111,1,\"r\"],[120112,1,\"s\"],[120113,1,\"t\"],[120114,1,\"u\"],[120115,1,\"v\"],[120116,1,\"w\"],[120117,1,\"x\"],[120118,1,\"y\"],[120119,1,\"z\"],[120120,1,\"a\"],[120121,1,\"b\"],[120122,3],[120123,1,\"d\"],[120124,1,\"e\"],[120125,1,\"f\"],[120126,1,\"g\"],[120127,3],[120128,1,\"i\"],[120129,1,\"j\"],[120130,1,\"k\"],[120131,1,\"l\"],[120132,1,\"m\"],[120133,3],[120134,1,\"o\"],[[120135,120137],3],[120138,1,\"s\"],[120139,1,\"t\"],[120140,1,\"u\"],[120141,1,\"v\"],[120142,1,\"w\"],[120143,1,\"x\"],[120144,1,\"y\"],[120145,3],[120146,1,\"a\"],[120147,1,\"b\"],[120148,1,\"c\"],[120149,1,\"d\"],[120150,1,\"e\"],[120151,1,\"f\"],[120152,1,\"g\"],[120153,1,\"h\"],[120154,1,\"i\"],[120155,1,\"j\"],[120156,1,\"k\"],[120157,1,\"l\"],[120158,1,\"m\"],[120159,1,\"n\"],[120160,1,\"o\"],[120161,1,\"p\"],[120162,1,\"q\"],[120163,1,\"r\"],[120164,1,\"s\"],[120165,1,\"t\"],[120166,1,\"u\"],[120167,1,\"v\"],[120168,1,\"w\"],[120169,1,\"x\"],[120170,1,\"y\"],[120171,1,\"z\"],[120172,1,\"a\"],[120173,1,\"b\"],[120174,1,\"c\"],[120175,1,\"d\"],[120176,1,\"e\"],[120177,1,\"f\"],[120178,1,\"g\"],[120179,1,\"h\"],[120180,1,\"i\"],[120181,1,\"j\"],[120182,1,\"k\"],[120183,1,\"l\"],[120184,1,\"m\"],[120185,1,\"n\"],[120186,1,\"o\"],[120187,1,\"p\"],[120188,1,\"q\"],[120189,1,\"r\"],[120190,1,\"s\"],[120191,1,\"t\"],[120192,1,\"u\"],[120193,1,\"v\"],[120194,1,\"w\"],[120195,1,\"x\"],[120196,1,\"y\"],[120197,1,\"z\"],[120198,1,\"a\"],[120199,1,\"b\"],[120200,1,\"c\"],[120201,1,\"d\"],[120202,1,\"e\"],[120203,1,\"f\"],[120204,1,\"g\"],[120205,1,\"h\"],[120206,1,\"i\"],[120207,1,\"j\"],[120208,1,\"k\"],[120209,1,\"l\"],[120210,1,\"m\"],[120211,1,\"n\"],[120212,1,\"o\"],[120213,1,\"p\"],[120214,1,\"q\"],[120215,1,\"r\"],[120216,1,\"s\"],[120217,1,\"t\"],[120218,1,\"u\"],[120219,1,\"v\"],[120220,1,\"w\"],[120221,1,\"x\"],[120222,1,\"y\"],[120223,1,\"z\"],[120224,1,\"a\"],[120225,1,\"b\"],[120226,1,\"c\"],[120227,1,\"d\"],[120228,1,\"e\"],[120229,1,\"f\"],[120230,1,\"g\"],[120231,1,\"h\"],[120232,1,\"i\"],[120233,1,\"j\"],[120234,1,\"k\"],[120235,1,\"l\"],[120236,1,\"m\"],[120237,1,\"n\"],[120238,1,\"o\"],[120239,1,\"p\"],[120240,1,\"q\"],[120241,1,\"r\"],[120242,1,\"s\"],[120243,1,\"t\"],[120244,1,\"u\"],[120245,1,\"v\"],[120246,1,\"w\"],[120247,1,\"x\"],[120248,1,\"y\"],[120249,1,\"z\"],[120250,1,\"a\"],[120251,1,\"b\"],[120252,1,\"c\"],[120253,1,\"d\"],[120254,1,\"e\"],[120255,1,\"f\"],[120256,1,\"g\"],[120257,1,\"h\"],[120258,1,\"i\"],[120259,1,\"j\"],[120260,1,\"k\"],[120261,1,\"l\"],[120262,1,\"m\"],[120263,1,\"n\"],[120264,1,\"o\"],[120265,1,\"p\"],[120266,1,\"q\"],[120267,1,\"r\"],[120268,1,\"s\"],[120269,1,\"t\"],[120270,1,\"u\"],[120271,1,\"v\"],[120272,1,\"w\"],[120273,1,\"x\"],[120274,1,\"y\"],[120275,1,\"z\"],[120276,1,\"a\"],[120277,1,\"b\"],[120278,1,\"c\"],[120279,1,\"d\"],[120280,1,\"e\"],[120281,1,\"f\"],[120282,1,\"g\"],[120283,1,\"h\"],[120284,1,\"i\"],[120285,1,\"j\"],[120286,1,\"k\"],[120287,1,\"l\"],[120288,1,\"m\"],[120289,1,\"n\"],[120290,1,\"o\"],[120291,1,\"p\"],[120292,1,\"q\"],[120293,1,\"r\"],[120294,1,\"s\"],[120295,1,\"t\"],[120296,1,\"u\"],[120297,1,\"v\"],[120298,1,\"w\"],[120299,1,\"x\"],[120300,1,\"y\"],[120301,1,\"z\"],[120302,1,\"a\"],[120303,1,\"b\"],[120304,1,\"c\"],[120305,1,\"d\"],[120306,1,\"e\"],[120307,1,\"f\"],[120308,1,\"g\"],[120309,1,\"h\"],[120310,1,\"i\"],[120311,1,\"j\"],[120312,1,\"k\"],[120313,1,\"l\"],[120314,1,\"m\"],[120315,1,\"n\"],[120316,1,\"o\"],[120317,1,\"p\"],[120318,1,\"q\"],[120319,1,\"r\"],[120320,1,\"s\"],[120321,1,\"t\"],[120322,1,\"u\"],[120323,1,\"v\"],[120324,1,\"w\"],[120325,1,\"x\"],[120326,1,\"y\"],[120327,1,\"z\"],[120328,1,\"a\"],[120329,1,\"b\"],[120330,1,\"c\"],[120331,1,\"d\"],[120332,1,\"e\"],[120333,1,\"f\"],[120334,1,\"g\"],[120335,1,\"h\"],[120336,1,\"i\"],[120337,1,\"j\"],[120338,1,\"k\"],[120339,1,\"l\"],[120340,1,\"m\"],[120341,1,\"n\"],[120342,1,\"o\"],[120343,1,\"p\"],[120344,1,\"q\"],[120345,1,\"r\"],[120346,1,\"s\"],[120347,1,\"t\"],[120348,1,\"u\"],[120349,1,\"v\"],[120350,1,\"w\"],[120351,1,\"x\"],[120352,1,\"y\"],[120353,1,\"z\"],[120354,1,\"a\"],[120355,1,\"b\"],[120356,1,\"c\"],[120357,1,\"d\"],[120358,1,\"e\"],[120359,1,\"f\"],[120360,1,\"g\"],[120361,1,\"h\"],[120362,1,\"i\"],[120363,1,\"j\"],[120364,1,\"k\"],[120365,1,\"l\"],[120366,1,\"m\"],[120367,1,\"n\"],[120368,1,\"o\"],[120369,1,\"p\"],[120370,1,\"q\"],[120371,1,\"r\"],[120372,1,\"s\"],[120373,1,\"t\"],[120374,1,\"u\"],[120375,1,\"v\"],[120376,1,\"w\"],[120377,1,\"x\"],[120378,1,\"y\"],[120379,1,\"z\"],[120380,1,\"a\"],[120381,1,\"b\"],[120382,1,\"c\"],[120383,1,\"d\"],[120384,1,\"e\"],[120385,1,\"f\"],[120386,1,\"g\"],[120387,1,\"h\"],[120388,1,\"i\"],[120389,1,\"j\"],[120390,1,\"k\"],[120391,1,\"l\"],[120392,1,\"m\"],[120393,1,\"n\"],[120394,1,\"o\"],[120395,1,\"p\"],[120396,1,\"q\"],[120397,1,\"r\"],[120398,1,\"s\"],[120399,1,\"t\"],[120400,1,\"u\"],[120401,1,\"v\"],[120402,1,\"w\"],[120403,1,\"x\"],[120404,1,\"y\"],[120405,1,\"z\"],[120406,1,\"a\"],[120407,1,\"b\"],[120408,1,\"c\"],[120409,1,\"d\"],[120410,1,\"e\"],[120411,1,\"f\"],[120412,1,\"g\"],[120413,1,\"h\"],[120414,1,\"i\"],[120415,1,\"j\"],[120416,1,\"k\"],[120417,1,\"l\"],[120418,1,\"m\"],[120419,1,\"n\"],[120420,1,\"o\"],[120421,1,\"p\"],[120422,1,\"q\"],[120423,1,\"r\"],[120424,1,\"s\"],[120425,1,\"t\"],[120426,1,\"u\"],[120427,1,\"v\"],[120428,1,\"w\"],[120429,1,\"x\"],[120430,1,\"y\"],[120431,1,\"z\"],[120432,1,\"a\"],[120433,1,\"b\"],[120434,1,\"c\"],[120435,1,\"d\"],[120436,1,\"e\"],[120437,1,\"f\"],[120438,1,\"g\"],[120439,1,\"h\"],[120440,1,\"i\"],[120441,1,\"j\"],[120442,1,\"k\"],[120443,1,\"l\"],[120444,1,\"m\"],[120445,1,\"n\"],[120446,1,\"o\"],[120447,1,\"p\"],[120448,1,\"q\"],[120449,1,\"r\"],[120450,1,\"s\"],[120451,1,\"t\"],[120452,1,\"u\"],[120453,1,\"v\"],[120454,1,\"w\"],[120455,1,\"x\"],[120456,1,\"y\"],[120457,1,\"z\"],[120458,1,\"a\"],[120459,1,\"b\"],[120460,1,\"c\"],[120461,1,\"d\"],[120462,1,\"e\"],[120463,1,\"f\"],[120464,1,\"g\"],[120465,1,\"h\"],[120466,1,\"i\"],[120467,1,\"j\"],[120468,1,\"k\"],[120469,1,\"l\"],[120470,1,\"m\"],[120471,1,\"n\"],[120472,1,\"o\"],[120473,1,\"p\"],[120474,1,\"q\"],[120475,1,\"r\"],[120476,1,\"s\"],[120477,1,\"t\"],[120478,1,\"u\"],[120479,1,\"v\"],[120480,1,\"w\"],[120481,1,\"x\"],[120482,1,\"y\"],[120483,1,\"z\"],[120484,1,\"\u0131\"],[120485,1,\"\u0237\"],[[120486,120487],3],[120488,1,\"\u03B1\"],[120489,1,\"\u03B2\"],[120490,1,\"\u03B3\"],[120491,1,\"\u03B4\"],[120492,1,\"\u03B5\"],[120493,1,\"\u03B6\"],[120494,1,\"\u03B7\"],[120495,1,\"\u03B8\"],[120496,1,\"\u03B9\"],[120497,1,\"\u03BA\"],[120498,1,\"\u03BB\"],[120499,1,\"\u03BC\"],[120500,1,\"\u03BD\"],[120501,1,\"\u03BE\"],[120502,1,\"\u03BF\"],[120503,1,\"\u03C0\"],[120504,1,\"\u03C1\"],[120505,1,\"\u03B8\"],[120506,1,\"\u03C3\"],[120507,1,\"\u03C4\"],[120508,1,\"\u03C5\"],[120509,1,\"\u03C6\"],[120510,1,\"\u03C7\"],[120511,1,\"\u03C8\"],[120512,1,\"\u03C9\"],[120513,1,\"\u2207\"],[120514,1,\"\u03B1\"],[120515,1,\"\u03B2\"],[120516,1,\"\u03B3\"],[120517,1,\"\u03B4\"],[120518,1,\"\u03B5\"],[120519,1,\"\u03B6\"],[120520,1,\"\u03B7\"],[120521,1,\"\u03B8\"],[120522,1,\"\u03B9\"],[120523,1,\"\u03BA\"],[120524,1,\"\u03BB\"],[120525,1,\"\u03BC\"],[120526,1,\"\u03BD\"],[120527,1,\"\u03BE\"],[120528,1,\"\u03BF\"],[120529,1,\"\u03C0\"],[120530,1,\"\u03C1\"],[[120531,120532],1,\"\u03C3\"],[120533,1,\"\u03C4\"],[120534,1,\"\u03C5\"],[120535,1,\"\u03C6\"],[120536,1,\"\u03C7\"],[120537,1,\"\u03C8\"],[120538,1,\"\u03C9\"],[120539,1,\"\u2202\"],[120540,1,\"\u03B5\"],[120541,1,\"\u03B8\"],[120542,1,\"\u03BA\"],[120543,1,\"\u03C6\"],[120544,1,\"\u03C1\"],[120545,1,\"\u03C0\"],[120546,1,\"\u03B1\"],[120547,1,\"\u03B2\"],[120548,1,\"\u03B3\"],[120549,1,\"\u03B4\"],[120550,1,\"\u03B5\"],[120551,1,\"\u03B6\"],[120552,1,\"\u03B7\"],[120553,1,\"\u03B8\"],[120554,1,\"\u03B9\"],[120555,1,\"\u03BA\"],[120556,1,\"\u03BB\"],[120557,1,\"\u03BC\"],[120558,1,\"\u03BD\"],[120559,1,\"\u03BE\"],[120560,1,\"\u03BF\"],[120561,1,\"\u03C0\"],[120562,1,\"\u03C1\"],[120563,1,\"\u03B8\"],[120564,1,\"\u03C3\"],[120565,1,\"\u03C4\"],[120566,1,\"\u03C5\"],[120567,1,\"\u03C6\"],[120568,1,\"\u03C7\"],[120569,1,\"\u03C8\"],[120570,1,\"\u03C9\"],[120571,1,\"\u2207\"],[120572,1,\"\u03B1\"],[120573,1,\"\u03B2\"],[120574,1,\"\u03B3\"],[120575,1,\"\u03B4\"],[120576,1,\"\u03B5\"],[120577,1,\"\u03B6\"],[120578,1,\"\u03B7\"],[120579,1,\"\u03B8\"],[120580,1,\"\u03B9\"],[120581,1,\"\u03BA\"],[120582,1,\"\u03BB\"],[120583,1,\"\u03BC\"],[120584,1,\"\u03BD\"],[120585,1,\"\u03BE\"],[120586,1,\"\u03BF\"],[120587,1,\"\u03C0\"],[120588,1,\"\u03C1\"],[[120589,120590],1,\"\u03C3\"],[120591,1,\"\u03C4\"],[120592,1,\"\u03C5\"],[120593,1,\"\u03C6\"],[120594,1,\"\u03C7\"],[120595,1,\"\u03C8\"],[120596,1,\"\u03C9\"],[120597,1,\"\u2202\"],[120598,1,\"\u03B5\"],[120599,1,\"\u03B8\"],[120600,1,\"\u03BA\"],[120601,1,\"\u03C6\"],[120602,1,\"\u03C1\"],[120603,1,\"\u03C0\"],[120604,1,\"\u03B1\"],[120605,1,\"\u03B2\"],[120606,1,\"\u03B3\"],[120607,1,\"\u03B4\"],[120608,1,\"\u03B5\"],[120609,1,\"\u03B6\"],[120610,1,\"\u03B7\"],[120611,1,\"\u03B8\"],[120612,1,\"\u03B9\"],[120613,1,\"\u03BA\"],[120614,1,\"\u03BB\"],[120615,1,\"\u03BC\"],[120616,1,\"\u03BD\"],[120617,1,\"\u03BE\"],[120618,1,\"\u03BF\"],[120619,1,\"\u03C0\"],[120620,1,\"\u03C1\"],[120621,1,\"\u03B8\"],[120622,1,\"\u03C3\"],[120623,1,\"\u03C4\"],[120624,1,\"\u03C5\"],[120625,1,\"\u03C6\"],[120626,1,\"\u03C7\"],[120627,1,\"\u03C8\"],[120628,1,\"\u03C9\"],[120629,1,\"\u2207\"],[120630,1,\"\u03B1\"],[120631,1,\"\u03B2\"],[120632,1,\"\u03B3\"],[120633,1,\"\u03B4\"],[120634,1,\"\u03B5\"],[120635,1,\"\u03B6\"],[120636,1,\"\u03B7\"],[120637,1,\"\u03B8\"],[120638,1,\"\u03B9\"],[120639,1,\"\u03BA\"],[120640,1,\"\u03BB\"],[120641,1,\"\u03BC\"],[120642,1,\"\u03BD\"],[120643,1,\"\u03BE\"],[120644,1,\"\u03BF\"],[120645,1,\"\u03C0\"],[120646,1,\"\u03C1\"],[[120647,120648],1,\"\u03C3\"],[120649,1,\"\u03C4\"],[120650,1,\"\u03C5\"],[120651,1,\"\u03C6\"],[120652,1,\"\u03C7\"],[120653,1,\"\u03C8\"],[120654,1,\"\u03C9\"],[120655,1,\"\u2202\"],[120656,1,\"\u03B5\"],[120657,1,\"\u03B8\"],[120658,1,\"\u03BA\"],[120659,1,\"\u03C6\"],[120660,1,\"\u03C1\"],[120661,1,\"\u03C0\"],[120662,1,\"\u03B1\"],[120663,1,\"\u03B2\"],[120664,1,\"\u03B3\"],[120665,1,\"\u03B4\"],[120666,1,\"\u03B5\"],[120667,1,\"\u03B6\"],[120668,1,\"\u03B7\"],[120669,1,\"\u03B8\"],[120670,1,\"\u03B9\"],[120671,1,\"\u03BA\"],[120672,1,\"\u03BB\"],[120673,1,\"\u03BC\"],[120674,1,\"\u03BD\"],[120675,1,\"\u03BE\"],[120676,1,\"\u03BF\"],[120677,1,\"\u03C0\"],[120678,1,\"\u03C1\"],[120679,1,\"\u03B8\"],[120680,1,\"\u03C3\"],[120681,1,\"\u03C4\"],[120682,1,\"\u03C5\"],[120683,1,\"\u03C6\"],[120684,1,\"\u03C7\"],[120685,1,\"\u03C8\"],[120686,1,\"\u03C9\"],[120687,1,\"\u2207\"],[120688,1,\"\u03B1\"],[120689,1,\"\u03B2\"],[120690,1,\"\u03B3\"],[120691,1,\"\u03B4\"],[120692,1,\"\u03B5\"],[120693,1,\"\u03B6\"],[120694,1,\"\u03B7\"],[120695,1,\"\u03B8\"],[120696,1,\"\u03B9\"],[120697,1,\"\u03BA\"],[120698,1,\"\u03BB\"],[120699,1,\"\u03BC\"],[120700,1,\"\u03BD\"],[120701,1,\"\u03BE\"],[120702,1,\"\u03BF\"],[120703,1,\"\u03C0\"],[120704,1,\"\u03C1\"],[[120705,120706],1,\"\u03C3\"],[120707,1,\"\u03C4\"],[120708,1,\"\u03C5\"],[120709,1,\"\u03C6\"],[120710,1,\"\u03C7\"],[120711,1,\"\u03C8\"],[120712,1,\"\u03C9\"],[120713,1,\"\u2202\"],[120714,1,\"\u03B5\"],[120715,1,\"\u03B8\"],[120716,1,\"\u03BA\"],[120717,1,\"\u03C6\"],[120718,1,\"\u03C1\"],[120719,1,\"\u03C0\"],[120720,1,\"\u03B1\"],[120721,1,\"\u03B2\"],[120722,1,\"\u03B3\"],[120723,1,\"\u03B4\"],[120724,1,\"\u03B5\"],[120725,1,\"\u03B6\"],[120726,1,\"\u03B7\"],[120727,1,\"\u03B8\"],[120728,1,\"\u03B9\"],[120729,1,\"\u03BA\"],[120730,1,\"\u03BB\"],[120731,1,\"\u03BC\"],[120732,1,\"\u03BD\"],[120733,1,\"\u03BE\"],[120734,1,\"\u03BF\"],[120735,1,\"\u03C0\"],[120736,1,\"\u03C1\"],[120737,1,\"\u03B8\"],[120738,1,\"\u03C3\"],[120739,1,\"\u03C4\"],[120740,1,\"\u03C5\"],[120741,1,\"\u03C6\"],[120742,1,\"\u03C7\"],[120743,1,\"\u03C8\"],[120744,1,\"\u03C9\"],[120745,1,\"\u2207\"],[120746,1,\"\u03B1\"],[120747,1,\"\u03B2\"],[120748,1,\"\u03B3\"],[120749,1,\"\u03B4\"],[120750,1,\"\u03B5\"],[120751,1,\"\u03B6\"],[120752,1,\"\u03B7\"],[120753,1,\"\u03B8\"],[120754,1,\"\u03B9\"],[120755,1,\"\u03BA\"],[120756,1,\"\u03BB\"],[120757,1,\"\u03BC\"],[120758,1,\"\u03BD\"],[120759,1,\"\u03BE\"],[120760,1,\"\u03BF\"],[120761,1,\"\u03C0\"],[120762,1,\"\u03C1\"],[[120763,120764],1,\"\u03C3\"],[120765,1,\"\u03C4\"],[120766,1,\"\u03C5\"],[120767,1,\"\u03C6\"],[120768,1,\"\u03C7\"],[120769,1,\"\u03C8\"],[120770,1,\"\u03C9\"],[120771,1,\"\u2202\"],[120772,1,\"\u03B5\"],[120773,1,\"\u03B8\"],[120774,1,\"\u03BA\"],[120775,1,\"\u03C6\"],[120776,1,\"\u03C1\"],[120777,1,\"\u03C0\"],[[120778,120779],1,\"\u03DD\"],[[120780,120781],3],[120782,1,\"0\"],[120783,1,\"1\"],[120784,1,\"2\"],[120785,1,\"3\"],[120786,1,\"4\"],[120787,1,\"5\"],[120788,1,\"6\"],[120789,1,\"7\"],[120790,1,\"8\"],[120791,1,\"9\"],[120792,1,\"0\"],[120793,1,\"1\"],[120794,1,\"2\"],[120795,1,\"3\"],[120796,1,\"4\"],[120797,1,\"5\"],[120798,1,\"6\"],[120799,1,\"7\"],[120800,1,\"8\"],[120801,1,\"9\"],[120802,1,\"0\"],[120803,1,\"1\"],[120804,1,\"2\"],[120805,1,\"3\"],[120806,1,\"4\"],[120807,1,\"5\"],[120808,1,\"6\"],[120809,1,\"7\"],[120810,1,\"8\"],[120811,1,\"9\"],[120812,1,\"0\"],[120813,1,\"1\"],[120814,1,\"2\"],[120815,1,\"3\"],[120816,1,\"4\"],[120817,1,\"5\"],[120818,1,\"6\"],[120819,1,\"7\"],[120820,1,\"8\"],[120821,1,\"9\"],[120822,1,\"0\"],[120823,1,\"1\"],[120824,1,\"2\"],[120825,1,\"3\"],[120826,1,\"4\"],[120827,1,\"5\"],[120828,1,\"6\"],[120829,1,\"7\"],[120830,1,\"8\"],[120831,1,\"9\"],[[120832,121343],2],[[121344,121398],2],[[121399,121402],2],[[121403,121452],2],[[121453,121460],2],[121461,2],[[121462,121475],2],[121476,2],[[121477,121483],2],[[121484,121498],3],[[121499,121503],2],[121504,3],[[121505,121519],2],[[121520,122623],3],[[122624,122654],2],[[122655,122660],3],[[122661,122666],2],[[122667,122879],3],[[122880,122886],2],[122887,3],[[122888,122904],2],[[122905,122906],3],[[122907,122913],2],[122914,3],[[122915,122916],2],[122917,3],[[122918,122922],2],[[122923,122927],3],[122928,1,\"\u0430\"],[122929,1,\"\u0431\"],[122930,1,\"\u0432\"],[122931,1,\"\u0433\"],[122932,1,\"\u0434\"],[122933,1,\"\u0435\"],[122934,1,\"\u0436\"],[122935,1,\"\u0437\"],[122936,1,\"\u0438\"],[122937,1,\"\u043A\"],[122938,1,\"\u043B\"],[122939,1,\"\u043C\"],[122940,1,\"\u043E\"],[122941,1,\"\u043F\"],[122942,1,\"\u0440\"],[122943,1,\"\u0441\"],[122944,1,\"\u0442\"],[122945,1,\"\u0443\"],[122946,1,\"\u0444\"],[122947,1,\"\u0445\"],[122948,1,\"\u0446\"],[122949,1,\"\u0447\"],[122950,1,\"\u0448\"],[122951,1,\"\u044B\"],[122952,1,\"\u044D\"],[122953,1,\"\u044E\"],[122954,1,\"\uA689\"],[122955,1,\"\u04D9\"],[122956,1,\"\u0456\"],[122957,1,\"\u0458\"],[122958,1,\"\u04E9\"],[122959,1,\"\u04AF\"],[122960,1,\"\u04CF\"],[122961,1,\"\u0430\"],[122962,1,\"\u0431\"],[122963,1,\"\u0432\"],[122964,1,\"\u0433\"],[122965,1,\"\u0434\"],[122966,1,\"\u0435\"],[122967,1,\"\u0436\"],[122968,1,\"\u0437\"],[122969,1,\"\u0438\"],[122970,1,\"\u043A\"],[122971,1,\"\u043B\"],[122972,1,\"\u043E\"],[122973,1,\"\u043F\"],[122974,1,\"\u0441\"],[122975,1,\"\u0443\"],[122976,1,\"\u0444\"],[122977,1,\"\u0445\"],[122978,1,\"\u0446\"],[122979,1,\"\u0447\"],[122980,1,\"\u0448\"],[122981,1,\"\u044A\"],[122982,1,\"\u044B\"],[122983,1,\"\u0491\"],[122984,1,\"\u0456\"],[122985,1,\"\u0455\"],[122986,1,\"\u045F\"],[122987,1,\"\u04AB\"],[122988,1,\"\uA651\"],[122989,1,\"\u04B1\"],[[122990,123022],3],[123023,2],[[123024,123135],3],[[123136,123180],2],[[123181,123183],3],[[123184,123197],2],[[123198,123199],3],[[123200,123209],2],[[123210,123213],3],[123214,2],[123215,2],[[123216,123535],3],[[123536,123566],2],[[123567,123583],3],[[123584,123641],2],[[123642,123646],3],[123647,2],[[123648,124111],3],[[124112,124153],2],[[124154,124367],3],[[124368,124410],2],[[124411,124414],3],[124415,2],[[124416,124895],3],[[124896,124902],2],[124903,3],[[124904,124907],2],[124908,3],[[124909,124910],2],[124911,3],[[124912,124926],2],[124927,3],[[124928,125124],2],[[125125,125126],3],[[125127,125135],2],[[125136,125142],2],[[125143,125183],3],[125184,1,\"\uD83A\uDD22\"],[125185,1,\"\uD83A\uDD23\"],[125186,1,\"\uD83A\uDD24\"],[125187,1,\"\uD83A\uDD25\"],[125188,1,\"\uD83A\uDD26\"],[125189,1,\"\uD83A\uDD27\"],[125190,1,\"\uD83A\uDD28\"],[125191,1,\"\uD83A\uDD29\"],[125192,1,\"\uD83A\uDD2A\"],[125193,1,\"\uD83A\uDD2B\"],[125194,1,\"\uD83A\uDD2C\"],[125195,1,\"\uD83A\uDD2D\"],[125196,1,\"\uD83A\uDD2E\"],[125197,1,\"\uD83A\uDD2F\"],[125198,1,\"\uD83A\uDD30\"],[125199,1,\"\uD83A\uDD31\"],[125200,1,\"\uD83A\uDD32\"],[125201,1,\"\uD83A\uDD33\"],[125202,1,\"\uD83A\uDD34\"],[125203,1,\"\uD83A\uDD35\"],[125204,1,\"\uD83A\uDD36\"],[125205,1,\"\uD83A\uDD37\"],[125206,1,\"\uD83A\uDD38\"],[125207,1,\"\uD83A\uDD39\"],[125208,1,\"\uD83A\uDD3A\"],[125209,1,\"\uD83A\uDD3B\"],[125210,1,\"\uD83A\uDD3C\"],[125211,1,\"\uD83A\uDD3D\"],[125212,1,\"\uD83A\uDD3E\"],[125213,1,\"\uD83A\uDD3F\"],[125214,1,\"\uD83A\uDD40\"],[125215,1,\"\uD83A\uDD41\"],[125216,1,\"\uD83A\uDD42\"],[125217,1,\"\uD83A\uDD43\"],[[125218,125258],2],[125259,2],[[125260,125263],3],[[125264,125273],2],[[125274,125277],3],[[125278,125279],2],[[125280,126064],3],[[126065,126132],2],[[126133,126208],3],[[126209,126269],2],[[126270,126463],3],[126464,1,\"\u0627\"],[126465,1,\"\u0628\"],[126466,1,\"\u062C\"],[126467,1,\"\u062F\"],[126468,3],[126469,1,\"\u0648\"],[126470,1,\"\u0632\"],[126471,1,\"\u062D\"],[126472,1,\"\u0637\"],[126473,1,\"\u064A\"],[126474,1,\"\u0643\"],[126475,1,\"\u0644\"],[126476,1,\"\u0645\"],[126477,1,\"\u0646\"],[126478,1,\"\u0633\"],[126479,1,\"\u0639\"],[126480,1,\"\u0641\"],[126481,1,\"\u0635\"],[126482,1,\"\u0642\"],[126483,1,\"\u0631\"],[126484,1,\"\u0634\"],[126485,1,\"\u062A\"],[126486,1,\"\u062B\"],[126487,1,\"\u062E\"],[126488,1,\"\u0630\"],[126489,1,\"\u0636\"],[126490,1,\"\u0638\"],[126491,1,\"\u063A\"],[126492,1,\"\u066E\"],[126493,1,\"\u06BA\"],[126494,1,\"\u06A1\"],[126495,1,\"\u066F\"],[126496,3],[126497,1,\"\u0628\"],[126498,1,\"\u062C\"],[126499,3],[126500,1,\"\u0647\"],[[126501,126502],3],[126503,1,\"\u062D\"],[126504,3],[126505,1,\"\u064A\"],[126506,1,\"\u0643\"],[126507,1,\"\u0644\"],[126508,1,\"\u0645\"],[126509,1,\"\u0646\"],[126510,1,\"\u0633\"],[126511,1,\"\u0639\"],[126512,1,\"\u0641\"],[126513,1,\"\u0635\"],[126514,1,\"\u0642\"],[126515,3],[126516,1,\"\u0634\"],[126517,1,\"\u062A\"],[126518,1,\"\u062B\"],[126519,1,\"\u062E\"],[126520,3],[126521,1,\"\u0636\"],[126522,3],[126523,1,\"\u063A\"],[[126524,126529],3],[126530,1,\"\u062C\"],[[126531,126534],3],[126535,1,\"\u062D\"],[126536,3],[126537,1,\"\u064A\"],[126538,3],[126539,1,\"\u0644\"],[126540,3],[126541,1,\"\u0646\"],[126542,1,\"\u0633\"],[126543,1,\"\u0639\"],[126544,3],[126545,1,\"\u0635\"],[126546,1,\"\u0642\"],[126547,3],[126548,1,\"\u0634\"],[[126549,126550],3],[126551,1,\"\u062E\"],[126552,3],[126553,1,\"\u0636\"],[126554,3],[126555,1,\"\u063A\"],[126556,3],[126557,1,\"\u06BA\"],[126558,3],[126559,1,\"\u066F\"],[126560,3],[126561,1,\"\u0628\"],[126562,1,\"\u062C\"],[126563,3],[126564,1,\"\u0647\"],[[126565,126566],3],[126567,1,\"\u062D\"],[126568,1,\"\u0637\"],[126569,1,\"\u064A\"],[126570,1,\"\u0643\"],[126571,3],[126572,1,\"\u0645\"],[126573,1,\"\u0646\"],[126574,1,\"\u0633\"],[126575,1,\"\u0639\"],[126576,1,\"\u0641\"],[126577,1,\"\u0635\"],[126578,1,\"\u0642\"],[126579,3],[126580,1,\"\u0634\"],[126581,1,\"\u062A\"],[126582,1,\"\u062B\"],[126583,1,\"\u062E\"],[126584,3],[126585,1,\"\u0636\"],[126586,1,\"\u0638\"],[126587,1,\"\u063A\"],[126588,1,\"\u066E\"],[126589,3],[126590,1,\"\u06A1\"],[126591,3],[126592,1,\"\u0627\"],[126593,1,\"\u0628\"],[126594,1,\"\u062C\"],[126595,1,\"\u062F\"],[126596,1,\"\u0647\"],[126597,1,\"\u0648\"],[126598,1,\"\u0632\"],[126599,1,\"\u062D\"],[126600,1,\"\u0637\"],[126601,1,\"\u064A\"],[126602,3],[126603,1,\"\u0644\"],[126604,1,\"\u0645\"],[126605,1,\"\u0646\"],[126606,1,\"\u0633\"],[126607,1,\"\u0639\"],[126608,1,\"\u0641\"],[126609,1,\"\u0635\"],[126610,1,\"\u0642\"],[126611,1,\"\u0631\"],[126612,1,\"\u0634\"],[126613,1,\"\u062A\"],[126614,1,\"\u062B\"],[126615,1,\"\u062E\"],[126616,1,\"\u0630\"],[126617,1,\"\u0636\"],[126618,1,\"\u0638\"],[126619,1,\"\u063A\"],[[126620,126624],3],[126625,1,\"\u0628\"],[126626,1,\"\u062C\"],[126627,1,\"\u062F\"],[126628,3],[126629,1,\"\u0648\"],[126630,1,\"\u0632\"],[126631,1,\"\u062D\"],[126632,1,\"\u0637\"],[126633,1,\"\u064A\"],[126634,3],[126635,1,\"\u0644\"],[126636,1,\"\u0645\"],[126637,1,\"\u0646\"],[126638,1,\"\u0633\"],[126639,1,\"\u0639\"],[126640,1,\"\u0641\"],[126641,1,\"\u0635\"],[126642,1,\"\u0642\"],[126643,1,\"\u0631\"],[126644,1,\"\u0634\"],[126645,1,\"\u062A\"],[126646,1,\"\u062B\"],[126647,1,\"\u062E\"],[126648,1,\"\u0630\"],[126649,1,\"\u0636\"],[126650,1,\"\u0638\"],[126651,1,\"\u063A\"],[[126652,126703],3],[[126704,126705],2],[[126706,126975],3],[[126976,127019],2],[[127020,127023],3],[[127024,127123],2],[[127124,127135],3],[[127136,127150],2],[[127151,127152],3],[[127153,127166],2],[127167,2],[127168,3],[[127169,127183],2],[127184,3],[[127185,127199],2],[[127200,127221],2],[[127222,127231],3],[127232,3],[127233,1,\"0,\"],[127234,1,\"1,\"],[127235,1,\"2,\"],[127236,1,\"3,\"],[127237,1,\"4,\"],[127238,1,\"5,\"],[127239,1,\"6,\"],[127240,1,\"7,\"],[127241,1,\"8,\"],[127242,1,\"9,\"],[[127243,127244],2],[[127245,127247],2],[127248,1,\"(a)\"],[127249,1,\"(b)\"],[127250,1,\"(c)\"],[127251,1,\"(d)\"],[127252,1,\"(e)\"],[127253,1,\"(f)\"],[127254,1,\"(g)\"],[127255,1,\"(h)\"],[127256,1,\"(i)\"],[127257,1,\"(j)\"],[127258,1,\"(k)\"],[127259,1,\"(l)\"],[127260,1,\"(m)\"],[127261,1,\"(n)\"],[127262,1,\"(o)\"],[127263,1,\"(p)\"],[127264,1,\"(q)\"],[127265,1,\"(r)\"],[127266,1,\"(s)\"],[127267,1,\"(t)\"],[127268,1,\"(u)\"],[127269,1,\"(v)\"],[127270,1,\"(w)\"],[127271,1,\"(x)\"],[127272,1,\"(y)\"],[127273,1,\"(z)\"],[127274,1,\"\u3014s\u3015\"],[127275,1,\"c\"],[127276,1,\"r\"],[127277,1,\"cd\"],[127278,1,\"wz\"],[127279,2],[127280,1,\"a\"],[127281,1,\"b\"],[127282,1,\"c\"],[127283,1,\"d\"],[127284,1,\"e\"],[127285,1,\"f\"],[127286,1,\"g\"],[127287,1,\"h\"],[127288,1,\"i\"],[127289,1,\"j\"],[127290,1,\"k\"],[127291,1,\"l\"],[127292,1,\"m\"],[127293,1,\"n\"],[127294,1,\"o\"],[127295,1,\"p\"],[127296,1,\"q\"],[127297,1,\"r\"],[127298,1,\"s\"],[127299,1,\"t\"],[127300,1,\"u\"],[127301,1,\"v\"],[127302,1,\"w\"],[127303,1,\"x\"],[127304,1,\"y\"],[127305,1,\"z\"],[127306,1,\"hv\"],[127307,1,\"mv\"],[127308,1,\"sd\"],[127309,1,\"ss\"],[127310,1,\"ppv\"],[127311,1,\"wc\"],[[127312,127318],2],[127319,2],[[127320,127326],2],[127327,2],[[127328,127337],2],[127338,1,\"mc\"],[127339,1,\"md\"],[127340,1,\"mr\"],[[127341,127343],2],[[127344,127352],2],[127353,2],[127354,2],[[127355,127356],2],[[127357,127358],2],[127359,2],[[127360,127369],2],[[127370,127373],2],[[127374,127375],2],[127376,1,\"dj\"],[[127377,127386],2],[[127387,127404],2],[127405,2],[[127406,127461],3],[[127462,127487],2],[127488,1,\"\u307B\u304B\"],[127489,1,\"\u30B3\u30B3\"],[127490,1,\"\u30B5\"],[[127491,127503],3],[127504,1,\"\u624B\"],[127505,1,\"\u5B57\"],[127506,1,\"\u53CC\"],[127507,1,\"\u30C7\"],[127508,1,\"\u4E8C\"],[127509,1,\"\u591A\"],[127510,1,\"\u89E3\"],[127511,1,\"\u5929\"],[127512,1,\"\u4EA4\"],[127513,1,\"\u6620\"],[127514,1,\"\u7121\"],[127515,1,\"\u6599\"],[127516,1,\"\u524D\"],[127517,1,\"\u5F8C\"],[127518,1,\"\u518D\"],[127519,1,\"\u65B0\"],[127520,1,\"\u521D\"],[127521,1,\"\u7D42\"],[127522,1,\"\u751F\"],[127523,1,\"\u8CA9\"],[127524,1,\"\u58F0\"],[127525,1,\"\u5439\"],[127526,1,\"\u6F14\"],[127527,1,\"\u6295\"],[127528,1,\"\u6355\"],[127529,1,\"\u4E00\"],[127530,1,\"\u4E09\"],[127531,1,\"\u904A\"],[127532,1,\"\u5DE6\"],[127533,1,\"\u4E2D\"],[127534,1,\"\u53F3\"],[127535,1,\"\u6307\"],[127536,1,\"\u8D70\"],[127537,1,\"\u6253\"],[127538,1,\"\u7981\"],[127539,1,\"\u7A7A\"],[127540,1,\"\u5408\"],[127541,1,\"\u6E80\"],[127542,1,\"\u6709\"],[127543,1,\"\u6708\"],[127544,1,\"\u7533\"],[127545,1,\"\u5272\"],[127546,1,\"\u55B6\"],[127547,1,\"\u914D\"],[[127548,127551],3],[127552,1,\"\u3014\u672C\u3015\"],[127553,1,\"\u3014\u4E09\u3015\"],[127554,1,\"\u3014\u4E8C\u3015\"],[127555,1,\"\u3014\u5B89\u3015\"],[127556,1,\"\u3014\u70B9\u3015\"],[127557,1,\"\u3014\u6253\u3015\"],[127558,1,\"\u3014\u76D7\u3015\"],[127559,1,\"\u3014\u52DD\u3015\"],[127560,1,\"\u3014\u6557\u3015\"],[[127561,127567],3],[127568,1,\"\u5F97\"],[127569,1,\"\u53EF\"],[[127570,127583],3],[[127584,127589],2],[[127590,127743],3],[[127744,127776],2],[[127777,127788],2],[[127789,127791],2],[[127792,127797],2],[127798,2],[[127799,127868],2],[127869,2],[[127870,127871],2],[[127872,127891],2],[[127892,127903],2],[[127904,127940],2],[127941,2],[[127942,127946],2],[[127947,127950],2],[[127951,127955],2],[[127956,127967],2],[[127968,127984],2],[[127985,127991],2],[[127992,127999],2],[[128000,128062],2],[128063,2],[128064,2],[128065,2],[[128066,128247],2],[128248,2],[[128249,128252],2],[[128253,128254],2],[128255,2],[[128256,128317],2],[[128318,128319],2],[[128320,128323],2],[[128324,128330],2],[[128331,128335],2],[[128336,128359],2],[[128360,128377],2],[128378,2],[[128379,128419],2],[128420,2],[[128421,128506],2],[[128507,128511],2],[128512,2],[[128513,128528],2],[128529,2],[[128530,128532],2],[128533,2],[128534,2],[128535,2],[128536,2],[128537,2],[128538,2],[128539,2],[[128540,128542],2],[128543,2],[[128544,128549],2],[[128550,128551],2],[[128552,128555],2],[128556,2],[128557,2],[[128558,128559],2],[[128560,128563],2],[128564,2],[[128565,128576],2],[[128577,128578],2],[[128579,128580],2],[[128581,128591],2],[[128592,128639],2],[[128640,128709],2],[[128710,128719],2],[128720,2],[[128721,128722],2],[[128723,128724],2],[128725,2],[[128726,128727],2],[[128728,128731],3],[128732,2],[[128733,128735],2],[[128736,128748],2],[[128749,128751],3],[[128752,128755],2],[[128756,128758],2],[[128759,128760],2],[128761,2],[128762,2],[[128763,128764],2],[[128765,128767],3],[[128768,128883],2],[[128884,128886],2],[[128887,128890],3],[[128891,128895],2],[[128896,128980],2],[[128981,128984],2],[128985,2],[[128986,128991],3],[[128992,129003],2],[[129004,129007],3],[129008,2],[[129009,129023],3],[[129024,129035],2],[[129036,129039],3],[[129040,129095],2],[[129096,129103],3],[[129104,129113],2],[[129114,129119],3],[[129120,129159],2],[[129160,129167],3],[[129168,129197],2],[[129198,129199],3],[[129200,129201],2],[[129202,129211],2],[[129212,129215],3],[[129216,129217],2],[[129218,129279],3],[[129280,129291],2],[129292,2],[[129293,129295],2],[[129296,129304],2],[[129305,129310],2],[129311,2],[[129312,129319],2],[[129320,129327],2],[129328,2],[[129329,129330],2],[[129331,129342],2],[129343,2],[[129344,129355],2],[129356,2],[[129357,129359],2],[[129360,129374],2],[[129375,129387],2],[[129388,129392],2],[129393,2],[129394,2],[[129395,129398],2],[[129399,129400],2],[129401,2],[129402,2],[129403,2],[[129404,129407],2],[[129408,129412],2],[[129413,129425],2],[[129426,129431],2],[[129432,129442],2],[[129443,129444],2],[[129445,129450],2],[[129451,129453],2],[[129454,129455],2],[[129456,129465],2],[[129466,129471],2],[129472,2],[[129473,129474],2],[[129475,129482],2],[129483,2],[129484,2],[[129485,129487],2],[[129488,129510],2],[[129511,129535],2],[[129536,129619],2],[[129620,129631],3],[[129632,129645],2],[[129646,129647],3],[[129648,129651],2],[129652,2],[[129653,129655],2],[[129656,129658],2],[[129659,129660],2],[[129661,129663],3],[[129664,129666],2],[[129667,129670],2],[[129671,129672],2],[129673,2],[[129674,129678],3],[129679,2],[[129680,129685],2],[[129686,129704],2],[[129705,129708],2],[[129709,129711],2],[[129712,129718],2],[[129719,129722],2],[[129723,129725],2],[129726,2],[129727,2],[[129728,129730],2],[[129731,129733],2],[129734,2],[[129735,129741],3],[[129742,129743],2],[[129744,129750],2],[[129751,129753],2],[[129754,129755],2],[129756,2],[[129757,129758],3],[129759,2],[[129760,129767],2],[129768,2],[129769,2],[[129770,129775],3],[[129776,129782],2],[[129783,129784],2],[[129785,129791],3],[[129792,129938],2],[129939,3],[[129940,129994],2],[[129995,130031],2],[130032,1,\"0\"],[130033,1,\"1\"],[130034,1,\"2\"],[130035,1,\"3\"],[130036,1,\"4\"],[130037,1,\"5\"],[130038,1,\"6\"],[130039,1,\"7\"],[130040,1,\"8\"],[130041,1,\"9\"],[[130042,131069],3],[[131070,131071],3],[[131072,173782],2],[[173783,173789],2],[[173790,173791],2],[[173792,173823],3],[[173824,177972],2],[[177973,177976],2],[177977,2],[[177978,177983],3],[[177984,178205],2],[[178206,178207],3],[[178208,183969],2],[[183970,183983],3],[[183984,191456],2],[[191457,191471],3],[[191472,192093],2],[[192094,194559],3],[194560,1,\"\u4E3D\"],[194561,1,\"\u4E38\"],[194562,1,\"\u4E41\"],[194563,1,\"\uD840\uDD22\"],[194564,1,\"\u4F60\"],[194565,1,\"\u4FAE\"],[194566,1,\"\u4FBB\"],[194567,1,\"\u5002\"],[194568,1,\"\u507A\"],[194569,1,\"\u5099\"],[194570,1,\"\u50E7\"],[194571,1,\"\u50CF\"],[194572,1,\"\u349E\"],[194573,1,\"\uD841\uDE3A\"],[194574,1,\"\u514D\"],[194575,1,\"\u5154\"],[194576,1,\"\u5164\"],[194577,1,\"\u5177\"],[194578,1,\"\uD841\uDD1C\"],[194579,1,\"\u34B9\"],[194580,1,\"\u5167\"],[194581,1,\"\u518D\"],[194582,1,\"\uD841\uDD4B\"],[194583,1,\"\u5197\"],[194584,1,\"\u51A4\"],[194585,1,\"\u4ECC\"],[194586,1,\"\u51AC\"],[194587,1,\"\u51B5\"],[194588,1,\"\uD864\uDDDF\"],[194589,1,\"\u51F5\"],[194590,1,\"\u5203\"],[194591,1,\"\u34DF\"],[194592,1,\"\u523B\"],[194593,1,\"\u5246\"],[194594,1,\"\u5272\"],[194595,1,\"\u5277\"],[194596,1,\"\u3515\"],[194597,1,\"\u52C7\"],[194598,1,\"\u52C9\"],[194599,1,\"\u52E4\"],[194600,1,\"\u52FA\"],[194601,1,\"\u5305\"],[194602,1,\"\u5306\"],[194603,1,\"\u5317\"],[194604,1,\"\u5349\"],[194605,1,\"\u5351\"],[194606,1,\"\u535A\"],[194607,1,\"\u5373\"],[194608,1,\"\u537D\"],[[194609,194611],1,\"\u537F\"],[194612,1,\"\uD842\uDE2C\"],[194613,1,\"\u7070\"],[194614,1,\"\u53CA\"],[194615,1,\"\u53DF\"],[194616,1,\"\uD842\uDF63\"],[194617,1,\"\u53EB\"],[194618,1,\"\u53F1\"],[194619,1,\"\u5406\"],[194620,1,\"\u549E\"],[194621,1,\"\u5438\"],[194622,1,\"\u5448\"],[194623,1,\"\u5468\"],[194624,1,\"\u54A2\"],[194625,1,\"\u54F6\"],[194626,1,\"\u5510\"],[194627,1,\"\u5553\"],[194628,1,\"\u5563\"],[[194629,194630],1,\"\u5584\"],[194631,1,\"\u5599\"],[194632,1,\"\u55AB\"],[194633,1,\"\u55B3\"],[194634,1,\"\u55C2\"],[194635,1,\"\u5716\"],[194636,1,\"\u5606\"],[194637,1,\"\u5717\"],[194638,1,\"\u5651\"],[194639,1,\"\u5674\"],[194640,1,\"\u5207\"],[194641,1,\"\u58EE\"],[194642,1,\"\u57CE\"],[194643,1,\"\u57F4\"],[194644,1,\"\u580D\"],[194645,1,\"\u578B\"],[194646,1,\"\u5832\"],[194647,1,\"\u5831\"],[194648,1,\"\u58AC\"],[194649,1,\"\uD845\uDCE4\"],[194650,1,\"\u58F2\"],[194651,1,\"\u58F7\"],[194652,1,\"\u5906\"],[194653,1,\"\u591A\"],[194654,1,\"\u5922\"],[194655,1,\"\u5962\"],[194656,1,\"\uD845\uDEA8\"],[194657,1,\"\uD845\uDEEA\"],[194658,1,\"\u59EC\"],[194659,1,\"\u5A1B\"],[194660,1,\"\u5A27\"],[194661,1,\"\u59D8\"],[194662,1,\"\u5A66\"],[194663,1,\"\u36EE\"],[194664,1,\"\u36FC\"],[194665,1,\"\u5B08\"],[[194666,194667],1,\"\u5B3E\"],[194668,1,\"\uD846\uDDC8\"],[194669,1,\"\u5BC3\"],[194670,1,\"\u5BD8\"],[194671,1,\"\u5BE7\"],[194672,1,\"\u5BF3\"],[194673,1,\"\uD846\uDF18\"],[194674,1,\"\u5BFF\"],[194675,1,\"\u5C06\"],[194676,1,\"\u5F53\"],[194677,1,\"\u5C22\"],[194678,1,\"\u3781\"],[194679,1,\"\u5C60\"],[194680,1,\"\u5C6E\"],[194681,1,\"\u5CC0\"],[194682,1,\"\u5C8D\"],[194683,1,\"\uD847\uDDE4\"],[194684,1,\"\u5D43\"],[194685,1,\"\uD847\uDDE6\"],[194686,1,\"\u5D6E\"],[194687,1,\"\u5D6B\"],[194688,1,\"\u5D7C\"],[194689,1,\"\u5DE1\"],[194690,1,\"\u5DE2\"],[194691,1,\"\u382F\"],[194692,1,\"\u5DFD\"],[194693,1,\"\u5E28\"],[194694,1,\"\u5E3D\"],[194695,1,\"\u5E69\"],[194696,1,\"\u3862\"],[194697,1,\"\uD848\uDD83\"],[194698,1,\"\u387C\"],[194699,1,\"\u5EB0\"],[194700,1,\"\u5EB3\"],[194701,1,\"\u5EB6\"],[194702,1,\"\u5ECA\"],[194703,1,\"\uD868\uDF92\"],[194704,1,\"\u5EFE\"],[[194705,194706],1,\"\uD848\uDF31\"],[194707,1,\"\u8201\"],[[194708,194709],1,\"\u5F22\"],[194710,1,\"\u38C7\"],[194711,1,\"\uD84C\uDEB8\"],[194712,1,\"\uD858\uDDDA\"],[194713,1,\"\u5F62\"],[194714,1,\"\u5F6B\"],[194715,1,\"\u38E3\"],[194716,1,\"\u5F9A\"],[194717,1,\"\u5FCD\"],[194718,1,\"\u5FD7\"],[194719,1,\"\u5FF9\"],[194720,1,\"\u6081\"],[194721,1,\"\u393A\"],[194722,1,\"\u391C\"],[194723,1,\"\u6094\"],[194724,1,\"\uD849\uDED4\"],[194725,1,\"\u60C7\"],[194726,1,\"\u6148\"],[194727,1,\"\u614C\"],[194728,1,\"\u614E\"],[194729,1,\"\u614C\"],[194730,1,\"\u617A\"],[194731,1,\"\u618E\"],[194732,1,\"\u61B2\"],[194733,1,\"\u61A4\"],[194734,1,\"\u61AF\"],[194735,1,\"\u61DE\"],[194736,1,\"\u61F2\"],[194737,1,\"\u61F6\"],[194738,1,\"\u6210\"],[194739,1,\"\u621B\"],[194740,1,\"\u625D\"],[194741,1,\"\u62B1\"],[194742,1,\"\u62D4\"],[194743,1,\"\u6350\"],[194744,1,\"\uD84A\uDF0C\"],[194745,1,\"\u633D\"],[194746,1,\"\u62FC\"],[194747,1,\"\u6368\"],[194748,1,\"\u6383\"],[194749,1,\"\u63E4\"],[194750,1,\"\uD84A\uDFF1\"],[194751,1,\"\u6422\"],[194752,1,\"\u63C5\"],[194753,1,\"\u63A9\"],[194754,1,\"\u3A2E\"],[194755,1,\"\u6469\"],[194756,1,\"\u647E\"],[194757,1,\"\u649D\"],[194758,1,\"\u6477\"],[194759,1,\"\u3A6C\"],[194760,1,\"\u654F\"],[194761,1,\"\u656C\"],[194762,1,\"\uD84C\uDC0A\"],[194763,1,\"\u65E3\"],[194764,1,\"\u66F8\"],[194765,1,\"\u6649\"],[194766,1,\"\u3B19\"],[194767,1,\"\u6691\"],[194768,1,\"\u3B08\"],[194769,1,\"\u3AE4\"],[194770,1,\"\u5192\"],[194771,1,\"\u5195\"],[194772,1,\"\u6700\"],[194773,1,\"\u669C\"],[194774,1,\"\u80AD\"],[194775,1,\"\u43D9\"],[194776,1,\"\u6717\"],[194777,1,\"\u671B\"],[194778,1,\"\u6721\"],[194779,1,\"\u675E\"],[194780,1,\"\u6753\"],[194781,1,\"\uD84C\uDFC3\"],[194782,1,\"\u3B49\"],[194783,1,\"\u67FA\"],[194784,1,\"\u6785\"],[194785,1,\"\u6852\"],[194786,1,\"\u6885\"],[194787,1,\"\uD84D\uDC6D\"],[194788,1,\"\u688E\"],[194789,1,\"\u681F\"],[194790,1,\"\u6914\"],[194791,1,\"\u3B9D\"],[194792,1,\"\u6942\"],[194793,1,\"\u69A3\"],[194794,1,\"\u69EA\"],[194795,1,\"\u6AA8\"],[194796,1,\"\uD84D\uDEA3\"],[194797,1,\"\u6ADB\"],[194798,1,\"\u3C18\"],[194799,1,\"\u6B21\"],[194800,1,\"\uD84E\uDCA7\"],[194801,1,\"\u6B54\"],[194802,1,\"\u3C4E\"],[194803,1,\"\u6B72\"],[194804,1,\"\u6B9F\"],[194805,1,\"\u6BBA\"],[194806,1,\"\u6BBB\"],[194807,1,\"\uD84E\uDE8D\"],[194808,1,\"\uD847\uDD0B\"],[194809,1,\"\uD84E\uDEFA\"],[194810,1,\"\u6C4E\"],[194811,1,\"\uD84F\uDCBC\"],[194812,1,\"\u6CBF\"],[194813,1,\"\u6CCD\"],[194814,1,\"\u6C67\"],[194815,1,\"\u6D16\"],[194816,1,\"\u6D3E\"],[194817,1,\"\u6D77\"],[194818,1,\"\u6D41\"],[194819,1,\"\u6D69\"],[194820,1,\"\u6D78\"],[194821,1,\"\u6D85\"],[194822,1,\"\uD84F\uDD1E\"],[194823,1,\"\u6D34\"],[194824,1,\"\u6E2F\"],[194825,1,\"\u6E6E\"],[194826,1,\"\u3D33\"],[194827,1,\"\u6ECB\"],[194828,1,\"\u6EC7\"],[194829,1,\"\uD84F\uDED1\"],[194830,1,\"\u6DF9\"],[194831,1,\"\u6F6E\"],[194832,1,\"\uD84F\uDF5E\"],[194833,1,\"\uD84F\uDF8E\"],[194834,1,\"\u6FC6\"],[194835,1,\"\u7039\"],[194836,1,\"\u701E\"],[194837,1,\"\u701B\"],[194838,1,\"\u3D96\"],[194839,1,\"\u704A\"],[194840,1,\"\u707D\"],[194841,1,\"\u7077\"],[194842,1,\"\u70AD\"],[194843,1,\"\uD841\uDD25\"],[194844,1,\"\u7145\"],[194845,1,\"\uD850\uDE63\"],[194846,1,\"\u719C\"],[194847,1,\"\uD850\uDFAB\"],[194848,1,\"\u7228\"],[194849,1,\"\u7235\"],[194850,1,\"\u7250\"],[194851,1,\"\uD851\uDE08\"],[194852,1,\"\u7280\"],[194853,1,\"\u7295\"],[194854,1,\"\uD851\uDF35\"],[194855,1,\"\uD852\uDC14\"],[194856,1,\"\u737A\"],[194857,1,\"\u738B\"],[194858,1,\"\u3EAC\"],[194859,1,\"\u73A5\"],[[194860,194861],1,\"\u3EB8\"],[194862,1,\"\u7447\"],[194863,1,\"\u745C\"],[194864,1,\"\u7471\"],[194865,1,\"\u7485\"],[194866,1,\"\u74CA\"],[194867,1,\"\u3F1B\"],[194868,1,\"\u7524\"],[194869,1,\"\uD853\uDC36\"],[194870,1,\"\u753E\"],[194871,1,\"\uD853\uDC92\"],[194872,1,\"\u7570\"],[194873,1,\"\uD848\uDD9F\"],[194874,1,\"\u7610\"],[194875,1,\"\uD853\uDFA1\"],[194876,1,\"\uD853\uDFB8\"],[194877,1,\"\uD854\uDC44\"],[194878,1,\"\u3FFC\"],[194879,1,\"\u4008\"],[194880,1,\"\u76F4\"],[194881,1,\"\uD854\uDCF3\"],[194882,1,\"\uD854\uDCF2\"],[194883,1,\"\uD854\uDD19\"],[194884,1,\"\uD854\uDD33\"],[194885,1,\"\u771E\"],[[194886,194887],1,\"\u771F\"],[194888,1,\"\u774A\"],[194889,1,\"\u4039\"],[194890,1,\"\u778B\"],[194891,1,\"\u4046\"],[194892,1,\"\u4096\"],[194893,1,\"\uD855\uDC1D\"],[194894,1,\"\u784E\"],[194895,1,\"\u788C\"],[194896,1,\"\u78CC\"],[194897,1,\"\u40E3\"],[194898,1,\"\uD855\uDE26\"],[194899,1,\"\u7956\"],[194900,1,\"\uD855\uDE9A\"],[194901,1,\"\uD855\uDEC5\"],[194902,1,\"\u798F\"],[194903,1,\"\u79EB\"],[194904,1,\"\u412F\"],[194905,1,\"\u7A40\"],[194906,1,\"\u7A4A\"],[194907,1,\"\u7A4F\"],[194908,1,\"\uD856\uDD7C\"],[[194909,194910],1,\"\uD856\uDEA7\"],[194911,1,\"\u7AEE\"],[194912,1,\"\u4202\"],[194913,1,\"\uD856\uDFAB\"],[194914,1,\"\u7BC6\"],[194915,1,\"\u7BC9\"],[194916,1,\"\u4227\"],[194917,1,\"\uD857\uDC80\"],[194918,1,\"\u7CD2\"],[194919,1,\"\u42A0\"],[194920,1,\"\u7CE8\"],[194921,1,\"\u7CE3\"],[194922,1,\"\u7D00\"],[194923,1,\"\uD857\uDF86\"],[194924,1,\"\u7D63\"],[194925,1,\"\u4301\"],[194926,1,\"\u7DC7\"],[194927,1,\"\u7E02\"],[194928,1,\"\u7E45\"],[194929,1,\"\u4334\"],[194930,1,\"\uD858\uDE28\"],[194931,1,\"\uD858\uDE47\"],[194932,1,\"\u4359\"],[194933,1,\"\uD858\uDED9\"],[194934,1,\"\u7F7A\"],[194935,1,\"\uD858\uDF3E\"],[194936,1,\"\u7F95\"],[194937,1,\"\u7FFA\"],[194938,1,\"\u8005\"],[194939,1,\"\uD859\uDCDA\"],[194940,1,\"\uD859\uDD23\"],[194941,1,\"\u8060\"],[194942,1,\"\uD859\uDDA8\"],[194943,1,\"\u8070\"],[194944,1,\"\uD84C\uDF5F\"],[194945,1,\"\u43D5\"],[194946,1,\"\u80B2\"],[194947,1,\"\u8103\"],[194948,1,\"\u440B\"],[194949,1,\"\u813E\"],[194950,1,\"\u5AB5\"],[194951,1,\"\uD859\uDFA7\"],[194952,1,\"\uD859\uDFB5\"],[194953,1,\"\uD84C\uDF93\"],[194954,1,\"\uD84C\uDF9C\"],[194955,1,\"\u8201\"],[194956,1,\"\u8204\"],[194957,1,\"\u8F9E\"],[194958,1,\"\u446B\"],[194959,1,\"\u8291\"],[194960,1,\"\u828B\"],[194961,1,\"\u829D\"],[194962,1,\"\u52B3\"],[194963,1,\"\u82B1\"],[194964,1,\"\u82B3\"],[194965,1,\"\u82BD\"],[194966,1,\"\u82E6\"],[194967,1,\"\uD85A\uDF3C\"],[194968,1,\"\u82E5\"],[194969,1,\"\u831D\"],[194970,1,\"\u8363\"],[194971,1,\"\u83AD\"],[194972,1,\"\u8323\"],[194973,1,\"\u83BD\"],[194974,1,\"\u83E7\"],[194975,1,\"\u8457\"],[194976,1,\"\u8353\"],[194977,1,\"\u83CA\"],[194978,1,\"\u83CC\"],[194979,1,\"\u83DC\"],[194980,1,\"\uD85B\uDC36\"],[194981,1,\"\uD85B\uDD6B\"],[194982,1,\"\uD85B\uDCD5\"],[194983,1,\"\u452B\"],[194984,1,\"\u84F1\"],[194985,1,\"\u84F3\"],[194986,1,\"\u8516\"],[194987,1,\"\uD85C\uDFCA\"],[194988,1,\"\u8564\"],[194989,1,\"\uD85B\uDF2C\"],[194990,1,\"\u455D\"],[194991,1,\"\u4561\"],[194992,1,\"\uD85B\uDFB1\"],[194993,1,\"\uD85C\uDCD2\"],[194994,1,\"\u456B\"],[194995,1,\"\u8650\"],[194996,1,\"\u865C\"],[194997,1,\"\u8667\"],[194998,1,\"\u8669\"],[194999,1,\"\u86A9\"],[195000,1,\"\u8688\"],[195001,1,\"\u870E\"],[195002,1,\"\u86E2\"],[195003,1,\"\u8779\"],[195004,1,\"\u8728\"],[195005,1,\"\u876B\"],[195006,1,\"\u8786\"],[195007,1,\"\u45D7\"],[195008,1,\"\u87E1\"],[195009,1,\"\u8801\"],[195010,1,\"\u45F9\"],[195011,1,\"\u8860\"],[195012,1,\"\u8863\"],[195013,1,\"\uD85D\uDE67\"],[195014,1,\"\u88D7\"],[195015,1,\"\u88DE\"],[195016,1,\"\u4635\"],[195017,1,\"\u88FA\"],[195018,1,\"\u34BB\"],[195019,1,\"\uD85E\uDCAE\"],[195020,1,\"\uD85E\uDD66\"],[195021,1,\"\u46BE\"],[195022,1,\"\u46C7\"],[195023,1,\"\u8AA0\"],[195024,1,\"\u8AED\"],[195025,1,\"\u8B8A\"],[195026,1,\"\u8C55\"],[195027,1,\"\uD85F\uDCA8\"],[195028,1,\"\u8CAB\"],[195029,1,\"\u8CC1\"],[195030,1,\"\u8D1B\"],[195031,1,\"\u8D77\"],[195032,1,\"\uD85F\uDF2F\"],[195033,1,\"\uD842\uDC04\"],[195034,1,\"\u8DCB\"],[195035,1,\"\u8DBC\"],[195036,1,\"\u8DF0\"],[195037,1,\"\uD842\uDCDE\"],[195038,1,\"\u8ED4\"],[195039,1,\"\u8F38\"],[195040,1,\"\uD861\uDDD2\"],[195041,1,\"\uD861\uDDED\"],[195042,1,\"\u9094\"],[195043,1,\"\u90F1\"],[195044,1,\"\u9111\"],[195045,1,\"\uD861\uDF2E\"],[195046,1,\"\u911B\"],[195047,1,\"\u9238\"],[195048,1,\"\u92D7\"],[195049,1,\"\u92D8\"],[195050,1,\"\u927C\"],[195051,1,\"\u93F9\"],[195052,1,\"\u9415\"],[195053,1,\"\uD862\uDFFA\"],[195054,1,\"\u958B\"],[195055,1,\"\u4995\"],[195056,1,\"\u95B7\"],[195057,1,\"\uD863\uDD77\"],[195058,1,\"\u49E6\"],[195059,1,\"\u96C3\"],[195060,1,\"\u5DB2\"],[195061,1,\"\u9723\"],[195062,1,\"\uD864\uDD45\"],[195063,1,\"\uD864\uDE1A\"],[195064,1,\"\u4A6E\"],[195065,1,\"\u4A76\"],[195066,1,\"\u97E0\"],[195067,1,\"\uD865\uDC0A\"],[195068,1,\"\u4AB2\"],[195069,1,\"\uD865\uDC96\"],[[195070,195071],1,\"\u980B\"],[195072,1,\"\u9829\"],[195073,1,\"\uD865\uDDB6\"],[195074,1,\"\u98E2\"],[195075,1,\"\u4B33\"],[195076,1,\"\u9929\"],[195077,1,\"\u99A7\"],[195078,1,\"\u99C2\"],[195079,1,\"\u99FE\"],[195080,1,\"\u4BCE\"],[195081,1,\"\uD866\uDF30\"],[195082,1,\"\u9B12\"],[195083,1,\"\u9C40\"],[195084,1,\"\u9CFD\"],[195085,1,\"\u4CCE\"],[195086,1,\"\u4CED\"],[195087,1,\"\u9D67\"],[195088,1,\"\uD868\uDCCE\"],[195089,1,\"\u4CF8\"],[195090,1,\"\uD868\uDD05\"],[195091,1,\"\uD868\uDE0E\"],[195092,1,\"\uD868\uDE91\"],[195093,1,\"\u9EBB\"],[195094,1,\"\u4D56\"],[195095,1,\"\u9EF9\"],[195096,1,\"\u9EFE\"],[195097,1,\"\u9F05\"],[195098,1,\"\u9F0F\"],[195099,1,\"\u9F16\"],[195100,1,\"\u9F3B\"],[195101,1,\"\uD869\uDE00\"],[[195102,196605],3],[[196606,196607],3],[[196608,201546],2],[[201547,201551],3],[[201552,205743],2],[[205744,262141],3],[[262142,262143],3],[[262144,327677],3],[[327678,327679],3],[[327680,393213],3],[[393214,393215],3],[[393216,458749],3],[[458750,458751],3],[[458752,524285],3],[[524286,524287],3],[[524288,589821],3],[[589822,589823],3],[[589824,655357],3],[[655358,655359],3],[[655360,720893],3],[[720894,720895],3],[[720896,786429],3],[[786430,786431],3],[[786432,851965],3],[[851966,851967],3],[[851968,917501],3],[[917502,917503],3],[917504,3],[917505,3],[[917506,917535],3],[[917536,917631],3],[[917632,917759],3],[[917760,917999],7],[[918000,983037],3],[[983038,983039],3],[[983040,1048573],3],[[1048574,1048575],3],[[1048576,1114109],3],[[1114110,1114111],3]]", "\"use strict\";\n\nmodule.exports.STATUS_MAPPING = {\n  mapped: 1,\n  valid: 2,\n  disallowed: 3,\n  deviation: 6,\n  ignored: 7\n};\n", "\"use strict\";\n\nconst punycode = require(\"punycode/\");\nconst regexes = require(\"./lib/regexes.js\");\nconst mappingTable = require(\"./lib/mappingTable.json\");\nconst { STATUS_MAPPING } = require(\"./lib/statusMapping.js\");\n\nfunction containsNonASCII(str) {\n  return /[^\\x00-\\x7F]/u.test(str);\n}\n\nfunction findStatus(val) {\n  let start = 0;\n  let end = mappingTable.length - 1;\n\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n\n    const target = mappingTable[mid];\n    const min = Array.isArray(target[0]) ? target[0][0] : target[0];\n    const max = Array.isArray(target[0]) ? target[0][1] : target[0];\n\n    if (min <= val && max >= val) {\n      return target.slice(1);\n    } else if (min > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nfunction mapChars(domainName, { transitionalProcessing }) {\n  let processed = \"\";\n\n  for (const ch of domainName) {\n    const [status, mapping] = findStatus(ch.codePointAt(0));\n\n    switch (status) {\n      case STATUS_MAPPING.disallowed:\n        processed += ch;\n        break;\n      case STATUS_MAPPING.ignored:\n        break;\n      case STATUS_MAPPING.mapped:\n        if (transitionalProcessing && ch === \"\u1E9E\") {\n          processed += \"ss\";\n        } else {\n          processed += mapping;\n        }\n        break;\n      case STATUS_MAPPING.deviation:\n        if (transitionalProcessing) {\n          processed += mapping;\n        } else {\n          processed += ch;\n        }\n        break;\n      case STATUS_MAPPING.valid:\n        processed += ch;\n        break;\n    }\n  }\n\n  return processed;\n}\n\nfunction validateLabel(label, {\n  checkHyphens,\n  checkBidi,\n  checkJoiners,\n  transitionalProcessing,\n  useSTD3ASCIIRules,\n  isBidi\n}) {\n  // \"must be satisfied for a non-empty label\"\n  if (label.length === 0) {\n    return true;\n  }\n\n  // \"1. The label must be in Unicode Normalization Form NFC.\"\n  if (label.normalize(\"NFC\") !== label) {\n    return false;\n  }\n\n  const codePoints = Array.from(label);\n\n  // \"2. If CheckHyphens, the label must not contain a U+002D HYPHEN-MINUS character in both the\n  // third and fourth positions.\"\n  //\n  // \"3. If CheckHyphens, the label must neither begin nor end with a U+002D HYPHEN-MINUS character.\"\n  if (checkHyphens) {\n    if ((codePoints[2] === \"-\" && codePoints[3] === \"-\") ||\n        (label.startsWith(\"-\") || label.endsWith(\"-\"))) {\n      return false;\n    }\n  }\n\n  // \"4. If not CheckHyphens, the label must not begin with \u201Cxn--\u201D.\"\n  if (!checkHyphens) {\n    if (label.startsWith(\"xn--\")) {\n      return false;\n    }\n  }\n\n  // \"5. The label must not contain a U+002E ( . ) FULL STOP.\"\n  if (label.includes(\".\")) {\n    return false;\n  }\n\n  // \"6. The label must not begin with a combining mark, that is: General_Category=Mark.\"\n  if (regexes.combiningMarks.test(codePoints[0])) {\n    return false;\n  }\n\n  // \"7. Each code point in the label must only have certain Status values according to Section 5\"\n  for (const ch of codePoints) {\n    const codePoint = ch.codePointAt(0);\n    const [status] = findStatus(codePoint);\n    if (transitionalProcessing) {\n      // \"For Transitional Processing (deprecated), each value must be valid.\"\n      if (status !== STATUS_MAPPING.valid) {\n        return false;\n      }\n    } else if (status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation) {\n      // \"For Nontransitional Processing, each value must be either valid or deviation.\"\n      return false;\n    }\n    // \"In addition, if UseSTD3ASCIIRules=true and the code point is an ASCII code point (U+0000..U+007F), then it must\n    // be a lowercase letter (a-z), a digit (0-9), or a hyphen-minus (U+002D). (Note: This excludes uppercase ASCII\n    // A-Z which are mapped in UTS #46 and disallowed in IDNA2008.)\"\n    if (useSTD3ASCIIRules && codePoint <= 0x7F) {\n      if (!/^(?:[a-z]|[0-9]|-)$/u.test(ch)) {\n        return false;\n      }\n    }\n  }\n\n  // \"8. If CheckJoiners, the label must satisify the ContextJ rules\"\n  // https://tools.ietf.org/html/rfc5892#appendix-A\n  if (checkJoiners) {\n    let last = 0;\n    for (const [i, ch] of codePoints.entries()) {\n      if (ch === \"\\u200C\" || ch === \"\\u200D\") {\n        if (i > 0) {\n          if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\n            continue;\n          }\n          if (ch === \"\\u200C\") {\n            // TODO: make this more efficient\n            const next = codePoints.indexOf(\"\\u200C\", i + 1);\n            const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\n            if (regexes.validZWNJ.test(test.join(\"\"))) {\n              last = i + 1;\n              continue;\n            }\n          }\n        }\n        return false;\n      }\n    }\n  }\n\n  // \"9. If CheckBidi, and if the domain name is a Bidi domain name, then the label must satisfy...\"\n  // https://tools.ietf.org/html/rfc5893#section-2\n  if (checkBidi && isBidi) {\n    let rtl;\n\n    // 1\n    if (regexes.bidiS1LTR.test(codePoints[0])) {\n      rtl = false;\n    } else if (regexes.bidiS1RTL.test(codePoints[0])) {\n      rtl = true;\n    } else {\n      return false;\n    }\n\n    if (rtl) {\n      // 2-4\n      if (!regexes.bidiS2.test(label) ||\n          !regexes.bidiS3.test(label) ||\n          (regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label))) {\n        return false;\n      }\n    } else if (!regexes.bidiS5.test(label) ||\n               !regexes.bidiS6.test(label)) { // 5-6\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isBidiDomain(labels) {\n  const domain = labels.map(label => {\n    if (label.startsWith(\"xn--\")) {\n      try {\n        return punycode.decode(label.substring(4));\n      } catch {\n        return \"\";\n      }\n    }\n    return label;\n  }).join(\".\");\n  return regexes.bidiDomain.test(domain);\n}\n\nfunction processing(domainName, options) {\n  // 1. Map.\n  let string = mapChars(domainName, options);\n\n  // 2. Normalize.\n  string = string.normalize(\"NFC\");\n\n  // 3. Break.\n  const labels = string.split(\".\");\n  const isBidi = isBidiDomain(labels);\n\n  // 4. Convert/Validate.\n  let error = false;\n  for (const [i, origLabel] of labels.entries()) {\n    let label = origLabel;\n    let transitionalProcessingForThisLabel = options.transitionalProcessing;\n    if (label.startsWith(\"xn--\")) {\n      if (containsNonASCII(label)) {\n        error = true;\n        continue;\n      }\n\n      try {\n        label = punycode.decode(label.substring(4));\n      } catch {\n        if (!options.ignoreInvalidPunycode) {\n          error = true;\n          continue;\n        }\n      }\n      labels[i] = label;\n\n      if (label === \"\" || !containsNonASCII(label)) {\n        error = true;\n      }\n\n      transitionalProcessingForThisLabel = false;\n    }\n\n    // No need to validate if we already know there is an error.\n    if (error) {\n      continue;\n    }\n    const validation = validateLabel(label, {\n      ...options,\n      transitionalProcessing: transitionalProcessingForThisLabel,\n      isBidi\n    });\n    if (!validation) {\n      error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error\n  };\n}\n\nfunction toASCII(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  verifyDNSLength = false,\n  transitionalProcessing = false,\n  ignoreInvalidPunycode = false\n} = {}) {\n  const result = processing(domainName, {\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules,\n    transitionalProcessing,\n    ignoreInvalidPunycode\n  });\n  let labels = result.string.split(\".\");\n  labels = labels.map(l => {\n    if (containsNonASCII(l)) {\n      try {\n        return `xn--${punycode.encode(l)}`;\n      } catch {\n        result.error = true;\n      }\n    }\n    return l;\n  });\n\n  if (verifyDNSLength) {\n    const total = labels.join(\".\").length;\n    if (total > 253 || total === 0) {\n      result.error = true;\n    }\n\n    for (let i = 0; i < labels.length; ++i) {\n      if (labels[i].length > 63 || labels[i].length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) {\n    return null;\n  }\n  return labels.join(\".\");\n}\n\nfunction toUnicode(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  transitionalProcessing = false,\n  ignoreInvalidPunycode = false\n} = {}) {\n  const result = processing(domainName, {\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules,\n    transitionalProcessing,\n    ignoreInvalidPunycode\n  });\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n}\n\nmodule.exports = {\n  toASCII,\n  toUnicode\n};\n", "\"use strict\";\n\n// Note that we take code points as JS numbers, not JS strings.\n\nfunction isASCIIDigit(c) {\n  return c >= 0x30 && c <= 0x39;\n}\n\nfunction isASCIIAlpha(c) {\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\n}\n\nfunction isASCIIAlphanumeric(c) {\n  return isASCIIAlpha(c) || isASCIIDigit(c);\n}\n\nfunction isASCIIHex(c) {\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\n}\n\nmodule.exports = {\n  isASCIIDigit,\n  isASCIIAlpha,\n  isASCIIAlphanumeric,\n  isASCIIHex\n};\n", "\"use strict\";\nconst utf8Encoder = new TextEncoder();\nconst utf8Decoder = new TextDecoder(\"utf-8\", { ignoreBOM: true });\n\nfunction utf8Encode(string) {\n  return utf8Encoder.encode(string);\n}\n\nfunction utf8DecodeWithoutBOM(bytes) {\n  return utf8Decoder.decode(bytes);\n}\n\nmodule.exports = {\n  utf8Encode,\n  utf8DecodeWithoutBOM\n};\n", "\"use strict\";\nconst { isASCIIHex } = require(\"./infra\");\nconst { utf8Encode } = require(\"./encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#percent-encode\nfunction percentEncode(c) {\n  let hex = c.toString(16).toUpperCase();\n  if (hex.length === 1) {\n    hex = `0${hex}`;\n  }\n\n  return `%${hex}`;\n}\n\n// https://url.spec.whatwg.org/#percent-decode\nfunction percentDecodeBytes(input) {\n  const output = new Uint8Array(input.byteLength);\n  let outputIndex = 0;\n  for (let i = 0; i < input.byteLength; ++i) {\n    const byte = input[i];\n    if (byte !== 0x25) {\n      output[outputIndex++] = byte;\n    } else if (byte === 0x25 && (!isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2]))) {\n      output[outputIndex++] = byte;\n    } else {\n      const bytePoint = parseInt(String.fromCodePoint(input[i + 1], input[i + 2]), 16);\n      output[outputIndex++] = bytePoint;\n      i += 2;\n    }\n  }\n\n  return output.slice(0, outputIndex);\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\nfunction percentDecodeString(input) {\n  const bytes = utf8Encode(input);\n  return percentDecodeBytes(bytes);\n}\n\n// https://url.spec.whatwg.org/#c0-control-percent-encode-set\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\n// https://url.spec.whatwg.org/#fragment-percent-encode-set\nconst extraFragmentPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"<\"), p(\">\"), p(\"`\")]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#query-percent-encode-set\nconst extraQueryPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"#\"), p(\"<\"), p(\">\")]);\nfunction isQueryPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraQueryPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#special-query-percent-encode-set\nfunction isSpecialQueryPercentEncode(c) {\n  return isQueryPercentEncode(c) || c === p(\"'\");\n}\n\n// https://url.spec.whatwg.org/#path-percent-encode-set\nconst extraPathPercentEncodeSet = new Set([p(\"?\"), p(\"`\"), p(\"{\"), p(\"}\"), p(\"^\")]);\nfunction isPathPercentEncode(c) {\n  return isQueryPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#userinfo-percent-encode-set\nconst extraUserinfoPercentEncodeSet =\n  new Set([p(\"/\"), p(\":\"), p(\";\"), p(\"=\"), p(\"@\"), p(\"[\"), p(\"\\\\\"), p(\"]\"), p(\"|\")]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#component-percent-encode-set\nconst extraComponentPercentEncodeSet = new Set([p(\"$\"), p(\"%\"), p(\"&\"), p(\"+\"), p(\",\")]);\nfunction isComponentPercentEncode(c) {\n  return isUserinfoPercentEncode(c) || extraComponentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#application-x-www-form-urlencoded-percent-encode-set\nconst extraURLEncodedPercentEncodeSet = new Set([p(\"!\"), p(\"'\"), p(\"(\"), p(\")\"), p(\"~\")]);\nfunction isURLEncodedPercentEncode(c) {\n  return isComponentPercentEncode(c) || extraURLEncodedPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#code-point-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#utf-8-percent-encode\n// Assuming encoding is always utf-8 allows us to trim one of the logic branches. TODO: support encoding.\n// The \"-Internal\" variant here has code points as JS strings. The external version used by other files has code points\n// as JS numbers, like the rest of the codebase.\nfunction utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate) {\n  const bytes = utf8Encode(codePoint);\n  let output = \"\";\n  for (const byte of bytes) {\n    // Our percentEncodePredicate operates on bytes, not code points, so this is slightly different from the spec.\n    if (!percentEncodePredicate(byte)) {\n      output += String.fromCharCode(byte);\n    } else {\n      output += percentEncode(byte);\n    }\n  }\n\n  return output;\n}\n\nfunction utf8PercentEncodeCodePoint(codePoint, percentEncodePredicate) {\n  return utf8PercentEncodeCodePointInternal(String.fromCodePoint(codePoint), percentEncodePredicate);\n}\n\n// https://url.spec.whatwg.org/#string-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#string-utf-8-percent-encode\nfunction utf8PercentEncodeString(input, percentEncodePredicate, spaceAsPlus = false) {\n  let output = \"\";\n  for (const codePoint of input) {\n    if (spaceAsPlus && codePoint === \" \") {\n      output += \"+\";\n    } else {\n      output += utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate);\n    }\n  }\n  return output;\n}\n\nmodule.exports = {\n  isC0ControlPercentEncode,\n  isFragmentPercentEncode,\n  isQueryPercentEncode,\n  isSpecialQueryPercentEncode,\n  isPathPercentEncode,\n  isUserinfoPercentEncode,\n  isURLEncodedPercentEncode,\n  percentDecodeString,\n  percentDecodeBytes,\n  utf8PercentEncodeString,\n  utf8PercentEncodeCodePoint\n};\n", "\"use strict\";\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeString, utf8PercentEncodeCodePoint, utf8PercentEncodeString, isC0ControlPercentEncode,\n  isFragmentPercentEncode, isQueryPercentEncode, isSpecialQueryPercentEncode, isPathPercentEncode,\n  isUserinfoPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return [...str].length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === p(\":\") || cp2 === p(\"|\"));\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction containsForbiddenDomainCodePoint(string) {\n  return containsForbiddenHostCodePoint(string) || string.search(/[\\u0000-\\u001F]|%|\\u007F/u) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction parseIPv4Number(input) {\n  if (input === \"\") {\n    return failure;\n  }\n\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/u;\n  if (R === 10) {\n    regex = /[^0-9]/u;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/u;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return failure;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return failure;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * 256 ** (3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = `.${output}`;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = Array.from(input, c => c.codePointAt(0));\n\n  if (input[pointer] === p(\":\")) {\n    if (input[pointer + 1] !== p(\":\")) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === p(\":\")) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === p(\".\")) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === p(\".\") && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === p(\":\")) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const compress = findTheIPv6AddressCompressedPieceIndex(address);\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isOpaque = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isOpaque) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (endsInANumber(asciiDomain)) {\n    return parseIPv4(asciiDomain);\n  }\n\n  return asciiDomain;\n}\n\nfunction endsInANumber(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length === 1) {\n      return false;\n    }\n    parts.pop();\n  }\n\n  const last = parts[parts.length - 1];\n  if (parseIPv4Number(last) !== failure) {\n    return true;\n  }\n\n  if (/^[0-9]+$/u.test(last)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePoint(input)) {\n    return failure;\n  }\n\n  return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n}\n\nfunction findTheIPv6AddressCompressedPieceIndex(address) {\n  let longestIndex = null;\n  let longestSize = 1; // only find elements > 1\n  let foundIndex = null;\n  let foundSize = 0;\n\n  for (let pieceIndex = 0; pieceIndex < address.length; ++pieceIndex) {\n    if (address[pieceIndex] !== 0) {\n      if (foundSize > longestSize) {\n        longestIndex = foundIndex;\n        longestSize = foundSize;\n      }\n\n      foundIndex = null;\n      foundSize = 0;\n    } else {\n      if (foundIndex === null) {\n        foundIndex = pieceIndex;\n      }\n      ++foundSize;\n    }\n  }\n\n  if (foundSize > longestSize) {\n    return foundIndex;\n  }\n\n  return longestIndex;\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return `[${serializeIPv6(host)}]`;\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkHyphens: beStrict,\n    checkBidi: true,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    transitionalProcessing: false,\n    verifyDNSLength: beStrict,\n    ignoreInvalidPunycode: false\n  });\n  if (result === null) {\n    return failure;\n  }\n\n  if (!beStrict) {\n    if (result === \"\") {\n      return failure;\n    }\n    if (containsForbiddenDomainCodePoint(result)) {\n      return failure;\n    }\n  }\n  return result;\n}\n\nfunction trimControlChars(string) {\n  // Avoid using regexp because of this V8 bug: https://issues.chromium.org/issues/42204424\n\n  let start = 0;\n  let end = string.length;\n  for (; start < end; ++start) {\n    if (string.charCodeAt(start) > 0x20) {\n      break;\n    }\n  }\n  for (; end > start; --end) {\n    if (string.charCodeAt(end - 1) > 0x20) {\n      break;\n    }\n  }\n  return string.substring(start, end);\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/ug, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.scheme === \"file\";\n}\n\nfunction hasAnOpaquePath(url) {\n  return typeof url.path === \"string\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/u.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = Array.from(this.input, c => c.codePointAt(0));\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[`parse ${this.state}`](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === p(\"+\") || c === p(\"-\") || c === p(\".\")) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === p(\":\")) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && this.url.host === \"\") {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== p(\"/\") || this.input[this.pointer + 2] !== p(\"/\")) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === p(\"/\")) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.path = \"\";\n      this.state = \"opaque path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (hasAnOpaquePath(this.base) && c !== p(\"#\"))) {\n    return failure;\n  } else if (hasAnOpaquePath(this.base) && c === p(\"#\")) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path;\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (c === p(\"/\")) {\n    this.state = \"relative slash\";\n  } else if (isSpecial(this.url) && c === p(\"\\\\\")) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      this.url.path.pop();\n      this.state = \"path\";\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === p(\"/\") || c === p(\"\\\\\"))) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === p(\"@\")) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = `%40${this.buffer}`;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === p(\":\") && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === p(\":\") && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === p(\"[\")) {\n      this.arrFlag = true;\n    } else if (c === p(\"]\")) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\")) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > 2 ** 16 - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([p(\"/\"), p(\"\\\\\"), p(\"?\"), p(\"#\")]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  this.url.host = \"\";\n\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    this.url.host = this.base.host;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n        this.url.path = [];\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer) &&\n          isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      }\n      this.url.host = this.base.host;\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === p(\"/\") || c === p(\"\\\\\") || c === p(\"?\") || c === p(\"#\")) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== p(\"/\")) {\n      --this.pointer;\n    }\n  } else if (this.stateOverride && this.url.host === null) {\n    this.url.path.push(\"\");\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === p(\"/\") || (isSpecial(this.url) && c === p(\"\\\\\")) ||\n      (!this.stateOverride && (c === p(\"?\") || c === p(\"#\")))) {\n    if (isSpecial(this.url) && c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== p(\"/\") && !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== p(\"/\") &&\n               !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        this.buffer = `${this.buffer[0]}:`;\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse opaque path\"] = function parseOpaquePath(c) {\n  if (c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c === p(\" \")) {\n    const remaining = this.input[this.pointer + 1];\n    if (remaining === p(\"?\") || remaining === p(\"#\")) {\n      this.url.path += \"%20\";\n    } else {\n      this.url.path += \" \";\n    }\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== p(\"%\")) {\n      this.parseError = true;\n    }\n\n    if (c === p(\"%\") &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n    this.encodingOverride = \"utf-8\";\n  }\n\n  if ((!this.stateOverride && c === p(\"#\")) || isNaN(c)) {\n    const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n    this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n\n    this.buffer = \"\";\n\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = `${url.scheme}:`;\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += `:${url.password}`;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += `:${url.port}`;\n    }\n  }\n\n  if (url.host === null && !hasAnOpaquePath(url) && url.path.length > 1 && url.path[0] === \"\") {\n    output += \"/.\";\n  }\n  output += serializePath(url);\n\n  if (url.query !== null) {\n    output += `?${url.query}`;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += `#${url.fragment}`;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = `${tuple.scheme}://`;\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += `:${tuple.port}`;\n  }\n\n  return result;\n}\n\nfunction serializePath(url) {\n  if (hasAnOpaquePath(url)) {\n    return url.path;\n  }\n\n  let output = \"\";\n  for (const segment of url.path) {\n    output += `/${segment}`;\n  }\n  return output;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializePath = serializePath;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\": {\n      const pathURL = module.exports.parseURL(serializePath(url));\n      if (pathURL === null) {\n        return \"null\";\n      }\n      if (pathURL.scheme !== \"http\" && pathURL.scheme !== \"https\") {\n        return \"null\";\n      }\n      return module.exports.serializeURLOrigin(pathURL);\n    }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.hasAnOpaquePath = hasAnOpaquePath;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n", "\"use strict\";\nconst { utf8Encode, utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeBytes, utf8PercentEncodeString, isURLEncodedPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseUrlencoded(input) {\n  const sequences = strictlySplitByteSequence(input, p(\"&\"));\n  const output = [];\n  for (const bytes of sequences) {\n    if (bytes.length === 0) {\n      continue;\n    }\n\n    let name, value;\n    const indexOfEqual = bytes.indexOf(p(\"=\"));\n\n    if (indexOfEqual >= 0) {\n      name = bytes.slice(0, indexOfEqual);\n      value = bytes.slice(indexOfEqual + 1);\n    } else {\n      name = bytes;\n      value = new Uint8Array(0);\n    }\n\n    name = replaceByteInByteSequence(name, 0x2B, 0x20);\n    value = replaceByteInByteSequence(value, 0x2B, 0x20);\n\n    const nameString = utf8DecodeWithoutBOM(percentDecodeBytes(name));\n    const valueString = utf8DecodeWithoutBOM(percentDecodeBytes(value));\n\n    output.push([nameString, valueString]);\n  }\n  return output;\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-string-parser\nfunction parseUrlencodedString(input) {\n  return parseUrlencoded(utf8Encode(input));\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeUrlencoded(tuples) {\n  // TODO: accept and use encoding argument\n\n  let output = \"\";\n  for (const [i, tuple] of tuples.entries()) {\n    const name = utf8PercentEncodeString(tuple[0], isURLEncodedPercentEncode, true);\n    const value = utf8PercentEncodeString(tuple[1], isURLEncodedPercentEncode, true);\n\n    if (i !== 0) {\n      output += \"&\";\n    }\n    output += `${name}=${value}`;\n  }\n  return output;\n}\n\nfunction strictlySplitByteSequence(buf, cp) {\n  const list = [];\n  let last = 0;\n  let i = buf.indexOf(cp);\n  while (i >= 0) {\n    list.push(buf.slice(last, i));\n    last = i + 1;\n    i = buf.indexOf(cp, last);\n  }\n  if (last !== buf.length) {\n    list.push(buf.slice(last));\n  }\n  return list;\n}\n\nfunction replaceByteInByteSequence(buf, from, to) {\n  let i = buf.indexOf(from);\n  while (i >= 0) {\n    buf[i] = to;\n    i = buf.indexOf(from, i + 1);\n  }\n  return buf;\n}\n\nmodule.exports = {\n  parseUrlencodedString,\n  serializeUrlencoded\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(...args) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    callResult = Reflect.apply(value, thisArg, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = (...args) => {\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    let callResult = Reflect.construct(value, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n", "\"use strict\";\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let serializedQuery = urlencoded.serializeUrlencoded(this._list);\n      if (serializedQuery === \"\") {\n        serializedQuery = null;\n      }\n\n      this._url._url.query = serializedQuery;\n    }\n  }\n\n  get size() {\n    return this._list.length;\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name, value) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name && (value === undefined || this._list[i][1] === value)) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name, value) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name && (value === undefined || tuple[1] === value)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Function = require(\"./Function.js\");\nconst newObjectInRealm = utils.newObjectInRealm;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URLSearchParams\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URLSearchParams'.`);\n};\n\nexports.createDefaultIterator = (globalObject, target, kind) => {\n  const ctorRegistry = globalObject[ctorRegistrySymbol];\n  const iteratorPrototype = ctorRegistry[\"URLSearchParams Iterator\"];\n  const iterator = Object.create(iteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URLSearchParams\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URLSearchParams {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" sequence\" + \" is not an iterable object.\"\n                );\n              } else {\n                const V = [];\n                const tmp = curArg;\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new globalObject.TypeError(\n                      \"Failed to construct 'URLSearchParams': parameter 1\" +\n                        \" sequence\" +\n                        \"'s element\" +\n                        \" is not an iterable object.\"\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"USVString\"](nextItem, {\n                        context:\n                          \"Failed to construct 'URLSearchParams': parameter 1\" +\n                          \" sequence\" +\n                          \"'s element\" +\n                          \"'s element\",\n                        globals: globalObject\n                      });\n\n                      V.push(nextItem);\n                    }\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \" is not an object.\"\n                );\n              } else {\n                const result = Object.create(null);\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n\n                    typedKey = conversions[\"USVString\"](typedKey, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s key\",\n                      globals: globalObject\n                    });\n\n                    let typedValue = curArg[key];\n\n                    typedValue = conversions[\"USVString\"](typedValue, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s value\",\n                      globals: globalObject\n                    });\n\n                    result[typedKey] = typedValue;\n                  }\n                }\n                curArg = result;\n              }\n            }\n          } else {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to construct 'URLSearchParams': parameter 1\",\n              globals: globalObject\n            });\n          }\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'append' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'append' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].append(...args));\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'delete' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'delete' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].delete(...args));\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'get' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'getAll' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'getAll' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'has' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'has' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'has' on 'URLSearchParams': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'set' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].set(...args));\n    }\n\n    sort() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'sort' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].sort());\n    }\n\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'toString' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      return esValue[implSymbol].toString();\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'keys' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'values' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'entries' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'forEach' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          \"Failed to execute 'forEach' on 'iterable': 1 argument required, but only 0 present.\"\n        );\n      }\n      callback = Function.convert(globalObject, callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n\n    get size() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get size' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      return esValue[implSymbol][\"size\"];\n    }\n  }\n  Object.defineProperties(URLSearchParams.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    sort: { enumerable: true },\n    toString: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    size: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URLSearchParams\", configurable: true },\n    [Symbol.iterator]: { value: URLSearchParams.prototype.entries, configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = URLSearchParams;\n\n  ctorRegistry[\"URLSearchParams Iterator\"] = Object.create(ctorRegistry[\"%IteratorPrototype%\"], {\n    [Symbol.toStringTag]: {\n      configurable: true,\n      value: \"URLSearchParams Iterator\"\n    }\n  });\n  utils.define(ctorRegistry[\"URLSearchParams Iterator\"], {\n    next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new globalObject.TypeError(\"next() called on a value that is not a URLSearchParams iterator object\");\n      }\n\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return newObjectInRealm(globalObject, { value: undefined, done: true });\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n    }\n  });\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URLSearchParams\n  });\n};\n\nconst Impl = require(\"./URLSearchParams-impl.js\");\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\nconst urlencoded = require(\"./urlencoded\");\nconst URLSearchParams = require(\"./URLSearchParams\");\n\nexports.implementation = class URLImpl {\n  // Unlike the spec, we duplicate some code between the constructor and canParse, because we want to give useful error\n  // messages in the constructor that distinguish between the different causes of failure.\n  constructor(globalObject, [url, base]) {\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(`Invalid base URL: ${base}`);\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n\n    const query = parsedURL.query !== null ? parsedURL.query : \"\";\n\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\n    this._query._url = this;\n  }\n\n  static parse(globalObject, input, base) {\n    try {\n      return new URLImpl(globalObject, [input, base]);\n    } catch {\n      return null;\n    }\n  }\n\n  static canParse(url, base) {\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        return false;\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      return false;\n    }\n\n    return true;\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${v}`);\n    }\n\n    this._url = parsedURL;\n\n    this._query._list.splice(0);\n    const { query } = parsedURL;\n    if (query !== null) {\n      this._query._list = urlencoded.parseUrlencodedString(query);\n    }\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return `${this._url.scheme}:`;\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(`${v}:`, { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return `${usm.serializeHost(url.host)}:${usm.serializeInteger(url.port)}`;\n  }\n\n  set host(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    return usm.serializePath(this._url);\n  }\n\n  set pathname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return `?${this._url.query}`;\n  }\n\n  set search(v) {\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      this._query._list = [];\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    this._query._list = urlencoded.parseUrlencodedString(input);\n  }\n\n  get searchParams() {\n    return this._query;\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return `#${this._url.fragment}`;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URL\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URL'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URL\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URL {\n    constructor(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to construct 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to construct 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    toJSON() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toJSON' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol].toJSON();\n    }\n\n    get href() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get href' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    set href(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set href' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'href' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"href\"] = V;\n    }\n\n    toString() {\n      const esValue = this;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    get origin() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get origin' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"origin\"];\n    }\n\n    get protocol() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"protocol\"];\n    }\n\n    set protocol(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'protocol' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"protocol\"] = V;\n    }\n\n    get username() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get username' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"username\"];\n    }\n\n    set username(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set username' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'username' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"username\"] = V;\n    }\n\n    get password() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get password' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"password\"];\n    }\n\n    set password(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set password' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'password' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"password\"] = V;\n    }\n\n    get host() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get host' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"host\"];\n    }\n\n    set host(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set host' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'host' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"host\"] = V;\n    }\n\n    get hostname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hostname\"];\n    }\n\n    set hostname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hostname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hostname\"] = V;\n    }\n\n    get port() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get port' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"port\"];\n    }\n\n    set port(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set port' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'port' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"port\"] = V;\n    }\n\n    get pathname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"pathname\"];\n    }\n\n    set pathname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'pathname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"pathname\"] = V;\n    }\n\n    get search() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get search' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"search\"];\n    }\n\n    set search(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set search' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'search' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"search\"] = V;\n    }\n\n    get searchParams() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get searchParams' called on an object that is not a valid instance of URL.\");\n      }\n\n      return utils.getSameObject(this, \"searchParams\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"searchParams\"]);\n      });\n    }\n\n    get hash() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hash\"];\n    }\n\n    set hash(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hash' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hash\"] = V;\n    }\n\n    static parse(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'parse' on 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'parse' on 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'parse' on 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(Impl.implementation.parse(globalObject, ...args));\n    }\n\n    static canParse(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'canParse' on 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'canParse' on 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'canParse' on 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return Impl.implementation.canParse(...args);\n    }\n  }\n  Object.defineProperties(URL.prototype, {\n    toJSON: { enumerable: true },\n    href: { enumerable: true },\n    toString: { enumerable: true },\n    origin: { enumerable: true },\n    protocol: { enumerable: true },\n    username: { enumerable: true },\n    password: { enumerable: true },\n    host: { enumerable: true },\n    hostname: { enumerable: true },\n    port: { enumerable: true },\n    pathname: { enumerable: true },\n    search: { enumerable: true },\n    searchParams: { enumerable: true },\n    hash: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URL\", configurable: true }\n  });\n  Object.defineProperties(URL, { parse: { enumerable: true }, canParse: { enumerable: true } });\n  ctorRegistry[interfaceName] = URL;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URL\n  });\n\n  if (globalNames.includes(\"Window\")) {\n    Object.defineProperty(globalObject, \"webkitURL\", {\n      configurable: true,\n      writable: true,\n      value: URL\n    });\n  }\n};\n\nconst Impl = require(\"./URL-impl.js\");\n", "\"use strict\";\n\nconst URL = require(\"./lib/URL\");\nconst URLSearchParams = require(\"./lib/URLSearchParams\");\n\nexports.URL = URL;\nexports.URLSearchParams = URLSearchParams;\n", "\"use strict\";\n\nconst { URL, URLSearchParams } = require(\"./webidl2js-wrapper\");\nconst urlStateMachine = require(\"./lib/url-state-machine\");\nconst percentEncoding = require(\"./lib/percent-encoding\");\n\nconst sharedGlobalObject = { Array, Object, Promise, String, TypeError };\nURL.install(sharedGlobalObject, [\"Window\"]);\nURLSearchParams.install(sharedGlobalObject, [\"Window\"]);\n\nexports.URL = sharedGlobalObject.URL;\nexports.URLSearchParams = sharedGlobalObject.URLSearchParams;\n\nexports.parseURL = urlStateMachine.parseURL;\nexports.basicURLParse = urlStateMachine.basicURLParse;\nexports.serializeURL = urlStateMachine.serializeURL;\nexports.serializePath = urlStateMachine.serializePath;\nexports.serializeHost = urlStateMachine.serializeHost;\nexports.serializeInteger = urlStateMachine.serializeInteger;\nexports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\nexports.setTheUsername = urlStateMachine.setTheUsername;\nexports.setThePassword = urlStateMachine.setThePassword;\nexports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\nexports.hasAnOpaquePath = urlStateMachine.hasAnOpaquePath;\n\nexports.percentDecodeString = percentEncoding.percentDecodeString;\nexports.percentDecodeBytes = percentEncoding.percentDecodeBytes;\n", null, null, "{\n  \"name\": \"mongodb\",\n  \"version\": \"6.15.0\",\n  \"description\": \"The official MongoDB driver for Node.js\",\n  \"main\": \"lib/index.js\",\n  \"files\": [\n    \"lib\",\n    \"src\",\n    \"etc/prepare.js\",\n    \"mongodb.d.ts\",\n    \"tsconfig.json\"\n  ],\n  \"types\": \"mongodb.d.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:mongodb/node-mongodb-native.git\"\n  },\n  \"keywords\": [\n    \"mongodb\",\n    \"driver\",\n    \"official\"\n  ],\n  \"author\": {\n    \"name\": \"The MongoDB NodeJS Team\",\n    \"email\": \"dbx-node@mongodb.com\"\n  },\n  \"dependencies\": {\n    \"@mongodb-js/saslprep\": \"^1.1.9\",\n    \"bson\": \"^6.10.3\",\n    \"mongodb-connection-string-url\": \"^3.0.0\"\n  },\n  \"peerDependencies\": {\n    \"@aws-sdk/credential-providers\": \"^3.188.0\",\n    \"@mongodb-js/zstd\": \"^1.1.0 || ^2.0.0\",\n    \"gcp-metadata\": \"^5.2.0\",\n    \"kerberos\": \"^2.0.1\",\n    \"mongodb-client-encryption\": \">=6.0.0 <7\",\n    \"snappy\": \"^7.2.2\",\n    \"socks\": \"^2.7.1\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@aws-sdk/credential-providers\": {\n      \"optional\": true\n    },\n    \"@mongodb-js/zstd\": {\n      \"optional\": true\n    },\n    \"kerberos\": {\n      \"optional\": true\n    },\n    \"snappy\": {\n      \"optional\": true\n    },\n    \"mongodb-client-encryption\": {\n      \"optional\": true\n    },\n    \"gcp-metadata\": {\n      \"optional\": true\n    },\n    \"socks\": {\n      \"optional\": true\n    }\n  },\n  \"devDependencies\": {\n    \"@aws-sdk/credential-providers\": \"^3.632.0\",\n    \"@iarna/toml\": \"^2.2.5\",\n    \"@istanbuljs/nyc-config-typescript\": \"^1.0.2\",\n    \"@microsoft/api-extractor\": \"^7.49.2\",\n    \"@microsoft/tsdoc-config\": \"^0.17.1\",\n    \"@mongodb-js/zstd\": \"^2.0.0\",\n    \"@types/chai\": \"^4.3.17\",\n    \"@types/chai-subset\": \"^1.3.5\",\n    \"@types/express\": \"^4.17.21\",\n    \"@types/kerberos\": \"^1.1.5\",\n    \"@types/mocha\": \"^10.0.9\",\n    \"@types/node\": \"^22.13.0\",\n    \"@types/saslprep\": \"^1.0.3\",\n    \"@types/semver\": \"^7.5.8\",\n    \"@types/sinon\": \"^17.0.3\",\n    \"@types/sinon-chai\": \"^3.2.12\",\n    \"@types/whatwg-url\": \"^11.0.5\",\n    \"@typescript-eslint/eslint-plugin\": \"8.4.0\",\n    \"@typescript-eslint/parser\": \"8.4.0\",\n    \"chai\": \"^4.4.1\",\n    \"chai-subset\": \"^1.6.0\",\n    \"chalk\": \"^4.1.2\",\n    \"eslint\": \"9.9.0\",\n    \"eslint-config-prettier\": \"^9.1.0\",\n    \"eslint-plugin-mocha\": \"^10.4.1\",\n    \"eslint-plugin-prettier\": \"^5.2.3\",\n    \"eslint-plugin-simple-import-sort\": \"^12.1.1\",\n    \"eslint-plugin-tsdoc\": \"^0.4.0\",\n    \"eslint-plugin-unused-imports\": \"^4.1.4\",\n    \"express\": \"^4.21.2\",\n    \"gcp-metadata\": \"^5.3.0\",\n    \"js-yaml\": \"^4.1.0\",\n    \"mocha\": \"^10.8.2\",\n    \"mocha-sinon\": \"^2.1.2\",\n    \"mongodb-client-encryption\": \"^6.3.0\",\n    \"mongodb-legacy\": \"^6.1.3\",\n    \"nyc\": \"^15.1.0\",\n    \"prettier\": \"^3.4.2\",\n    \"semver\": \"^7.7.0\",\n    \"sinon\": \"^18.0.0\",\n    \"sinon-chai\": \"^3.7.0\",\n    \"snappy\": \"^7.2.2\",\n    \"socks\": \"^2.8.1\",\n    \"source-map-support\": \"^0.5.21\",\n    \"ts-node\": \"^10.9.2\",\n    \"tsd\": \"^0.31.2\",\n    \"typescript\": \"5.5\",\n    \"typescript-cached-transpile\": \"^0.0.6\",\n    \"v8-heapsnapshot\": \"^1.3.1\",\n    \"yargs\": \"^17.7.2\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"engines\": {\n    \"node\": \">=16.20.1\"\n  },\n  \"bugs\": {\n    \"url\": \"https://jira.mongodb.org/projects/NODE/issues/\"\n  },\n  \"homepage\": \"https://github.com/mongodb/node-mongodb-native\",\n  \"scripts\": {\n    \"build:evergreen\": \"node .evergreen/generate_evergreen_tasks.js\",\n    \"build:ts\": \"node ./node_modules/typescript/bin/tsc\",\n    \"build:dts\": \"npm run build:ts && api-extractor run && node etc/clean_definition_files.cjs && ESLINT_USE_FLAT_CONFIG=false eslint --no-ignore --fix mongodb.d.ts lib/beta.d.ts\",\n    \"build:docs\": \"./etc/docs/build.ts\",\n    \"build:typedoc\": \"typedoc\",\n    \"build:nightly\": \"node ./.github/scripts/nightly.mjs\",\n    \"check:bench\": \"npm --prefix test/benchmarks/driver_bench start\",\n    \"check:coverage\": \"nyc npm run test:all\",\n    \"check:integration-coverage\": \"nyc npm run check:test\",\n    \"check:lambda\": \"mocha --config test/mocha_lambda.js test/integration/node-specific/examples/handler.test.js\",\n    \"check:lambda:aws\": \"mocha --config test/mocha_lambda.js test/integration/node-specific/examples/aws_handler.test.js\",\n    \"check:lint\": \"npm run build:dts && npm run check:dts && npm run check:eslint && npm run check:tsd\",\n    \"check:eslint\": \"npm run build:dts && ESLINT_USE_FLAT_CONFIG=false eslint -v && ESLINT_USE_FLAT_CONFIG=false eslint --max-warnings=0 --ext '.js,.ts' src test\",\n    \"check:tsd\": \"tsd --version && tsd\",\n    \"check:dependencies\": \"mocha test/action/dependency.test.ts\",\n    \"check:dts\": \"node ./node_modules/typescript/bin/tsc --noEmit mongodb.d.ts && tsd\",\n    \"check:search-indexes\": \"nyc mocha --config test/mocha_mongodb.js test/manual/search-index-management.prose.test.ts\",\n    \"check:test\": \"mocha --config test/mocha_mongodb.js test/integration\",\n    \"check:unit\": \"mocha test/unit\",\n    \"check:ts\": \"node ./node_modules/typescript/bin/tsc -v && node ./node_modules/typescript/bin/tsc --noEmit\",\n    \"check:atlas\": \"mocha --config test/manual/mocharc.js test/manual/atlas_connectivity.test.ts\",\n    \"check:resource-management\": \"mocha --config test/manual/mocharc.js test/manual/resource_management.test.ts\",\n    \"check:drivers-atlas-testing\": \"mocha --config test/mocha_mongodb.js test/atlas/drivers_atlas_testing.test.ts\",\n    \"check:adl\": \"mocha --config test/mocha_mongodb.js test/manual/atlas-data-lake-testing\",\n    \"check:aws\": \"nyc mocha --config test/mocha_mongodb.js test/integration/auth/mongodb_aws.test.ts\",\n    \"check:oidc-auth\": \"mocha --config test/mocha_mongodb.js test/integration/auth/auth.spec.test.ts\",\n    \"check:oidc-test\": \"mocha --config test/mocha_mongodb.js test/integration/auth/mongodb_oidc.prose.test.ts\",\n    \"check:oidc-azure\": \"mocha --config test/mocha_mongodb.js test/integration/auth/mongodb_oidc_azure.prose.05.test.ts\",\n    \"check:oidc-gcp\": \"mocha --config test/mocha_mongodb.js test/integration/auth/mongodb_oidc_gcp.prose.06.test.ts\",\n    \"check:oidc-k8s\": \"mocha --config test/mocha_mongodb.js test/integration/auth/mongodb_oidc_k8s.prose.07.test.ts\",\n    \"check:kerberos\": \"nyc mocha --config test/manual/mocharc.js test/manual/kerberos.test.ts\",\n    \"check:tls\": \"mocha --config test/manual/mocharc.js test/manual/tls_support.test.ts\",\n    \"check:ldap\": \"nyc mocha --config test/manual/mocharc.js test/manual/ldap.test.ts\",\n    \"check:socks5\": \"mocha --config test/manual/mocharc.js test/manual/socks5.test.ts\",\n    \"check:csfle\": \"mocha --config test/mocha_mongodb.js test/integration/client-side-encryption\",\n    \"check:snappy\": \"mocha test/unit/assorted/snappy.test.js\",\n    \"check:x509\": \"mocha test/manual/x509_auth.test.ts\",\n    \"fix:eslint\": \"npm run check:eslint -- --fix\",\n    \"prepare\": \"node etc/prepare.js\",\n    \"preview:docs\": \"ts-node etc/docs/preview.ts\",\n    \"test\": \"npm run check:lint && npm run test:all\",\n    \"test:all\": \"npm run check:unit && npm run check:test\",\n    \"update:docs\": \"npm run build:docs -- --yes\"\n  },\n  \"tsd\": {\n    \"directory\": \"test/types\",\n    \"compilerOptions\": {\n      \"strict\": true,\n      \"target\": \"esnext\",\n      \"module\": \"commonjs\",\n      \"moduleResolution\": \"node\"\n    }\n  }\n}\n", "import * as os from 'os';\nimport * as process from 'process';\n\nimport { BSON, type Document, Int32 } from '../../bson';\nimport { MongoInvalidArgumentError } from '../../error';\nimport type { MongoOptions } from '../../mongo_client';\nimport { fileIsAccessible } from '../../utils';\n\n// eslint-disable-next-line @typescript-eslint/no-require-imports\nconst NODE_DRIVER_VERSION = require('../../../package.json').version;\n\n/**\n * @public\n * @see https://github.com/mongodb/specifications/blob/master/source/mongodb-handshake/handshake.md#hello-command\n */\nexport interface ClientMetadata {\n  driver: {\n    name: string;\n    version: string;\n  };\n  os: {\n    type: string;\n    name?: NodeJS.Platform;\n    architecture?: string;\n    version?: string;\n  };\n  platform: string;\n  application?: {\n    name: string;\n  };\n  /** FaaS environment information */\n  env?: {\n    name: 'aws.lambda' | 'gcp.func' | 'azure.func' | 'vercel';\n    timeout_sec?: Int32;\n    memory_mb?: Int32;\n    region?: string;\n    url?: string;\n  };\n}\n\n/** @public */\nexport interface ClientMetadataOptions {\n  driverInfo?: {\n    name?: string;\n    version?: string;\n    platform?: string;\n  };\n  appName?: string;\n}\n\n/** @internal */\nexport class LimitedSizeDocument {\n  private document = new Map();\n  /** BSON overhead: Int32 + Null byte */\n  private documentSize = 5;\n  constructor(private maxSize: number) {}\n\n  /** Only adds key/value if the bsonByteLength is less than MAX_SIZE */\n  public ifItFitsItSits(key: string, value: Record<string, any> | string): boolean {\n    // The BSON byteLength of the new element is the same as serializing it to its own document\n    // subtracting the document size int32 and the null terminator.\n    const newElementSize = BSON.serialize(new Map().set(key, value)).byteLength - 5;\n\n    if (newElementSize + this.documentSize > this.maxSize) {\n      return false;\n    }\n\n    this.documentSize += newElementSize;\n\n    this.document.set(key, value);\n\n    return true;\n  }\n\n  toObject(): Document {\n    return BSON.deserialize(BSON.serialize(this.document), {\n      promoteLongs: false,\n      promoteBuffers: false,\n      promoteValues: false,\n      useBigInt64: false\n    });\n  }\n}\n\ntype MakeClientMetadataOptions = Pick<MongoOptions, 'appName' | 'driverInfo'>;\n/**\n * From the specs:\n * Implementors SHOULD cumulatively update fields in the following order until the document is under the size limit:\n * 1. Omit fields from `env` except `env.name`.\n * 2. Omit fields from `os` except `os.type`.\n * 3. Omit the `env` document entirely.\n * 4. Truncate `platform`. -- special we do not truncate this field\n */\nexport function makeClientMetadata(options: MakeClientMetadataOptions): ClientMetadata {\n  const metadataDocument = new LimitedSizeDocument(512);\n\n  const { appName = '' } = options;\n  // Add app name first, it must be sent\n  if (appName.length > 0) {\n    const name =\n      Buffer.byteLength(appName, 'utf8') <= 128\n        ? options.appName\n        : Buffer.from(appName, 'utf8').subarray(0, 128).toString('utf8');\n    metadataDocument.ifItFitsItSits('application', { name });\n  }\n\n  const { name = '', version = '', platform = '' } = options.driverInfo;\n\n  const driverInfo = {\n    name: name.length > 0 ? `nodejs|${name}` : 'nodejs',\n    version: version.length > 0 ? `${NODE_DRIVER_VERSION}|${version}` : NODE_DRIVER_VERSION\n  };\n\n  if (!metadataDocument.ifItFitsItSits('driver', driverInfo)) {\n    throw new MongoInvalidArgumentError(\n      'Unable to include driverInfo name and version, metadata cannot exceed 512 bytes'\n    );\n  }\n\n  let runtimeInfo = getRuntimeInfo();\n  if (platform.length > 0) {\n    runtimeInfo = `${runtimeInfo}|${platform}`;\n  }\n\n  if (!metadataDocument.ifItFitsItSits('platform', runtimeInfo)) {\n    throw new MongoInvalidArgumentError(\n      'Unable to include driverInfo platform, metadata cannot exceed 512 bytes'\n    );\n  }\n\n  // Note: order matters, os.type is last so it will be removed last if we're at maxSize\n  const osInfo = new Map()\n    .set('name', process.platform)\n    .set('architecture', process.arch)\n    .set('version', os.release())\n    .set('type', os.type());\n\n  if (!metadataDocument.ifItFitsItSits('os', osInfo)) {\n    for (const key of osInfo.keys()) {\n      osInfo.delete(key);\n      if (osInfo.size === 0) break;\n      if (metadataDocument.ifItFitsItSits('os', osInfo)) break;\n    }\n  }\n\n  const faasEnv = getFAASEnv();\n  if (faasEnv != null) {\n    if (!metadataDocument.ifItFitsItSits('env', faasEnv)) {\n      for (const key of faasEnv.keys()) {\n        faasEnv.delete(key);\n        if (faasEnv.size === 0) break;\n        if (metadataDocument.ifItFitsItSits('env', faasEnv)) break;\n      }\n    }\n  }\n  return metadataDocument.toObject() as ClientMetadata;\n}\n\nlet dockerPromise: Promise<boolean>;\n/** @internal */\nasync function getContainerMetadata() {\n  const containerMetadata: Record<string, any> = {};\n  dockerPromise ??= fileIsAccessible('/.dockerenv');\n  const isDocker = await dockerPromise;\n\n  const { KUBERNETES_SERVICE_HOST = '' } = process.env;\n  const isKubernetes = KUBERNETES_SERVICE_HOST.length > 0 ? true : false;\n\n  if (isDocker) containerMetadata.runtime = 'docker';\n  if (isKubernetes) containerMetadata.orchestrator = 'kubernetes';\n\n  return containerMetadata;\n}\n\n/**\n * @internal\n * Re-add each metadata value.\n * Attempt to add new env container metadata, but keep old data if it does not fit.\n */\nexport async function addContainerMetadata(originalMetadata: ClientMetadata) {\n  const containerMetadata = await getContainerMetadata();\n  if (Object.keys(containerMetadata).length === 0) return originalMetadata;\n\n  const extendedMetadata = new LimitedSizeDocument(512);\n\n  const extendedEnvMetadata = { ...originalMetadata?.env, container: containerMetadata };\n\n  for (const [key, val] of Object.entries(originalMetadata)) {\n    if (key !== 'env') {\n      extendedMetadata.ifItFitsItSits(key, val);\n    } else {\n      if (!extendedMetadata.ifItFitsItSits('env', extendedEnvMetadata)) {\n        // add in old data if newer / extended metadata does not fit\n        extendedMetadata.ifItFitsItSits('env', val);\n      }\n    }\n  }\n\n  if (!('env' in originalMetadata)) {\n    extendedMetadata.ifItFitsItSits('env', extendedEnvMetadata);\n  }\n\n  return extendedMetadata.toObject();\n}\n\n/**\n * Collects FaaS metadata.\n * - `name` MUST be the last key in the Map returned.\n */\nexport function getFAASEnv(): Map<string, string | Int32> | null {\n  const {\n    AWS_EXECUTION_ENV = '',\n    AWS_LAMBDA_RUNTIME_API = '',\n    FUNCTIONS_WORKER_RUNTIME = '',\n    K_SERVICE = '',\n    FUNCTION_NAME = '',\n    VERCEL = '',\n    AWS_LAMBDA_FUNCTION_MEMORY_SIZE = '',\n    AWS_REGION = '',\n    FUNCTION_MEMORY_MB = '',\n    FUNCTION_REGION = '',\n    FUNCTION_TIMEOUT_SEC = '',\n    VERCEL_REGION = ''\n  } = process.env;\n\n  const isAWSFaaS =\n    AWS_EXECUTION_ENV.startsWith('AWS_Lambda_') || AWS_LAMBDA_RUNTIME_API.length > 0;\n  const isAzureFaaS = FUNCTIONS_WORKER_RUNTIME.length > 0;\n  const isGCPFaaS = K_SERVICE.length > 0 || FUNCTION_NAME.length > 0;\n  const isVercelFaaS = VERCEL.length > 0;\n\n  // Note: order matters, name must always be the last key\n  const faasEnv = new Map();\n\n  // When isVercelFaaS is true so is isAWSFaaS; Vercel inherits the AWS env\n  if (isVercelFaaS && !(isAzureFaaS || isGCPFaaS)) {\n    if (VERCEL_REGION.length > 0) {\n      faasEnv.set('region', VERCEL_REGION);\n    }\n\n    faasEnv.set('name', 'vercel');\n    return faasEnv;\n  }\n\n  if (isAWSFaaS && !(isAzureFaaS || isGCPFaaS || isVercelFaaS)) {\n    if (AWS_REGION.length > 0) {\n      faasEnv.set('region', AWS_REGION);\n    }\n\n    if (\n      AWS_LAMBDA_FUNCTION_MEMORY_SIZE.length > 0 &&\n      Number.isInteger(+AWS_LAMBDA_FUNCTION_MEMORY_SIZE)\n    ) {\n      faasEnv.set('memory_mb', new Int32(AWS_LAMBDA_FUNCTION_MEMORY_SIZE));\n    }\n\n    faasEnv.set('name', 'aws.lambda');\n    return faasEnv;\n  }\n\n  if (isAzureFaaS && !(isGCPFaaS || isAWSFaaS || isVercelFaaS)) {\n    faasEnv.set('name', 'azure.func');\n    return faasEnv;\n  }\n\n  if (isGCPFaaS && !(isAzureFaaS || isAWSFaaS || isVercelFaaS)) {\n    if (FUNCTION_REGION.length > 0) {\n      faasEnv.set('region', FUNCTION_REGION);\n    }\n\n    if (FUNCTION_MEMORY_MB.length > 0 && Number.isInteger(+FUNCTION_MEMORY_MB)) {\n      faasEnv.set('memory_mb', new Int32(FUNCTION_MEMORY_MB));\n    }\n\n    if (FUNCTION_TIMEOUT_SEC.length > 0 && Number.isInteger(+FUNCTION_TIMEOUT_SEC)) {\n      faasEnv.set('timeout_sec', new Int32(FUNCTION_TIMEOUT_SEC));\n    }\n\n    faasEnv.set('name', 'gcp.func');\n    return faasEnv;\n  }\n\n  return null;\n}\n\n/**\n * @internal\n * This type represents the global Deno object and the minimal type contract we expect it to satisfy.\n */\ndeclare const Deno: { version?: { deno?: string } } | undefined;\n\n/**\n * @internal\n * This type represents the global Bun object and the minimal type contract we expect it to satisfy.\n */\ndeclare const Bun: { (): void; version?: string } | undefined;\n\n/**\n * @internal\n * Get current JavaScript runtime platform\n *\n * NOTE: The version information fetching is intentionally written defensively\n * to avoid having a released driver version that becomes incompatible\n * with a future change to these global objects.\n */\nfunction getRuntimeInfo(): string {\n  if ('Deno' in globalThis) {\n    const version = typeof Deno?.version?.deno === 'string' ? Deno?.version?.deno : '0.0.0-unknown';\n\n    return `Deno v${version}, ${os.endianness()}`;\n  }\n\n  if ('Bun' in globalThis) {\n    const version = typeof Bun?.version === 'string' ? Bun?.version : '0.0.0-unknown';\n\n    return `Bun v${version}, ${os.endianness()}`;\n  }\n\n  return `Node.js ${process.version}, ${os.endianness()}`;\n}\n", "import type { BSONSerializeOptions, Document, Long } from '../bson';\nimport * as BSON from '../bson';\nimport { MongoInvalidArgumentError, MongoRuntimeError } from '../error';\nimport { type ReadPreference } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport type { CommandOptions } from './connection';\nimport {\n  compress,\n  Compressor,\n  type CompressorName,\n  uncompressibleCommands\n} from './wire_protocol/compression';\nimport { OP_COMPRESSED, OP_MSG, OP_QUERY } from './wire_protocol/constants';\n\n// Incrementing request id\nlet _requestId = 0;\n\n// Query flags\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SECONDARY = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128;\n\n// Response flags\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n\nconst encodeUTF8Into = BSON.BSON.onDemand.ByteUtils.encodeUTF8Into;\n\n/** @internal */\nexport type WriteProtocolMessageType = OpQueryRequest | OpMsgRequest;\n\n/** @internal */\nexport interface OpQueryOptions extends CommandOptions {\n  socketTimeoutMS?: number;\n  session?: ClientSession;\n  numberToSkip?: number;\n  numberToReturn?: number;\n  returnFieldSelector?: Document;\n  pre32Limit?: number;\n  serializeFunctions?: boolean;\n  ignoreUndefined?: boolean;\n  maxBsonSize?: number;\n  checkKeys?: boolean;\n  secondaryOk?: boolean;\n\n  requestId?: number;\n  moreToCome?: boolean;\n  exhaustAllowed?: boolean;\n}\n\n/** @internal */\nexport class OpQueryRequest {\n  ns: string;\n  numberToSkip: number;\n  numberToReturn: number;\n  returnFieldSelector?: Document;\n  requestId: number;\n  pre32Limit?: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  maxBsonSize: number;\n  checkKeys: boolean;\n  batchSize: number;\n  tailable: boolean;\n  secondaryOk: boolean;\n  oplogReplay: boolean;\n  noCursorTimeout: boolean;\n  awaitData: boolean;\n  exhaust: boolean;\n  partial: boolean;\n  /** moreToCome is an OP_MSG only concept */\n  moreToCome = false;\n\n  constructor(\n    public databaseName: string,\n    public query: Document,\n    options: OpQueryOptions\n  ) {\n    // Basic options needed to be passed in\n    // TODO(NODE-3483): Replace with MongoCommandError\n    const ns = `${databaseName}.$cmd`;\n    if (typeof databaseName !== 'string') {\n      throw new MongoRuntimeError('Database name must be a string for a query');\n    }\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (query == null) throw new MongoRuntimeError('A query document must be specified for query');\n\n    // Validate that we are not passing 0x00 in the collection name\n    if (ns.indexOf('\\x00') !== -1) {\n      // TODO(NODE-3483): Use MongoNamespace static method\n      throw new MongoRuntimeError('Namespace cannot contain a null character');\n    }\n\n    // Basic options\n    this.ns = ns;\n\n    // Additional options\n    this.numberToSkip = options.numberToSkip || 0;\n    this.numberToReturn = options.numberToReturn || 0;\n    this.returnFieldSelector = options.returnFieldSelector || undefined;\n    this.requestId = options.requestId ?? OpQueryRequest.getRequestId();\n\n    // special case for pre-3.2 find commands, delete ASAP\n    this.pre32Limit = options.pre32Limit;\n\n    // Serialization option\n    this.serializeFunctions =\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined =\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.batchSize = this.numberToReturn;\n\n    // Flags\n    this.tailable = false;\n    this.secondaryOk = typeof options.secondaryOk === 'boolean' ? options.secondaryOk : false;\n    this.oplogReplay = false;\n    this.noCursorTimeout = false;\n    this.awaitData = false;\n    this.exhaust = false;\n    this.partial = false;\n  }\n\n  /** Assign next request Id. */\n  incRequestId(): void {\n    this.requestId = _requestId++;\n  }\n\n  /** Peek next request Id. */\n  nextRequestId(): number {\n    return _requestId + 1;\n  }\n\n  /** Increment then return next request Id. */\n  static getRequestId(): number {\n    return ++_requestId;\n  }\n\n  // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n  toBin(): Uint8Array[] {\n    const buffers = [];\n    let projection = null;\n\n    // Set up the flags\n    let flags = 0;\n    if (this.tailable) {\n      flags |= OPTS_TAILABLE_CURSOR;\n    }\n\n    if (this.secondaryOk) {\n      flags |= OPTS_SECONDARY;\n    }\n\n    if (this.oplogReplay) {\n      flags |= OPTS_OPLOG_REPLAY;\n    }\n\n    if (this.noCursorTimeout) {\n      flags |= OPTS_NO_CURSOR_TIMEOUT;\n    }\n\n    if (this.awaitData) {\n      flags |= OPTS_AWAIT_DATA;\n    }\n\n    if (this.exhaust) {\n      flags |= OPTS_EXHAUST;\n    }\n\n    if (this.partial) {\n      flags |= OPTS_PARTIAL;\n    }\n\n    // If batchSize is different to this.numberToReturn\n    if (this.batchSize !== this.numberToReturn) this.numberToReturn = this.batchSize;\n\n    // Allocate write protocol header buffer\n    const header = Buffer.alloc(\n      4 * 4 + // Header\n        4 + // Flags\n        Buffer.byteLength(this.ns) +\n        1 + // namespace\n        4 + // numberToSkip\n        4 // numberToReturn\n    );\n\n    // Add header to buffers\n    buffers.push(header);\n\n    // Serialize the query\n    const query = BSON.serialize(this.query, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n\n    // Add query document\n    buffers.push(query);\n\n    if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n      // Serialize the projection document\n      projection = BSON.serialize(this.returnFieldSelector, {\n        checkKeys: this.checkKeys,\n        serializeFunctions: this.serializeFunctions,\n        ignoreUndefined: this.ignoreUndefined\n      });\n      // Add projection document\n      buffers.push(projection);\n    }\n\n    // Total message size\n    const totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n    // Set up the index\n    let index = 4;\n\n    // Write total document length\n    header[3] = (totalLength >> 24) & 0xff;\n    header[2] = (totalLength >> 16) & 0xff;\n    header[1] = (totalLength >> 8) & 0xff;\n    header[0] = totalLength & 0xff;\n\n    // Write header information requestId\n    header[index + 3] = (this.requestId >> 24) & 0xff;\n    header[index + 2] = (this.requestId >> 16) & 0xff;\n    header[index + 1] = (this.requestId >> 8) & 0xff;\n    header[index] = this.requestId & 0xff;\n    index = index + 4;\n\n    // Write header information responseTo\n    header[index + 3] = (0 >> 24) & 0xff;\n    header[index + 2] = (0 >> 16) & 0xff;\n    header[index + 1] = (0 >> 8) & 0xff;\n    header[index] = 0 & 0xff;\n    index = index + 4;\n\n    // Write header information OP_QUERY\n    header[index + 3] = (OP_QUERY >> 24) & 0xff;\n    header[index + 2] = (OP_QUERY >> 16) & 0xff;\n    header[index + 1] = (OP_QUERY >> 8) & 0xff;\n    header[index] = OP_QUERY & 0xff;\n    index = index + 4;\n\n    // Write header information flags\n    header[index + 3] = (flags >> 24) & 0xff;\n    header[index + 2] = (flags >> 16) & 0xff;\n    header[index + 1] = (flags >> 8) & 0xff;\n    header[index] = flags & 0xff;\n    index = index + 4;\n\n    // Write collection name\n    index = index + header.write(this.ns, index, 'utf8') + 1;\n    header[index - 1] = 0;\n\n    // Write header information flags numberToSkip\n    header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n    header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n    header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n    header[index] = this.numberToSkip & 0xff;\n    index = index + 4;\n\n    // Write header information flags numberToReturn\n    header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n    header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n    header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n    header[index] = this.numberToReturn & 0xff;\n    index = index + 4;\n\n    // Return the buffers\n    return buffers;\n  }\n}\n\n/** @internal */\nexport interface MessageHeader {\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n}\n\n/** @internal */\nexport class OpReply {\n  parsed: boolean;\n  raw: Buffer;\n  data: Buffer;\n  opts: BSONSerializeOptions;\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n  responseFlags?: number;\n  cursorId?: Long;\n  startingFrom?: number;\n  numberReturned?: number;\n  cursorNotFound?: boolean;\n  queryFailure?: boolean;\n  shardConfigStale?: boolean;\n  awaitCapable?: boolean;\n  useBigInt64: boolean;\n  promoteLongs: boolean;\n  promoteValues: boolean;\n  promoteBuffers: boolean;\n  bsonRegExp?: boolean;\n  index = 0;\n  sections: Uint8Array[] = [];\n\n  /** moreToCome is an OP_MSG only concept */\n  moreToCome = false;\n\n  constructor(\n    message: Buffer,\n    msgHeader: MessageHeader,\n    msgBody: Buffer,\n    opts?: BSONSerializeOptions\n  ) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts ?? {\n      useBigInt64: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n\n    // Flag values\n    this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues =\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers =\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n  }\n\n  isParsed(): boolean {\n    return this.parsed;\n  }\n\n  parse(): Uint8Array {\n    // Don't parse again if not needed\n    if (this.parsed) return this.sections[0];\n\n    // Position within OP_REPLY at which documents start\n    // (See https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n    this.index = 20;\n\n    // Read the message body\n    this.responseFlags = this.data.readInt32LE(0);\n    this.cursorId = new BSON.Long(this.data.readInt32LE(4), this.data.readInt32LE(8));\n    this.startingFrom = this.data.readInt32LE(12);\n    this.numberReturned = this.data.readInt32LE(16);\n\n    if (this.numberReturned < 0 || this.numberReturned > 2 ** 32 - 1) {\n      throw new RangeError(\n        `OP_REPLY numberReturned is an invalid array length ${this.numberReturned}`\n      );\n    }\n\n    this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n    this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n    this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n    this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n\n    // Parse Body\n    for (let i = 0; i < this.numberReturned; i++) {\n      const bsonSize =\n        this.data[this.index] |\n        (this.data[this.index + 1] << 8) |\n        (this.data[this.index + 2] << 16) |\n        (this.data[this.index + 3] << 24);\n\n      const section = this.data.subarray(this.index, this.index + bsonSize);\n      this.sections.push(section);\n\n      // Adjust the index\n      this.index = this.index + bsonSize;\n    }\n\n    // Set parsed\n    this.parsed = true;\n\n    return this.sections[0];\n  }\n}\n\n// Msg Flags\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n\n/** @internal */\nexport interface OpMsgOptions {\n  socketTimeoutMS?: number;\n  session?: ClientSession;\n  numberToSkip?: number;\n  numberToReturn?: number;\n  returnFieldSelector?: Document;\n  pre32Limit?: number;\n  serializeFunctions?: boolean;\n  ignoreUndefined?: boolean;\n  maxBsonSize?: number;\n  checkKeys?: boolean;\n  secondaryOk?: boolean;\n\n  requestId?: number;\n  moreToCome?: boolean;\n  exhaustAllowed?: boolean;\n  readPreference: ReadPreference;\n}\n\n/** @internal */\nexport class DocumentSequence {\n  field: string;\n  documents: Document[];\n  serializedDocumentsLength: number;\n  private chunks: Uint8Array[];\n  private header: Buffer;\n\n  /**\n   * Create a new document sequence for the provided field.\n   * @param field - The field it will replace.\n   */\n  constructor(field: string, documents?: Document[]) {\n    this.field = field;\n    this.documents = [];\n    this.chunks = [];\n    this.serializedDocumentsLength = 0;\n    // Document sequences starts with type 1 at the first byte.\n    // Field strings must always be UTF-8.\n    const buffer = Buffer.allocUnsafe(1 + 4 + this.field.length + 1);\n    buffer[0] = 1;\n    // Third part is the field name at offset 5 with trailing null byte.\n    encodeUTF8Into(buffer, `${this.field}\\0`, 5);\n    this.chunks.push(buffer);\n    this.header = buffer;\n    if (documents) {\n      for (const doc of documents) {\n        this.push(doc, BSON.serialize(doc));\n      }\n    }\n  }\n\n  /**\n   * Push a document to the document sequence. Will serialize the document\n   * as well and return the current serialized length of all documents.\n   * @param document - The document to add.\n   * @param buffer - The serialized document in raw BSON.\n   * @returns The new total document sequence length.\n   */\n  push(document: Document, buffer: Uint8Array): number {\n    this.serializedDocumentsLength += buffer.length;\n    // Push the document.\n    this.documents.push(document);\n    // Push the document raw bson.\n    this.chunks.push(buffer);\n    // Write the new length.\n    this.header?.writeInt32LE(4 + this.field.length + 1 + this.serializedDocumentsLength, 1);\n    return this.serializedDocumentsLength + this.header.length;\n  }\n\n  /**\n   * Get the fully serialized bytes for the document sequence section.\n   * @returns The section bytes.\n   */\n  toBin(): Uint8Array {\n    return Buffer.concat(this.chunks);\n  }\n}\n\n/** @internal */\nexport class OpMsgRequest {\n  requestId: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  checkKeys: boolean;\n  maxBsonSize: number;\n  checksumPresent: boolean;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n\n  constructor(\n    public databaseName: string,\n    public command: Document,\n    public options: OpQueryOptions\n  ) {\n    // Basic options needed to be passed in\n    if (command == null)\n      throw new MongoInvalidArgumentError('Query document must be specified for query');\n\n    // Basic options\n    this.command.$db = databaseName;\n\n    // Ensure empty options\n    this.options = options ?? {};\n\n    // Additional options\n    this.requestId = options.requestId ? options.requestId : OpMsgRequest.getRequestId();\n\n    // Serialization option\n    this.serializeFunctions =\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined =\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n\n    // flags\n    this.checksumPresent = false;\n    this.moreToCome = options.moreToCome ?? command.writeConcern?.w === 0;\n    this.exhaustAllowed =\n      typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n  }\n\n  toBin(): Buffer[] {\n    const buffers: Buffer[] = [];\n    let flags = 0;\n\n    if (this.checksumPresent) {\n      flags |= OPTS_CHECKSUM_PRESENT;\n    }\n\n    if (this.moreToCome) {\n      flags |= OPTS_MORE_TO_COME;\n    }\n\n    if (this.exhaustAllowed) {\n      flags |= OPTS_EXHAUST_ALLOWED;\n    }\n\n    const header = Buffer.alloc(\n      4 * 4 + // Header\n        4 // Flags\n    );\n\n    buffers.push(header);\n\n    let totalLength = header.length;\n    const command = this.command;\n    totalLength += this.makeSections(buffers, command);\n\n    header.writeInt32LE(totalLength, 0); // messageLength\n    header.writeInt32LE(this.requestId, 4); // requestID\n    header.writeInt32LE(0, 8); // responseTo\n    header.writeInt32LE(OP_MSG, 12); // opCode\n    header.writeUInt32LE(flags, 16); // flags\n    return buffers;\n  }\n\n  /**\n   * Add the sections to the OP_MSG request's buffers and returns the length.\n   */\n  makeSections(buffers: Uint8Array[], document: Document): number {\n    const sequencesBuffer = this.extractDocumentSequences(document);\n    const payloadTypeBuffer = Buffer.allocUnsafe(1);\n    payloadTypeBuffer[0] = 0;\n\n    const documentBuffer = this.serializeBson(document);\n    // First section, type 0\n    buffers.push(payloadTypeBuffer);\n    buffers.push(documentBuffer);\n    // Subsequent sections, type 1\n    buffers.push(sequencesBuffer);\n\n    return payloadTypeBuffer.length + documentBuffer.length + sequencesBuffer.length;\n  }\n\n  /**\n   * Extracts the document sequences from the command document and returns\n   * a buffer to be added as multiple sections after the initial type 0\n   * section in the message.\n   */\n  extractDocumentSequences(document: Document): Uint8Array {\n    // Pull out any field in the command document that's value is a document sequence.\n    const chunks = [];\n    for (const [key, value] of Object.entries(document)) {\n      if (value instanceof DocumentSequence) {\n        chunks.push(value.toBin());\n        // Why are we removing the field from the command? This is because it needs to be\n        // removed in the OP_MSG request first section, and DocumentSequence is not a\n        // BSON type and is specific to the MongoDB wire protocol so there's nothing\n        // our BSON serializer can do about this. Since DocumentSequence is not exposed\n        // in the public API and only used internally, we are never mutating an original\n        // command provided by the user, just our own, and it's cheaper to delete from\n        // our own command than copying it.\n        delete document[key];\n      }\n    }\n    if (chunks.length > 0) {\n      return Buffer.concat(chunks);\n    }\n    // If we have no document sequences we return an empty buffer for nothing to add\n    // to the payload.\n    return Buffer.alloc(0);\n  }\n\n  serializeBson(document: Document): Uint8Array {\n    return BSON.serialize(document, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n  }\n\n  static getRequestId(): number {\n    _requestId = (_requestId + 1) & 0x7fffffff;\n    return _requestId;\n  }\n}\n\n/** @internal */\nexport class OpMsgResponse {\n  parsed: boolean;\n  raw: Buffer;\n  data: Buffer;\n  opts: BSONSerializeOptions;\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n  responseFlags: number;\n  checksumPresent: boolean;\n  /** Indicates the server will be sending more responses on this connection */\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n  useBigInt64: boolean;\n  promoteLongs: boolean;\n  promoteValues: boolean;\n  promoteBuffers: boolean;\n  bsonRegExp: boolean;\n  index = 0;\n  sections: Uint8Array[] = [];\n\n  constructor(\n    message: Buffer,\n    msgHeader: MessageHeader,\n    msgBody: Buffer,\n    opts?: BSONSerializeOptions\n  ) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts ?? {\n      useBigInt64: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n\n    // Read response flags\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n    this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues =\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers =\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n  }\n\n  isParsed(): boolean {\n    return this.parsed;\n  }\n\n  parse(): Uint8Array {\n    // Don't parse again if not needed\n    if (this.parsed) return this.sections[0];\n\n    this.index = 4;\n\n    while (this.index < this.data.length) {\n      const payloadType = this.data.readUInt8(this.index++);\n      if (payloadType === 0) {\n        const bsonSize = this.data.readUInt32LE(this.index);\n        const bin = this.data.subarray(this.index, this.index + bsonSize);\n\n        this.sections.push(bin);\n\n        this.index += bsonSize;\n      } else if (payloadType === 1) {\n        // It was decided that no driver makes use of payload type 1\n\n        // TODO(NODE-3483): Replace with MongoDeprecationError\n        throw new MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n      }\n    }\n\n    this.parsed = true;\n\n    return this.sections[0];\n  }\n}\n\nconst MESSAGE_HEADER_SIZE = 16;\nconst COMPRESSION_DETAILS_SIZE = 9; // originalOpcode + uncompressedSize, compressorID\n\n/**\n * @internal\n *\n * An OP_COMPRESSED request wraps either an OP_QUERY or OP_MSG message.\n */\nexport class OpCompressedRequest {\n  constructor(\n    private command: WriteProtocolMessageType,\n    private options: { zlibCompressionLevel: number; agreedCompressor: CompressorName }\n  ) {}\n\n  // Return whether a command contains an uncompressible command term\n  // Will return true if command contains no uncompressible command terms\n  static canCompress(command: WriteProtocolMessageType) {\n    const commandDoc = command instanceof OpMsgRequest ? command.command : command.query;\n    const commandName = Object.keys(commandDoc)[0];\n    return !uncompressibleCommands.has(commandName);\n  }\n\n  async toBin(): Promise<Buffer[]> {\n    const concatenatedOriginalCommandBuffer = Buffer.concat(this.command.toBin());\n    // otherwise, compress the message\n    const messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n\n    // Extract information needed for OP_COMPRESSED from the uncompressed message\n    const originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n\n    // Compress the message body\n    const compressedMessage = await compress(this.options, messageToBeCompressed);\n    // Create the msgHeader of OP_COMPRESSED\n    const msgHeader = Buffer.alloc(MESSAGE_HEADER_SIZE);\n    msgHeader.writeInt32LE(\n      MESSAGE_HEADER_SIZE + COMPRESSION_DETAILS_SIZE + compressedMessage.length,\n      0\n    ); // messageLength\n    msgHeader.writeInt32LE(this.command.requestId, 4); // requestID\n    msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n    msgHeader.writeInt32LE(OP_COMPRESSED, 12); // opCode\n\n    // Create the compression details of OP_COMPRESSED\n    const compressionDetails = Buffer.alloc(COMPRESSION_DETAILS_SIZE);\n    compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n    compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n    compressionDetails.writeUInt8(Compressor[this.options.agreedCompressor], 8); // compressorID\n    return [msgHeader, compressionDetails, compressedMessage];\n  }\n}\n", "import { promisify } from 'util';\nimport * as zlib from 'zlib';\n\nimport { LEGACY_HELLO_COMMAND } from '../../constants';\nimport { getSnappy, getZstdLibrary, type SnappyLib, type ZStandard } from '../../deps';\nimport { MongoDecompressionError, MongoInvalidArgumentError } from '../../error';\nimport {\n  type MessageHeader,\n  OpCompressedRequest,\n  OpMsgResponse,\n  OpReply,\n  type WriteProtocolMessageType\n} from '../commands';\nimport { OP_COMPRESSED, OP_MSG } from './constants';\n\n/** @public */\nexport const Compressor = Object.freeze({\n  none: 0,\n  snappy: 1,\n  zlib: 2,\n  zstd: 3\n} as const);\n\n/** @public */\nexport type Compressor = (typeof Compressor)[CompressorName];\n\n/** @public */\nexport type CompressorName = keyof typeof Compressor;\n\nexport const uncompressibleCommands = new Set([\n  LEGACY_HELLO_COMMAND,\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'authenticate',\n  'createUser',\n  'updateUser',\n  'copydbSaslStart',\n  'copydbgetnonce',\n  'copydb'\n]);\n\nconst ZSTD_COMPRESSION_LEVEL = 3;\n\nconst zlibInflate = promisify(zlib.inflate.bind(zlib));\nconst zlibDeflate = promisify(zlib.deflate.bind(zlib));\n\nlet zstd: ZStandard;\nlet Snappy: SnappyLib | null = null;\nfunction loadSnappy() {\n  if (Snappy == null) {\n    const snappyImport = getSnappy();\n    if ('kModuleError' in snappyImport) {\n      throw snappyImport.kModuleError;\n    }\n    Snappy = snappyImport;\n  }\n  return Snappy;\n}\n\n// Facilitate compressing a message using an agreed compressor\nexport async function compress(\n  options: { zlibCompressionLevel: number; agreedCompressor: CompressorName },\n  dataToBeCompressed: Buffer\n): Promise<Buffer> {\n  const zlibOptions = {} as zlib.ZlibOptions;\n  switch (options.agreedCompressor) {\n    case 'snappy': {\n      Snappy ??= loadSnappy();\n      return await Snappy.compress(dataToBeCompressed);\n    }\n    case 'zstd': {\n      loadZstd();\n      if ('kModuleError' in zstd) {\n        throw zstd['kModuleError'];\n      }\n      return await zstd.compress(dataToBeCompressed, ZSTD_COMPRESSION_LEVEL);\n    }\n    case 'zlib': {\n      if (options.zlibCompressionLevel) {\n        zlibOptions.level = options.zlibCompressionLevel;\n      }\n      return await zlibDeflate(dataToBeCompressed, zlibOptions);\n    }\n    default: {\n      throw new MongoInvalidArgumentError(\n        `Unknown compressor ${options.agreedCompressor} failed to compress`\n      );\n    }\n  }\n}\n\n// Decompress a message using the given compressor\nexport async function decompress(compressorID: number, compressedData: Buffer): Promise<Buffer> {\n  if (\n    compressorID !== Compressor.snappy &&\n    compressorID !== Compressor.zstd &&\n    compressorID !== Compressor.zlib &&\n    compressorID !== Compressor.none\n  ) {\n    throw new MongoDecompressionError(\n      `Server sent message compressed using an unsupported compressor. (Received compressor ID ${compressorID})`\n    );\n  }\n\n  switch (compressorID) {\n    case Compressor.snappy: {\n      Snappy ??= loadSnappy();\n      return await Snappy.uncompress(compressedData, { asBuffer: true });\n    }\n    case Compressor.zstd: {\n      loadZstd();\n      if ('kModuleError' in zstd) {\n        throw zstd['kModuleError'];\n      }\n      return await zstd.decompress(compressedData);\n    }\n    case Compressor.zlib: {\n      return await zlibInflate(compressedData);\n    }\n    default: {\n      return compressedData;\n    }\n  }\n}\n\n/**\n * Load ZStandard if it is not already set.\n */\nfunction loadZstd() {\n  if (!zstd) {\n    zstd = getZstdLibrary();\n  }\n}\n\nconst MESSAGE_HEADER_SIZE = 16;\n\n/**\n * @internal\n *\n * Compresses an OP_MSG or OP_QUERY message, if compression is configured.  This method\n * also serializes the command to BSON.\n */\nexport async function compressCommand(\n  command: WriteProtocolMessageType,\n  description: { agreedCompressor?: CompressorName; zlibCompressionLevel?: number }\n): Promise<Buffer> {\n  const finalCommand =\n    description.agreedCompressor === 'none' || !OpCompressedRequest.canCompress(command)\n      ? command\n      : new OpCompressedRequest(command, {\n          agreedCompressor: description.agreedCompressor ?? 'none',\n          zlibCompressionLevel: description.zlibCompressionLevel ?? 0\n        });\n  const data = await finalCommand.toBin();\n  return Buffer.concat(data);\n}\n\n/**\n * @internal\n *\n * Decompresses an OP_MSG or OP_QUERY response from the server, if compression is configured.\n *\n * This method does not parse the response's BSON.\n */\nexport async function decompressResponse(message: Buffer): Promise<OpMsgResponse | OpReply> {\n  const messageHeader: MessageHeader = {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n\n  if (messageHeader.opCode !== OP_COMPRESSED) {\n    const ResponseType = messageHeader.opCode === OP_MSG ? OpMsgResponse : OpReply;\n    const messageBody = message.subarray(MESSAGE_HEADER_SIZE);\n    return new ResponseType(message, messageHeader, messageBody);\n  }\n\n  const header: MessageHeader = {\n    ...messageHeader,\n    fromCompressed: true,\n    opCode: message.readInt32LE(MESSAGE_HEADER_SIZE),\n    length: message.readInt32LE(MESSAGE_HEADER_SIZE + 4)\n  };\n  const compressorID = message[MESSAGE_HEADER_SIZE + 8];\n  const compressedBuffer = message.slice(MESSAGE_HEADER_SIZE + 9);\n\n  // recalculate based on wrapped opcode\n  const ResponseType = header.opCode === OP_MSG ? OpMsgResponse : OpReply;\n  const messageBody = await decompress(compressorID, compressedBuffer);\n  if (messageBody.length !== header.length) {\n    throw new MongoDecompressionError('Message body and message header must be the same length');\n  }\n  return new ResponseType(message, header, messageBody);\n}\n", "import * as crypto from 'crypto';\n\ntype AES256Callback = (key: Buffer, iv: Buffer, input: Buffer, output: Buffer) => number | Error;\n\nexport function makeAES256Hook(\n  method: 'createCipheriv' | 'createDecipheriv',\n  mode: 'aes-256-cbc' | 'aes-256-ctr'\n): AES256Callback {\n  return function (key: Buffer, iv: Buffer, input: Buffer, output: Buffer): number | Error {\n    let result;\n\n    try {\n      const cipher = crypto[method](mode, key, iv);\n      cipher.setAutoPadding(false);\n      result = cipher.update(input);\n      const final = cipher.final();\n      if (final.length > 0) {\n        result = Buffer.concat([result, final]);\n      }\n    } catch (e) {\n      return e;\n    }\n\n    result.copy(output);\n    return result.length;\n  };\n}\n\nexport function randomHook(buffer: Buffer, count: number): number | Error {\n  try {\n    crypto.randomFillSync(buffer, 0, count);\n  } catch (e) {\n    return e;\n  }\n  return count;\n}\n\nexport function sha256Hook(input: Buffer, output: Buffer): number | Error {\n  let result;\n  try {\n    result = crypto.createHash('sha256').update(input).digest();\n  } catch (e) {\n    return e;\n  }\n\n  result.copy(output);\n  return result.length;\n}\n\ntype HMACHook = (key: Buffer, input: Buffer, output: Buffer) => number | Error;\nexport function makeHmacHook(algorithm: 'sha512' | 'sha256'): HMACHook {\n  return (key: Buffer, input: Buffer, output: Buffer): number | Error => {\n    let result;\n    try {\n      result = crypto.createHmac(algorithm, key).update(input).digest();\n    } catch (e) {\n      return e;\n    }\n\n    result.copy(output);\n    return result.length;\n  };\n}\n\nexport function signRsaSha256Hook(key: Buffer, input: Buffer, output: Buffer): number | Error {\n  let result;\n  try {\n    const signer = crypto.createSign('sha256WithRSAEncryption');\n    const privateKey = Buffer.from(\n      `-----BEGIN PRIVATE KEY-----\\n${key.toString('base64')}\\n-----END PRIVATE KEY-----\\n`\n    );\n\n    result = signer.update(input).end().sign(privateKey);\n  } catch (e) {\n    return e;\n  }\n\n  result.copy(output);\n  return result.length;\n}\n\nexport const aes256CbcEncryptHook = makeAES256Hook('createCipheriv', 'aes-256-cbc');\nexport const aes256CbcDecryptHook = makeAES256Hook('createDecipheriv', 'aes-256-cbc');\nexport const aes256CtrEncryptHook = makeAES256Hook('createCipheriv', 'aes-256-ctr');\nexport const aes256CtrDecryptHook = makeAES256Hook('createDecipheriv', 'aes-256-ctr');\nexport const hmacSha512Hook = makeHmacHook('sha512');\nexport const hmacSha256Hook = makeHmacHook('sha256');\n", "import { type Document } from '../bson';\nimport { MongoError } from '../error';\n\n/**\n * @public\n * An error indicating that something went wrong specifically with MongoDB Client Encryption\n */\nexport class MongoCryptError extends MongoError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options: { cause?: Error } = {}) {\n    super(message, options);\n  }\n\n  override get name() {\n    return 'MongoCryptError';\n  }\n}\n\n/**\n * @public\n *\n * An error indicating an invalid argument was provided to an encryption API.\n */\nexport class MongoCryptInvalidArgumentError extends MongoCryptError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name() {\n    return 'MongoCryptInvalidArgumentError';\n  }\n}\n/**\n * @public\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create data keys\n */\nexport class MongoCryptCreateDataKeyError extends MongoCryptError {\n  encryptedFields: Document;\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(encryptedFields: Document, { cause }: { cause: Error }) {\n    super(`Unable to complete creating data keys: ${cause.message}`, { cause });\n    this.encryptedFields = encryptedFields;\n  }\n\n  override get name() {\n    return 'MongoCryptCreateDataKeyError';\n  }\n}\n\n/**\n * @public\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create a collection\n */\nexport class MongoCryptCreateEncryptedCollectionError extends MongoCryptError {\n  encryptedFields: Document;\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(encryptedFields: Document, { cause }: { cause: Error }) {\n    super(`Unable to create collection: ${cause.message}`, { cause });\n    this.encryptedFields = encryptedFields;\n  }\n\n  override get name() {\n    return 'MongoCryptCreateEncryptedCollectionError';\n  }\n}\n\n/**\n * @public\n * An error indicating that mongodb-client-encryption failed to auto-refresh Azure KMS credentials.\n */\nexport class MongoCryptAzureKMSRequestError extends MongoCryptError {\n  /** The body of the http response that failed, if present. */\n  body?: Document;\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, body?: Document) {\n    super(message);\n    this.body = body;\n  }\n\n  override get name(): string {\n    return 'MongoCryptAzureKMSRequestError';\n  }\n}\n\n/** @public */\nexport class MongoCryptKMSRequestNetworkTimeoutError extends MongoCryptError {\n  override get name(): string {\n    return 'MongoCryptKMSRequestNetworkTimeoutError';\n  }\n}\n", "import { type AWSCredentials, getAwsCredentialProvider } from '../../deps';\nimport { MongoAWSError } from '../../error';\nimport { request } from '../../utils';\n\nconst AWS_RELATIVE_URI = 'http://169.254.170.2';\nconst AWS_EC2_URI = 'http://169.254.169.254';\nconst AWS_EC2_PATH = '/latest/meta-data/iam/security-credentials';\n\n/**\n * @internal\n * This interface matches the final result of fetching temporary credentials manually, outlined\n * in the spec [here](https://github.com/mongodb/specifications/blob/master/source/auth/auth.md#ec2-endpoint).\n *\n * When we use the AWS SDK, we map the response from the SDK to conform to this interface.\n */\nexport interface AWSTempCredentials {\n  AccessKeyId?: string;\n  SecretAccessKey?: string;\n  Token?: string;\n  RoleArn?: string;\n  Expiration?: Date;\n}\n\n/** @public **/\nexport type AWSCredentialProvider = () => Promise<AWSCredentials>;\n\n/**\n * @internal\n *\n * Fetches temporary AWS credentials.\n */\nexport abstract class AWSTemporaryCredentialProvider {\n  abstract getCredentials(): Promise<AWSTempCredentials>;\n  private static _awsSDK: ReturnType<typeof getAwsCredentialProvider>;\n  protected static get awsSDK() {\n    AWSTemporaryCredentialProvider._awsSDK ??= getAwsCredentialProvider();\n    return AWSTemporaryCredentialProvider._awsSDK;\n  }\n\n  static get isAWSSDKInstalled(): boolean {\n    return !('kModuleError' in AWSTemporaryCredentialProvider.awsSDK);\n  }\n}\n\n/** @internal */\nexport class AWSSDKCredentialProvider extends AWSTemporaryCredentialProvider {\n  private _provider?: AWSCredentialProvider;\n\n  /**\n   * Create the SDK credentials provider.\n   * @param credentialsProvider - The credentials provider.\n   */\n  constructor(credentialsProvider?: AWSCredentialProvider) {\n    super();\n\n    if (credentialsProvider) {\n      this._provider = credentialsProvider;\n    }\n  }\n\n  /**\n   * The AWS SDK caches credentials automatically and handles refresh when the credentials have expired.\n   * To ensure this occurs, we need to cache the `provider` returned by the AWS sdk and re-use it when fetching credentials.\n   */\n  private get provider(): () => Promise<AWSCredentials> {\n    if ('kModuleError' in AWSTemporaryCredentialProvider.awsSDK) {\n      throw AWSTemporaryCredentialProvider.awsSDK.kModuleError;\n    }\n    if (this._provider) {\n      return this._provider;\n    }\n    let { AWS_STS_REGIONAL_ENDPOINTS = '', AWS_REGION = '' } = process.env;\n    AWS_STS_REGIONAL_ENDPOINTS = AWS_STS_REGIONAL_ENDPOINTS.toLowerCase();\n    AWS_REGION = AWS_REGION.toLowerCase();\n\n    /** The option setting should work only for users who have explicit settings in their environment, the driver should not encode \"defaults\" */\n    const awsRegionSettingsExist =\n      AWS_REGION.length !== 0 && AWS_STS_REGIONAL_ENDPOINTS.length !== 0;\n\n    /**\n     * The following regions use the global AWS STS endpoint, sts.amazonaws.com, by default\n     * https://docs.aws.amazon.com/sdkref/latest/guide/feature-sts-regionalized-endpoints.html\n     */\n    const LEGACY_REGIONS = new Set([\n      'ap-northeast-1',\n      'ap-south-1',\n      'ap-southeast-1',\n      'ap-southeast-2',\n      'aws-global',\n      'ca-central-1',\n      'eu-central-1',\n      'eu-north-1',\n      'eu-west-1',\n      'eu-west-2',\n      'eu-west-3',\n      'sa-east-1',\n      'us-east-1',\n      'us-east-2',\n      'us-west-1',\n      'us-west-2'\n    ]);\n    /**\n     * If AWS_STS_REGIONAL_ENDPOINTS is set to regional, users are opting into the new behavior of respecting the region settings\n     *\n     * If AWS_STS_REGIONAL_ENDPOINTS is set to legacy, then \"old\" regions need to keep using the global setting.\n     * Technically the SDK gets this wrong, it reaches out to 'sts.us-east-1.amazonaws.com' when it should be 'sts.amazonaws.com'.\n     * That is not our bug to fix here. We leave that up to the SDK.\n     */\n    const useRegionalSts =\n      AWS_STS_REGIONAL_ENDPOINTS === 'regional' ||\n      (AWS_STS_REGIONAL_ENDPOINTS === 'legacy' && !LEGACY_REGIONS.has(AWS_REGION));\n\n    this._provider =\n      awsRegionSettingsExist && useRegionalSts\n        ? AWSTemporaryCredentialProvider.awsSDK.fromNodeProviderChain({\n            clientConfig: { region: AWS_REGION }\n          })\n        : AWSTemporaryCredentialProvider.awsSDK.fromNodeProviderChain();\n\n    return this._provider;\n  }\n\n  override async getCredentials(): Promise<AWSTempCredentials> {\n    /*\n     * Creates a credential provider that will attempt to find credentials from the\n     * following sources (listed in order of precedence):\n     *\n     * - Environment variables exposed via process.env\n     * - SSO credentials from token cache\n     * - Web identity token credentials\n     * - Shared credentials and config ini files\n     * - The EC2/ECS Instance Metadata Service\n     */\n    try {\n      const creds = await this.provider();\n      return {\n        AccessKeyId: creds.accessKeyId,\n        SecretAccessKey: creds.secretAccessKey,\n        Token: creds.sessionToken,\n        Expiration: creds.expiration\n      };\n    } catch (error) {\n      throw new MongoAWSError(error.message, { cause: error });\n    }\n  }\n}\n\n/**\n * @internal\n * Fetches credentials manually (without the AWS SDK), as outlined in the [Obtaining Credentials](https://github.com/mongodb/specifications/blob/master/source/auth/auth.md#obtaining-credentials)\n * section of the Auth spec.\n */\nexport class LegacyAWSTemporaryCredentialProvider extends AWSTemporaryCredentialProvider {\n  override async getCredentials(): Promise<AWSTempCredentials> {\n    // If the environment variable AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\n    // is set then drivers MUST assume that it was set by an AWS ECS agent\n    if (process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI) {\n      return await request(\n        `${AWS_RELATIVE_URI}${process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}`\n      );\n    }\n\n    // Otherwise assume we are on an EC2 instance\n\n    // get a token\n    const token = await request(`${AWS_EC2_URI}/latest/api/token`, {\n      method: 'PUT',\n      json: false,\n      headers: { 'X-aws-ec2-metadata-token-ttl-seconds': 30 }\n    });\n\n    // get role name\n    const roleName = await request(`${AWS_EC2_URI}/${AWS_EC2_PATH}`, {\n      json: false,\n      headers: { 'X-aws-ec2-metadata-token': token }\n    });\n\n    // get temp credentials\n    const creds = await request(`${AWS_EC2_URI}/${AWS_EC2_PATH}/${roleName}`, {\n      headers: { 'X-aws-ec2-metadata-token': token }\n    });\n\n    return creds;\n  }\n}\n", "import {\n  type AWSCredentialProvider,\n  AWSSDKCredentialProvider\n} from '../../cmap/auth/aws_temporary_credentials';\nimport { type KMSProviders } from '.';\n\n/**\n * @internal\n */\nexport async function loadAWSCredentials(\n  kmsProviders: KMSProviders,\n  provider?: AWSCredentialProvider\n): Promise<KMSProviders> {\n  const credentialProvider = new AWSSDKCredentialProvider(provider);\n\n  // We shouldn't ever receive a response from the AWS SDK that doesn't have a `SecretAccessKey`\n  // or `AccessKeyId`.  However, TS says these fields are optional.  We provide empty strings\n  // and let libmongocrypt error if we're unable to fetch the required keys.\n  const {\n    SecretAccessKey = '',\n    AccessKeyId = '',\n    Token\n  } = await credentialProvider.getCredentials();\n  const aws: NonNullable<KMSProviders['aws']> = {\n    secretAccessKey: SecretAccessKey,\n    accessKeyId: AccessKeyId\n  };\n  // the AWS session token is only required for temporary credentials so only attach it to the\n  // result if it's present in the response from the aws sdk\n  Token != null && (aws.sessionToken = Token);\n\n  return { ...kmsProviders, aws };\n}\n", "import { type Document } from '../../bson';\nimport { MongoNetworkTimeoutError } from '../../error';\nimport { get } from '../../utils';\nimport { MongoCryptAzureKMSRequestError } from '../errors';\nimport { type KMSProviders } from './index';\n\nconst MINIMUM_TOKEN_REFRESH_IN_MILLISECONDS = 6000;\n/** Base URL for getting Azure tokens. */\nexport const AZURE_BASE_URL = 'http://169.254.169.254/metadata/identity/oauth2/token?';\n\n/**\n * The access token that libmongocrypt expects for Azure kms.\n */\ninterface AccessToken {\n  accessToken: string;\n}\n\n/**\n * The response from the azure idms endpoint, including the `expiresOnTimestamp`.\n * `expiresOnTimestamp` is needed for caching.\n */\ninterface AzureTokenCacheEntry extends AccessToken {\n  accessToken: string;\n  expiresOnTimestamp: number;\n}\n\n/**\n * @internal\n */\nexport class AzureCredentialCache {\n  cachedToken: AzureTokenCacheEntry | null = null;\n\n  async getToken(): Promise<AccessToken> {\n    if (this.cachedToken == null || this.needsRefresh(this.cachedToken)) {\n      this.cachedToken = await this._getToken();\n    }\n\n    return { accessToken: this.cachedToken.accessToken };\n  }\n\n  needsRefresh(token: AzureTokenCacheEntry): boolean {\n    const timeUntilExpirationMS = token.expiresOnTimestamp - Date.now();\n    return timeUntilExpirationMS <= MINIMUM_TOKEN_REFRESH_IN_MILLISECONDS;\n  }\n\n  /**\n   * exposed for testing\n   */\n  resetCache() {\n    this.cachedToken = null;\n  }\n\n  /**\n   * exposed for testing\n   */\n  _getToken(): Promise<AzureTokenCacheEntry> {\n    return fetchAzureKMSToken();\n  }\n}\n\n/** @internal */\nexport const tokenCache = new AzureCredentialCache();\n\n/** @internal */\nasync function parseResponse(response: {\n  body: string;\n  status?: number;\n}): Promise<AzureTokenCacheEntry> {\n  const { status, body: rawBody } = response;\n\n  const body: { expires_in?: number; access_token?: string } = (() => {\n    try {\n      return JSON.parse(rawBody);\n    } catch {\n      throw new MongoCryptAzureKMSRequestError('Malformed JSON body in GET request.');\n    }\n  })();\n\n  if (status !== 200) {\n    throw new MongoCryptAzureKMSRequestError('Unable to complete request.', body);\n  }\n\n  if (!body.access_token) {\n    throw new MongoCryptAzureKMSRequestError(\n      'Malformed response body - missing field `access_token`.'\n    );\n  }\n\n  if (!body.expires_in) {\n    throw new MongoCryptAzureKMSRequestError(\n      'Malformed response body - missing field `expires_in`.'\n    );\n  }\n\n  const expiresInMS = Number(body.expires_in) * 1000;\n  if (Number.isNaN(expiresInMS)) {\n    throw new MongoCryptAzureKMSRequestError(\n      'Malformed response body - unable to parse int from `expires_in` field.'\n    );\n  }\n\n  return {\n    accessToken: body.access_token,\n    expiresOnTimestamp: Date.now() + expiresInMS\n  };\n}\n\n/**\n * @internal\n *\n * exposed for CSFLE\n * [prose test 18](https://github.com/mongodb/specifications/tree/master/source/client-side-encryption/tests#azure-imds-credentials)\n */\nexport interface AzureKMSRequestOptions {\n  headers?: Document;\n  url?: URL | string;\n}\n\n/**\n * @internal\n * Get the Azure endpoint URL.\n */\nexport function addAzureParams(url: URL, resource: string, username?: string): URL {\n  url.searchParams.append('api-version', '2018-02-01');\n  url.searchParams.append('resource', resource);\n  if (username) {\n    url.searchParams.append('client_id', username);\n  }\n  return url;\n}\n\n/**\n * @internal\n *\n * parses any options provided by prose tests to `fetchAzureKMSToken` and merges them with\n * the default values for headers and the request url.\n */\nexport function prepareRequest(options: AzureKMSRequestOptions): {\n  headers: Document;\n  url: URL;\n} {\n  const url = new URL(options.url?.toString() ?? AZURE_BASE_URL);\n  addAzureParams(url, 'https://vault.azure.net');\n  const headers = { ...options.headers, 'Content-Type': 'application/json', Metadata: true };\n  return { headers, url };\n}\n\n/**\n * @internal\n *\n * `AzureKMSRequestOptions` allows prose tests to modify the http request sent to the idms\n * servers.  This is required to simulate different server conditions.  No options are expected to\n * be set outside of tests.\n *\n * exposed for CSFLE\n * [prose test 18](https://github.com/mongodb/specifications/tree/master/source/client-side-encryption/tests#azure-imds-credentials)\n */\nexport async function fetchAzureKMSToken(\n  options: AzureKMSRequestOptions = {}\n): Promise<AzureTokenCacheEntry> {\n  const { headers, url } = prepareRequest(options);\n  try {\n    const response = await get(url, { headers });\n    return await parseResponse(response);\n  } catch (error) {\n    if (error instanceof MongoNetworkTimeoutError) {\n      throw new MongoCryptAzureKMSRequestError(`[Azure KMS] ${error.message}`);\n    }\n    throw error;\n  }\n}\n\n/**\n * @internal\n *\n * @throws Will reject with a `MongoCryptError` if the http request fails or the http response is malformed.\n */\nexport async function loadAzureCredentials(kmsProviders: KMSProviders): Promise<KMSProviders> {\n  const azure = await tokenCache.getToken();\n  return { ...kmsProviders, azure };\n}\n", "import { getGcpMetadata } from '../../deps';\nimport { type KMSProviders } from '.';\n\n/** @internal */\nexport async function loadGCPCredentials(kmsProviders: KMSProviders): Promise<KMSProviders> {\n  const gcpMetadata = getGcpMetadata();\n\n  if ('kModuleError' in gcpMetadata) {\n    return kmsProviders;\n  }\n\n  const { access_token: accessToken } = await gcpMetadata.instance<{ access_token: string }>({\n    property: 'service-accounts/default/token'\n  });\n  return { ...kmsProviders, gcp: { accessToken } };\n}\n", "import type { Binary } from '../../bson';\nimport { type AWSCredentialProvider } from '../../cmap/auth/aws_temporary_credentials';\nimport { loadAWSCredentials } from './aws';\nimport { loadAzureCredentials } from './azure';\nimport { loadGCPCredentials } from './gcp';\n\n/**\n * @public\n *\n * A data key provider.  Allowed values:\n *\n * - aws, gcp, local, kmip or azure\n * - (`mongodb-client-encryption>=6.0.1` only) a named key, in the form of:\n *    `aws:<name>`, `gcp:<name>`, `local:<name>`, `kmip:<name>`, `azure:<name>`\n *  where `name` is an alphanumeric string, underscores allowed.\n */\nexport type ClientEncryptionDataKeyProvider = keyof KMSProviders;\n\n/** @public */\nexport interface AWSKMSProviderConfiguration {\n  /**\n   * The access key used for the AWS KMS provider\n   */\n  accessKeyId: string;\n\n  /**\n   * The secret access key used for the AWS KMS provider\n   */\n  secretAccessKey: string;\n\n  /**\n   * An optional AWS session token that will be used as the\n   * X-Amz-Security-Token header for AWS requests.\n   */\n  sessionToken?: string;\n}\n\n/** @public */\nexport interface LocalKMSProviderConfiguration {\n  /**\n   * The master key used to encrypt/decrypt data keys.\n   * A 96-byte long Buffer or base64 encoded string.\n   */\n  key: Binary | Uint8Array | string;\n}\n\n/** @public */\nexport interface KMIPKMSProviderConfiguration {\n  /**\n   * The output endpoint string.\n   * The endpoint consists of a hostname and port separated by a colon.\n   * E.g. \"example.com:123\". A port is always present.\n   */\n  endpoint?: string;\n}\n\n/** @public */\nexport type AzureKMSProviderConfiguration =\n  | {\n      /**\n       * The tenant ID identifies the organization for the account\n       */\n      tenantId: string;\n\n      /**\n       * The client ID to authenticate a registered application\n       */\n      clientId: string;\n\n      /**\n       * The client secret to authenticate a registered application\n       */\n      clientSecret: string;\n\n      /**\n       * If present, a host with optional port. E.g. \"example.com\" or \"example.com:443\".\n       * This is optional, and only needed if customer is using a non-commercial Azure instance\n       * (e.g. a government or China account, which use different URLs).\n       * Defaults to \"login.microsoftonline.com\"\n       */\n      identityPlatformEndpoint?: string | undefined;\n    }\n  | {\n      /**\n       * If present, an access token to authenticate with Azure.\n       */\n      accessToken: string;\n    };\n\n/** @public */\nexport type GCPKMSProviderConfiguration =\n  | {\n      /**\n       * The service account email to authenticate\n       */\n      email: string;\n\n      /**\n       * A PKCS#8 encrypted key. This can either be a base64 string or a binary representation\n       */\n      privateKey: string | Buffer;\n\n      /**\n       * If present, a host with optional port. E.g. \"example.com\" or \"example.com:443\".\n       * Defaults to \"oauth2.googleapis.com\"\n       */\n      endpoint?: string | undefined;\n    }\n  | {\n      /**\n       * If present, an access token to authenticate with GCP.\n       */\n      accessToken: string;\n    };\n\n/**\n * @public\n * Configuration options for custom credential providers for KMS requests.\n */\nexport interface CredentialProviders {\n  /* A custom AWS credential provider */\n  aws?: AWSCredentialProvider;\n}\n\n/**\n * @public\n * Configuration options that are used by specific KMS providers during key generation, encryption, and decryption.\n *\n * Named KMS providers _are not supported_ for automatic KMS credential fetching.\n */\nexport interface KMSProviders {\n  /**\n   * Configuration options for using 'aws' as your KMS provider\n   */\n  aws?: AWSKMSProviderConfiguration | Record<string, never>;\n  [key: `aws:${string}`]: AWSKMSProviderConfiguration;\n\n  /**\n   * Configuration options for using 'local' as your KMS provider\n   */\n  local?: LocalKMSProviderConfiguration;\n  [key: `local:${string}`]: LocalKMSProviderConfiguration;\n\n  /**\n   * Configuration options for using 'kmip' as your KMS provider\n   */\n  kmip?: KMIPKMSProviderConfiguration;\n  [key: `kmip:${string}`]: KMIPKMSProviderConfiguration;\n\n  /**\n   * Configuration options for using 'azure' as your KMS provider\n   */\n  azure?: AzureKMSProviderConfiguration | Record<string, never>;\n  [key: `azure:${string}`]: AzureKMSProviderConfiguration;\n\n  /**\n   * Configuration options for using 'gcp' as your KMS provider\n   */\n  gcp?: GCPKMSProviderConfiguration | Record<string, never>;\n  [key: `gcp:${string}`]: GCPKMSProviderConfiguration;\n}\n\n/**\n * Auto credential fetching should only occur when the provider is defined on the kmsProviders map\n * and the settings are an empty object.\n *\n * This is distinct from a nullish provider key.\n *\n * @internal - exposed for testing purposes only\n */\nexport function isEmptyCredentials(\n  providerName: ClientEncryptionDataKeyProvider,\n  kmsProviders: KMSProviders\n): boolean {\n  const provider = kmsProviders[providerName];\n  if (provider == null) {\n    return false;\n  }\n  return typeof provider === 'object' && Object.keys(provider).length === 0;\n}\n\n/**\n * Load cloud provider credentials for the user provided KMS providers.\n * Credentials will only attempt to get loaded if they do not exist\n * and no existing credentials will get overwritten.\n *\n * @internal\n */\nexport async function refreshKMSCredentials(\n  kmsProviders: KMSProviders,\n  credentialProviders?: CredentialProviders\n): Promise<KMSProviders> {\n  let finalKMSProviders = kmsProviders;\n\n  if (isEmptyCredentials('aws', kmsProviders)) {\n    finalKMSProviders = await loadAWSCredentials(finalKMSProviders, credentialProviders?.aws);\n  }\n\n  if (isEmptyCredentials('gcp', kmsProviders)) {\n    finalKMSProviders = await loadGCPCredentials(finalKMSProviders);\n  }\n\n  if (isEmptyCredentials('azure', kmsProviders)) {\n    finalKMSProviders = await loadAzureCredentials(finalKMSProviders);\n  }\n  return finalKMSProviders;\n}\n", "import * as fs from 'fs/promises';\nimport { type MongoCryptContext, type MongoCryptKMSRequest } from 'mongodb-client-encryption';\nimport * as net from 'net';\nimport * as tls from 'tls';\n\nimport {\n  type BSONSerializeOptions,\n  deserialize,\n  type Document,\n  pluckBSONSerializeOptions,\n  serialize\n} from '../bson';\nimport { type ProxyOptions } from '../cmap/connection';\nimport { CursorTimeoutContext } from '../cursor/abstract_cursor';\nimport { getSocks, type SocksLib } from '../deps';\nimport { MongoOperationTimeoutError } from '../error';\nimport { type MongoClient, type MongoClientOptions } from '../mongo_client';\nimport { type Abortable } from '../mongo_types';\nimport { type CollectionInfo } from '../operations/list_collections';\nimport { Timeout, type TimeoutContext, TimeoutError } from '../timeout';\nimport {\n  addAbortListener,\n  BufferPool,\n  kDispose,\n  MongoDBCollectionNamespace,\n  promiseWithResolvers\n} from '../utils';\nimport { autoSelectSocketOptions, type DataKey } from './client_encryption';\nimport { MongoCryptError } from './errors';\nimport { type MongocryptdManager } from './mongocryptd_manager';\nimport { type KMSProviders } from './providers';\n\nlet socks: SocksLib | null = null;\nfunction loadSocks(): SocksLib {\n  if (socks == null) {\n    const socksImport = getSocks();\n    if ('kModuleError' in socksImport) {\n      throw socksImport.kModuleError;\n    }\n    socks = socksImport;\n  }\n  return socks;\n}\n\n// libmongocrypt states\nconst MONGOCRYPT_CTX_ERROR = 0;\nconst MONGOCRYPT_CTX_NEED_MONGO_COLLINFO = 1;\nconst MONGOCRYPT_CTX_NEED_MONGO_MARKINGS = 2;\nconst MONGOCRYPT_CTX_NEED_MONGO_KEYS = 3;\nconst MONGOCRYPT_CTX_NEED_KMS_CREDENTIALS = 7;\nconst MONGOCRYPT_CTX_NEED_KMS = 4;\nconst MONGOCRYPT_CTX_READY = 5;\nconst MONGOCRYPT_CTX_DONE = 6;\n\nconst HTTPS_PORT = 443;\n\nconst stateToString = new Map([\n  [MONGOCRYPT_CTX_ERROR, 'MONGOCRYPT_CTX_ERROR'],\n  [MONGOCRYPT_CTX_NEED_MONGO_COLLINFO, 'MONGOCRYPT_CTX_NEED_MONGO_COLLINFO'],\n  [MONGOCRYPT_CTX_NEED_MONGO_MARKINGS, 'MONGOCRYPT_CTX_NEED_MONGO_MARKINGS'],\n  [MONGOCRYPT_CTX_NEED_MONGO_KEYS, 'MONGOCRYPT_CTX_NEED_MONGO_KEYS'],\n  [MONGOCRYPT_CTX_NEED_KMS_CREDENTIALS, 'MONGOCRYPT_CTX_NEED_KMS_CREDENTIALS'],\n  [MONGOCRYPT_CTX_NEED_KMS, 'MONGOCRYPT_CTX_NEED_KMS'],\n  [MONGOCRYPT_CTX_READY, 'MONGOCRYPT_CTX_READY'],\n  [MONGOCRYPT_CTX_DONE, 'MONGOCRYPT_CTX_DONE']\n]);\n\nconst INSECURE_TLS_OPTIONS = [\n  'tlsInsecure',\n  'tlsAllowInvalidCertificates',\n  'tlsAllowInvalidHostnames',\n\n  // These options are disallowed by the spec, so we explicitly filter them out if provided, even\n  // though the StateMachine does not declare support for these options.\n  'tlsDisableOCSPEndpointCheck',\n  'tlsDisableCertificateRevocationCheck'\n];\n\n/**\n * Helper function for logging. Enabled by setting the environment flag MONGODB_CRYPT_DEBUG.\n * @param msg - Anything you want to be logged.\n */\nfunction debug(msg: unknown) {\n  if (process.env.MONGODB_CRYPT_DEBUG) {\n    // eslint-disable-next-line no-console\n    console.error(msg);\n  }\n}\n\ndeclare module 'mongodb-client-encryption' {\n  // the properties added to `MongoCryptContext` here are only used for the `StateMachine`'s\n  // execute method and are not part of the C++ bindings.\n  interface MongoCryptContext {\n    id: number;\n    document: Document;\n    ns: string;\n  }\n}\n\n/**\n * @public\n *\n * TLS options to use when connecting. The spec specifically calls out which insecure\n * tls options are not allowed:\n *\n *  - tlsAllowInvalidCertificates\n *  - tlsAllowInvalidHostnames\n *  - tlsInsecure\n *\n * These options are not included in the type, and are ignored if provided.\n */\nexport type ClientEncryptionTlsOptions = Pick<\n  MongoClientOptions,\n  'tlsCAFile' | 'tlsCertificateKeyFile' | 'tlsCertificateKeyFilePassword'\n>;\n\n/** @public */\nexport type CSFLEKMSTlsOptions = {\n  aws?: ClientEncryptionTlsOptions;\n  gcp?: ClientEncryptionTlsOptions;\n  kmip?: ClientEncryptionTlsOptions;\n  local?: ClientEncryptionTlsOptions;\n  azure?: ClientEncryptionTlsOptions;\n\n  [key: string]: ClientEncryptionTlsOptions | undefined;\n};\n\n/**\n * @public\n *\n * Socket options to use for KMS requests.\n */\nexport type ClientEncryptionSocketOptions = Pick<\n  MongoClientOptions,\n  'autoSelectFamily' | 'autoSelectFamilyAttemptTimeout'\n>;\n\n/**\n * This is kind of a hack.  For `rewrapManyDataKey`, we have tests that\n * guarantee that when there are no matching keys, `rewrapManyDataKey` returns\n * nothing.  We also have tests for auto encryption that guarantee for `encrypt`\n * we return an error when there are no matching keys.  This error is generated in\n * subsequent iterations of the state machine.\n * Some apis (`encrypt`) throw if there are no filter matches and others (`rewrapManyDataKey`)\n * do not.  We set the result manually here, and let the state machine continue.  `libmongocrypt`\n * will inform us if we need to error by setting the state to `MONGOCRYPT_CTX_ERROR` but\n * otherwise we'll return `{ v: [] }`.\n */\nlet EMPTY_V;\n\n/**\n * @internal\n *\n * An interface representing an object that can be passed to the `StateMachine.execute` method.\n *\n * Not all properties are required for all operations.\n */\nexport interface StateMachineExecutable {\n  _keyVaultNamespace: string;\n  _keyVaultClient: MongoClient;\n  askForKMSCredentials: () => Promise<KMSProviders>;\n\n  /** only used for auto encryption */\n  _metaDataClient?: MongoClient;\n  /** only used for auto encryption */\n  _mongocryptdClient?: MongoClient;\n  /** only used for auto encryption */\n  _mongocryptdManager?: MongocryptdManager;\n}\n\nexport type StateMachineOptions = {\n  /** socks5 proxy options, if set. */\n  proxyOptions: ProxyOptions;\n\n  /** TLS options for KMS requests, if set. */\n  tlsOptions: CSFLEKMSTlsOptions;\n\n  /** Socket specific options we support. */\n  socketOptions: ClientEncryptionSocketOptions;\n} & Pick<BSONSerializeOptions, 'promoteLongs' | 'promoteValues'>;\n\n/**\n * @internal\n * An internal class that executes across a MongoCryptContext until either\n * a finishing state or an error is reached. Do not instantiate directly.\n */\n// TODO(DRIVERS-2671): clarify CSOT behavior for FLE APIs\nexport class StateMachine {\n  constructor(\n    private options: StateMachineOptions,\n    private bsonOptions = pluckBSONSerializeOptions(options)\n  ) {}\n\n  /**\n   * Executes the state machine according to the specification\n   */\n  async execute(\n    executor: StateMachineExecutable,\n    context: MongoCryptContext,\n    options: { timeoutContext?: TimeoutContext } & Abortable\n  ): Promise<Uint8Array> {\n    const keyVaultNamespace = executor._keyVaultNamespace;\n    const keyVaultClient = executor._keyVaultClient;\n    const metaDataClient = executor._metaDataClient;\n    const mongocryptdClient = executor._mongocryptdClient;\n    const mongocryptdManager = executor._mongocryptdManager;\n    let result: Uint8Array | null = null;\n\n    // Typescript treats getters just like properties: Once you've tested it for equality\n    // it cannot change. Which is exactly the opposite of what we use state and status for.\n    // Every call to at least `addMongoOperationResponse` and `finalize` can change the state.\n    // These wrappers let us write code more naturally and not add compiler exceptions\n    // to conditions checks inside the state machine.\n    const getStatus = () => context.status;\n    const getState = () => context.state;\n\n    while (getState() !== MONGOCRYPT_CTX_DONE && getState() !== MONGOCRYPT_CTX_ERROR) {\n      options.signal?.throwIfAborted();\n      debug(`[context#${context.id}] ${stateToString.get(getState()) || getState()}`);\n\n      switch (getState()) {\n        case MONGOCRYPT_CTX_NEED_MONGO_COLLINFO: {\n          const filter = deserialize(context.nextMongoOperation());\n          if (!metaDataClient) {\n            throw new MongoCryptError(\n              'unreachable state machine state: entered MONGOCRYPT_CTX_NEED_MONGO_COLLINFO but metadata client is undefined'\n            );\n          }\n\n          const collInfoCursor = this.fetchCollectionInfo(\n            metaDataClient,\n            context.ns,\n            filter,\n            options\n          );\n\n          for await (const collInfo of collInfoCursor) {\n            context.addMongoOperationResponse(serialize(collInfo));\n            if (getState() === MONGOCRYPT_CTX_ERROR) break;\n          }\n\n          if (getState() === MONGOCRYPT_CTX_ERROR) break;\n\n          context.finishMongoOperation();\n          break;\n        }\n\n        case MONGOCRYPT_CTX_NEED_MONGO_MARKINGS: {\n          const command = context.nextMongoOperation();\n          if (getState() === MONGOCRYPT_CTX_ERROR) break;\n\n          if (!mongocryptdClient) {\n            throw new MongoCryptError(\n              'unreachable state machine state: entered MONGOCRYPT_CTX_NEED_MONGO_MARKINGS but mongocryptdClient is undefined'\n            );\n          }\n\n          // When we are using the shared library, we don't have a mongocryptd manager.\n          const markedCommand: Uint8Array = mongocryptdManager\n            ? await mongocryptdManager.withRespawn(\n                this.markCommand.bind(this, mongocryptdClient, context.ns, command, options)\n              )\n            : await this.markCommand(mongocryptdClient, context.ns, command, options);\n\n          context.addMongoOperationResponse(markedCommand);\n          context.finishMongoOperation();\n          break;\n        }\n\n        case MONGOCRYPT_CTX_NEED_MONGO_KEYS: {\n          const filter = context.nextMongoOperation();\n          const keys = await this.fetchKeys(keyVaultClient, keyVaultNamespace, filter, options);\n\n          if (keys.length === 0) {\n            // See docs on EMPTY_V\n            result = EMPTY_V ??= serialize({ v: [] });\n          }\n          for await (const key of keys) {\n            context.addMongoOperationResponse(serialize(key));\n          }\n\n          context.finishMongoOperation();\n\n          break;\n        }\n\n        case MONGOCRYPT_CTX_NEED_KMS_CREDENTIALS: {\n          const kmsProviders = await executor.askForKMSCredentials();\n          context.provideKMSProviders(serialize(kmsProviders));\n          break;\n        }\n\n        case MONGOCRYPT_CTX_NEED_KMS: {\n          await Promise.all(this.requests(context, options));\n          context.finishKMSRequests();\n          break;\n        }\n\n        case MONGOCRYPT_CTX_READY: {\n          const finalizedContext = context.finalize();\n          if (getState() === MONGOCRYPT_CTX_ERROR) {\n            const message = getStatus().message || 'Finalization error';\n            throw new MongoCryptError(message);\n          }\n          result = finalizedContext;\n          break;\n        }\n\n        default:\n          throw new MongoCryptError(`Unknown state: ${getState()}`);\n      }\n    }\n\n    if (getState() === MONGOCRYPT_CTX_ERROR || result == null) {\n      const message = getStatus().message;\n      if (!message) {\n        debug(\n          `unidentifiable error in MongoCrypt - received an error status from \\`libmongocrypt\\` but received no error message.`\n        );\n      }\n      throw new MongoCryptError(\n        message ??\n          'unidentifiable error in MongoCrypt - received an error status from `libmongocrypt` but received no error message.'\n      );\n    }\n\n    return result;\n  }\n\n  /**\n   * Handles the request to the KMS service. Exposed for testing purposes. Do not directly invoke.\n   * @param kmsContext - A C++ KMS context returned from the bindings\n   * @returns A promise that resolves when the KMS reply has be fully parsed\n   */\n  async kmsRequest(\n    request: MongoCryptKMSRequest,\n    options?: { timeoutContext?: TimeoutContext } & Abortable\n  ): Promise<void> {\n    const parsedUrl = request.endpoint.split(':');\n    const port = parsedUrl[1] != null ? Number.parseInt(parsedUrl[1], 10) : HTTPS_PORT;\n    const socketOptions: tls.ConnectionOptions & {\n      host: string;\n      port: number;\n      autoSelectFamily?: boolean;\n      autoSelectFamilyAttemptTimeout?: number;\n    } = {\n      host: parsedUrl[0],\n      servername: parsedUrl[0],\n      port,\n      ...autoSelectSocketOptions(this.options.socketOptions || {})\n    };\n    const message = request.message;\n    const buffer = new BufferPool();\n\n    let netSocket: net.Socket;\n    let socket: tls.TLSSocket;\n\n    function destroySockets() {\n      for (const sock of [socket, netSocket]) {\n        if (sock) {\n          sock.destroy();\n        }\n      }\n    }\n\n    function onerror(cause: Error) {\n      return new MongoCryptError('KMS request failed', { cause });\n    }\n\n    function onclose() {\n      return new MongoCryptError('KMS request closed');\n    }\n\n    const tlsOptions = this.options.tlsOptions;\n    if (tlsOptions) {\n      const kmsProvider = request.kmsProvider;\n      const providerTlsOptions = tlsOptions[kmsProvider];\n      if (providerTlsOptions) {\n        const error = this.validateTlsOptions(kmsProvider, providerTlsOptions);\n        if (error) {\n          throw error;\n        }\n        try {\n          await this.setTlsOptions(providerTlsOptions, socketOptions);\n        } catch (err) {\n          throw onerror(err);\n        }\n      }\n    }\n\n    let abortListener;\n\n    try {\n      if (this.options.proxyOptions && this.options.proxyOptions.proxyHost) {\n        netSocket = new net.Socket();\n\n        const {\n          promise: willConnect,\n          reject: rejectOnNetSocketError,\n          resolve: resolveOnNetSocketConnect\n        } = promiseWithResolvers<void>();\n\n        netSocket\n          .once('error', err => rejectOnNetSocketError(onerror(err)))\n          .once('close', () => rejectOnNetSocketError(onclose()))\n          .once('connect', () => resolveOnNetSocketConnect());\n\n        const netSocketOptions = {\n          ...socketOptions,\n          host: this.options.proxyOptions.proxyHost,\n          port: this.options.proxyOptions.proxyPort || 1080\n        };\n\n        netSocket.connect(netSocketOptions);\n\n        await willConnect;\n\n        try {\n          socks ??= loadSocks();\n          socketOptions.socket = (\n            await socks.SocksClient.createConnection({\n              existing_socket: netSocket,\n              command: 'connect',\n              destination: { host: socketOptions.host, port: socketOptions.port },\n              proxy: {\n                // host and port are ignored because we pass existing_socket\n                host: 'iLoveJavaScript',\n                port: 0,\n                type: 5,\n                userId: this.options.proxyOptions.proxyUsername,\n                password: this.options.proxyOptions.proxyPassword\n              }\n            })\n          ).socket;\n        } catch (err) {\n          throw onerror(err);\n        }\n      }\n\n      socket = tls.connect(socketOptions, () => {\n        socket.write(message);\n      });\n\n      const {\n        promise: willResolveKmsRequest,\n        reject: rejectOnTlsSocketError,\n        resolve\n      } = promiseWithResolvers<void>();\n\n      abortListener = addAbortListener(options?.signal, function () {\n        destroySockets();\n        rejectOnTlsSocketError(this.reason);\n      });\n\n      socket\n        .once('error', err => rejectOnTlsSocketError(onerror(err)))\n        .once('close', () => rejectOnTlsSocketError(onclose()))\n        .on('data', data => {\n          buffer.append(data);\n          while (request.bytesNeeded > 0 && buffer.length) {\n            const bytesNeeded = Math.min(request.bytesNeeded, buffer.length);\n            request.addResponse(buffer.read(bytesNeeded));\n          }\n\n          if (request.bytesNeeded <= 0) {\n            resolve();\n          }\n        });\n      await (options?.timeoutContext?.csotEnabled()\n        ? Promise.all([\n            willResolveKmsRequest,\n            Timeout.expires(options.timeoutContext?.remainingTimeMS)\n          ])\n        : willResolveKmsRequest);\n    } catch (error) {\n      if (error instanceof TimeoutError)\n        throw new MongoOperationTimeoutError('KMS request timed out');\n      throw error;\n    } finally {\n      // There's no need for any more activity on this socket at this point.\n      destroySockets();\n      abortListener?.[kDispose]();\n    }\n  }\n\n  *requests(context: MongoCryptContext, options?: { timeoutContext?: TimeoutContext } & Abortable) {\n    for (\n      let request = context.nextKMSRequest();\n      request != null;\n      request = context.nextKMSRequest()\n    ) {\n      yield this.kmsRequest(request, options);\n    }\n  }\n\n  /**\n   * Validates the provided TLS options are secure.\n   *\n   * @param kmsProvider - The KMS provider name.\n   * @param tlsOptions - The client TLS options for the provider.\n   *\n   * @returns An error if any option is invalid.\n   */\n  validateTlsOptions(\n    kmsProvider: string,\n    tlsOptions: ClientEncryptionTlsOptions\n  ): MongoCryptError | void {\n    const tlsOptionNames = Object.keys(tlsOptions);\n    for (const option of INSECURE_TLS_OPTIONS) {\n      if (tlsOptionNames.includes(option)) {\n        return new MongoCryptError(`Insecure TLS options prohibited for ${kmsProvider}: ${option}`);\n      }\n    }\n  }\n\n  /**\n   * Sets only the valid secure TLS options.\n   *\n   * @param tlsOptions - The client TLS options for the provider.\n   * @param options - The existing connection options.\n   */\n  async setTlsOptions(\n    tlsOptions: ClientEncryptionTlsOptions,\n    options: tls.ConnectionOptions\n  ): Promise<void> {\n    if (tlsOptions.tlsCertificateKeyFile) {\n      const cert = await fs.readFile(tlsOptions.tlsCertificateKeyFile);\n      options.cert = options.key = cert;\n    }\n    if (tlsOptions.tlsCAFile) {\n      options.ca = await fs.readFile(tlsOptions.tlsCAFile);\n    }\n    if (tlsOptions.tlsCertificateKeyFilePassword) {\n      options.passphrase = tlsOptions.tlsCertificateKeyFilePassword;\n    }\n  }\n\n  /**\n   * Fetches collection info for a provided namespace, when libmongocrypt\n   * enters the `MONGOCRYPT_CTX_NEED_MONGO_COLLINFO` state. The result is\n   * used to inform libmongocrypt of the schema associated with this\n   * namespace. Exposed for testing purposes. Do not directly invoke.\n   *\n   * @param client - A MongoClient connected to the topology\n   * @param ns - The namespace to list collections from\n   * @param filter - A filter for the listCollections command\n   * @param callback - Invoked with the info of the requested collection, or with an error\n   */\n  fetchCollectionInfo(\n    client: MongoClient,\n    ns: string,\n    filter: Document,\n    options?: { timeoutContext?: TimeoutContext } & Abortable\n  ): AsyncIterable<CollectionInfo> {\n    const { db } = MongoDBCollectionNamespace.fromString(ns);\n\n    const cursor = client.db(db).listCollections(filter, {\n      promoteLongs: false,\n      promoteValues: false,\n      timeoutContext:\n        options?.timeoutContext && new CursorTimeoutContext(options?.timeoutContext, Symbol()),\n      signal: options?.signal,\n      nameOnly: false\n    });\n\n    return cursor;\n  }\n\n  /**\n   * Calls to the mongocryptd to provide markings for a command.\n   * Exposed for testing purposes. Do not directly invoke.\n   * @param client - A MongoClient connected to a mongocryptd\n   * @param ns - The namespace (database.collection) the command is being executed on\n   * @param command - The command to execute.\n   * @param callback - Invoked with the serialized and marked bson command, or with an error\n   */\n  async markCommand(\n    client: MongoClient,\n    ns: string,\n    command: Uint8Array,\n    options?: { timeoutContext?: TimeoutContext } & Abortable\n  ): Promise<Uint8Array> {\n    const { db } = MongoDBCollectionNamespace.fromString(ns);\n    const bsonOptions = { promoteLongs: false, promoteValues: false };\n    const rawCommand = deserialize(command, bsonOptions);\n\n    const commandOptions: {\n      timeoutMS?: number;\n      signal?: AbortSignal;\n    } = {\n      timeoutMS: undefined,\n      signal: undefined\n    };\n\n    if (options?.timeoutContext?.csotEnabled()) {\n      commandOptions.timeoutMS = options.timeoutContext.remainingTimeMS;\n    }\n    if (options?.signal) {\n      commandOptions.signal = options.signal;\n    }\n\n    const response = await client.db(db).command(rawCommand, {\n      ...bsonOptions,\n      ...commandOptions\n    });\n\n    return serialize(response, this.bsonOptions);\n  }\n\n  /**\n   * Requests keys from the keyVault collection on the topology.\n   * Exposed for testing purposes. Do not directly invoke.\n   * @param client - A MongoClient connected to the topology\n   * @param keyVaultNamespace - The namespace (database.collection) of the keyVault Collection\n   * @param filter - The filter for the find query against the keyVault Collection\n   * @param callback - Invoked with the found keys, or with an error\n   */\n  fetchKeys(\n    client: MongoClient,\n    keyVaultNamespace: string,\n    filter: Uint8Array,\n    options?: { timeoutContext?: TimeoutContext } & Abortable\n  ): Promise<Array<DataKey>> {\n    const { db: dbName, collection: collectionName } =\n      MongoDBCollectionNamespace.fromString(keyVaultNamespace);\n\n    const commandOptions: {\n      timeoutContext?: CursorTimeoutContext;\n      signal?: AbortSignal;\n    } = {\n      timeoutContext: undefined,\n      signal: undefined\n    };\n\n    if (options?.timeoutContext != null) {\n      commandOptions.timeoutContext = new CursorTimeoutContext(options.timeoutContext, Symbol());\n    }\n    if (options?.signal != null) {\n      commandOptions.signal = options.signal;\n    }\n\n    return client\n      .db(dbName)\n      .collection<DataKey>(collectionName, { readConcern: { level: 'majority' } })\n      .find(deserialize(filter), commandOptions)\n      .toArray();\n  }\n}\n", "import type {\n  ExplicitEncryptionContextOptions,\n  MongoCrypt,\n  MongoCryptConstructor,\n  MongoCryptOptions\n} from 'mongodb-client-encryption';\n\nimport {\n  type Binary,\n  deserialize,\n  type Document,\n  type Int32,\n  type Long,\n  serialize,\n  type UUID\n} from '../bson';\nimport { type AnyBulkWriteOperation, type BulkWriteResult } from '../bulk/common';\nimport { type ProxyOptions } from '../cmap/connection';\nimport { type Collection } from '../collection';\nimport { type FindCursor } from '../cursor/find_cursor';\nimport { type Db } from '../db';\nimport { getMongoDBClientEncryption } from '../deps';\nimport { type MongoClient, type MongoClientOptions } from '../mongo_client';\nimport { type Filter, type WithId } from '../mongo_types';\nimport { type CreateCollectionOptions } from '../operations/create_collection';\nimport { type DeleteResult } from '../operations/delete';\nimport { type CSOTTimeoutContext, TimeoutContext } from '../timeout';\nimport { MongoDBCollectionNamespace, resolveTimeoutOptions } from '../utils';\nimport * as cryptoCallbacks from './crypto_callbacks';\nimport {\n  MongoCryptCreateDataKeyError,\n  MongoCryptCreateEncryptedCollectionError,\n  MongoCryptInvalidArgumentError\n} from './errors';\nimport {\n  type ClientEncryptionDataKeyProvider,\n  type CredentialProviders,\n  isEmptyCredentials,\n  type KMSProviders,\n  refreshKMSCredentials\n} from './providers/index';\nimport {\n  type ClientEncryptionSocketOptions,\n  type CSFLEKMSTlsOptions,\n  StateMachine\n} from './state_machine';\n\n/**\n * @public\n * The schema for a DataKey in the key vault collection.\n */\nexport interface DataKey {\n  _id: UUID;\n  version?: number;\n  keyAltNames?: string[];\n  keyMaterial: Binary;\n  creationDate: Date;\n  updateDate: Date;\n  status: number;\n  masterKey: Document;\n}\n\n/**\n * @public\n * The public interface for explicit in-use encryption\n */\nexport class ClientEncryption {\n  /** @internal */\n  _client: MongoClient;\n  /** @internal */\n  _keyVaultNamespace: string;\n  /** @internal */\n  _keyVaultClient: MongoClient;\n  /** @internal */\n  _proxyOptions: ProxyOptions;\n  /** @internal */\n  _tlsOptions: CSFLEKMSTlsOptions;\n  /** @internal */\n  _kmsProviders: KMSProviders;\n  /** @internal */\n  _timeoutMS?: number;\n\n  /** @internal */\n  _mongoCrypt: MongoCrypt;\n\n  /** @internal */\n  _credentialProviders?: CredentialProviders;\n\n  /** @internal */\n  static getMongoCrypt(): MongoCryptConstructor {\n    const encryption = getMongoDBClientEncryption();\n    if ('kModuleError' in encryption) {\n      throw encryption.kModuleError;\n    }\n    return encryption.MongoCrypt;\n  }\n\n  /**\n   * Create a new encryption instance\n   *\n   * @example\n   * ```ts\n   * new ClientEncryption(mongoClient, {\n   *   keyVaultNamespace: 'client.encryption',\n   *   kmsProviders: {\n   *     local: {\n   *       key: masterKey // The master key used for encryption/decryption. A 96-byte long Buffer\n   *     }\n   *   }\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * new ClientEncryption(mongoClient, {\n   *   keyVaultNamespace: 'client.encryption',\n   *   kmsProviders: {\n   *     aws: {\n   *       accessKeyId: AWS_ACCESS_KEY,\n   *       secretAccessKey: AWS_SECRET_KEY\n   *     }\n   *   }\n   * });\n   * ```\n   */\n  constructor(client: MongoClient, options: ClientEncryptionOptions) {\n    this._client = client;\n    this._proxyOptions = options.proxyOptions ?? {};\n    this._tlsOptions = options.tlsOptions ?? {};\n    this._kmsProviders = options.kmsProviders || {};\n    const { timeoutMS } = resolveTimeoutOptions(client, options);\n    this._timeoutMS = timeoutMS;\n    this._credentialProviders = options.credentialProviders;\n\n    if (options.credentialProviders?.aws && !isEmptyCredentials('aws', this._kmsProviders)) {\n      throw new MongoCryptInvalidArgumentError(\n        'Can only provide a custom AWS credential provider when the state machine is configured for automatic AWS credential fetching'\n      );\n    }\n\n    if (options.keyVaultNamespace == null) {\n      throw new MongoCryptInvalidArgumentError('Missing required option `keyVaultNamespace`');\n    }\n\n    const mongoCryptOptions: MongoCryptOptions = {\n      ...options,\n      cryptoCallbacks,\n      kmsProviders: !Buffer.isBuffer(this._kmsProviders)\n        ? (serialize(this._kmsProviders) as Buffer)\n        : this._kmsProviders\n    };\n\n    this._keyVaultNamespace = options.keyVaultNamespace;\n    this._keyVaultClient = options.keyVaultClient || client;\n    const MongoCrypt = ClientEncryption.getMongoCrypt();\n    this._mongoCrypt = new MongoCrypt(mongoCryptOptions);\n  }\n\n  /**\n   * Creates a data key used for explicit encryption and inserts it into the key vault namespace\n   *\n   * @example\n   * ```ts\n   * // Using async/await to create a local key\n   * const dataKeyId = await clientEncryption.createDataKey('local');\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Using async/await to create an aws key\n   * const dataKeyId = await clientEncryption.createDataKey('aws', {\n   *   masterKey: {\n   *     region: 'us-east-1',\n   *     key: 'xxxxxxxxxxxxxx' // CMK ARN here\n   *   }\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Using async/await to create an aws key with a keyAltName\n   * const dataKeyId = await clientEncryption.createDataKey('aws', {\n   *   masterKey: {\n   *     region: 'us-east-1',\n   *     key: 'xxxxxxxxxxxxxx' // CMK ARN here\n   *   },\n   *   keyAltNames: [ 'mySpecialKey' ]\n   * });\n   * ```\n   */\n  async createDataKey(\n    provider: ClientEncryptionDataKeyProvider,\n    options: ClientEncryptionCreateDataKeyProviderOptions = {}\n  ): Promise<UUID> {\n    if (options.keyAltNames && !Array.isArray(options.keyAltNames)) {\n      throw new MongoCryptInvalidArgumentError(\n        `Option \"keyAltNames\" must be an array of strings, but was of type ${typeof options.keyAltNames}.`\n      );\n    }\n\n    let keyAltNames = undefined;\n    if (options.keyAltNames && options.keyAltNames.length > 0) {\n      keyAltNames = options.keyAltNames.map((keyAltName, i) => {\n        if (typeof keyAltName !== 'string') {\n          throw new MongoCryptInvalidArgumentError(\n            `Option \"keyAltNames\" must be an array of strings, but item at index ${i} was of type ${typeof keyAltName}`\n          );\n        }\n\n        return serialize({ keyAltName });\n      });\n    }\n\n    let keyMaterial = undefined;\n    if (options.keyMaterial) {\n      keyMaterial = serialize({ keyMaterial: options.keyMaterial });\n    }\n\n    const dataKeyBson = serialize({\n      provider,\n      ...options.masterKey\n    });\n\n    const context = this._mongoCrypt.makeDataKeyContext(dataKeyBson, {\n      keyAltNames,\n      keyMaterial\n    });\n\n    const stateMachine = new StateMachine({\n      proxyOptions: this._proxyOptions,\n      tlsOptions: this._tlsOptions,\n      socketOptions: autoSelectSocketOptions(this._client.s.options)\n    });\n\n    const timeoutContext =\n      options?.timeoutContext ??\n      TimeoutContext.create(resolveTimeoutOptions(this._client, { timeoutMS: this._timeoutMS }));\n\n    const dataKey = deserialize(\n      await stateMachine.execute(this, context, { timeoutContext })\n    ) as DataKey;\n\n    const { db: dbName, collection: collectionName } = MongoDBCollectionNamespace.fromString(\n      this._keyVaultNamespace\n    );\n\n    const { insertedId } = await this._keyVaultClient\n      .db(dbName)\n      .collection<DataKey>(collectionName)\n      .insertOne(dataKey, {\n        writeConcern: { w: 'majority' },\n        timeoutMS: timeoutContext?.csotEnabled()\n          ? timeoutContext?.getRemainingTimeMSOrThrow()\n          : undefined\n      });\n\n    return insertedId;\n  }\n\n  /**\n   * Searches the keyvault for any data keys matching the provided filter.  If there are matches, rewrapManyDataKey then attempts to re-wrap the data keys using the provided options.\n   *\n   * If no matches are found, then no bulk write is performed.\n   *\n   * @example\n   * ```ts\n   * // rewrapping all data data keys (using a filter that matches all documents)\n   * const filter = {};\n   *\n   * const result = await clientEncryption.rewrapManyDataKey(filter);\n   * if (result.bulkWriteResult != null) {\n   *  // keys were re-wrapped, results will be available in the bulkWrite object.\n   * }\n   * ```\n   *\n   * @example\n   * ```ts\n   * // attempting to rewrap all data keys with no matches\n   * const filter = { _id: new Binary() } // assume _id matches no documents in the database\n   * const result = await clientEncryption.rewrapManyDataKey(filter);\n   *\n   * if (result.bulkWriteResult == null) {\n   *  // no keys matched, `bulkWriteResult` does not exist on the result object\n   * }\n   * ```\n   */\n  async rewrapManyDataKey(\n    filter: Filter<DataKey>,\n    options: ClientEncryptionRewrapManyDataKeyProviderOptions\n  ): Promise<{ bulkWriteResult?: BulkWriteResult }> {\n    let keyEncryptionKeyBson = undefined;\n    if (options) {\n      const keyEncryptionKey = Object.assign({ provider: options.provider }, options.masterKey);\n      keyEncryptionKeyBson = serialize(keyEncryptionKey);\n    }\n    const filterBson = serialize(filter);\n    const context = this._mongoCrypt.makeRewrapManyDataKeyContext(filterBson, keyEncryptionKeyBson);\n    const stateMachine = new StateMachine({\n      proxyOptions: this._proxyOptions,\n      tlsOptions: this._tlsOptions,\n      socketOptions: autoSelectSocketOptions(this._client.s.options)\n    });\n\n    const timeoutContext = TimeoutContext.create(\n      resolveTimeoutOptions(this._client, { timeoutMS: this._timeoutMS })\n    );\n\n    const { v: dataKeys } = deserialize(\n      await stateMachine.execute(this, context, { timeoutContext })\n    );\n    if (dataKeys.length === 0) {\n      return {};\n    }\n\n    const { db: dbName, collection: collectionName } = MongoDBCollectionNamespace.fromString(\n      this._keyVaultNamespace\n    );\n\n    const replacements = dataKeys.map(\n      (key: DataKey): AnyBulkWriteOperation<DataKey> => ({\n        updateOne: {\n          filter: { _id: key._id },\n          update: {\n            $set: {\n              masterKey: key.masterKey,\n              keyMaterial: key.keyMaterial\n            },\n            $currentDate: {\n              updateDate: true\n            }\n          }\n        }\n      })\n    );\n\n    const result = await this._keyVaultClient\n      .db(dbName)\n      .collection<DataKey>(collectionName)\n      .bulkWrite(replacements, {\n        writeConcern: { w: 'majority' },\n        timeoutMS: timeoutContext.csotEnabled() ? timeoutContext?.remainingTimeMS : undefined\n      });\n\n    return { bulkWriteResult: result };\n  }\n\n  /**\n   * Deletes the key with the provided id from the keyvault, if it exists.\n   *\n   * @example\n   * ```ts\n   * // delete a key by _id\n   * const id = new Binary(); // id is a bson binary subtype 4 object\n   * const { deletedCount } = await clientEncryption.deleteKey(id);\n   *\n   * if (deletedCount != null && deletedCount > 0) {\n   *   // successful deletion\n   * }\n   * ```\n   *\n   */\n  async deleteKey(_id: Binary): Promise<DeleteResult> {\n    const { db: dbName, collection: collectionName } = MongoDBCollectionNamespace.fromString(\n      this._keyVaultNamespace\n    );\n\n    return await this._keyVaultClient\n      .db(dbName)\n      .collection<DataKey>(collectionName)\n      .deleteOne({ _id }, { writeConcern: { w: 'majority' }, timeoutMS: this._timeoutMS });\n  }\n\n  /**\n   * Finds all the keys currently stored in the keyvault.\n   *\n   * This method will not throw.\n   *\n   * @returns a FindCursor over all keys in the keyvault.\n   * @example\n   * ```ts\n   * // fetching all keys\n   * const keys = await clientEncryption.getKeys().toArray();\n   * ```\n   */\n  getKeys(): FindCursor<DataKey> {\n    const { db: dbName, collection: collectionName } = MongoDBCollectionNamespace.fromString(\n      this._keyVaultNamespace\n    );\n\n    return this._keyVaultClient\n      .db(dbName)\n      .collection<DataKey>(collectionName)\n      .find({}, { readConcern: { level: 'majority' }, timeoutMS: this._timeoutMS });\n  }\n\n  /**\n   * Finds a key in the keyvault with the specified _id.\n   *\n   * Returns a promise that either resolves to a {@link DataKey} if a document matches the key or null if no documents\n   * match the id.  The promise rejects with an error if an error is thrown.\n   * @example\n   * ```ts\n   * // getting a key by id\n   * const id = new Binary(); // id is a bson binary subtype 4 object\n   * const key = await clientEncryption.getKey(id);\n   * if (!key) {\n   *  // key is null if there was no matching key\n   * }\n   * ```\n   */\n  async getKey(_id: Binary): Promise<DataKey | null> {\n    const { db: dbName, collection: collectionName } = MongoDBCollectionNamespace.fromString(\n      this._keyVaultNamespace\n    );\n\n    return await this._keyVaultClient\n      .db(dbName)\n      .collection<DataKey>(collectionName)\n      .findOne({ _id }, { readConcern: { level: 'majority' }, timeoutMS: this._timeoutMS });\n  }\n\n  /**\n   * Finds a key in the keyvault which has the specified keyAltName.\n   *\n   * @param keyAltName - a keyAltName to search for a key\n   * @returns Returns a promise that either resolves to a {@link DataKey} if a document matches the key or null if no documents\n   * match the keyAltName.  The promise rejects with an error if an error is thrown.\n   * @example\n   * ```ts\n   * // get a key by alt name\n   * const keyAltName = 'keyAltName';\n   * const key = await clientEncryption.getKeyByAltName(keyAltName);\n   * if (!key) {\n   *  // key is null if there is no matching key\n   * }\n   * ```\n   */\n  async getKeyByAltName(keyAltName: string): Promise<WithId<DataKey> | null> {\n    const { db: dbName, collection: collectionName } = MongoDBCollectionNamespace.fromString(\n      this._keyVaultNamespace\n    );\n\n    return await this._keyVaultClient\n      .db(dbName)\n      .collection<DataKey>(collectionName)\n      .findOne(\n        { keyAltNames: keyAltName },\n        { readConcern: { level: 'majority' }, timeoutMS: this._timeoutMS }\n      );\n  }\n\n  /**\n   * Adds a keyAltName to a key identified by the provided _id.\n   *\n   * This method resolves to/returns the *old* key value (prior to adding the new altKeyName).\n   *\n   * @param _id - The id of the document to update.\n   * @param keyAltName - a keyAltName to search for a key\n   * @returns Returns a promise that either resolves to a {@link DataKey} if a document matches the key or null if no documents\n   * match the id.  The promise rejects with an error if an error is thrown.\n   * @example\n   * ```ts\n   * // adding an keyAltName to a data key\n   * const id = new Binary();  // id is a bson binary subtype 4 object\n   * const keyAltName = 'keyAltName';\n   * const oldKey = await clientEncryption.addKeyAltName(id, keyAltName);\n   * if (!oldKey) {\n   *  // null is returned if there is no matching document with an id matching the supplied id\n   * }\n   * ```\n   */\n  async addKeyAltName(_id: Binary, keyAltName: string): Promise<WithId<DataKey> | null> {\n    const { db: dbName, collection: collectionName } = MongoDBCollectionNamespace.fromString(\n      this._keyVaultNamespace\n    );\n\n    const value = await this._keyVaultClient\n      .db(dbName)\n      .collection<DataKey>(collectionName)\n      .findOneAndUpdate(\n        { _id },\n        { $addToSet: { keyAltNames: keyAltName } },\n        { writeConcern: { w: 'majority' }, returnDocument: 'before', timeoutMS: this._timeoutMS }\n      );\n\n    return value;\n  }\n\n  /**\n   * Adds a keyAltName to a key identified by the provided _id.\n   *\n   * This method resolves to/returns the *old* key value (prior to removing the new altKeyName).\n   *\n   * If the removed keyAltName is the last keyAltName for that key, the `altKeyNames` property is unset from the document.\n   *\n   * @param _id - The id of the document to update.\n   * @param keyAltName - a keyAltName to search for a key\n   * @returns Returns a promise that either resolves to a {@link DataKey} if a document matches the key or null if no documents\n   * match the id.  The promise rejects with an error if an error is thrown.\n   * @example\n   * ```ts\n   * // removing a key alt name from a data key\n   * const id = new Binary();  // id is a bson binary subtype 4 object\n   * const keyAltName = 'keyAltName';\n   * const oldKey = await clientEncryption.removeKeyAltName(id, keyAltName);\n   *\n   * if (!oldKey) {\n   *  // null is returned if there is no matching document with an id matching the supplied id\n   * }\n   * ```\n   */\n  async removeKeyAltName(_id: Binary, keyAltName: string): Promise<WithId<DataKey> | null> {\n    const { db: dbName, collection: collectionName } = MongoDBCollectionNamespace.fromString(\n      this._keyVaultNamespace\n    );\n\n    const pipeline = [\n      {\n        $set: {\n          keyAltNames: {\n            $cond: [\n              {\n                $eq: ['$keyAltNames', [keyAltName]]\n              },\n              '$$REMOVE',\n              {\n                $filter: {\n                  input: '$keyAltNames',\n                  cond: {\n                    $ne: ['$$this', keyAltName]\n                  }\n                }\n              }\n            ]\n          }\n        }\n      }\n    ];\n\n    const value = await this._keyVaultClient\n      .db(dbName)\n      .collection<DataKey>(collectionName)\n      .findOneAndUpdate({ _id }, pipeline, {\n        writeConcern: { w: 'majority' },\n        returnDocument: 'before',\n        timeoutMS: this._timeoutMS\n      });\n\n    return value;\n  }\n\n  /**\n   * A convenience method for creating an encrypted collection.\n   * This method will create data keys for any encryptedFields that do not have a `keyId` defined\n   * and then create a new collection with the full set of encryptedFields.\n   *\n   * @param db - A Node.js driver Db object with which to create the collection\n   * @param name - The name of the collection to be created\n   * @param options - Options for createDataKey and for createCollection\n   * @returns created collection and generated encryptedFields\n   * @throws MongoCryptCreateDataKeyError - If part way through the process a createDataKey invocation fails, an error will be rejected that has the partial `encryptedFields` that were created.\n   * @throws MongoCryptCreateEncryptedCollectionError - If creating the collection fails, an error will be rejected that has the entire `encryptedFields` that were created.\n   */\n  async createEncryptedCollection<TSchema extends Document = Document>(\n    db: Db,\n    name: string,\n    options: {\n      provider: ClientEncryptionDataKeyProvider;\n      createCollectionOptions: Omit<CreateCollectionOptions, 'encryptedFields'> & {\n        encryptedFields: Document;\n      };\n      masterKey?: AWSEncryptionKeyOptions | AzureEncryptionKeyOptions | GCPEncryptionKeyOptions;\n    }\n  ): Promise<{ collection: Collection<TSchema>; encryptedFields: Document }> {\n    const {\n      provider,\n      masterKey,\n      createCollectionOptions: {\n        encryptedFields: { ...encryptedFields },\n        ...createCollectionOptions\n      }\n    } = options;\n\n    const timeoutContext =\n      this._timeoutMS != null\n        ? TimeoutContext.create(resolveTimeoutOptions(this._client, { timeoutMS: this._timeoutMS }))\n        : undefined;\n\n    if (Array.isArray(encryptedFields.fields)) {\n      const createDataKeyPromises = encryptedFields.fields.map(async field =>\n        field == null || typeof field !== 'object' || field.keyId != null\n          ? field\n          : {\n              ...field,\n              keyId: await this.createDataKey(provider, {\n                masterKey,\n                // clone the timeoutContext\n                // in order to avoid sharing the same timeout for server selection and connection checkout across different concurrent operations\n                timeoutContext: timeoutContext?.csotEnabled() ? timeoutContext?.clone() : undefined\n              })\n            }\n      );\n      const createDataKeyResolutions = await Promise.allSettled(createDataKeyPromises);\n\n      encryptedFields.fields = createDataKeyResolutions.map((resolution, index) =>\n        resolution.status === 'fulfilled' ? resolution.value : encryptedFields.fields[index]\n      );\n\n      const rejection = createDataKeyResolutions.find(\n        (result): result is PromiseRejectedResult => result.status === 'rejected'\n      );\n      if (rejection != null) {\n        throw new MongoCryptCreateDataKeyError(encryptedFields, { cause: rejection.reason });\n      }\n    }\n\n    try {\n      const collection = await db.createCollection<TSchema>(name, {\n        ...createCollectionOptions,\n        encryptedFields,\n        timeoutMS: timeoutContext?.csotEnabled()\n          ? timeoutContext?.getRemainingTimeMSOrThrow()\n          : undefined\n      });\n      return { collection, encryptedFields };\n    } catch (cause) {\n      throw new MongoCryptCreateEncryptedCollectionError(encryptedFields, { cause });\n    }\n  }\n\n  /**\n   * Explicitly encrypt a provided value. Note that either `options.keyId` or `options.keyAltName` must\n   * be specified. Specifying both `options.keyId` and `options.keyAltName` is considered an error.\n   *\n   * @param value - The value that you wish to serialize. Must be of a type that can be serialized into BSON\n   * @param options -\n   * @returns a Promise that either resolves with the encrypted value, or rejects with an error.\n   *\n   * @example\n   * ```ts\n   * // Encryption with async/await api\n   * async function encryptMyData(value) {\n   *   const keyId = await clientEncryption.createDataKey('local');\n   *   return clientEncryption.encrypt(value, { keyId, algorithm: 'AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic' });\n   * }\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Encryption using a keyAltName\n   * async function encryptMyData(value) {\n   *   await clientEncryption.createDataKey('local', { keyAltNames: 'mySpecialKey' });\n   *   return clientEncryption.encrypt(value, { keyAltName: 'mySpecialKey', algorithm: 'AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic' });\n   * }\n   * ```\n   */\n  async encrypt(value: unknown, options: ClientEncryptionEncryptOptions): Promise<Binary> {\n    return await this._encrypt(value, false, options);\n  }\n\n  /**\n   * Encrypts a Match Expression or Aggregate Expression to query a range index.\n   *\n   * Only supported when queryType is \"range\" and algorithm is \"Range\".\n   *\n   * @param expression - a BSON document of one of the following forms:\n   *  1. A Match Expression of this form:\n   *      `{$and: [{<field>: {$gt: <value1>}}, {<field>: {$lt: <value2> }}]}`\n   *  2. An Aggregate Expression of this form:\n   *      `{$and: [{$gt: [<fieldpath>, <value1>]}, {$lt: [<fieldpath>, <value2>]}]}`\n   *\n   *    `$gt` may also be `$gte`. `$lt` may also be `$lte`.\n   *\n   * @param options -\n   * @returns Returns a Promise that either resolves with the encrypted value or rejects with an error.\n   */\n  async encryptExpression(\n    expression: Document,\n    options: ClientEncryptionEncryptOptions\n  ): Promise<Binary> {\n    return await this._encrypt(expression, true, options);\n  }\n\n  /**\n   * Explicitly decrypt a provided encrypted value\n   *\n   * @param value - An encrypted value\n   * @returns a Promise that either resolves with the decrypted value, or rejects with an error\n   *\n   * @example\n   * ```ts\n   * // Decrypting value with async/await API\n   * async function decryptMyValue(value) {\n   *   return clientEncryption.decrypt(value);\n   * }\n   * ```\n   */\n  async decrypt<T = any>(value: Binary): Promise<T> {\n    const valueBuffer = serialize({ v: value });\n    const context = this._mongoCrypt.makeExplicitDecryptionContext(valueBuffer);\n\n    const stateMachine = new StateMachine({\n      proxyOptions: this._proxyOptions,\n      tlsOptions: this._tlsOptions,\n      socketOptions: autoSelectSocketOptions(this._client.s.options)\n    });\n\n    const timeoutContext =\n      this._timeoutMS != null\n        ? TimeoutContext.create(resolveTimeoutOptions(this._client, { timeoutMS: this._timeoutMS }))\n        : undefined;\n\n    const { v } = deserialize(await stateMachine.execute(this, context, { timeoutContext }));\n\n    return v;\n  }\n\n  /**\n   * @internal\n   * Ask the user for KMS credentials.\n   *\n   * This returns anything that looks like the kmsProviders original input\n   * option. It can be empty, and any provider specified here will override\n   * the original ones.\n   */\n  async askForKMSCredentials(): Promise<KMSProviders> {\n    return await refreshKMSCredentials(this._kmsProviders, this._credentialProviders);\n  }\n\n  static get libmongocryptVersion() {\n    return ClientEncryption.getMongoCrypt().libmongocryptVersion;\n  }\n\n  /**\n   * @internal\n   * A helper that perform explicit encryption of values and expressions.\n   * Explicitly encrypt a provided value. Note that either `options.keyId` or `options.keyAltName` must\n   * be specified. Specifying both `options.keyId` and `options.keyAltName` is considered an error.\n   *\n   * @param value - The value that you wish to encrypt. Must be of a type that can be serialized into BSON\n   * @param expressionMode - a boolean that indicates whether or not to encrypt the value as an expression\n   * @param options - options to pass to encrypt\n   * @returns the raw result of the call to stateMachine.execute().  When expressionMode is set to true, the return\n   *          value will be a bson document.  When false, the value will be a BSON Binary.\n   *\n   */\n  private async _encrypt(\n    value: unknown,\n    expressionMode: boolean,\n    options: ClientEncryptionEncryptOptions\n  ): Promise<Binary> {\n    const { algorithm, keyId, keyAltName, contentionFactor, queryType, rangeOptions } = options;\n    const contextOptions: ExplicitEncryptionContextOptions = {\n      expressionMode,\n      algorithm\n    };\n    if (keyId) {\n      contextOptions.keyId = keyId.buffer;\n    }\n    if (keyAltName) {\n      if (keyId) {\n        throw new MongoCryptInvalidArgumentError(\n          `\"options\" cannot contain both \"keyId\" and \"keyAltName\"`\n        );\n      }\n      if (typeof keyAltName !== 'string') {\n        throw new MongoCryptInvalidArgumentError(\n          `\"options.keyAltName\" must be of type string, but was of type ${typeof keyAltName}`\n        );\n      }\n\n      contextOptions.keyAltName = serialize({ keyAltName });\n    }\n    if (typeof contentionFactor === 'number' || typeof contentionFactor === 'bigint') {\n      contextOptions.contentionFactor = contentionFactor;\n    }\n    if (typeof queryType === 'string') {\n      contextOptions.queryType = queryType;\n    }\n\n    if (typeof rangeOptions === 'object') {\n      contextOptions.rangeOptions = serialize(rangeOptions);\n    }\n\n    const valueBuffer = serialize({ v: value });\n    const stateMachine = new StateMachine({\n      proxyOptions: this._proxyOptions,\n      tlsOptions: this._tlsOptions,\n      socketOptions: autoSelectSocketOptions(this._client.s.options)\n    });\n    const context = this._mongoCrypt.makeExplicitEncryptionContext(valueBuffer, contextOptions);\n\n    const timeoutContext =\n      this._timeoutMS != null\n        ? TimeoutContext.create(resolveTimeoutOptions(this._client, { timeoutMS: this._timeoutMS }))\n        : undefined;\n    const { v } = deserialize(await stateMachine.execute(this, context, { timeoutContext }));\n    return v;\n  }\n}\n\n/**\n * @public\n * Options to provide when encrypting data.\n */\nexport interface ClientEncryptionEncryptOptions {\n  /**\n   * The algorithm to use for encryption.\n   */\n  algorithm:\n    | 'AEAD_AES_256_CBC_HMAC_SHA_512-Deterministic'\n    | 'AEAD_AES_256_CBC_HMAC_SHA_512-Random'\n    | 'Indexed'\n    | 'Unindexed'\n    | 'Range';\n\n  /**\n   * The id of the Binary dataKey to use for encryption\n   */\n  keyId?: Binary;\n\n  /**\n   * A unique string name corresponding to an already existing dataKey.\n   */\n  keyAltName?: string;\n\n  /** The contention factor. */\n  contentionFactor?: bigint | number;\n\n  /**\n   * The query type.\n   */\n  queryType?: 'equality' | 'range';\n\n  /** The index options for a Queryable Encryption field supporting \"range\" queries.*/\n  rangeOptions?: RangeOptions;\n}\n\n/**\n * @public\n * @experimental\n */\nexport interface ClientEncryptionRewrapManyDataKeyProviderOptions {\n  provider: ClientEncryptionDataKeyProvider;\n  masterKey?:\n    | AWSEncryptionKeyOptions\n    | AzureEncryptionKeyOptions\n    | GCPEncryptionKeyOptions\n    | KMIPEncryptionKeyOptions\n    | undefined;\n}\n\n/**\n * @public\n * Additional settings to provide when creating a new `ClientEncryption` instance.\n */\nexport interface ClientEncryptionOptions {\n  /**\n   * The namespace of the key vault, used to store encryption keys\n   */\n  keyVaultNamespace: string;\n\n  /**\n   * A MongoClient used to fetch keys from a key vault. Defaults to client.\n   */\n  keyVaultClient?: MongoClient | undefined;\n\n  /**\n   * Options for specific KMS providers to use\n   */\n  kmsProviders?: KMSProviders;\n\n  /**\n   * Options for user provided custom credential providers.\n   */\n  credentialProviders?: CredentialProviders;\n\n  /**\n   * Options for specifying a Socks5 proxy to use for connecting to the KMS.\n   */\n  proxyOptions?: ProxyOptions;\n\n  /**\n   * TLS options for kms providers to use.\n   */\n  tlsOptions?: CSFLEKMSTlsOptions;\n\n  /**\n   * @experimental\n   *\n   * The timeout setting to be used for all the operations on ClientEncryption.\n   *\n   * When provided, `timeoutMS` is used as the timeout for each operation executed on\n   * the ClientEncryption object.  For example:\n   *\n   * ```typescript\n   * const clientEncryption = new ClientEncryption(client, {\n   *  timeoutMS: 1_000\n   *  kmsProviders: { local: { key: '<KEY>' } }\n   * });\n   *\n   * // `1_000` is used as the timeout for createDataKey call\n   * await clientEncryption.createDataKey('local');\n   * ```\n   *\n   * If `timeoutMS` is configured on the provided client, the client's `timeoutMS` value\n   * will be used unless `timeoutMS` is also provided as a client encryption option.\n   *\n   * ```typescript\n   * const client = new MongoClient('<uri>', { timeoutMS: 2_000 });\n   *\n   * // timeoutMS is set to 1_000 on clientEncryption\n   * const clientEncryption = new ClientEncryption(client, {\n   *  timeoutMS: 1_000\n   *  kmsProviders: { local: { key: '<KEY>' } }\n   * });\n   * ```\n   */\n  timeoutMS?: number;\n}\n\n/**\n * @public\n * Configuration options for making an AWS encryption key\n */\nexport interface AWSEncryptionKeyOptions {\n  /**\n   * The AWS region of the KMS\n   */\n  region: string;\n\n  /**\n   * The Amazon Resource Name (ARN) to the AWS customer master key (CMK)\n   */\n  key: string;\n\n  /**\n   * An alternate host to send KMS requests to. May include port number.\n   */\n  endpoint?: string | undefined;\n}\n\n/**\n * @public\n * Configuration options for making an AWS encryption key\n */\nexport interface GCPEncryptionKeyOptions {\n  /**\n   * GCP project ID\n   */\n  projectId: string;\n\n  /**\n   * Location name (e.g. \"global\")\n   */\n  location: string;\n\n  /**\n   * Key ring name\n   */\n  keyRing: string;\n\n  /**\n   * Key name\n   */\n  keyName: string;\n\n  /**\n   * Key version\n   */\n  keyVersion?: string | undefined;\n\n  /**\n   * KMS URL, defaults to `https://www.googleapis.com/auth/cloudkms`\n   */\n  endpoint?: string | undefined;\n}\n\n/**\n * @public\n * Configuration options for making an Azure encryption key\n */\nexport interface AzureEncryptionKeyOptions {\n  /**\n   * Key name\n   */\n  keyName: string;\n\n  /**\n   * Key vault URL, typically `<name>.vault.azure.net`\n   */\n  keyVaultEndpoint: string;\n\n  /**\n   * Key version\n   */\n  keyVersion?: string | undefined;\n}\n\n/**\n * @public\n * Configuration options for making a KMIP encryption key\n */\nexport interface KMIPEncryptionKeyOptions {\n  /**\n   * keyId is the KMIP Unique Identifier to a 96 byte KMIP Secret Data managed object.\n   *\n   * If keyId is omitted, a random 96 byte KMIP Secret Data managed object will be created.\n   */\n  keyId?: string;\n\n  /**\n   * Host with optional port.\n   */\n  endpoint?: string;\n\n  /**\n   * If true, this key should be decrypted by the KMIP server.\n   *\n   * Requires `mongodb-client-encryption>=6.0.1`.\n   */\n  delegated?: boolean;\n}\n\n/**\n * @public\n * Options to provide when creating a new data key.\n */\nexport interface ClientEncryptionCreateDataKeyProviderOptions {\n  /**\n   * Identifies a new KMS-specific key used to encrypt the new data key\n   */\n  masterKey?:\n    | AWSEncryptionKeyOptions\n    | AzureEncryptionKeyOptions\n    | GCPEncryptionKeyOptions\n    | KMIPEncryptionKeyOptions\n    | undefined;\n\n  /**\n   * An optional list of string alternate names used to reference a key.\n   * If a key is created with alternate names, then encryption may refer to the key by the unique alternate name instead of by _id.\n   */\n  keyAltNames?: string[] | undefined;\n\n  /** @experimental */\n  keyMaterial?: Buffer | Binary;\n\n  /** @internal */\n  timeoutContext?: CSOTTimeoutContext;\n}\n\n/**\n * @public\n * @experimental\n */\nexport interface ClientEncryptionRewrapManyDataKeyResult {\n  /** The result of rewrapping data keys. If unset, no keys matched the filter. */\n  bulkWriteResult?: BulkWriteResult;\n}\n\n/**\n * @public\n * RangeOptions specifies index options for a Queryable Encryption field supporting \"range\" queries.\n * min, max, sparsity, trimFactor and range must match the values set in the encryptedFields of the destination collection.\n * For double and decimal128, min/max/precision must all be set, or all be unset.\n */\nexport interface RangeOptions {\n  /** min is the minimum value for the encrypted index. Required if precision is set. */\n  min?: any;\n  /** max is the minimum value for the encrypted index. Required if precision is set. */\n  max?: any;\n  /** sparsity may be used to tune performance. must be non-negative. When omitted, a default value is used. */\n  sparsity?: Long | bigint;\n  /** trimFactor may be used to tune performance. must be non-negative. When omitted, a default value is used. */\n  trimFactor?: Int32 | number;\n  /* precision determines the number of significant digits after the decimal point. May only be set for double or decimal128. */\n  precision?: number;\n}\n\n/**\n * Get the socket options from the client.\n * @param baseOptions - The mongo client options.\n * @returns ClientEncryptionSocketOptions\n */\nexport function autoSelectSocketOptions(\n  baseOptions: MongoClientOptions\n): ClientEncryptionSocketOptions {\n  const options: ClientEncryptionSocketOptions = { autoSelectFamily: true };\n  if ('autoSelectFamily' in baseOptions) {\n    options.autoSelectFamily = baseOptions.autoSelectFamily;\n  }\n  if ('autoSelectFamilyAttemptTimeout' in baseOptions) {\n    options.autoSelectFamilyAttemptTimeout = baseOptions.autoSelectFamilyAttemptTimeout;\n  }\n  return options;\n}\n", "import type { ChildProcess } from 'child_process';\n\nimport { MongoNetworkTimeoutError } from '../error';\nimport { type AutoEncryptionExtraOptions } from './auto_encrypter';\n\n/**\n * @internal\n * An internal class that handles spawning a mongocryptd.\n */\nexport class MongocryptdManager {\n  static DEFAULT_MONGOCRYPTD_URI = 'mongodb://localhost:27020';\n\n  uri: string;\n  bypassSpawn: boolean;\n  spawnPath = '';\n  spawnArgs: Array<string> = [];\n  _child?: ChildProcess;\n\n  constructor(extraOptions: AutoEncryptionExtraOptions = {}) {\n    this.uri =\n      typeof extraOptions.mongocryptdURI === 'string' && extraOptions.mongocryptdURI.length > 0\n        ? extraOptions.mongocryptdURI\n        : MongocryptdManager.DEFAULT_MONGOCRYPTD_URI;\n\n    this.bypassSpawn = !!extraOptions.mongocryptdBypassSpawn;\n\n    if (Object.hasOwn(extraOptions, 'mongocryptdSpawnPath') && extraOptions.mongocryptdSpawnPath) {\n      this.spawnPath = extraOptions.mongocryptdSpawnPath;\n    }\n    if (\n      Object.hasOwn(extraOptions, 'mongocryptdSpawnArgs') &&\n      Array.isArray(extraOptions.mongocryptdSpawnArgs)\n    ) {\n      this.spawnArgs = this.spawnArgs.concat(extraOptions.mongocryptdSpawnArgs);\n    }\n    if (\n      this.spawnArgs\n        .filter(arg => typeof arg === 'string')\n        .every(arg => arg.indexOf('--idleShutdownTimeoutSecs') < 0)\n    ) {\n      this.spawnArgs.push('--idleShutdownTimeoutSecs', '60');\n    }\n  }\n\n  /**\n   * Will check to see if a mongocryptd is up. If it is not up, it will attempt\n   * to spawn a mongocryptd in a detached process, and then wait for it to be up.\n   */\n  async spawn(): Promise<void> {\n    const cmdName = this.spawnPath || 'mongocryptd';\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const { spawn } = require('child_process') as typeof import('child_process');\n\n    // Spawned with stdio: ignore and detached: true\n    // to ensure child can outlive parent.\n    this._child = spawn(cmdName, this.spawnArgs, {\n      stdio: 'ignore',\n      detached: true\n    });\n\n    this._child.on('error', () => {\n      // From the FLE spec:\n      // \"The stdout and stderr of the spawned process MUST not be exposed in the driver\n      // (e.g. redirect to /dev/null). Users can pass the argument --logpath to\n      // extraOptions.mongocryptdSpawnArgs if they need to inspect mongocryptd logs.\n      // If spawning is necessary, the driver MUST spawn mongocryptd whenever server\n      // selection on the MongoClient to mongocryptd fails. If the MongoClient fails to\n      // connect after spawning, the server selection error is propagated to the user.\"\n      // The AutoEncrypter and MongoCryptdManager should work together to spawn\n      // mongocryptd whenever necessary.  Additionally, the `mongocryptd` intentionally\n      // shuts down after 60s and gets respawned when necessary.  We rely on server\n      // selection timeouts when connecting to the `mongocryptd` to inform users that something\n      // has been configured incorrectly.  For those reasons, we suppress stderr from\n      // the `mongocryptd` process and immediately unref the process.\n    });\n\n    // unref child to remove handle from event loop\n    this._child.unref();\n  }\n\n  /**\n   * @returns the result of `fn` or rejects with an error.\n   */\n  async withRespawn<T>(fn: () => Promise<T>): ReturnType<typeof fn> {\n    try {\n      const result = await fn();\n      return result;\n    } catch (err) {\n      // If we are not bypassing spawning, then we should retry once on a MongoTimeoutError (server selection error)\n      const shouldSpawn = err instanceof MongoNetworkTimeoutError && !this.bypassSpawn;\n      if (!shouldSpawn) {\n        throw err;\n      }\n    }\n    await this.spawn();\n    const result = await fn();\n    return result;\n  }\n}\n", "import {\n  type MongoCrypt,\n  type MongoCryptConstructor,\n  type MongoCryptOptions\n} from 'mongodb-client-encryption';\nimport * as net from 'net';\n\nimport { deserialize, type Document, serialize } from '../bson';\nimport { type CommandOptions, type ProxyOptions } from '../cmap/connection';\nimport { kDecorateResult } from '../constants';\nimport { getMongoDBClientEncryption } from '../deps';\nimport { MongoRuntimeError } from '../error';\nimport { MongoClient, type MongoClientOptions } from '../mongo_client';\nimport { type Abortable } from '../mongo_types';\nimport { MongoDBCollectionNamespace } from '../utils';\nimport { autoSelectSocketOptions } from './client_encryption';\nimport * as cryptoCallbacks from './crypto_callbacks';\nimport { MongoCryptInvalidArgumentError } from './errors';\nimport { MongocryptdManager } from './mongocryptd_manager';\nimport {\n  type CredentialProviders,\n  isEmptyCredentials,\n  type KMSProviders,\n  refreshKMSCredentials\n} from './providers';\nimport { type CSFLEKMSTlsOptions, StateMachine } from './state_machine';\n\n/** @public */\nexport interface AutoEncryptionOptions {\n  /** @internal client for metadata lookups */\n  metadataClient?: MongoClient;\n  /** A `MongoClient` used to fetch keys from a key vault */\n  keyVaultClient?: MongoClient;\n  /** The namespace where keys are stored in the key vault */\n  keyVaultNamespace?: string;\n  /** Configuration options that are used by specific KMS providers during key generation, encryption, and decryption. */\n  kmsProviders?: KMSProviders;\n  /** Configuration options for custom credential providers. */\n  credentialProviders?: CredentialProviders;\n  /**\n   * A map of namespaces to a local JSON schema for encryption\n   *\n   * **NOTE**: Supplying options.schemaMap provides more security than relying on JSON Schemas obtained from the server.\n   * It protects against a malicious server advertising a false JSON Schema, which could trick the client into sending decrypted data that should be encrypted.\n   * Schemas supplied in the schemaMap only apply to configuring automatic encryption for Client-Side Field Level Encryption.\n   * Other validation rules in the JSON schema will not be enforced by the driver and will result in an error.\n   */\n  schemaMap?: Document;\n  /** Supply a schema for the encrypted fields in the document  */\n  encryptedFieldsMap?: Document;\n  /** Allows the user to bypass auto encryption, maintaining implicit decryption */\n  bypassAutoEncryption?: boolean;\n  /** Allows users to bypass query analysis */\n  bypassQueryAnalysis?: boolean;\n  options?: {\n    /** An optional hook to catch logging messages from the underlying encryption engine */\n    logger?: (level: AutoEncryptionLoggerLevel, message: string) => void;\n  };\n  extraOptions?: {\n    /**\n     * A local process the driver communicates with to determine how to encrypt values in a command.\n     * Defaults to \"mongodb://%2Fvar%2Fmongocryptd.sock\" if domain sockets are available or \"mongodb://localhost:27020\" otherwise\n     */\n    mongocryptdURI?: string;\n    /** If true, autoEncryption will not attempt to spawn a mongocryptd before connecting  */\n    mongocryptdBypassSpawn?: boolean;\n    /** The path to the mongocryptd executable on the system */\n    mongocryptdSpawnPath?: string;\n    /** Command line arguments to use when auto-spawning a mongocryptd */\n    mongocryptdSpawnArgs?: string[];\n    /**\n     * Full path to a MongoDB Crypt shared library to be used (instead of mongocryptd).\n     *\n     * This needs to be the path to the file itself, not a directory.\n     * It can be an absolute or relative path. If the path is relative and\n     * its first component is `$ORIGIN`, it will be replaced by the directory\n     * containing the mongodb-client-encryption native addon file. Otherwise,\n     * the path will be interpreted relative to the current working directory.\n     *\n     * Currently, loading different MongoDB Crypt shared library files from different\n     * MongoClients in the same process is not supported.\n     *\n     * If this option is provided and no MongoDB Crypt shared library could be loaded\n     * from the specified location, creating the MongoClient will fail.\n     *\n     * If this option is not provided and `cryptSharedLibRequired` is not specified,\n     * the AutoEncrypter will attempt to spawn and/or use mongocryptd according\n     * to the mongocryptd-specific `extraOptions` options.\n     *\n     * Specifying a path prevents mongocryptd from being used as a fallback.\n     *\n     * Requires the MongoDB Crypt shared library, available in MongoDB 6.0 or higher.\n     */\n    cryptSharedLibPath?: string;\n    /**\n     * If specified, never use mongocryptd and instead fail when the MongoDB Crypt\n     * shared library could not be loaded.\n     *\n     * This is always true when `cryptSharedLibPath` is specified.\n     *\n     * Requires the MongoDB Crypt shared library, available in MongoDB 6.0 or higher.\n     */\n    cryptSharedLibRequired?: boolean;\n    /**\n     * Search paths for a MongoDB Crypt shared library to be used (instead of mongocryptd)\n     * Only for driver testing!\n     * @internal\n     */\n    cryptSharedLibSearchPaths?: string[];\n  };\n  proxyOptions?: ProxyOptions;\n  /** The TLS options to use connecting to the KMS provider */\n  tlsOptions?: CSFLEKMSTlsOptions;\n}\n\n/**\n * @public\n *\n * Extra options related to the mongocryptd process\n * \\* _Available in MongoDB 6.0 or higher._\n */\nexport type AutoEncryptionExtraOptions = NonNullable<AutoEncryptionOptions['extraOptions']>;\n\n/** @public */\nexport const AutoEncryptionLoggerLevel = Object.freeze({\n  FatalError: 0,\n  Error: 1,\n  Warning: 2,\n  Info: 3,\n  Trace: 4\n} as const);\n\n/**\n * @public\n * The level of severity of the log message\n *\n * | Value | Level |\n * |-------|-------|\n * | 0 | Fatal Error |\n * | 1 | Error |\n * | 2 | Warning |\n * | 3 | Info |\n * | 4 | Trace |\n */\nexport type AutoEncryptionLoggerLevel =\n  (typeof AutoEncryptionLoggerLevel)[keyof typeof AutoEncryptionLoggerLevel];\n\n/**\n * @internal An internal class to be used by the driver for auto encryption\n * **NOTE**: Not meant to be instantiated directly, this is for internal use only.\n */\nexport class AutoEncrypter {\n  _client: MongoClient;\n  _bypassEncryption: boolean;\n  _keyVaultNamespace: string;\n  _keyVaultClient: MongoClient;\n  _metaDataClient: MongoClient;\n  _proxyOptions: ProxyOptions;\n  _tlsOptions: CSFLEKMSTlsOptions;\n  _kmsProviders: KMSProviders;\n  _bypassMongocryptdAndCryptShared: boolean;\n  _contextCounter: number;\n  _credentialProviders?: CredentialProviders;\n\n  _mongocryptdManager?: MongocryptdManager;\n  _mongocryptdClient?: MongoClient;\n\n  /** @internal */\n  _mongocrypt: MongoCrypt;\n\n  /**\n   * Used by devtools to enable decorating decryption results.\n   *\n   * When set and enabled, `decrypt` will automatically recursively\n   * traverse a decrypted document and if a field has been decrypted,\n   * it will mark it as decrypted.  Compass uses this to determine which\n   * fields were decrypted.\n   */\n  [kDecorateResult] = false;\n\n  /** @internal */\n  static getMongoCrypt(): MongoCryptConstructor {\n    const encryption = getMongoDBClientEncryption();\n    if ('kModuleError' in encryption) {\n      throw encryption.kModuleError;\n    }\n    return encryption.MongoCrypt;\n  }\n\n  /**\n   * Create an AutoEncrypter\n   *\n   * **Note**: Do not instantiate this class directly. Rather, supply the relevant options to a MongoClient\n   *\n   * **Note**: Supplying `options.schemaMap` provides more security than relying on JSON Schemas obtained from the server.\n   * It protects against a malicious server advertising a false JSON Schema, which could trick the client into sending unencrypted data that should be encrypted.\n   * Schemas supplied in the schemaMap only apply to configuring automatic encryption for Client-Side Field Level Encryption.\n   * Other validation rules in the JSON schema will not be enforced by the driver and will result in an error.\n   *\n   * @example <caption>Create an AutoEncrypter that makes use of mongocryptd</caption>\n   * ```ts\n   * // Enabling autoEncryption via a MongoClient using mongocryptd\n   * const { MongoClient } = require('mongodb');\n   * const client = new MongoClient(URL, {\n   *   autoEncryption: {\n   *     kmsProviders: {\n   *       aws: {\n   *         accessKeyId: AWS_ACCESS_KEY,\n   *         secretAccessKey: AWS_SECRET_KEY\n   *       }\n   *     }\n   *   }\n   * });\n   * ```\n   *\n   * await client.connect();\n   * // From here on, the client will be encrypting / decrypting automatically\n   * @example <caption>Create an AutoEncrypter that makes use of libmongocrypt's CSFLE shared library</caption>\n   * ```ts\n   * // Enabling autoEncryption via a MongoClient using CSFLE shared library\n   * const { MongoClient } = require('mongodb');\n   * const client = new MongoClient(URL, {\n   *   autoEncryption: {\n   *     kmsProviders: {\n   *       aws: {}\n   *     },\n   *     extraOptions: {\n   *       cryptSharedLibPath: '/path/to/local/crypt/shared/lib',\n   *       cryptSharedLibRequired: true\n   *     }\n   *   }\n   * });\n   * ```\n   *\n   * await client.connect();\n   * // From here on, the client will be encrypting / decrypting automatically\n   */\n  constructor(client: MongoClient, options: AutoEncryptionOptions) {\n    this._client = client;\n    this._bypassEncryption = options.bypassAutoEncryption === true;\n\n    this._keyVaultNamespace = options.keyVaultNamespace || 'admin.datakeys';\n    this._keyVaultClient = options.keyVaultClient || client;\n    this._metaDataClient = options.metadataClient || client;\n    this._proxyOptions = options.proxyOptions || {};\n    this._tlsOptions = options.tlsOptions || {};\n    this._kmsProviders = options.kmsProviders || {};\n    this._credentialProviders = options.credentialProviders;\n\n    if (options.credentialProviders?.aws && !isEmptyCredentials('aws', this._kmsProviders)) {\n      throw new MongoCryptInvalidArgumentError(\n        'Can only provide a custom AWS credential provider when the state machine is configured for automatic AWS credential fetching'\n      );\n    }\n\n    const mongoCryptOptions: MongoCryptOptions = {\n      enableMultipleCollinfo: true,\n      cryptoCallbacks\n    };\n    if (options.schemaMap) {\n      mongoCryptOptions.schemaMap = Buffer.isBuffer(options.schemaMap)\n        ? options.schemaMap\n        : (serialize(options.schemaMap) as Buffer);\n    }\n\n    if (options.encryptedFieldsMap) {\n      mongoCryptOptions.encryptedFieldsMap = Buffer.isBuffer(options.encryptedFieldsMap)\n        ? options.encryptedFieldsMap\n        : (serialize(options.encryptedFieldsMap) as Buffer);\n    }\n\n    mongoCryptOptions.kmsProviders = !Buffer.isBuffer(this._kmsProviders)\n      ? (serialize(this._kmsProviders) as Buffer)\n      : this._kmsProviders;\n\n    if (options.options?.logger) {\n      mongoCryptOptions.logger = options.options.logger;\n    }\n\n    if (options.extraOptions && options.extraOptions.cryptSharedLibPath) {\n      mongoCryptOptions.cryptSharedLibPath = options.extraOptions.cryptSharedLibPath;\n    }\n\n    if (options.bypassQueryAnalysis) {\n      mongoCryptOptions.bypassQueryAnalysis = options.bypassQueryAnalysis;\n    }\n\n    this._bypassMongocryptdAndCryptShared = this._bypassEncryption || !!options.bypassQueryAnalysis;\n\n    if (options.extraOptions && options.extraOptions.cryptSharedLibSearchPaths) {\n      // Only for driver testing\n      mongoCryptOptions.cryptSharedLibSearchPaths = options.extraOptions.cryptSharedLibSearchPaths;\n    } else if (!this._bypassMongocryptdAndCryptShared) {\n      mongoCryptOptions.cryptSharedLibSearchPaths = ['$SYSTEM'];\n    }\n\n    const MongoCrypt = AutoEncrypter.getMongoCrypt();\n    this._mongocrypt = new MongoCrypt(mongoCryptOptions);\n    this._contextCounter = 0;\n\n    if (\n      options.extraOptions &&\n      options.extraOptions.cryptSharedLibRequired &&\n      !this.cryptSharedLibVersionInfo\n    ) {\n      throw new MongoCryptInvalidArgumentError(\n        '`cryptSharedLibRequired` set but no crypt_shared library loaded'\n      );\n    }\n\n    // Only instantiate mongocryptd manager/client once we know for sure\n    // that we are not using the CSFLE shared library.\n    if (!this._bypassMongocryptdAndCryptShared && !this.cryptSharedLibVersionInfo) {\n      this._mongocryptdManager = new MongocryptdManager(options.extraOptions);\n      const clientOptions: MongoClientOptions = {\n        serverSelectionTimeoutMS: 10000\n      };\n\n      if (\n        (options.extraOptions == null || typeof options.extraOptions.mongocryptdURI !== 'string') &&\n        !net.getDefaultAutoSelectFamily\n      ) {\n        // Only set family if autoSelectFamily options are not supported.\n        clientOptions.family = 4;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore: TS complains as this always returns true on versions where it is present.\n      if (net.getDefaultAutoSelectFamily) {\n        // AutoEncrypter is made inside of MongoClient constructor while options are being parsed,\n        // we do not have access to the options that are in progress.\n        // TODO(NODE-6449): AutoEncrypter does not use client options for autoSelectFamily\n        Object.assign(clientOptions, autoSelectSocketOptions(this._client.s?.options ?? {}));\n      }\n\n      this._mongocryptdClient = new MongoClient(this._mongocryptdManager.uri, clientOptions);\n    }\n  }\n\n  /**\n   * Initializes the auto encrypter by spawning a mongocryptd and connecting to it.\n   *\n   * This function is a no-op when bypassSpawn is set or the crypt shared library is used.\n   */\n  async init(): Promise<MongoClient | void> {\n    if (this._bypassMongocryptdAndCryptShared || this.cryptSharedLibVersionInfo) {\n      return;\n    }\n    if (!this._mongocryptdManager) {\n      throw new MongoRuntimeError(\n        'Reached impossible state: mongocryptdManager is undefined when neither bypassSpawn nor the shared lib are specified.'\n      );\n    }\n    if (!this._mongocryptdClient) {\n      throw new MongoRuntimeError(\n        'Reached impossible state: mongocryptdClient is undefined when neither bypassSpawn nor the shared lib are specified.'\n      );\n    }\n\n    if (!this._mongocryptdManager.bypassSpawn) {\n      await this._mongocryptdManager.spawn();\n    }\n\n    try {\n      const client = await this._mongocryptdClient.connect();\n      return client;\n    } catch (error) {\n      const { message } = error;\n      if (message && (message.match(/timed out after/) || message.match(/ENOTFOUND/))) {\n        throw new MongoRuntimeError(\n          'Unable to connect to `mongocryptd`, please make sure it is running or in your PATH for auto-spawn',\n          { cause: error }\n        );\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Cleans up the `_mongocryptdClient`, if present.\n   */\n  async teardown(force: boolean): Promise<void> {\n    await this._mongocryptdClient?.close(force);\n  }\n\n  /**\n   * Encrypt a command for a given namespace.\n   */\n  async encrypt(\n    ns: string,\n    cmd: Document,\n    options: CommandOptions & Abortable = {}\n  ): Promise<Document | Uint8Array> {\n    options.signal?.throwIfAborted();\n\n    if (this._bypassEncryption) {\n      // If `bypassAutoEncryption` has been specified, don't encrypt\n      return cmd;\n    }\n\n    const commandBuffer = Buffer.isBuffer(cmd) ? cmd : serialize(cmd, options);\n\n    const context = this._mongocrypt.makeEncryptionContext(\n      MongoDBCollectionNamespace.fromString(ns).db,\n      commandBuffer\n    );\n\n    context.id = this._contextCounter++;\n    context.ns = ns;\n    context.document = cmd;\n\n    const stateMachine = new StateMachine({\n      promoteValues: false,\n      promoteLongs: false,\n      proxyOptions: this._proxyOptions,\n      tlsOptions: this._tlsOptions,\n      socketOptions: autoSelectSocketOptions(this._client.s.options)\n    });\n\n    return deserialize(await stateMachine.execute(this, context, options), {\n      promoteValues: false,\n      promoteLongs: false\n    });\n  }\n\n  /**\n   * Decrypt a command response\n   */\n  async decrypt(\n    response: Uint8Array,\n    options: CommandOptions & Abortable = {}\n  ): Promise<Uint8Array> {\n    options.signal?.throwIfAborted();\n\n    const context = this._mongocrypt.makeDecryptionContext(response);\n\n    context.id = this._contextCounter++;\n\n    const stateMachine = new StateMachine({\n      ...options,\n      proxyOptions: this._proxyOptions,\n      tlsOptions: this._tlsOptions,\n      socketOptions: autoSelectSocketOptions(this._client.s.options)\n    });\n\n    return await stateMachine.execute(this, context, options);\n  }\n\n  /**\n   * Ask the user for KMS credentials.\n   *\n   * This returns anything that looks like the kmsProviders original input\n   * option. It can be empty, and any provider specified here will override\n   * the original ones.\n   */\n  async askForKMSCredentials(): Promise<KMSProviders> {\n    return await refreshKMSCredentials(this._kmsProviders, this._credentialProviders);\n  }\n\n  /**\n   * Return the current libmongocrypt's CSFLE shared library version\n   * as `{ version: bigint, versionStr: string }`, or `null` if no CSFLE\n   * shared library was loaded.\n   */\n  get cryptSharedLibVersionInfo(): { version: bigint; versionStr: string } | null {\n    return this._mongocrypt.cryptSharedLibVersionInfo;\n  }\n\n  static get libmongocryptVersion(): string {\n    return AutoEncrypter.getMongoCrypt().libmongocryptVersion;\n  }\n}\n", "import { callbackify } from 'util';\n\nimport { AutoEncrypter, type AutoEncryptionOptions } from './client-side-encryption/auto_encrypter';\nimport { MONGO_CLIENT_EVENTS } from './constants';\nimport { getMongoDBClientEncryption } from './deps';\nimport { MongoInvalidArgumentError, MongoMissingDependencyError } from './error';\nimport { MongoClient, type MongoClientOptions } from './mongo_client';\nimport { type Callback } from './utils';\n\n/** @internal */\nexport interface EncrypterOptions {\n  autoEncryption: AutoEncryptionOptions;\n  maxPoolSize?: number;\n}\n\n/** @internal */\nexport class Encrypter {\n  private internalClient: MongoClient | null;\n  bypassAutoEncryption: boolean;\n  needsConnecting: boolean;\n  autoEncrypter: AutoEncrypter;\n\n  constructor(client: MongoClient, uri: string, options: MongoClientOptions) {\n    if (typeof options.autoEncryption !== 'object') {\n      throw new MongoInvalidArgumentError('Option \"autoEncryption\" must be specified');\n    }\n    // initialize to null, if we call getInternalClient, we may set this it is important to not overwrite those function calls.\n    this.internalClient = null;\n\n    this.bypassAutoEncryption = !!options.autoEncryption.bypassAutoEncryption;\n    this.needsConnecting = false;\n\n    if (options.maxPoolSize === 0 && options.autoEncryption.keyVaultClient == null) {\n      options.autoEncryption.keyVaultClient = client;\n    } else if (options.autoEncryption.keyVaultClient == null) {\n      options.autoEncryption.keyVaultClient = this.getInternalClient(client, uri, options);\n    }\n\n    if (this.bypassAutoEncryption) {\n      options.autoEncryption.metadataClient = undefined;\n    } else if (options.maxPoolSize === 0) {\n      options.autoEncryption.metadataClient = client;\n    } else {\n      options.autoEncryption.metadataClient = this.getInternalClient(client, uri, options);\n    }\n\n    if (options.proxyHost) {\n      options.autoEncryption.proxyOptions = {\n        proxyHost: options.proxyHost,\n        proxyPort: options.proxyPort,\n        proxyUsername: options.proxyUsername,\n        proxyPassword: options.proxyPassword\n      };\n    }\n\n    this.autoEncrypter = new AutoEncrypter(client, options.autoEncryption);\n  }\n\n  getInternalClient(client: MongoClient, uri: string, options: MongoClientOptions): MongoClient {\n    let internalClient = this.internalClient;\n    if (internalClient == null) {\n      const clonedOptions: MongoClientOptions = {};\n\n      for (const key of [\n        ...Object.getOwnPropertyNames(options),\n        ...Object.getOwnPropertySymbols(options)\n      ] as string[]) {\n        if (['autoEncryption', 'minPoolSize', 'servers', 'caseTranslate', 'dbName'].includes(key))\n          continue;\n        Reflect.set(clonedOptions, key, Reflect.get(options, key));\n      }\n\n      clonedOptions.minPoolSize = 0;\n\n      internalClient = new MongoClient(uri, clonedOptions);\n      this.internalClient = internalClient;\n\n      for (const eventName of MONGO_CLIENT_EVENTS) {\n        for (const listener of client.listeners(eventName)) {\n          internalClient.on(eventName, listener);\n        }\n      }\n\n      client.on('newListener', (eventName, listener) => {\n        internalClient?.on(eventName, listener);\n      });\n\n      this.needsConnecting = true;\n    }\n    return internalClient;\n  }\n\n  async connectInternalClient(): Promise<void> {\n    const internalClient = this.internalClient;\n    if (this.needsConnecting && internalClient != null) {\n      this.needsConnecting = false;\n      await internalClient.connect();\n    }\n  }\n\n  closeCallback(client: MongoClient, force: boolean, callback: Callback<void>) {\n    callbackify(this.close.bind(this))(client, force, callback);\n  }\n\n  async close(client: MongoClient, force: boolean): Promise<void> {\n    let error;\n    try {\n      await this.autoEncrypter.teardown(force);\n    } catch (autoEncrypterError) {\n      error = autoEncrypterError;\n    }\n    const internalClient = this.internalClient;\n    if (internalClient != null && client !== internalClient) {\n      return await internalClient.close(force);\n    }\n    if (error != null) {\n      throw error;\n    }\n  }\n\n  static checkForMongoCrypt(): void {\n    const mongodbClientEncryption = getMongoDBClientEncryption();\n    if ('kModuleError' in mongodbClientEncryption) {\n      throw new MongoMissingDependencyError(\n        'Auto-encryption requested, but the module is not installed. ' +\n          'Please add `mongodb-client-encryption` as a dependency of your project',\n        {\n          cause: mongodbClientEncryption['kModuleError'],\n          dependencyName: 'mongodb-client-encryption'\n        }\n      );\n    }\n  }\n}\n", "/** @internal */\nexport class ConnectionPoolMetrics {\n  static readonly TXN = 'txn' as const;\n  static readonly CURSOR = 'cursor' as const;\n  static readonly OTHER = 'other' as const;\n\n  txnConnections = 0;\n  cursorConnections = 0;\n  otherConnections = 0;\n\n  /**\n   * Mark a connection as pinned for a specific operation.\n   */\n  markPinned(pinType: string): void {\n    if (pinType === ConnectionPoolMetrics.TXN) {\n      this.txnConnections += 1;\n    } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n      this.cursorConnections += 1;\n    } else {\n      this.otherConnections += 1;\n    }\n  }\n\n  /**\n   * Unmark a connection as pinned for an operation.\n   */\n  markUnpinned(pinType: string): void {\n    if (pinType === ConnectionPoolMetrics.TXN) {\n      this.txnConnections -= 1;\n    } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n      this.cursorConnections -= 1;\n    } else {\n      this.otherConnections -= 1;\n    }\n  }\n\n  /**\n   * Return information about the cmap metrics as a string.\n   */\n  info(maxPoolSize: number): string {\n    return (\n      'Timed out while checking out a connection from connection pool: ' +\n      `maxPoolSize: ${maxPoolSize}, ` +\n      `connections in use by cursors: ${this.cursorConnections}, ` +\n      `connections in use by transactions: ${this.txnConnections}, ` +\n      `connections in use by other operations: ${this.otherConnections}`\n    );\n  }\n\n  /**\n   * Reset the metrics to the initial values.\n   */\n  reset(): void {\n    this.txnConnections = 0;\n    this.cursorConnections = 0;\n    this.otherConnections = 0;\n  }\n}\n", "import { type Document, Long, type ObjectId } from '../bson';\nimport { type MongoError, MongoRuntimeError } from '../error';\nimport { arrayStrictEqual, compareObjectId, errorStrictEqual, HostAddress, now } from '../utils';\nimport { type ClusterTime, ServerType } from './common';\n\nconst WRITABLE_SERVER_TYPES = new Set<ServerType>([\n  ServerType.RSPrimary,\n  ServerType.Standalone,\n  ServerType.Mongos,\n  ServerType.LoadBalancer\n]);\n\nconst DATA_BEARING_SERVER_TYPES = new Set<ServerType>([\n  ServerType.RSPrimary,\n  ServerType.RSSecondary,\n  ServerType.Mongos,\n  ServerType.Standalone,\n  ServerType.LoadBalancer\n]);\n\n/** @public */\nexport interface TopologyVersion {\n  processId: ObjectId;\n  counter: Long;\n}\n\n/** @public */\nexport type TagSet = { [key: string]: string };\n\n/** @internal */\nexport interface ServerDescriptionOptions {\n  /** An Error used for better reporting debugging */\n  error?: MongoError;\n\n  /** The average round trip time to ping this server (in ms) */\n  roundTripTime?: number;\n  /** The minimum round trip time to ping this server over the past 10 samples(in ms) */\n  minRoundTripTime?: number;\n\n  /** If the client is in load balancing mode. */\n  loadBalanced?: boolean;\n}\n\n/**\n * The client's view of a single server, based on the most recent hello outcome.\n *\n * Internal type, not meant to be directly instantiated\n * @public\n */\nexport class ServerDescription {\n  address: string;\n  type: ServerType;\n  hosts: string[];\n  passives: string[];\n  arbiters: string[];\n  tags: TagSet;\n  error: MongoError | null;\n  topologyVersion: TopologyVersion | null;\n  minWireVersion: number;\n  maxWireVersion: number;\n  roundTripTime: number;\n  /** The minimum measurement of the last 10 measurements of roundTripTime that have been collected */\n  minRoundTripTime: number;\n  lastUpdateTime: number;\n  lastWriteDate: number;\n  me: string | null;\n  primary: string | null;\n  setName: string | null;\n  setVersion: number | null;\n  electionId: ObjectId | null;\n  logicalSessionTimeoutMinutes: number | null;\n  /** The max message size in bytes for the server. */\n  maxMessageSizeBytes: number | null;\n  /** The max number of writes in a bulk write command. */\n  maxWriteBatchSize: number | null;\n  /** The max bson object size. */\n  maxBsonObjectSize: number | null;\n  /** Indicates server is a mongocryptd instance. */\n  iscryptd: boolean;\n\n  // NOTE: does this belong here? It seems we should gossip the cluster time at the CMAP level\n  $clusterTime?: ClusterTime;\n\n  /**\n   * Create a ServerDescription\n   * @internal\n   *\n   * @param address - The address of the server\n   * @param hello - An optional hello response for this server\n   */\n  constructor(\n    address: HostAddress | string,\n    hello?: Document,\n    options: ServerDescriptionOptions = {}\n  ) {\n    if (address == null || address === '') {\n      throw new MongoRuntimeError('ServerDescription must be provided with a non-empty address');\n    }\n\n    this.address =\n      typeof address === 'string'\n        ? HostAddress.fromString(address).toString() // Use HostAddress to normalize\n        : address.toString();\n    this.type = parseServerType(hello, options);\n    this.hosts = hello?.hosts?.map((host: string) => host.toLowerCase()) ?? [];\n    this.passives = hello?.passives?.map((host: string) => host.toLowerCase()) ?? [];\n    this.arbiters = hello?.arbiters?.map((host: string) => host.toLowerCase()) ?? [];\n    this.tags = hello?.tags ?? {};\n    this.minWireVersion = hello?.minWireVersion ?? 0;\n    this.maxWireVersion = hello?.maxWireVersion ?? 0;\n    this.roundTripTime = options?.roundTripTime ?? -1;\n    this.minRoundTripTime = options?.minRoundTripTime ?? 0;\n    this.lastUpdateTime = now();\n    this.lastWriteDate = hello?.lastWrite?.lastWriteDate ?? 0;\n    // NOTE: This actually builds the stack string instead of holding onto the getter and all its\n    // associated references. This is done to prevent a memory leak.\n    this.error = options.error ?? null;\n    this.error?.stack;\n    // TODO(NODE-2674): Preserve int64 sent from MongoDB\n    this.topologyVersion = this.error?.topologyVersion ?? hello?.topologyVersion ?? null;\n    this.setName = hello?.setName ?? null;\n    this.setVersion = hello?.setVersion ?? null;\n    this.electionId = hello?.electionId ?? null;\n    this.logicalSessionTimeoutMinutes = hello?.logicalSessionTimeoutMinutes ?? null;\n    this.maxMessageSizeBytes = hello?.maxMessageSizeBytes ?? null;\n    this.maxWriteBatchSize = hello?.maxWriteBatchSize ?? null;\n    this.maxBsonObjectSize = hello?.maxBsonObjectSize ?? null;\n    this.primary = hello?.primary ?? null;\n    this.me = hello?.me?.toLowerCase() ?? null;\n    this.$clusterTime = hello?.$clusterTime ?? null;\n    this.iscryptd = Boolean(hello?.iscryptd);\n  }\n\n  get hostAddress(): HostAddress {\n    return HostAddress.fromString(this.address);\n  }\n\n  get allHosts(): string[] {\n    return this.hosts.concat(this.arbiters).concat(this.passives);\n  }\n\n  /** Is this server available for reads*/\n  get isReadable(): boolean {\n    return this.type === ServerType.RSSecondary || this.isWritable;\n  }\n\n  /** Is this server data bearing */\n  get isDataBearing(): boolean {\n    return DATA_BEARING_SERVER_TYPES.has(this.type);\n  }\n\n  /** Is this server available for writes */\n  get isWritable(): boolean {\n    return WRITABLE_SERVER_TYPES.has(this.type);\n  }\n\n  get host(): string {\n    const chopLength = `:${this.port}`.length;\n    return this.address.slice(0, -chopLength);\n  }\n\n  get port(): number {\n    const port = this.address.split(':').pop();\n    return port ? Number.parseInt(port, 10) : 27017;\n  }\n\n  /**\n   * Determines if another `ServerDescription` is equal to this one per the rules defined in the SDAM specification.\n   * @see https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.md\n   */\n  equals(other?: ServerDescription | null): boolean {\n    // Despite using the comparator that would determine a nullish topologyVersion as greater than\n    // for equality we should only always perform direct equality comparison\n    const topologyVersionsEqual =\n      this.topologyVersion === other?.topologyVersion ||\n      compareTopologyVersion(this.topologyVersion, other?.topologyVersion) === 0;\n\n    const electionIdsEqual =\n      this.electionId != null && other?.electionId != null\n        ? compareObjectId(this.electionId, other.electionId) === 0\n        : this.electionId === other?.electionId;\n\n    return (\n      other != null &&\n      other.iscryptd === this.iscryptd &&\n      errorStrictEqual(this.error, other.error) &&\n      this.type === other.type &&\n      this.minWireVersion === other.minWireVersion &&\n      arrayStrictEqual(this.hosts, other.hosts) &&\n      tagsStrictEqual(this.tags, other.tags) &&\n      this.setName === other.setName &&\n      this.setVersion === other.setVersion &&\n      electionIdsEqual &&\n      this.primary === other.primary &&\n      this.logicalSessionTimeoutMinutes === other.logicalSessionTimeoutMinutes &&\n      topologyVersionsEqual\n    );\n  }\n}\n\n// Parses a `hello` message and determines the server type\nexport function parseServerType(hello?: Document, options?: ServerDescriptionOptions): ServerType {\n  if (options?.loadBalanced) {\n    return ServerType.LoadBalancer;\n  }\n\n  if (!hello || !hello.ok) {\n    return ServerType.Unknown;\n  }\n\n  if (hello.isreplicaset) {\n    return ServerType.RSGhost;\n  }\n\n  if (hello.msg && hello.msg === 'isdbgrid') {\n    return ServerType.Mongos;\n  }\n\n  if (hello.setName) {\n    if (hello.hidden) {\n      return ServerType.RSOther;\n    } else if (hello.isWritablePrimary) {\n      return ServerType.RSPrimary;\n    } else if (hello.secondary) {\n      return ServerType.RSSecondary;\n    } else if (hello.arbiterOnly) {\n      return ServerType.RSArbiter;\n    } else {\n      return ServerType.RSOther;\n    }\n  }\n\n  return ServerType.Standalone;\n}\n\nfunction tagsStrictEqual(tags: TagSet, tags2: TagSet): boolean {\n  const tagsKeys = Object.keys(tags);\n  const tags2Keys = Object.keys(tags2);\n\n  return (\n    tagsKeys.length === tags2Keys.length &&\n    tagsKeys.every((key: string) => tags2[key] === tags[key])\n  );\n}\n\n/**\n * Compares two topology versions.\n *\n * 1. If the response topologyVersion is unset or the ServerDescription's\n *    topologyVersion is null, the client MUST assume the response is more recent.\n * 1. If the response's topologyVersion.processId is not equal to the\n *    ServerDescription's, the client MUST assume the response is more recent.\n * 1. If the response's topologyVersion.processId is equal to the\n *    ServerDescription's, the client MUST use the counter field to determine\n *    which topologyVersion is more recent.\n *\n * ```ts\n * currentTv <   newTv === -1\n * currentTv === newTv === 0\n * currentTv >   newTv === 1\n * ```\n */\nexport function compareTopologyVersion(\n  currentTv?: TopologyVersion | null,\n  newTv?: TopologyVersion | null\n): 0 | -1 | 1 {\n  if (currentTv == null || newTv == null) {\n    return -1;\n  }\n\n  if (!currentTv.processId.equals(newTv.processId)) {\n    return -1;\n  }\n\n  // TODO(NODE-2674): Preserve int64 sent from MongoDB\n  const currentCounter =\n    typeof currentTv.counter === 'bigint'\n      ? Long.fromBigInt(currentTv.counter)\n      : Long.isLong(currentTv.counter)\n        ? currentTv.counter\n        : Long.fromNumber(currentTv.counter);\n\n  const newCounter =\n    typeof newTv.counter === 'bigint'\n      ? Long.fromBigInt(newTv.counter)\n      : Long.isLong(newTv.counter)\n        ? newTv.counter\n        : Long.fromNumber(newTv.counter);\n\n  return currentCounter.compare(newCounter);\n}\n", "import { EJSON, type ObjectId } from '../bson';\nimport * as WIRE_CONSTANTS from '../cmap/wire_protocol/constants';\nimport { type MongoError, MongoRuntimeError, MongoStalePrimaryError } from '../error';\nimport { compareObjectId, shuffle } from '../utils';\nimport { ServerType, TopologyType } from './common';\nimport { ServerDescription } from './server_description';\nimport type { SrvPollingEvent } from './srv_polling';\n\n// constants related to compatibility checks\nconst MIN_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_SERVER_VERSION;\nconst MAX_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_SERVER_VERSION;\nconst MIN_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_WIRE_VERSION;\nconst MAX_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_WIRE_VERSION;\n\nconst MONGOS_OR_UNKNOWN = new Set<ServerType>([ServerType.Mongos, ServerType.Unknown]);\nconst MONGOS_OR_STANDALONE = new Set<ServerType>([ServerType.Mongos, ServerType.Standalone]);\nconst NON_PRIMARY_RS_MEMBERS = new Set<ServerType>([\n  ServerType.RSSecondary,\n  ServerType.RSArbiter,\n  ServerType.RSOther\n]);\n\n/** @public */\nexport interface TopologyDescriptionOptions {\n  heartbeatFrequencyMS?: number;\n  localThresholdMS?: number;\n}\n\n/**\n * Representation of a deployment of servers\n * @public\n */\nexport class TopologyDescription {\n  type: TopologyType;\n  setName: string | null;\n  maxSetVersion: number | null;\n  maxElectionId: ObjectId | null;\n  servers: Map<string, ServerDescription>;\n  stale: boolean;\n  compatible: boolean;\n  compatibilityError?: string;\n  logicalSessionTimeoutMinutes: number | null;\n  heartbeatFrequencyMS: number;\n  localThresholdMS: number;\n  commonWireVersion: number;\n  /**\n   * Create a TopologyDescription\n   */\n  constructor(\n    topologyType: TopologyType,\n    serverDescriptions: Map<string, ServerDescription> | null = null,\n    setName: string | null = null,\n    maxSetVersion: number | null = null,\n    maxElectionId: ObjectId | null = null,\n    commonWireVersion: number | null = null,\n    options: TopologyDescriptionOptions | null = null\n  ) {\n    options = options ?? {};\n\n    this.type = topologyType ?? TopologyType.Unknown;\n    this.servers = serverDescriptions ?? new Map();\n    this.stale = false;\n    this.compatible = true;\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 0;\n    this.localThresholdMS = options.localThresholdMS ?? 15;\n    this.setName = setName ?? null;\n    this.maxElectionId = maxElectionId ?? null;\n    this.maxSetVersion = maxSetVersion ?? null;\n    this.commonWireVersion = commonWireVersion ?? 0;\n\n    // determine server compatibility\n    for (const serverDescription of this.servers.values()) {\n      // Load balancer mode is always compatible.\n      if (\n        serverDescription.type === ServerType.Unknown ||\n        serverDescription.type === ServerType.LoadBalancer\n      ) {\n        continue;\n      }\n\n      if (serverDescription.minWireVersion > MAX_SUPPORTED_WIRE_VERSION) {\n        this.compatible = false;\n        this.compatibilityError = `Server at ${serverDescription.address} requires wire version ${serverDescription.minWireVersion}, but this version of the driver only supports up to ${MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${MAX_SUPPORTED_SERVER_VERSION})`;\n      }\n\n      if (serverDescription.maxWireVersion < MIN_SUPPORTED_WIRE_VERSION) {\n        this.compatible = false;\n        this.compatibilityError = `Server at ${serverDescription.address} reports wire version ${serverDescription.maxWireVersion}, but this version of the driver requires at least ${MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${MIN_SUPPORTED_SERVER_VERSION}).`;\n        break;\n      }\n    }\n\n    // Whenever a client updates the TopologyDescription from a hello response, it MUST set\n    // TopologyDescription.logicalSessionTimeoutMinutes to the smallest logicalSessionTimeoutMinutes\n    // value among ServerDescriptions of all data-bearing server types. If any have a null\n    // logicalSessionTimeoutMinutes, then TopologyDescription.logicalSessionTimeoutMinutes MUST be\n    // set to null.\n    this.logicalSessionTimeoutMinutes = null;\n    for (const [, server] of this.servers) {\n      if (server.isReadable) {\n        if (server.logicalSessionTimeoutMinutes == null) {\n          // If any of the servers have a null logicalSessionsTimeout, then the whole topology does\n          this.logicalSessionTimeoutMinutes = null;\n          break;\n        }\n\n        if (this.logicalSessionTimeoutMinutes == null) {\n          // First server with a non null logicalSessionsTimeout\n          this.logicalSessionTimeoutMinutes = server.logicalSessionTimeoutMinutes;\n          continue;\n        }\n\n        // Always select the smaller of the:\n        // current server logicalSessionsTimeout and the topologies logicalSessionsTimeout\n        this.logicalSessionTimeoutMinutes = Math.min(\n          this.logicalSessionTimeoutMinutes,\n          server.logicalSessionTimeoutMinutes\n        );\n      }\n    }\n  }\n\n  /**\n   * Returns a new TopologyDescription based on the SrvPollingEvent\n   * @internal\n   */\n  updateFromSrvPollingEvent(ev: SrvPollingEvent, srvMaxHosts = 0): TopologyDescription {\n    /** The SRV addresses defines the set of addresses we should be using */\n    const incomingHostnames = ev.hostnames();\n    const currentHostnames = new Set(this.servers.keys());\n\n    const hostnamesToAdd = new Set<string>(incomingHostnames);\n    const hostnamesToRemove = new Set<string>();\n    for (const hostname of currentHostnames) {\n      // filter hostnamesToAdd (made from incomingHostnames) down to what is *not* present in currentHostnames\n      hostnamesToAdd.delete(hostname);\n      if (!incomingHostnames.has(hostname)) {\n        // If the SRV Records no longer include this hostname\n        // we have to stop using it\n        hostnamesToRemove.add(hostname);\n      }\n    }\n\n    if (hostnamesToAdd.size === 0 && hostnamesToRemove.size === 0) {\n      // No new hosts to add and none to remove\n      return this;\n    }\n\n    const serverDescriptions = new Map(this.servers);\n    for (const removedHost of hostnamesToRemove) {\n      serverDescriptions.delete(removedHost);\n    }\n\n    if (hostnamesToAdd.size > 0) {\n      if (srvMaxHosts === 0) {\n        // Add all!\n        for (const hostToAdd of hostnamesToAdd) {\n          serverDescriptions.set(hostToAdd, new ServerDescription(hostToAdd));\n        }\n      } else if (serverDescriptions.size < srvMaxHosts) {\n        // Add only the amount needed to get us back to srvMaxHosts\n        const selectedHosts = shuffle(hostnamesToAdd, srvMaxHosts - serverDescriptions.size);\n        for (const selectedHostToAdd of selectedHosts) {\n          serverDescriptions.set(selectedHostToAdd, new ServerDescription(selectedHostToAdd));\n        }\n      }\n    }\n\n    return new TopologyDescription(\n      this.type,\n      serverDescriptions,\n      this.setName,\n      this.maxSetVersion,\n      this.maxElectionId,\n      this.commonWireVersion,\n      { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS }\n    );\n  }\n\n  /**\n   * Returns a copy of this description updated with a given ServerDescription\n   * @internal\n   */\n  update(serverDescription: ServerDescription): TopologyDescription {\n    const address = serverDescription.address;\n\n    // potentially mutated values\n    let { type: topologyType, setName, maxSetVersion, maxElectionId, commonWireVersion } = this;\n\n    const serverType = serverDescription.type;\n    const serverDescriptions = new Map(this.servers);\n\n    // update common wire version\n    if (serverDescription.maxWireVersion !== 0) {\n      if (commonWireVersion == null) {\n        commonWireVersion = serverDescription.maxWireVersion;\n      } else {\n        commonWireVersion = Math.min(commonWireVersion, serverDescription.maxWireVersion);\n      }\n    }\n\n    if (\n      typeof serverDescription.setName === 'string' &&\n      typeof setName === 'string' &&\n      serverDescription.setName !== setName\n    ) {\n      if (topologyType === TopologyType.Single) {\n        // \"Single\" Topology with setName mismatch is direct connection usage, mark unknown do not remove\n        serverDescription = new ServerDescription(address);\n      } else {\n        serverDescriptions.delete(address);\n      }\n    }\n\n    // update the actual server description\n    serverDescriptions.set(address, serverDescription);\n\n    if (topologyType === TopologyType.Single) {\n      // once we are defined as single, that never changes\n      return new TopologyDescription(\n        TopologyType.Single,\n        serverDescriptions,\n        setName,\n        maxSetVersion,\n        maxElectionId,\n        commonWireVersion,\n        { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS }\n      );\n    }\n\n    if (topologyType === TopologyType.Unknown) {\n      if (serverType === ServerType.Standalone && this.servers.size !== 1) {\n        serverDescriptions.delete(address);\n      } else {\n        topologyType = topologyTypeForServerType(serverType);\n      }\n    }\n\n    if (topologyType === TopologyType.Sharded) {\n      if (!MONGOS_OR_UNKNOWN.has(serverType)) {\n        serverDescriptions.delete(address);\n      }\n    }\n\n    if (topologyType === TopologyType.ReplicaSetNoPrimary) {\n      if (MONGOS_OR_STANDALONE.has(serverType)) {\n        serverDescriptions.delete(address);\n      }\n\n      if (serverType === ServerType.RSPrimary) {\n        const result = updateRsFromPrimary(\n          serverDescriptions,\n          serverDescription,\n          setName,\n          maxSetVersion,\n          maxElectionId\n        );\n\n        topologyType = result[0];\n        setName = result[1];\n        maxSetVersion = result[2];\n        maxElectionId = result[3];\n      } else if (NON_PRIMARY_RS_MEMBERS.has(serverType)) {\n        const result = updateRsNoPrimaryFromMember(serverDescriptions, serverDescription, setName);\n        topologyType = result[0];\n        setName = result[1];\n      }\n    }\n\n    if (topologyType === TopologyType.ReplicaSetWithPrimary) {\n      if (MONGOS_OR_STANDALONE.has(serverType)) {\n        serverDescriptions.delete(address);\n        topologyType = checkHasPrimary(serverDescriptions);\n      } else if (serverType === ServerType.RSPrimary) {\n        const result = updateRsFromPrimary(\n          serverDescriptions,\n          serverDescription,\n          setName,\n          maxSetVersion,\n          maxElectionId\n        );\n\n        topologyType = result[0];\n        setName = result[1];\n        maxSetVersion = result[2];\n        maxElectionId = result[3];\n      } else if (NON_PRIMARY_RS_MEMBERS.has(serverType)) {\n        topologyType = updateRsWithPrimaryFromMember(\n          serverDescriptions,\n          serverDescription,\n          setName\n        );\n      } else {\n        topologyType = checkHasPrimary(serverDescriptions);\n      }\n    }\n\n    return new TopologyDescription(\n      topologyType,\n      serverDescriptions,\n      setName,\n      maxSetVersion,\n      maxElectionId,\n      commonWireVersion,\n      { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS }\n    );\n  }\n\n  get error(): MongoError | null {\n    const descriptionsWithError = Array.from(this.servers.values()).filter(\n      (sd: ServerDescription) => sd.error\n    );\n\n    if (descriptionsWithError.length > 0) {\n      return descriptionsWithError[0].error;\n    }\n\n    return null;\n  }\n\n  /**\n   * Determines if the topology description has any known servers\n   */\n  get hasKnownServers(): boolean {\n    return Array.from(this.servers.values()).some(\n      (sd: ServerDescription) => sd.type !== ServerType.Unknown\n    );\n  }\n\n  /**\n   * Determines if this topology description has a data-bearing server available.\n   */\n  get hasDataBearingServers(): boolean {\n    return Array.from(this.servers.values()).some((sd: ServerDescription) => sd.isDataBearing);\n  }\n\n  /**\n   * Determines if the topology has a definition for the provided address\n   * @internal\n   */\n  hasServer(address: string): boolean {\n    return this.servers.has(address);\n  }\n\n  /**\n   * Returns a JSON-serializable representation of the TopologyDescription.  This is primarily\n   * intended for use with JSON.stringify().\n   *\n   * This method will not throw.\n   */\n  toJSON() {\n    return EJSON.serialize(this);\n  }\n}\n\nfunction topologyTypeForServerType(serverType: ServerType): TopologyType {\n  switch (serverType) {\n    case ServerType.Standalone:\n      return TopologyType.Single;\n    case ServerType.Mongos:\n      return TopologyType.Sharded;\n    case ServerType.RSPrimary:\n      return TopologyType.ReplicaSetWithPrimary;\n    case ServerType.RSOther:\n    case ServerType.RSSecondary:\n      return TopologyType.ReplicaSetNoPrimary;\n    default:\n      return TopologyType.Unknown;\n  }\n}\n\nfunction updateRsFromPrimary(\n  serverDescriptions: Map<string, ServerDescription>,\n  serverDescription: ServerDescription,\n  setName: string | null = null,\n  maxSetVersion: number | null = null,\n  maxElectionId: ObjectId | null = null\n): [TopologyType, string | null, number | null, ObjectId | null] {\n  const setVersionElectionIdMismatch = (\n    serverDescription: ServerDescription,\n    maxSetVersion: number | null,\n    maxElectionId: ObjectId | null\n  ) => {\n    return (\n      `primary marked stale due to electionId/setVersion mismatch:` +\n      ` server setVersion: ${serverDescription.setVersion},` +\n      ` server electionId: ${serverDescription.electionId},` +\n      ` topology setVersion: ${maxSetVersion},` +\n      ` topology electionId: ${maxElectionId}`\n    );\n  };\n  setName = setName || serverDescription.setName;\n  if (setName !== serverDescription.setName) {\n    serverDescriptions.delete(serverDescription.address);\n    return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n  }\n\n  if (serverDescription.maxWireVersion >= 17) {\n    const electionIdComparison = compareObjectId(maxElectionId, serverDescription.electionId);\n    const maxElectionIdIsEqual = electionIdComparison === 0;\n    const maxElectionIdIsLess = electionIdComparison === -1;\n    const maxSetVersionIsLessOrEqual =\n      (maxSetVersion ?? -1) <= (serverDescription.setVersion ?? -1);\n\n    if (maxElectionIdIsLess || (maxElectionIdIsEqual && maxSetVersionIsLessOrEqual)) {\n      // The reported electionId was greater\n      // or the electionId was equal and reported setVersion was greater\n      // Always update both values, they are a tuple\n      maxElectionId = serverDescription.electionId;\n      maxSetVersion = serverDescription.setVersion;\n    } else {\n      // Stale primary\n      // replace serverDescription with a default ServerDescription of type \"Unknown\"\n      serverDescriptions.set(\n        serverDescription.address,\n        new ServerDescription(serverDescription.address, undefined, {\n          error: new MongoStalePrimaryError(\n            setVersionElectionIdMismatch(serverDescription, maxSetVersion, maxElectionId)\n          )\n        })\n      );\n\n      return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n    }\n  } else {\n    const electionId = serverDescription.electionId ? serverDescription.electionId : null;\n    if (serverDescription.setVersion && electionId) {\n      if (maxSetVersion && maxElectionId) {\n        if (\n          maxSetVersion > serverDescription.setVersion ||\n          compareObjectId(maxElectionId, electionId) > 0\n        ) {\n          // this primary is stale, we must remove it\n          serverDescriptions.set(\n            serverDescription.address,\n            new ServerDescription(serverDescription.address, undefined, {\n              error: new MongoStalePrimaryError(\n                setVersionElectionIdMismatch(serverDescription, maxSetVersion, maxElectionId)\n              )\n            })\n          );\n\n          return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n        }\n      }\n\n      maxElectionId = serverDescription.electionId;\n    }\n\n    if (\n      serverDescription.setVersion != null &&\n      (maxSetVersion == null || serverDescription.setVersion > maxSetVersion)\n    ) {\n      maxSetVersion = serverDescription.setVersion;\n    }\n  }\n\n  // We've heard from the primary. Is it the same primary as before?\n  for (const [address, server] of serverDescriptions) {\n    if (server.type === ServerType.RSPrimary && server.address !== serverDescription.address) {\n      // Reset old primary's type to Unknown.\n      serverDescriptions.set(\n        address,\n        new ServerDescription(server.address, undefined, {\n          error: new MongoStalePrimaryError(\n            'primary marked stale due to discovery of newer primary'\n          )\n        })\n      );\n\n      // There can only be one primary\n      break;\n    }\n  }\n\n  // Discover new hosts from this primary's response.\n  serverDescription.allHosts.forEach((address: string) => {\n    if (!serverDescriptions.has(address)) {\n      serverDescriptions.set(address, new ServerDescription(address));\n    }\n  });\n\n  // Remove hosts not in the response.\n  const currentAddresses = Array.from(serverDescriptions.keys());\n  const responseAddresses = serverDescription.allHosts;\n  currentAddresses\n    .filter((addr: string) => responseAddresses.indexOf(addr) === -1)\n    .forEach((address: string) => {\n      serverDescriptions.delete(address);\n    });\n\n  return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n}\n\nfunction updateRsWithPrimaryFromMember(\n  serverDescriptions: Map<string, ServerDescription>,\n  serverDescription: ServerDescription,\n  setName: string | null = null\n): TopologyType {\n  if (setName == null) {\n    // TODO(NODE-3483): should be an appropriate runtime error\n    throw new MongoRuntimeError('Argument \"setName\" is required if connected to a replica set');\n  }\n\n  if (\n    setName !== serverDescription.setName ||\n    (serverDescription.me && serverDescription.address !== serverDescription.me)\n  ) {\n    serverDescriptions.delete(serverDescription.address);\n  }\n\n  return checkHasPrimary(serverDescriptions);\n}\n\nfunction updateRsNoPrimaryFromMember(\n  serverDescriptions: Map<string, ServerDescription>,\n  serverDescription: ServerDescription,\n  setName: string | null = null\n): [TopologyType, string | null] {\n  const topologyType = TopologyType.ReplicaSetNoPrimary;\n  setName = setName ?? serverDescription.setName;\n  if (setName !== serverDescription.setName) {\n    serverDescriptions.delete(serverDescription.address);\n    return [topologyType, setName];\n  }\n\n  serverDescription.allHosts.forEach((address: string) => {\n    if (!serverDescriptions.has(address)) {\n      serverDescriptions.set(address, new ServerDescription(address));\n    }\n  });\n\n  if (serverDescription.me && serverDescription.address !== serverDescription.me) {\n    serverDescriptions.delete(serverDescription.address);\n  }\n\n  return [topologyType, setName];\n}\n\nfunction checkHasPrimary(serverDescriptions: Map<string, ServerDescription>): TopologyType {\n  for (const serverDescription of serverDescriptions.values()) {\n    if (serverDescription.type === ServerType.RSPrimary) {\n      return TopologyType.ReplicaSetWithPrimary;\n    }\n  }\n\n  return TopologyType.ReplicaSetNoPrimary;\n}\n", "import { MongoInvalidArgumentError } from '../../error';\nimport { ReadPreference, type ReadPreferenceLike } from '../../read_preference';\nimport { ServerType } from '../../sdam/common';\nimport type { Server } from '../../sdam/server';\nimport type { ServerDescription } from '../../sdam/server_description';\nimport type { Topology } from '../../sdam/topology';\nimport { TopologyDescription } from '../../sdam/topology_description';\nimport type { Connection } from '../connection';\n\nexport interface ReadPreferenceOption {\n  readPreference?: ReadPreferenceLike;\n}\n\nexport function getReadPreference(options?: ReadPreferenceOption): ReadPreference {\n  // Default to command version of the readPreference.\n  let readPreference = options?.readPreference ?? ReadPreference.primary;\n\n  if (typeof readPreference === 'string') {\n    readPreference = ReadPreference.fromString(readPreference);\n  }\n\n  if (!(readPreference instanceof ReadPreference)) {\n    throw new MongoInvalidArgumentError(\n      'Option \"readPreference\" must be a ReadPreference instance'\n    );\n  }\n\n  return readPreference;\n}\n\nexport function isSharded(topologyOrServer?: Topology | Server | Connection): boolean {\n  if (topologyOrServer == null) {\n    return false;\n  }\n\n  if (topologyOrServer.description && topologyOrServer.description.type === ServerType.Mongos) {\n    return true;\n  }\n\n  // NOTE: This is incredibly inefficient, and should be removed once command construction\n  // happens based on `Server` not `Topology`.\n  if (topologyOrServer.description && topologyOrServer.description instanceof TopologyDescription) {\n    const servers: ServerDescription[] = Array.from(topologyOrServer.description.servers.values());\n    return servers.some((server: ServerDescription) => server.type === ServerType.Mongos);\n  }\n\n  return false;\n}\n", "import type { Document } from './bson';\nimport { MongoRuntimeError, MongoTransactionError } from './error';\nimport type { CommandOperationOptions } from './operations/command';\nimport { ReadConcern, type ReadConcernLike } from './read_concern';\nimport { ReadPreference, type ReadPreferenceLike } from './read_preference';\nimport type { Server } from './sdam/server';\nimport { WriteConcern } from './write_concern';\n\n/** @internal */\nexport const TxnState = Object.freeze({\n  NO_TRANSACTION: 'NO_TRANSACTION',\n  STARTING_TRANSACTION: 'STARTING_TRANSACTION',\n  TRANSACTION_IN_PROGRESS: 'TRANSACTION_IN_PROGRESS',\n  TRANSACTION_COMMITTED: 'TRANSACTION_COMMITTED',\n  TRANSACTION_COMMITTED_EMPTY: 'TRANSACTION_COMMITTED_EMPTY',\n  TRANSACTION_ABORTED: 'TRANSACTION_ABORTED'\n} as const);\n\n/** @internal */\nexport type TxnState = (typeof TxnState)[keyof typeof TxnState];\n\nconst stateMachine: { [state in TxnState]: TxnState[] } = {\n  [TxnState.NO_TRANSACTION]: [TxnState.NO_TRANSACTION, TxnState.STARTING_TRANSACTION],\n  [TxnState.STARTING_TRANSACTION]: [\n    TxnState.TRANSACTION_IN_PROGRESS,\n    TxnState.TRANSACTION_COMMITTED,\n    TxnState.TRANSACTION_COMMITTED_EMPTY,\n    TxnState.TRANSACTION_ABORTED\n  ],\n  [TxnState.TRANSACTION_IN_PROGRESS]: [\n    TxnState.TRANSACTION_IN_PROGRESS,\n    TxnState.TRANSACTION_COMMITTED,\n    TxnState.TRANSACTION_ABORTED\n  ],\n  [TxnState.TRANSACTION_COMMITTED]: [\n    TxnState.TRANSACTION_COMMITTED,\n    TxnState.TRANSACTION_COMMITTED_EMPTY,\n    TxnState.STARTING_TRANSACTION,\n    TxnState.NO_TRANSACTION\n  ],\n  [TxnState.TRANSACTION_ABORTED]: [TxnState.STARTING_TRANSACTION, TxnState.NO_TRANSACTION],\n  [TxnState.TRANSACTION_COMMITTED_EMPTY]: [\n    TxnState.TRANSACTION_COMMITTED_EMPTY,\n    TxnState.NO_TRANSACTION\n  ]\n};\n\nconst ACTIVE_STATES: Set<TxnState> = new Set([\n  TxnState.STARTING_TRANSACTION,\n  TxnState.TRANSACTION_IN_PROGRESS\n]);\n\nconst COMMITTED_STATES: Set<TxnState> = new Set([\n  TxnState.TRANSACTION_COMMITTED,\n  TxnState.TRANSACTION_COMMITTED_EMPTY,\n  TxnState.TRANSACTION_ABORTED\n]);\n\n/**\n * Configuration options for a transaction.\n * @public\n */\nexport interface TransactionOptions extends Omit<CommandOperationOptions, 'timeoutMS'> {\n  // TODO(NODE-3344): These options use the proper class forms of these settings, it should accept the basic enum values too\n  /** A default read concern for commands in this transaction */\n  readConcern?: ReadConcernLike;\n  /** A default writeConcern for commands in this transaction */\n  writeConcern?: WriteConcern;\n  /** A default read preference for commands in this transaction */\n  readPreference?: ReadPreferenceLike;\n  /** Specifies the maximum amount of time to allow a commit action on a transaction to run in milliseconds */\n  maxCommitTimeMS?: number;\n}\n\n/**\n * @public\n * A class maintaining state related to a server transaction. Internal Only\n */\nexport class Transaction {\n  /** @internal */\n  state: TxnState;\n  options: TransactionOptions;\n  /** @internal */\n  _pinnedServer?: Server;\n  /** @internal */\n  _recoveryToken?: Document;\n\n  /** Create a transaction @internal */\n  constructor(options?: TransactionOptions) {\n    options = options ?? {};\n    this.state = TxnState.NO_TRANSACTION;\n    this.options = {};\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern) {\n      if (writeConcern.w === 0) {\n        throw new MongoTransactionError('Transactions do not support unacknowledged write concern');\n      }\n\n      this.options.writeConcern = writeConcern;\n    }\n\n    if (options.readConcern) {\n      this.options.readConcern = ReadConcern.fromOptions(options);\n    }\n\n    if (options.readPreference) {\n      this.options.readPreference = ReadPreference.fromOptions(options);\n    }\n\n    if (options.maxCommitTimeMS) {\n      this.options.maxTimeMS = options.maxCommitTimeMS;\n    }\n\n    // TODO: This isn't technically necessary\n    this._pinnedServer = undefined;\n    this._recoveryToken = undefined;\n  }\n\n  /** @internal */\n  get server(): Server | undefined {\n    return this._pinnedServer;\n  }\n\n  get recoveryToken(): Document | undefined {\n    return this._recoveryToken;\n  }\n\n  get isPinned(): boolean {\n    return !!this.server;\n  }\n\n  /** @returns Whether the transaction has started */\n  get isStarting(): boolean {\n    return this.state === TxnState.STARTING_TRANSACTION;\n  }\n\n  /**\n   * @returns Whether this session is presently in a transaction\n   */\n  get isActive(): boolean {\n    return ACTIVE_STATES.has(this.state);\n  }\n\n  get isCommitted(): boolean {\n    return COMMITTED_STATES.has(this.state);\n  }\n  /**\n   * Transition the transaction in the state machine\n   * @internal\n   * @param nextState - The new state to transition to\n   */\n  transition(nextState: TxnState): void {\n    const nextStates = stateMachine[this.state];\n    if (nextStates && nextStates.includes(nextState)) {\n      this.state = nextState;\n      if (\n        this.state === TxnState.NO_TRANSACTION ||\n        this.state === TxnState.STARTING_TRANSACTION ||\n        this.state === TxnState.TRANSACTION_ABORTED\n      ) {\n        this.unpinServer();\n      }\n      return;\n    }\n\n    throw new MongoRuntimeError(\n      `Attempted illegal state transition from [${this.state}] to [${nextState}]`\n    );\n  }\n\n  /** @internal */\n  pinServer(server: Server): void {\n    if (this.isActive) {\n      this._pinnedServer = server;\n    }\n  }\n\n  /** @internal */\n  unpinServer(): void {\n    this._pinnedServer = undefined;\n  }\n}\n\nexport function isTransactionCommand(command: Document): boolean {\n  return !!(command.commitTransaction || command.abortTransaction);\n}\n", "import { Binary, type Document, Long, type Timestamp } from './bson';\nimport type { CommandOptions, Connection } from './cmap/connection';\nimport { ConnectionPoolMetrics } from './cmap/metrics';\nimport { type MongoDBResponse } from './cmap/wire_protocol/responses';\nimport { isSharded } from './cmap/wire_protocol/shared';\nimport { PINNED, UNPINNED } from './constants';\nimport type { AbstractCursor } from './cursor/abstract_cursor';\nimport {\n  type AnyError,\n  isRetryableWriteError,\n  MongoAPIError,\n  MongoCompatibilityError,\n  MONGODB_ERROR_CODES,\n  type MongoDriverError,\n  MongoError,\n  MongoErrorLabel,\n  MongoExpiredSessionError,\n  MongoInvalidArgumentError,\n  MongoRuntimeError,\n  MongoServerError,\n  MongoTransactionError,\n  MongoWriteConcernError\n} from './error';\nimport type { MongoClient, MongoOptions } from './mongo_client';\nimport { TypedEventEmitter } from './mongo_types';\nimport { executeOperation } from './operations/execute_operation';\nimport { RunAdminCommandOperation } from './operations/run_command';\nimport { ReadConcernLevel } from './read_concern';\nimport { ReadPreference } from './read_preference';\nimport { type AsyncDisposable, configureResourceManagement } from './resource_management';\nimport { _advanceClusterTime, type ClusterTime, TopologyType } from './sdam/common';\nimport { TimeoutContext } from './timeout';\nimport {\n  isTransactionCommand,\n  Transaction,\n  type TransactionOptions,\n  TxnState\n} from './transactions';\nimport {\n  ByteUtils,\n  calculateDurationInMs,\n  commandSupportsReadConcern,\n  isPromiseLike,\n  List,\n  maxWireVersion,\n  noop,\n  now,\n  squashError,\n  uuidV4\n} from './utils';\nimport { WriteConcern, type WriteConcernOptions, type WriteConcernSettings } from './write_concern';\n\nconst minWireVersionForShardedTransactions = 8;\n\n/** @public */\nexport interface ClientSessionOptions {\n  /** Whether causal consistency should be enabled on this session */\n  causalConsistency?: boolean;\n  /** Whether all read operations should be read from the same snapshot for this session (NOTE: not compatible with `causalConsistency=true`) */\n  snapshot?: boolean;\n  /** The default TransactionOptions to use for transactions started on this session. */\n  defaultTransactionOptions?: TransactionOptions;\n  /**\n   * @public\n   * @experimental\n   * An overriding timeoutMS value to use for a client-side timeout.\n   * If not provided the session uses the timeoutMS specified on the MongoClient.\n   */\n  defaultTimeoutMS?: number;\n\n  /** @internal */\n  owner?: symbol | AbstractCursor;\n  /** @internal */\n  explicit?: boolean;\n  /** @internal */\n  initialClusterTime?: ClusterTime;\n}\n\n/** @public */\nexport type WithTransactionCallback<T = any> = (session: ClientSession) => Promise<T>;\n\n/** @public */\nexport type ClientSessionEvents = {\n  ended(session: ClientSession): void;\n};\n\n/** @public */\nexport interface EndSessionOptions {\n  /**\n   * An optional error which caused the call to end this session\n   * @internal\n   */\n  error?: AnyError;\n  force?: boolean;\n  forceClear?: boolean;\n\n  /** Specifies the time an operation will run until it throws a timeout error */\n  timeoutMS?: number;\n}\n\n/**\n * A class representing a client session on the server\n *\n * NOTE: not meant to be instantiated directly.\n * @public\n */\nexport class ClientSession\n  extends TypedEventEmitter<ClientSessionEvents>\n  implements AsyncDisposable\n{\n  /** @internal */\n  client: MongoClient;\n  /** @internal */\n  sessionPool: ServerSessionPool;\n  hasEnded: boolean;\n  clientOptions: MongoOptions;\n  supports: { causalConsistency: boolean };\n  clusterTime?: ClusterTime;\n  operationTime?: Timestamp;\n  explicit: boolean;\n  /** @internal */\n  owner?: symbol | AbstractCursor;\n  defaultTransactionOptions: TransactionOptions;\n  transaction: Transaction;\n  /**\n   * @internal\n   * Keeps track of whether or not the current transaction has attempted to be committed. Is\n   * initially undefined. Gets set to false when startTransaction is called. When commitTransaction is sent to server, if the commitTransaction succeeds, it is then set to undefined, otherwise, set to true\n   */\n  private commitAttempted?: boolean;\n  public readonly snapshotEnabled: boolean;\n\n  /** @internal */\n  private _serverSession: ServerSession | null;\n  /** @internal */\n  public snapshotTime?: Timestamp;\n  /** @internal */\n  public pinnedConnection?: Connection;\n  /** @internal */\n  public txnNumberIncrement: number;\n  /**\n   * @experimental\n   * Specifies the time an operation in a given `ClientSession` will run until it throws a timeout error\n   */\n  timeoutMS?: number;\n\n  /** @internal */\n  public timeoutContext: TimeoutContext | null = null;\n\n  /**\n   * Create a client session.\n   * @internal\n   * @param client - The current client\n   * @param sessionPool - The server session pool (Internal Class)\n   * @param options - Optional settings\n   * @param clientOptions - Optional settings provided when creating a MongoClient\n   */\n  constructor(\n    client: MongoClient,\n    sessionPool: ServerSessionPool,\n    options: ClientSessionOptions,\n    clientOptions: MongoOptions\n  ) {\n    super();\n    this.on('error', noop);\n\n    if (client == null) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError('ClientSession requires a MongoClient');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options ?? {};\n\n    this.snapshotEnabled = options.snapshot === true;\n    if (options.causalConsistency === true && this.snapshotEnabled) {\n      throw new MongoInvalidArgumentError(\n        'Properties \"causalConsistency\" and \"snapshot\" are mutually exclusive'\n      );\n    }\n\n    this.client = client;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.clientOptions = clientOptions;\n    this.timeoutMS = options.defaultTimeoutMS ?? client.s.options?.timeoutMS;\n\n    this.explicit = !!options.explicit;\n    this._serverSession = this.explicit ? this.sessionPool.acquire() : null;\n    this.txnNumberIncrement = 0;\n\n    const defaultCausalConsistencyValue = this.explicit && options.snapshot !== true;\n    this.supports = {\n      // if we can enable causal consistency, do so by default\n      causalConsistency: options.causalConsistency ?? defaultCausalConsistencyValue\n    };\n\n    this.clusterTime = options.initialClusterTime;\n\n    this.operationTime = undefined;\n    this.owner = options.owner;\n    this.defaultTransactionOptions = { ...options.defaultTransactionOptions };\n    this.transaction = new Transaction();\n  }\n\n  /** The server id associated with this session */\n  get id(): ServerSessionId | undefined {\n    return this.serverSession?.id;\n  }\n\n  get serverSession(): ServerSession {\n    let serverSession = this._serverSession;\n    if (serverSession == null) {\n      if (this.explicit) {\n        throw new MongoRuntimeError('Unexpected null serverSession for an explicit session');\n      }\n      if (this.hasEnded) {\n        throw new MongoRuntimeError('Unexpected null serverSession for an ended implicit session');\n      }\n      serverSession = this.sessionPool.acquire();\n      this._serverSession = serverSession;\n    }\n    return serverSession;\n  }\n\n  get loadBalanced(): boolean {\n    return this.client.topology?.description.type === TopologyType.LoadBalanced;\n  }\n\n  /** @internal */\n  pin(conn: Connection): void {\n    if (this.pinnedConnection) {\n      throw TypeError('Cannot pin multiple connections to the same session');\n    }\n\n    this.pinnedConnection = conn;\n    conn.emit(\n      PINNED,\n      this.inTransaction() ? ConnectionPoolMetrics.TXN : ConnectionPoolMetrics.CURSOR\n    );\n  }\n\n  /** @internal */\n  unpin(options?: { force?: boolean; forceClear?: boolean; error?: AnyError }): void {\n    if (this.loadBalanced) {\n      return maybeClearPinnedConnection(this, options);\n    }\n\n    this.transaction.unpinServer();\n  }\n\n  get isPinned(): boolean {\n    return this.loadBalanced ? !!this.pinnedConnection : this.transaction.isPinned;\n  }\n\n  /**\n   * Frees any client-side resources held by the current session.  If a session is in a transaction,\n   * the transaction is aborted.\n   *\n   * Does not end the session on the server.\n   *\n   * @param options - Optional settings. Currently reserved for future use\n   */\n  async endSession(options?: EndSessionOptions): Promise<void> {\n    try {\n      if (this.inTransaction()) {\n        await this.abortTransaction({ ...options, throwTimeout: true });\n      }\n    } catch (error) {\n      // spec indicates that we should ignore all errors for `endSessions`\n      if (error.name === 'MongoOperationTimeoutError') throw error;\n      squashError(error);\n    } finally {\n      if (!this.hasEnded) {\n        const serverSession = this.serverSession;\n        if (serverSession != null) {\n          // release the server session back to the pool\n          this.sessionPool.release(serverSession);\n          // Store a clone of the server session for reference (debugging)\n          this._serverSession = new ServerSession(serverSession);\n        }\n        // mark the session as ended, and emit a signal\n        this.hasEnded = true;\n        this.emit('ended', this);\n      }\n      maybeClearPinnedConnection(this, { force: true, ...options });\n    }\n  }\n  /**\n   * @beta\n   * @experimental\n   * An alias for {@link ClientSession.endSession|ClientSession.endSession()}.\n   */\n  declare [Symbol.asyncDispose]: () => Promise<void>;\n  /** @internal */\n  async asyncDispose() {\n    await this.endSession({ force: true });\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param operationTime - the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime: Timestamp): void {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Advances the clusterTime for a ClientSession to the provided clusterTime of another ClientSession\n   *\n   * @param clusterTime - the $clusterTime returned by the server from another session in the form of a document containing the `BSON.Timestamp` clusterTime and signature\n   */\n  advanceClusterTime(clusterTime: ClusterTime): void {\n    if (!clusterTime || typeof clusterTime !== 'object') {\n      throw new MongoInvalidArgumentError('input cluster time must be an object');\n    }\n    if (!clusterTime.clusterTime || clusterTime.clusterTime._bsontype !== 'Timestamp') {\n      throw new MongoInvalidArgumentError(\n        'input cluster time \"clusterTime\" property must be a valid BSON Timestamp'\n      );\n    }\n    if (\n      !clusterTime.signature ||\n      clusterTime.signature.hash?._bsontype !== 'Binary' ||\n      (typeof clusterTime.signature.keyId !== 'bigint' &&\n        typeof clusterTime.signature.keyId !== 'number' &&\n        clusterTime.signature.keyId?._bsontype !== 'Long') // apparently we decode the key to number?\n    ) {\n      throw new MongoInvalidArgumentError(\n        'input cluster time must have a valid \"signature\" property with BSON Binary hash and BSON Long keyId'\n      );\n    }\n\n    _advanceClusterTime(this, clusterTime);\n  }\n\n  /**\n   * Used to determine if this session equals another\n   *\n   * @param session - The session to compare to\n   */\n  equals(session: ClientSession): boolean {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    if (this.id == null || session.id == null) {\n      return false;\n    }\n\n    return ByteUtils.equals(this.id.id.buffer, session.id.id.buffer);\n  }\n\n  /**\n   * Increment the transaction number on the internal ServerSession\n   *\n   * @privateRemarks\n   * This helper increments a value stored on the client session that will be\n   * added to the serverSession's txnNumber upon applying it to a command.\n   * This is because the serverSession is lazily acquired after a connection is obtained\n   */\n  incrementTransactionNumber(): void {\n    this.txnNumberIncrement += 1;\n  }\n\n  /** @returns whether this session is currently in a transaction or not */\n  inTransaction(): boolean {\n    return this.transaction.isActive;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @remarks\n   * **IMPORTANT**: Running operations in parallel is not supported during a transaction. The use of `Promise.all`,\n   * `Promise.allSettled`, `Promise.race`, etc to parallelize operations inside a transaction is\n   * undefined behaviour.\n   *\n   * @param options - Options for the transaction\n   */\n  startTransaction(options?: TransactionOptions): void {\n    if (this.snapshotEnabled) {\n      throw new MongoCompatibilityError('Transactions are not supported in snapshot sessions');\n    }\n\n    if (this.inTransaction()) {\n      throw new MongoTransactionError('Transaction already in progress');\n    }\n\n    if (this.isPinned && this.transaction.isCommitted) {\n      this.unpin();\n    }\n\n    const topologyMaxWireVersion = maxWireVersion(this.client.topology);\n    if (\n      isSharded(this.client.topology) &&\n      topologyMaxWireVersion != null &&\n      topologyMaxWireVersion < minWireVersionForShardedTransactions\n    ) {\n      throw new MongoCompatibilityError(\n        'Transactions are not supported on sharded clusters in MongoDB < 4.2.'\n      );\n    }\n\n    this.commitAttempted = false;\n    // increment txnNumber\n    this.incrementTransactionNumber();\n    // create transaction state\n    this.transaction = new Transaction({\n      readConcern:\n        options?.readConcern ??\n        this.defaultTransactionOptions.readConcern ??\n        this.clientOptions?.readConcern,\n      writeConcern:\n        options?.writeConcern ??\n        this.defaultTransactionOptions.writeConcern ??\n        this.clientOptions?.writeConcern,\n      readPreference:\n        options?.readPreference ??\n        this.defaultTransactionOptions.readPreference ??\n        this.clientOptions?.readPreference,\n      maxCommitTimeMS: options?.maxCommitTimeMS ?? this.defaultTransactionOptions.maxCommitTimeMS\n    });\n\n    this.transaction.transition(TxnState.STARTING_TRANSACTION);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   *\n   * @param options - Optional options, can be used to override `defaultTimeoutMS`.\n   */\n  async commitTransaction(options?: { timeoutMS?: number }): Promise<void> {\n    if (this.transaction.state === TxnState.NO_TRANSACTION) {\n      throw new MongoTransactionError('No transaction started');\n    }\n\n    if (\n      this.transaction.state === TxnState.STARTING_TRANSACTION ||\n      this.transaction.state === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      // the transaction was never started, we can safely exit here\n      this.transaction.transition(TxnState.TRANSACTION_COMMITTED_EMPTY);\n      return;\n    }\n\n    if (this.transaction.state === TxnState.TRANSACTION_ABORTED) {\n      throw new MongoTransactionError(\n        'Cannot call commitTransaction after calling abortTransaction'\n      );\n    }\n\n    const command: {\n      commitTransaction: 1;\n      writeConcern?: WriteConcernSettings;\n      recoveryToken?: Document;\n      maxTimeMS?: number;\n    } = { commitTransaction: 1 };\n\n    const timeoutMS =\n      typeof options?.timeoutMS === 'number'\n        ? options.timeoutMS\n        : typeof this.timeoutMS === 'number'\n          ? this.timeoutMS\n          : null;\n\n    const wc = this.transaction.options.writeConcern ?? this.clientOptions?.writeConcern;\n    if (wc != null) {\n      if (timeoutMS == null && this.timeoutContext == null) {\n        WriteConcern.apply(command, { wtimeoutMS: 10000, w: 'majority', ...wc });\n      } else {\n        const wcKeys = Object.keys(wc);\n        if (wcKeys.length > 2 || (!wcKeys.includes('wtimeoutMS') && !wcKeys.includes('wTimeoutMS')))\n          // if the write concern was specified with wTimeoutMS, then we set both wtimeoutMS and wTimeoutMS, guaranteeing at least two keys, so if we have more than two keys, then we can automatically assume that we should add the write concern to the command. If it has 2 or fewer keys, we need to check that those keys aren't the wtimeoutMS or wTimeoutMS options before we add the write concern to the command\n          WriteConcern.apply(command, { ...wc, wtimeoutMS: undefined });\n      }\n    }\n\n    if (this.transaction.state === TxnState.TRANSACTION_COMMITTED || this.commitAttempted) {\n      if (timeoutMS == null && this.timeoutContext == null) {\n        WriteConcern.apply(command, { wtimeoutMS: 10000, ...wc, w: 'majority' });\n      } else {\n        WriteConcern.apply(command, { w: 'majority', ...wc, wtimeoutMS: undefined });\n      }\n    }\n\n    if (typeof this.transaction.options.maxTimeMS === 'number') {\n      command.maxTimeMS = this.transaction.options.maxTimeMS;\n    }\n\n    if (this.transaction.recoveryToken) {\n      command.recoveryToken = this.transaction.recoveryToken;\n    }\n\n    const operation = new RunAdminCommandOperation(command, {\n      session: this,\n      readPreference: ReadPreference.primary,\n      bypassPinningCheck: true\n    });\n\n    const timeoutContext =\n      this.timeoutContext ??\n      (typeof timeoutMS === 'number'\n        ? TimeoutContext.create({\n            serverSelectionTimeoutMS: this.clientOptions.serverSelectionTimeoutMS,\n            socketTimeoutMS: this.clientOptions.socketTimeoutMS,\n            timeoutMS\n          })\n        : null);\n\n    try {\n      await executeOperation(this.client, operation, timeoutContext);\n      this.commitAttempted = undefined;\n      return;\n    } catch (firstCommitError) {\n      this.commitAttempted = true;\n      if (firstCommitError instanceof MongoError && isRetryableWriteError(firstCommitError)) {\n        // SPEC-1185: apply majority write concern when retrying commitTransaction\n        WriteConcern.apply(command, { wtimeoutMS: 10000, ...wc, w: 'majority' });\n        // per txns spec, must unpin session in this case\n        this.unpin({ force: true });\n\n        try {\n          await executeOperation(\n            this.client,\n            new RunAdminCommandOperation(command, {\n              session: this,\n              readPreference: ReadPreference.primary,\n              bypassPinningCheck: true\n            }),\n            timeoutContext\n          );\n          return;\n        } catch (retryCommitError) {\n          // If the retry failed, we process that error instead of the original\n          if (shouldAddUnknownTransactionCommitResultLabel(retryCommitError)) {\n            retryCommitError.addErrorLabel(MongoErrorLabel.UnknownTransactionCommitResult);\n          }\n\n          if (shouldUnpinAfterCommitError(retryCommitError)) {\n            this.unpin({ error: retryCommitError });\n          }\n\n          throw retryCommitError;\n        }\n      }\n\n      if (shouldAddUnknownTransactionCommitResultLabel(firstCommitError)) {\n        firstCommitError.addErrorLabel(MongoErrorLabel.UnknownTransactionCommitResult);\n      }\n\n      if (shouldUnpinAfterCommitError(firstCommitError)) {\n        this.unpin({ error: firstCommitError });\n      }\n\n      throw firstCommitError;\n    } finally {\n      this.transaction.transition(TxnState.TRANSACTION_COMMITTED);\n    }\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   *\n   * @param options - Optional options, can be used to override `defaultTimeoutMS`.\n   */\n  async abortTransaction(options?: { timeoutMS?: number }): Promise<void>;\n  /** @internal */\n  async abortTransaction(options?: { timeoutMS?: number; throwTimeout?: true }): Promise<void>;\n  async abortTransaction(options?: { timeoutMS?: number; throwTimeout?: true }): Promise<void> {\n    if (this.transaction.state === TxnState.NO_TRANSACTION) {\n      throw new MongoTransactionError('No transaction started');\n    }\n\n    if (this.transaction.state === TxnState.STARTING_TRANSACTION) {\n      // the transaction was never started, we can safely exit here\n      this.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      return;\n    }\n\n    if (this.transaction.state === TxnState.TRANSACTION_ABORTED) {\n      throw new MongoTransactionError('Cannot call abortTransaction twice');\n    }\n\n    if (\n      this.transaction.state === TxnState.TRANSACTION_COMMITTED ||\n      this.transaction.state === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      throw new MongoTransactionError(\n        'Cannot call abortTransaction after calling commitTransaction'\n      );\n    }\n\n    const command: {\n      abortTransaction: 1;\n      writeConcern?: WriteConcernOptions;\n      recoveryToken?: Document;\n    } = { abortTransaction: 1 };\n\n    const timeoutMS =\n      typeof options?.timeoutMS === 'number'\n        ? options.timeoutMS\n        : this.timeoutContext?.csotEnabled()\n          ? this.timeoutContext.timeoutMS // refresh timeoutMS for abort operation\n          : typeof this.timeoutMS === 'number'\n            ? this.timeoutMS\n            : null;\n\n    const timeoutContext =\n      timeoutMS != null\n        ? TimeoutContext.create({\n            timeoutMS,\n            serverSelectionTimeoutMS: this.clientOptions.serverSelectionTimeoutMS,\n            socketTimeoutMS: this.clientOptions.socketTimeoutMS\n          })\n        : null;\n\n    const wc = this.transaction.options.writeConcern ?? this.clientOptions?.writeConcern;\n    if (wc != null && timeoutMS == null) {\n      WriteConcern.apply(command, { wtimeoutMS: 10000, w: 'majority', ...wc });\n    }\n\n    if (this.transaction.recoveryToken) {\n      command.recoveryToken = this.transaction.recoveryToken;\n    }\n\n    const operation = new RunAdminCommandOperation(command, {\n      session: this,\n      readPreference: ReadPreference.primary,\n      bypassPinningCheck: true\n    });\n\n    try {\n      await executeOperation(this.client, operation, timeoutContext);\n      this.unpin();\n      return;\n    } catch (firstAbortError) {\n      this.unpin();\n\n      if (firstAbortError.name === 'MongoRuntimeError') throw firstAbortError;\n      if (options?.throwTimeout && firstAbortError.name === 'MongoOperationTimeoutError') {\n        throw firstAbortError;\n      }\n\n      if (firstAbortError instanceof MongoError && isRetryableWriteError(firstAbortError)) {\n        try {\n          await executeOperation(this.client, operation, timeoutContext);\n          return;\n        } catch (secondAbortError) {\n          if (secondAbortError.name === 'MongoRuntimeError') throw secondAbortError;\n          if (options?.throwTimeout && secondAbortError.name === 'MongoOperationTimeoutError') {\n            throw secondAbortError;\n          }\n          // we do not retry the retry\n        }\n      }\n\n      // The spec indicates that if the operation times out or fails with a non-retryable error, we should ignore all errors on `abortTransaction`\n    } finally {\n      this.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      if (this.loadBalanced) {\n        maybeClearPinnedConnection(this, { force: false });\n      }\n    }\n  }\n\n  /**\n   * This is here to ensure that ClientSession is never serialized to BSON.\n   */\n  toBSON(): never {\n    throw new MongoRuntimeError('ClientSession cannot be serialized to BSON.');\n  }\n\n  /**\n   * Starts a transaction and runs a provided function, ensuring the commitTransaction is always attempted when all operations run in the function have completed.\n   *\n   * **IMPORTANT:** This method requires the function passed in to return a Promise. That promise must be made by `await`-ing all operations in such a way that rejections are propagated to the returned promise.\n   *\n   * **IMPORTANT:** Running operations in parallel is not supported during a transaction. The use of `Promise.all`,\n   * `Promise.allSettled`, `Promise.race`, etc to parallelize operations inside a transaction is\n   * undefined behaviour.\n   *\n   * **IMPORTANT:** When running an operation inside a `withTransaction` callback, if it is not\n   * provided the explicit session in its options, it will not be part of the transaction and it will not respect timeoutMS.\n   *\n   *\n   * @remarks\n   * - If all operations successfully complete and the `commitTransaction` operation is successful, then the provided function will return the result of the provided function.\n   * - If the transaction is unable to complete or an error is thrown from within the provided function, then the provided function will throw an error.\n   *   - If the transaction is manually aborted within the provided function it will not throw.\n   * - If the driver needs to attempt to retry the operations, the provided function may be called multiple times.\n   *\n   * Checkout a descriptive example here:\n   * @see https://www.mongodb.com/blog/post/quick-start-nodejs--mongodb--how-to-implement-transactions\n   *\n   * If a command inside withTransaction fails:\n   * - It may cause the transaction on the server to be aborted.\n   * - This situation is normally handled transparently by the driver.\n   * - However, if the application catches such an error and does not rethrow it, the driver will not be able to determine whether the transaction was aborted or not.\n   * - The driver will then retry the transaction indefinitely.\n   *\n   * To avoid this situation, the application must not silently handle errors within the provided function.\n   * If the application needs to handle errors within, it must await all operations such that if an operation is rejected it becomes the rejection of the callback function passed into withTransaction.\n   *\n   * @param fn - callback to run within a transaction\n   * @param options - optional settings for the transaction\n   * @returns A raw command response or undefined\n   */\n  async withTransaction<T = any>(\n    fn: WithTransactionCallback<T>,\n    options?: TransactionOptions & {\n      /**\n       * Configures a timeoutMS expiry for the entire withTransactionCallback.\n       *\n       * @remarks\n       * - The remaining timeout will not be applied to callback operations that do not use the ClientSession.\n       * - Overriding timeoutMS for operations executed using the explicit session inside the provided callback will result in a client-side error.\n       */\n      timeoutMS?: number;\n    }\n  ): Promise<T> {\n    const MAX_TIMEOUT = 120000;\n\n    const timeoutMS = options?.timeoutMS ?? this.timeoutMS ?? null;\n    this.timeoutContext =\n      timeoutMS != null\n        ? TimeoutContext.create({\n            timeoutMS,\n            serverSelectionTimeoutMS: this.clientOptions.serverSelectionTimeoutMS,\n            socketTimeoutMS: this.clientOptions.socketTimeoutMS\n          })\n        : null;\n\n    const startTime = this.timeoutContext?.csotEnabled() ? this.timeoutContext.start : now();\n\n    let committed = false;\n    let result: any;\n\n    try {\n      while (!committed) {\n        this.startTransaction(options); // may throw on error\n\n        try {\n          const promise = fn(this);\n          if (!isPromiseLike(promise)) {\n            throw new MongoInvalidArgumentError(\n              'Function provided to `withTransaction` must return a Promise'\n            );\n          }\n\n          result = await promise;\n\n          if (\n            this.transaction.state === TxnState.NO_TRANSACTION ||\n            this.transaction.state === TxnState.TRANSACTION_COMMITTED ||\n            this.transaction.state === TxnState.TRANSACTION_ABORTED\n          ) {\n            // Assume callback intentionally ended the transaction\n            return result;\n          }\n        } catch (fnError) {\n          if (!(fnError instanceof MongoError) || fnError instanceof MongoInvalidArgumentError) {\n            await this.abortTransaction();\n            throw fnError;\n          }\n\n          if (\n            this.transaction.state === TxnState.STARTING_TRANSACTION ||\n            this.transaction.state === TxnState.TRANSACTION_IN_PROGRESS\n          ) {\n            await this.abortTransaction();\n          }\n\n          if (\n            fnError.hasErrorLabel(MongoErrorLabel.TransientTransactionError) &&\n            (this.timeoutContext != null || now() - startTime < MAX_TIMEOUT)\n          ) {\n            continue;\n          }\n\n          throw fnError;\n        }\n\n        while (!committed) {\n          try {\n            /*\n             * We will rely on ClientSession.commitTransaction() to\n             * apply a majority write concern if commitTransaction is\n             * being retried (see: DRIVERS-601)\n             */\n            await this.commitTransaction();\n            committed = true;\n          } catch (commitError) {\n            /*\n             * Note: a maxTimeMS error will have the MaxTimeMSExpired\n             * code (50) and can be reported as a top-level error or\n             * inside writeConcernError, ex.\n             * { ok:0, code: 50, codeName: 'MaxTimeMSExpired' }\n             * { ok:1, writeConcernError: { code: 50, codeName: 'MaxTimeMSExpired' } }\n             */\n            if (\n              !isMaxTimeMSExpiredError(commitError) &&\n              commitError.hasErrorLabel(MongoErrorLabel.UnknownTransactionCommitResult) &&\n              (this.timeoutContext != null || now() - startTime < MAX_TIMEOUT)\n            ) {\n              continue;\n            }\n\n            if (\n              commitError.hasErrorLabel(MongoErrorLabel.TransientTransactionError) &&\n              (this.timeoutContext != null || now() - startTime < MAX_TIMEOUT)\n            ) {\n              break;\n            }\n\n            throw commitError;\n          }\n        }\n      }\n      return result;\n    } finally {\n      this.timeoutContext = null;\n    }\n  }\n}\n\nconfigureResourceManagement(ClientSession.prototype);\n\nconst NON_DETERMINISTIC_WRITE_CONCERN_ERRORS = new Set([\n  'CannotSatisfyWriteConcern',\n  'UnknownReplWriteConcern',\n  'UnsatisfiableWriteConcern'\n]);\n\nfunction shouldUnpinAfterCommitError(commitError: Error) {\n  if (commitError instanceof MongoError) {\n    if (\n      isRetryableWriteError(commitError) ||\n      commitError instanceof MongoWriteConcernError ||\n      isMaxTimeMSExpiredError(commitError)\n    ) {\n      if (isUnknownTransactionCommitResult(commitError)) {\n        // per txns spec, must unpin session in this case\n        return true;\n      }\n    } else if (commitError.hasErrorLabel(MongoErrorLabel.TransientTransactionError)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction shouldAddUnknownTransactionCommitResultLabel(commitError: MongoError) {\n  let ok = isRetryableWriteError(commitError);\n  ok ||= commitError instanceof MongoWriteConcernError;\n  ok ||= isMaxTimeMSExpiredError(commitError);\n  ok &&= isUnknownTransactionCommitResult(commitError);\n  return ok;\n}\n\nfunction isUnknownTransactionCommitResult(err: MongoError): err is MongoError {\n  const isNonDeterministicWriteConcernError =\n    err instanceof MongoServerError &&\n    err.codeName &&\n    NON_DETERMINISTIC_WRITE_CONCERN_ERRORS.has(err.codeName);\n\n  return (\n    isMaxTimeMSExpiredError(err) ||\n    (!isNonDeterministicWriteConcernError &&\n      err.code !== MONGODB_ERROR_CODES.UnsatisfiableWriteConcern &&\n      err.code !== MONGODB_ERROR_CODES.UnknownReplWriteConcern)\n  );\n}\n\nexport function maybeClearPinnedConnection(\n  session: ClientSession,\n  options?: EndSessionOptions\n): void {\n  // unpin a connection if it has been pinned\n  const conn = session.pinnedConnection;\n  const error = options?.error;\n\n  if (\n    session.inTransaction() &&\n    error &&\n    error instanceof MongoError &&\n    error.hasErrorLabel(MongoErrorLabel.TransientTransactionError)\n  ) {\n    return;\n  }\n\n  const topology = session.client.topology;\n  // NOTE: the spec talks about what to do on a network error only, but the tests seem to\n  //       to validate that we don't unpin on _all_ errors?\n  if (conn && topology != null) {\n    const servers = Array.from(topology.s.servers.values());\n    const loadBalancer = servers[0];\n\n    if (options?.error == null || options?.force) {\n      loadBalancer.pool.checkIn(conn);\n      session.pinnedConnection = undefined;\n      conn.emit(\n        UNPINNED,\n        session.transaction.state !== TxnState.NO_TRANSACTION\n          ? ConnectionPoolMetrics.TXN\n          : ConnectionPoolMetrics.CURSOR\n      );\n\n      if (options?.forceClear) {\n        loadBalancer.pool.clear({ serviceId: conn.serviceId });\n      }\n    }\n  }\n}\n\nfunction isMaxTimeMSExpiredError(err: MongoError): boolean {\n  if (err == null || !(err instanceof MongoServerError)) {\n    return false;\n  }\n\n  return (\n    err.code === MONGODB_ERROR_CODES.MaxTimeMSExpired ||\n    err.writeConcernError?.code === MONGODB_ERROR_CODES.MaxTimeMSExpired\n  );\n}\n\n/** @public */\nexport type ServerSessionId = { id: Binary };\n\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @public\n */\nexport class ServerSession {\n  id: ServerSessionId;\n  lastUse: number;\n  txnNumber: number;\n  isDirty: boolean;\n\n  /** @internal */\n  constructor(cloned?: ServerSession | null) {\n    if (cloned != null) {\n      const idBytes = Buffer.allocUnsafe(16);\n      idBytes.set(cloned.id.id.buffer);\n      this.id = { id: new Binary(idBytes, cloned.id.id.sub_type) };\n      this.lastUse = cloned.lastUse;\n      this.txnNumber = cloned.txnNumber;\n      this.isDirty = cloned.isDirty;\n      return;\n    }\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = now();\n    this.txnNumber = 0;\n    this.isDirty = false;\n  }\n\n  /**\n   * Determines if the server session has timed out.\n   *\n   * @param sessionTimeoutMinutes - The server's \"logicalSessionTimeoutMinutes\"\n   */\n  hasTimedOut(sessionTimeoutMinutes: number): boolean {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      ((calculateDurationInMs(this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n}\n\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @internal\n */\nexport class ServerSessionPool {\n  client: MongoClient;\n  sessions: List<ServerSession>;\n\n  constructor(client: MongoClient) {\n    if (client == null) {\n      throw new MongoRuntimeError('ServerSessionPool requires a MongoClient');\n    }\n\n    this.client = client;\n    this.sessions = new List<ServerSession>();\n  }\n\n  /**\n   * Acquire a Server Session from the pool.\n   * Iterates through each session in the pool, removing any stale sessions\n   * along the way. The first non-stale session found is removed from the\n   * pool and returned. If no non-stale session is found, a new ServerSession is created.\n   */\n  acquire(): ServerSession {\n    const sessionTimeoutMinutes = this.client.topology?.logicalSessionTimeoutMinutes ?? 10;\n\n    let session: ServerSession | null = null;\n\n    // Try to obtain from session pool\n    while (this.sessions.length > 0) {\n      const potentialSession = this.sessions.shift();\n      if (\n        potentialSession != null &&\n        (!!this.client.topology?.loadBalanced ||\n          !potentialSession.hasTimedOut(sessionTimeoutMinutes))\n      ) {\n        session = potentialSession;\n        break;\n      }\n    }\n\n    // If nothing valid came from the pool make a new one\n    if (session == null) {\n      session = new ServerSession();\n    }\n\n    return session;\n  }\n\n  /**\n   * Release a session to the session pool\n   * Adds the session back to the session pool if the session has not timed out yet.\n   * This method also removes any stale sessions from the pool.\n   *\n   * @param session - The session to release to the pool\n   */\n  release(session: ServerSession): void {\n    const sessionTimeoutMinutes = this.client.topology?.logicalSessionTimeoutMinutes ?? 10;\n\n    if (this.client.topology?.loadBalanced && !sessionTimeoutMinutes) {\n      this.sessions.unshift(session);\n    }\n\n    if (!sessionTimeoutMinutes) {\n      return;\n    }\n\n    this.sessions.prune(session => session.hasTimedOut(sessionTimeoutMinutes));\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      if (session.isDirty) {\n        return;\n      }\n\n      // otherwise, readd this session to the session pool\n      this.sessions.unshift(session);\n    }\n  }\n}\n\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @param session - the session tracking transaction state\n * @param command - the command to decorate\n * @param options - Optional settings passed to calling operation\n *\n * @internal\n */\nexport function applySession(\n  session: ClientSession,\n  command: Document,\n  options: CommandOptions\n): MongoDriverError | undefined {\n  if (session.hasEnded) {\n    return new MongoExpiredSessionError();\n  }\n\n  // May acquire serverSession here\n  const serverSession = session.serverSession;\n  if (serverSession == null) {\n    return new MongoRuntimeError('Unable to acquire server session');\n  }\n\n  if (options.writeConcern?.w === 0) {\n    if (session && session.explicit) {\n      // Error if user provided an explicit session to an unacknowledged write (SPEC-1019)\n      return new MongoAPIError('Cannot have explicit session with unacknowledged writes');\n    }\n    return;\n  }\n\n  // mark the last use of this session, and apply the `lsid`\n  serverSession.lastUse = now();\n  command.lsid = serverSession.id;\n\n  const inTxnOrTxnCommand = session.inTransaction() || isTransactionCommand(command);\n  const isRetryableWrite = !!options.willRetryWrite;\n\n  if (isRetryableWrite || inTxnOrTxnCommand) {\n    serverSession.txnNumber += session.txnNumberIncrement;\n    session.txnNumberIncrement = 0;\n    // TODO(NODE-2674): Preserve int64 sent from MongoDB\n    command.txnNumber = Long.fromNumber(serverSession.txnNumber);\n  }\n\n  if (!inTxnOrTxnCommand) {\n    if (session.transaction.state !== TxnState.NO_TRANSACTION) {\n      session.transaction.transition(TxnState.NO_TRANSACTION);\n    }\n\n    if (\n      session.supports.causalConsistency &&\n      session.operationTime &&\n      commandSupportsReadConcern(command)\n    ) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    } else if (session.snapshotEnabled) {\n      command.readConcern = command.readConcern || { level: ReadConcernLevel.snapshot };\n      if (session.snapshotTime != null) {\n        Object.assign(command.readConcern, { atClusterTime: session.snapshotTime });\n      }\n    }\n\n    return;\n  }\n\n  // now attempt to apply transaction-specific sessions data\n\n  // `autocommit` must always be false to differentiate from retryable writes\n  command.autocommit = false;\n\n  if (session.transaction.state === TxnState.STARTING_TRANSACTION) {\n    session.transaction.transition(TxnState.TRANSACTION_IN_PROGRESS);\n    command.startTransaction = true;\n\n    const readConcern =\n      session.transaction.options.readConcern || session?.clientOptions?.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  }\n  return;\n}\n\nexport function updateSessionFromResponse(session: ClientSession, document: MongoDBResponse): void {\n  if (document.$clusterTime) {\n    _advanceClusterTime(session, document.$clusterTime);\n  }\n\n  if (document.operationTime && session && session.supports.causalConsistency) {\n    session.advanceOperationTime(document.operationTime);\n  }\n\n  if (document.recoveryToken && session && session.inTransaction()) {\n    session.transaction._recoveryToken = document.recoveryToken;\n  }\n\n  if (session?.snapshotEnabled && session.snapshotTime == null) {\n    // find and aggregate commands return atClusterTime on the cursor\n    // distinct includes it in the response body\n    const atClusterTime = document.atClusterTime;\n    if (atClusterTime) {\n      session.snapshotTime = atClusterTime;\n    }\n  }\n}\n", "import { type Document, type ObjectId } from '../bson';\nimport {\n  COMMAND_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  LEGACY_HELLO_COMMAND,\n  LEGACY_HELLO_COMMAND_CAMEL_CASE\n} from '../constants';\nimport { calculateDurationInMs } from '../utils';\nimport {\n  DocumentSequence,\n  OpMsgRequest,\n  type OpQueryRequest,\n  type WriteProtocolMessageType\n} from './commands';\nimport type { Connection } from './connection';\n\n/**\n * An event indicating the start of a given command\n * @public\n * @category Event\n */\nexport class CommandStartedEvent {\n  commandObj?: Document;\n  requestId: number;\n  databaseName: string;\n  commandName: string;\n  command: Document;\n  address: string;\n  /** Driver generated connection id */\n  connectionId?: string | number;\n  /**\n   * Server generated connection id\n   * Distinct from the connection id and is returned by the hello or legacy hello response as \"connectionId\"\n   * from the server on 4.2+.\n   */\n  serverConnectionId: bigint | null;\n  serviceId?: ObjectId;\n  /** @internal */\n  name = COMMAND_STARTED;\n\n  /**\n   * Create a started event\n   *\n   * @internal\n   * @param pool - the pool that originated the command\n   * @param command - the command\n   */\n  constructor(\n    connection: Connection,\n    command: WriteProtocolMessageType,\n    serverConnectionId: bigint | null\n  ) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n\n    // TODO: remove in major revision, this is not spec behavior\n    if (SENSITIVE_COMMANDS.has(commandName)) {\n      this.commandObj = {};\n      this.commandObj[commandName] = true;\n    }\n\n    this.address = address;\n    this.connectionId = connectionId;\n    this.serviceId = serviceId;\n    this.requestId = command.requestId;\n    this.databaseName = command.databaseName;\n    this.commandName = commandName;\n    this.command = maybeRedact(commandName, cmd, cmd);\n    this.serverConnectionId = serverConnectionId;\n  }\n\n  /* @internal */\n  get hasServiceId(): boolean {\n    return !!this.serviceId;\n  }\n}\n\n/**\n * An event indicating the success of a given command\n * @public\n * @category Event\n */\nexport class CommandSucceededEvent {\n  address: string;\n  /** Driver generated connection id */\n  connectionId?: string | number;\n  /**\n   * Server generated connection id\n   * Distinct from the connection id and is returned by the hello or legacy hello response as \"connectionId\" from the server on 4.2+.\n   */\n  serverConnectionId: bigint | null;\n  requestId: number;\n  duration: number;\n  commandName: string;\n  reply: unknown;\n  serviceId?: ObjectId;\n  /** @internal */\n  name = COMMAND_SUCCEEDED;\n\n  /**\n   * Create a succeeded event\n   *\n   * @internal\n   * @param pool - the pool that originated the command\n   * @param command - the command\n   * @param reply - the reply for this command from the server\n   * @param started - a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(\n    connection: Connection,\n    command: WriteProtocolMessageType,\n    reply: Document | undefined,\n    started: number,\n    serverConnectionId: bigint | null\n  ) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n\n    this.address = address;\n    this.connectionId = connectionId;\n    this.serviceId = serviceId;\n    this.requestId = command.requestId;\n    this.commandName = commandName;\n    this.duration = calculateDurationInMs(started);\n    this.reply = maybeRedact(commandName, cmd, extractReply(reply));\n    this.serverConnectionId = serverConnectionId;\n  }\n\n  /* @internal */\n  get hasServiceId(): boolean {\n    return !!this.serviceId;\n  }\n}\n\n/**\n * An event indicating the failure of a given command\n * @public\n * @category Event\n */\nexport class CommandFailedEvent {\n  address: string;\n  /** Driver generated connection id */\n  connectionId?: string | number;\n  /**\n   * Server generated connection id\n   * Distinct from the connection id and is returned by the hello or legacy hello response as \"connectionId\" from the server on 4.2+.\n   */\n  serverConnectionId: bigint | null;\n  requestId: number;\n  duration: number;\n  commandName: string;\n  failure: Error;\n  serviceId?: ObjectId;\n  /** @internal */\n  name = COMMAND_FAILED;\n\n  /**\n   * Create a failure event\n   *\n   * @internal\n   * @param pool - the pool that originated the command\n   * @param command - the command\n   * @param error - the generated error or a server error response\n   * @param started - a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(\n    connection: Connection,\n    command: WriteProtocolMessageType,\n    error: Error | Document,\n    started: number,\n    serverConnectionId: bigint | null\n  ) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n\n    this.address = address;\n    this.connectionId = connectionId;\n    this.serviceId = serviceId;\n\n    this.requestId = command.requestId;\n    this.commandName = commandName;\n    this.duration = calculateDurationInMs(started);\n    this.failure = maybeRedact(commandName, cmd, error) as Error;\n    this.serverConnectionId = serverConnectionId;\n  }\n\n  /* @internal */\n  get hasServiceId(): boolean {\n    return !!this.serviceId;\n  }\n}\n\n/**\n * Commands that we want to redact because of the sensitive nature of their contents\n * @internal\n */\nexport const SENSITIVE_COMMANDS = new Set([\n  'authenticate',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'createUser',\n  'updateUser',\n  'copydbgetnonce',\n  'copydbsaslstart',\n  'copydb'\n]);\n\nconst HELLO_COMMANDS = new Set(['hello', LEGACY_HELLO_COMMAND, LEGACY_HELLO_COMMAND_CAMEL_CASE]);\n\n// helper methods\nconst extractCommandName = (commandDoc: Document) => Object.keys(commandDoc)[0];\nconst collectionName = (command: OpQueryRequest) => command.ns.split('.')[1];\nconst maybeRedact = (commandName: string, commandDoc: Document, result: Error | Document) =>\n  SENSITIVE_COMMANDS.has(commandName) ||\n  (HELLO_COMMANDS.has(commandName) && commandDoc.speculativeAuthenticate)\n    ? {}\n    : result;\n\nconst LEGACY_FIND_QUERY_MAP: { [key: string]: string } = {\n  $query: 'filter',\n  $orderby: 'sort',\n  $hint: 'hint',\n  $comment: 'comment',\n  $maxScan: 'maxScan',\n  $max: 'max',\n  $min: 'min',\n  $returnKey: 'returnKey',\n  $showDiskLoc: 'showRecordId',\n  $maxTimeMS: 'maxTimeMS',\n  $snapshot: 'snapshot'\n};\n\nconst LEGACY_FIND_OPTIONS_MAP = {\n  numberToSkip: 'skip',\n  numberToReturn: 'batchSize',\n  returnFieldSelector: 'projection'\n} as const;\n\n/** Extract the actual command from the query, possibly up-converting if it's a legacy format */\nfunction extractCommand(command: WriteProtocolMessageType): Document {\n  if (command instanceof OpMsgRequest) {\n    const cmd = { ...command.command };\n    // For OP_MSG with payload type 1 we need to pull the documents\n    // array out of the document sequence for monitoring.\n    if (cmd.ops instanceof DocumentSequence) {\n      cmd.ops = cmd.ops.documents;\n    }\n    if (cmd.nsInfo instanceof DocumentSequence) {\n      cmd.nsInfo = cmd.nsInfo.documents;\n    }\n    return cmd;\n  }\n\n  if (command.query?.$query) {\n    let result: Document;\n    if (command.ns === 'admin.$cmd') {\n      // up-convert legacy command\n      result = Object.assign({}, command.query.$query);\n    } else {\n      // up-convert legacy find command\n      result = { find: collectionName(command) };\n      Object.keys(LEGACY_FIND_QUERY_MAP).forEach(key => {\n        if (command.query[key] != null) {\n          result[LEGACY_FIND_QUERY_MAP[key]] = { ...command.query[key] };\n        }\n      });\n    }\n\n    Object.keys(LEGACY_FIND_OPTIONS_MAP).forEach(key => {\n      const legacyKey = key as keyof typeof LEGACY_FIND_OPTIONS_MAP;\n      if (command[legacyKey] != null) {\n        result[LEGACY_FIND_OPTIONS_MAP[legacyKey]] = command[legacyKey];\n      }\n    });\n\n    return result;\n  }\n\n  let clonedQuery: Record<string, unknown> = {};\n  const clonedCommand: Record<string, unknown> = { ...command };\n  if (command.query) {\n    clonedQuery = { ...command.query };\n    clonedCommand.query = clonedQuery;\n  }\n\n  return command.query ? clonedQuery : clonedCommand;\n}\n\nfunction extractReply(reply?: Document) {\n  if (!reply) {\n    return reply;\n  }\n\n  return reply.result ? reply.result : reply;\n}\n\nfunction extractConnectionDetails(connection: Connection) {\n  let connectionId;\n  if ('id' in connection) {\n    connectionId = connection.id;\n  }\n  return {\n    address: connection.address,\n    serviceId: connection.serviceId,\n    connectionId\n  };\n}\n", "import { type Document, type Double, Long } from '../bson';\nimport { ServerType } from '../sdam/common';\nimport { parseServerType } from '../sdam/server_description';\nimport type { CompressorName } from './wire_protocol/compression';\n\nconst RESPONSE_FIELDS = [\n  'minWireVersion',\n  'maxWireVersion',\n  'maxBsonObjectSize',\n  'maxMessageSizeBytes',\n  'maxWriteBatchSize',\n  'logicalSessionTimeoutMinutes'\n] as const;\n\n/** @public */\nexport interface StreamDescriptionOptions {\n  compressors?: CompressorName[];\n  logicalSessionTimeoutMinutes?: number;\n  loadBalanced: boolean;\n}\n\n/** @public */\nexport class StreamDescription {\n  address: string;\n  type: ServerType;\n  minWireVersion?: number;\n  maxWireVersion?: number;\n  maxBsonObjectSize: number;\n  maxMessageSizeBytes: number;\n  maxWriteBatchSize: number;\n  compressors: CompressorName[];\n  compressor?: CompressorName;\n  logicalSessionTimeoutMinutes?: number;\n  loadBalanced: boolean;\n\n  __nodejs_mock_server__?: boolean;\n\n  zlibCompressionLevel?: number;\n  serverConnectionId: bigint | null;\n\n  public hello: Document | null = null;\n\n  constructor(address: string, options?: StreamDescriptionOptions) {\n    this.address = address;\n    this.type = ServerType.Unknown;\n    this.minWireVersion = undefined;\n    this.maxWireVersion = undefined;\n    this.maxBsonObjectSize = 16777216;\n    this.maxMessageSizeBytes = 48000000;\n    this.maxWriteBatchSize = 100000;\n    this.logicalSessionTimeoutMinutes = options?.logicalSessionTimeoutMinutes;\n    this.loadBalanced = !!options?.loadBalanced;\n    this.compressors =\n      options && options.compressors && Array.isArray(options.compressors)\n        ? options.compressors\n        : [];\n    this.serverConnectionId = null;\n  }\n\n  receiveResponse(response: Document | null): void {\n    if (response == null) {\n      return;\n    }\n    this.hello = response;\n    this.type = parseServerType(response);\n    if ('connectionId' in response) {\n      this.serverConnectionId = this.parseServerConnectionID(response.connectionId);\n    } else {\n      this.serverConnectionId = null;\n    }\n    for (const field of RESPONSE_FIELDS) {\n      if (response[field] != null) {\n        this[field] = response[field];\n      }\n\n      // testing case\n      if ('__nodejs_mock_server__' in response) {\n        this.__nodejs_mock_server__ = response['__nodejs_mock_server__'];\n      }\n    }\n\n    if (response.compression) {\n      this.compressor = this.compressors.filter(c => response.compression?.includes(c))[0];\n    }\n  }\n\n  /* @internal */\n  parseServerConnectionID(serverConnectionId: number | Double | bigint | Long): bigint {\n    // Connection ids are always integral, so it's safe to coerce doubles as well as\n    // any integral type.\n    return Long.isLong(serverConnectionId)\n      ? serverConnectionId.toBigInt()\n      : // @ts-expect-error: Doubles are coercible to number\n        BigInt(serverConnectionId);\n  }\n}\n", "import { type EventEmitter } from 'events';\n\nimport { type Abortable } from '../../mongo_types';\nimport { type TimeoutContext } from '../../timeout';\nimport { addAbortListener, kDispose, List, promiseWithResolvers } from '../../utils';\n\n/**\n * @internal\n * An object holding references to a promise's resolve and reject functions.\n */\ntype PendingPromises = Omit<\n  ReturnType<typeof promiseWithResolvers<IteratorResult<Buffer>>>,\n  'promise'\n>;\n\n/**\n * onData is adapted from Node.js' events.on helper\n * https://nodejs.org/api/events.html#eventsonemitter-eventname-options\n *\n * Returns an AsyncIterator that iterates each 'data' event emitted from emitter.\n * It will reject upon an error event.\n */\nexport function onData(\n  emitter: EventEmitter,\n  { timeoutContext, signal }: { timeoutContext?: TimeoutContext } & Abortable\n) {\n  signal?.throwIfAborted();\n\n  // Setup pending events and pending promise lists\n  /**\n   * When the caller has not yet called .next(), we store the\n   * value from the event in this list. Next time they call .next()\n   * we pull the first value out of this list and resolve a promise with it.\n   */\n  const unconsumedEvents = new List<Buffer>();\n  /**\n   * When there has not yet been an event, a new promise will be created\n   * and implicitly stored in this list. When an event occurs we take the first\n   * promise in this list and resolve it.\n   */\n  const unconsumedPromises = new List<PendingPromises>();\n\n  /**\n   * Stored an error created by an error event.\n   * This error will turn into a rejection for the subsequent .next() call\n   */\n  let error: Error | null = null;\n\n  /** Set to true only after event listeners have been removed. */\n  let finished = false;\n\n  const iterator: AsyncGenerator<Buffer> = {\n    next() {\n      // First, we consume all unread events\n      const value = unconsumedEvents.shift();\n      if (value != null) {\n        return Promise.resolve({ value, done: false });\n      }\n\n      // Then we error, if an error happened\n      // This happens one time if at all, because after 'error'\n      // we stop listening\n      if (error != null) {\n        const p = Promise.reject(error);\n        // Only the first element errors\n        error = null;\n        return p;\n      }\n\n      // If the iterator is finished, resolve to done\n      if (finished) return closeHandler();\n\n      // Wait until an event happens\n      const { promise, resolve, reject } = promiseWithResolvers<IteratorResult<Buffer>>();\n      unconsumedPromises.push({ resolve, reject });\n      return promise;\n    },\n\n    return() {\n      return closeHandler();\n    },\n\n    throw(err: Error) {\n      errorHandler(err);\n      return Promise.resolve({ value: undefined, done: true });\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    }\n  };\n\n  // Adding event handlers\n  emitter.on('data', eventHandler);\n  emitter.on('error', errorHandler);\n  const abortListener = addAbortListener(signal, function () {\n    errorHandler(this.reason);\n  });\n\n  const timeoutForSocketRead = timeoutContext?.timeoutForSocketRead;\n  timeoutForSocketRead?.throwIfExpired();\n  timeoutForSocketRead?.then(undefined, errorHandler);\n\n  return iterator;\n\n  function eventHandler(value: Buffer) {\n    const promise = unconsumedPromises.shift();\n    if (promise != null) promise.resolve({ value, done: false });\n    else unconsumedEvents.push(value);\n  }\n\n  function errorHandler(err: Error) {\n    const promise = unconsumedPromises.shift();\n\n    if (promise != null) promise.reject(err);\n    else error = err;\n    void closeHandler();\n  }\n\n  function closeHandler() {\n    // Adding event handlers\n    emitter.off('data', eventHandler);\n    emitter.off('error', errorHandler);\n    abortListener?.[kDispose]();\n    finished = true;\n    timeoutForSocketRead?.clear();\n    const doneResult = { value: undefined, done: finished } as const;\n\n    for (const promise of unconsumedPromises) {\n      promise.resolve(doneResult);\n    }\n\n    return Promise.resolve(doneResult);\n  }\n}\n", "import { type Readable, Transform, type TransformCallback } from 'stream';\nimport { clearTimeout, setTimeout } from 'timers';\n\nimport {\n  type BSONSerializeOptions,\n  deserialize,\n  type DeserializeOptions,\n  type Document,\n  type ObjectId\n} from '../bson';\nimport { type AutoEncrypter } from '../client-side-encryption/auto_encrypter';\nimport {\n  CLOSE,\n  CLUSTER_TIME_RECEIVED,\n  COMMAND_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  kDecorateResult,\n  PINNED,\n  UNPINNED\n} from '../constants';\nimport {\n  MongoCompatibilityError,\n  MONGODB_ERROR_CODES,\n  MongoMissingDependencyError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoOperationTimeoutError,\n  MongoParseError,\n  MongoServerError,\n  MongoUnexpectedServerResponseError\n} from '../error';\nimport type { ServerApi, SupportedNodeConnectionOptions } from '../mongo_client';\nimport { type MongoClientAuthProviders } from '../mongo_client_auth_providers';\nimport { MongoLoggableComponent, type MongoLogger, SeverityLevel } from '../mongo_logger';\nimport { type Abortable, type CancellationToken, TypedEventEmitter } from '../mongo_types';\nimport { ReadPreference, type ReadPreferenceLike } from '../read_preference';\nimport { ServerType } from '../sdam/common';\nimport { applySession, type ClientSession, updateSessionFromResponse } from '../sessions';\nimport { type TimeoutContext, TimeoutError } from '../timeout';\nimport {\n  BufferPool,\n  calculateDurationInMs,\n  type Callback,\n  decorateDecryptionResult,\n  HostAddress,\n  maxWireVersion,\n  type MongoDBNamespace,\n  noop,\n  now,\n  once,\n  squashError,\n  uuidV4\n} from '../utils';\nimport type { WriteConcern } from '../write_concern';\nimport type { AuthContext } from './auth/auth_provider';\nimport type { MongoCredentials } from './auth/mongo_credentials';\nimport {\n  CommandFailedEvent,\n  CommandStartedEvent,\n  CommandSucceededEvent\n} from './command_monitoring_events';\nimport {\n  OpCompressedRequest,\n  OpMsgRequest,\n  type OpMsgResponse,\n  OpQueryRequest,\n  type OpReply,\n  type WriteProtocolMessageType\n} from './commands';\nimport type { Stream } from './connect';\nimport type { ClientMetadata } from './handshake/client_metadata';\nimport { StreamDescription, type StreamDescriptionOptions } from './stream_description';\nimport { type CompressorName, decompressResponse } from './wire_protocol/compression';\nimport { onData } from './wire_protocol/on_data';\nimport {\n  CursorResponse,\n  MongoDBResponse,\n  type MongoDBResponseConstructor\n} from './wire_protocol/responses';\nimport { getReadPreference, isSharded } from './wire_protocol/shared';\n\n/** @internal */\nexport interface CommandOptions extends BSONSerializeOptions {\n  secondaryOk?: boolean;\n  /** Specify read preference if command supports it */\n  readPreference?: ReadPreferenceLike;\n  monitoring?: boolean;\n  socketTimeoutMS?: number;\n  /** Session to use for the operation */\n  session?: ClientSession;\n  documentsReturnedIn?: string;\n  noResponse?: boolean;\n  omitReadPreference?: boolean;\n  omitMaxTimeMS?: boolean;\n\n  // TODO(NODE-2802): Currently the CommandOptions take a property willRetryWrite which is a hint\n  // from executeOperation that the txnNum should be applied to this command.\n  // Applying a session to a command should happen as part of command construction,\n  // most likely in the CommandOperation#executeCommand method, where we have access to\n  // the details we need to determine if a txnNum should also be applied.\n  willRetryWrite?: boolean;\n\n  writeConcern?: WriteConcern;\n\n  directConnection?: boolean;\n\n  /** @internal */\n  timeoutContext?: TimeoutContext;\n}\n\n/** @public */\nexport interface ProxyOptions {\n  proxyHost?: string;\n  proxyPort?: number;\n  proxyUsername?: string;\n  proxyPassword?: string;\n}\n\n/** @public */\nexport interface ConnectionOptions\n  extends SupportedNodeConnectionOptions,\n    StreamDescriptionOptions,\n    ProxyOptions {\n  // Internal creation info\n  id: number | '<monitor>';\n  generation: number;\n  hostAddress: HostAddress;\n  /** @internal */\n  autoEncrypter?: AutoEncrypter;\n  serverApi?: ServerApi;\n  monitorCommands: boolean;\n  /** @internal */\n  connectionType?: any;\n  credentials?: MongoCredentials;\n  /** @internal */\n  authProviders: MongoClientAuthProviders;\n  connectTimeoutMS?: number;\n  tls: boolean;\n  noDelay?: boolean;\n  socketTimeoutMS?: number;\n  cancellationToken?: CancellationToken;\n  metadata: ClientMetadata;\n  /** @internal */\n  extendedMetadata: Promise<Document>;\n  /** @internal */\n  mongoLogger?: MongoLogger | undefined;\n}\n\n/** @public */\nexport type ConnectionEvents = {\n  commandStarted(event: CommandStartedEvent): void;\n  commandSucceeded(event: CommandSucceededEvent): void;\n  commandFailed(event: CommandFailedEvent): void;\n  clusterTimeReceived(clusterTime: Document): void;\n  close(): void;\n  pinned(pinType: string): void;\n  unpinned(pinType: string): void;\n};\n\n/** @internal */\nexport function hasSessionSupport(conn: Connection): boolean {\n  const description = conn.description;\n  return description.logicalSessionTimeoutMinutes != null;\n}\n\nfunction streamIdentifier(stream: Stream, options: ConnectionOptions): string {\n  if (options.proxyHost) {\n    // If proxy options are specified, the properties of `stream` itself\n    // will not accurately reflect what endpoint this is connected to.\n    return options.hostAddress.toString();\n  }\n\n  const { remoteAddress, remotePort } = stream;\n  if (typeof remoteAddress === 'string' && typeof remotePort === 'number') {\n    return HostAddress.fromHostPort(remoteAddress, remotePort).toString();\n  }\n\n  return uuidV4().toString('hex');\n}\n\n/** @internal */\nexport class Connection extends TypedEventEmitter<ConnectionEvents> {\n  public id: number | '<monitor>';\n  public address: string;\n  public lastHelloMS = -1;\n  public serverApi?: ServerApi;\n  public helloOk = false;\n  public authContext?: AuthContext;\n  public delayedTimeoutId: NodeJS.Timeout | null = null;\n  public generation: number;\n  public accessToken?: string;\n  public readonly description: Readonly<StreamDescription>;\n  /**\n   * Represents if the connection has been established:\n   *  - TCP handshake\n   *  - TLS negotiated\n   *  - mongodb handshake (saslStart, saslContinue), includes authentication\n   *\n   * Once connection is established, command logging can log events (if enabled)\n   */\n  public established: boolean;\n  /** Indicates that the connection (including underlying TCP socket) has been closed. */\n  public closed = false;\n\n  private lastUseTime: number;\n  private clusterTime: Document | null = null;\n  private error: Error | null = null;\n  private dataEvents: AsyncGenerator<Buffer, void, void> | null = null;\n\n  private readonly socketTimeoutMS: number;\n  private readonly monitorCommands: boolean;\n  private readonly socket: Stream;\n  private readonly messageStream: Readable;\n\n  /** @event */\n  static readonly COMMAND_STARTED = COMMAND_STARTED;\n  /** @event */\n  static readonly COMMAND_SUCCEEDED = COMMAND_SUCCEEDED;\n  /** @event */\n  static readonly COMMAND_FAILED = COMMAND_FAILED;\n  /** @event */\n  static readonly CLUSTER_TIME_RECEIVED = CLUSTER_TIME_RECEIVED;\n  /** @event */\n  static readonly CLOSE = CLOSE;\n  /** @event */\n  static readonly PINNED = PINNED;\n  /** @event */\n  static readonly UNPINNED = UNPINNED;\n\n  constructor(stream: Stream, options: ConnectionOptions) {\n    super();\n    this.on('error', noop);\n\n    this.socket = stream;\n    this.id = options.id;\n    this.address = streamIdentifier(stream, options);\n    this.socketTimeoutMS = options.socketTimeoutMS ?? 0;\n    this.monitorCommands = options.monitorCommands;\n    this.serverApi = options.serverApi;\n    this.mongoLogger = options.mongoLogger;\n    this.established = false;\n\n    this.description = new StreamDescription(this.address, options);\n    this.generation = options.generation;\n    this.lastUseTime = now();\n\n    this.messageStream = this.socket\n      .on('error', this.onError.bind(this))\n      .pipe(new SizedMessageTransform({ connection: this }))\n      .on('error', this.onError.bind(this));\n    this.socket.on('close', this.onClose.bind(this));\n    this.socket.on('timeout', this.onTimeout.bind(this));\n\n    this.messageStream.pause();\n  }\n\n  public get hello() {\n    return this.description.hello;\n  }\n\n  // the `connect` method stores the result of the handshake hello on the connection\n  public set hello(response: Document | null) {\n    this.description.receiveResponse(response);\n    Object.freeze(this.description);\n  }\n\n  public get serviceId(): ObjectId | undefined {\n    return this.hello?.serviceId;\n  }\n\n  public get loadBalanced(): boolean {\n    return this.description.loadBalanced;\n  }\n\n  public get idleTime(): number {\n    return calculateDurationInMs(this.lastUseTime);\n  }\n\n  private get hasSessionSupport(): boolean {\n    return this.description.logicalSessionTimeoutMinutes != null;\n  }\n\n  private get supportsOpMsg(): boolean {\n    return (\n      this.description != null &&\n      maxWireVersion(this) >= 6 &&\n      !this.description.__nodejs_mock_server__\n    );\n  }\n\n  private get shouldEmitAndLogCommand(): boolean {\n    return (\n      (this.monitorCommands ||\n        (this.established &&\n          !this.authContext?.reauthenticating &&\n          this.mongoLogger?.willLog(MongoLoggableComponent.COMMAND, SeverityLevel.DEBUG))) ??\n      false\n    );\n  }\n\n  public markAvailable(): void {\n    this.lastUseTime = now();\n  }\n\n  public onError(error: Error) {\n    this.cleanup(error);\n  }\n\n  private onClose() {\n    const message = `connection ${this.id} to ${this.address} closed`;\n    this.cleanup(new MongoNetworkError(message));\n  }\n\n  private onTimeout() {\n    this.delayedTimeoutId = setTimeout(() => {\n      const message = `connection ${this.id} to ${this.address} timed out`;\n      const beforeHandshake = this.hello == null;\n      this.cleanup(new MongoNetworkTimeoutError(message, { beforeHandshake }));\n    }, 1).unref(); // No need for this timer to hold the event loop open\n  }\n\n  public destroy(): void {\n    if (this.closed) {\n      return;\n    }\n\n    // load balanced mode requires that these listeners remain on the connection\n    // after cleanup on timeouts, errors or close so we remove them before calling\n    // cleanup.\n    this.removeAllListeners(Connection.PINNED);\n    this.removeAllListeners(Connection.UNPINNED);\n    const message = `connection ${this.id} to ${this.address} closed`;\n    this.cleanup(new MongoNetworkError(message));\n  }\n\n  /**\n   * A method that cleans up the connection.  When `force` is true, this method\n   * forcibly destroys the socket.\n   *\n   * If an error is provided, any in-flight operations will be closed with the error.\n   *\n   * This method does nothing if the connection is already closed.\n   */\n  private cleanup(error: Error): void {\n    if (this.closed) {\n      return;\n    }\n\n    this.socket.destroy();\n    this.error = error;\n\n    this.dataEvents?.throw(error).then(undefined, squashError);\n    this.closed = true;\n    this.emit(Connection.CLOSE);\n  }\n\n  private prepareCommand(db: string, command: Document, options: CommandOptions) {\n    let cmd = { ...command };\n\n    const readPreference = getReadPreference(options);\n    const session = options?.session;\n\n    let clusterTime = this.clusterTime;\n\n    if (this.serverApi) {\n      const { version, strict, deprecationErrors } = this.serverApi;\n      cmd.apiVersion = version;\n      if (strict != null) cmd.apiStrict = strict;\n      if (deprecationErrors != null) cmd.apiDeprecationErrors = deprecationErrors;\n    }\n\n    if (this.hasSessionSupport && session) {\n      if (\n        session.clusterTime &&\n        clusterTime &&\n        session.clusterTime.clusterTime.greaterThan(clusterTime.clusterTime)\n      ) {\n        clusterTime = session.clusterTime;\n      }\n\n      const sessionError = applySession(session, cmd, options);\n      if (sessionError) throw sessionError;\n    } else if (session?.explicit) {\n      throw new MongoCompatibilityError('Current topology does not support sessions');\n    }\n\n    // if we have a known cluster time, gossip it\n    if (clusterTime) {\n      cmd.$clusterTime = clusterTime;\n    }\n\n    // For standalone, drivers MUST NOT set $readPreference.\n    if (this.description.type !== ServerType.Standalone) {\n      if (\n        !isSharded(this) &&\n        !this.description.loadBalanced &&\n        this.supportsOpMsg &&\n        options.directConnection === true &&\n        readPreference?.mode === 'primary'\n      ) {\n        // For mongos and load balancers with 'primary' mode, drivers MUST NOT set $readPreference.\n        // For all other types with a direct connection, if the read preference is 'primary'\n        // (driver sets 'primary' as default if no read preference is configured),\n        // the $readPreference MUST be set to 'primaryPreferred'\n        // to ensure that any server type can handle the request.\n        cmd.$readPreference = ReadPreference.primaryPreferred.toJSON();\n      } else if (isSharded(this) && !this.supportsOpMsg && readPreference?.mode !== 'primary') {\n        // When sending a read operation via OP_QUERY and the $readPreference modifier,\n        // the query MUST be provided using the $query modifier.\n        cmd = {\n          $query: cmd,\n          $readPreference: readPreference.toJSON()\n        };\n      } else if (readPreference?.mode !== 'primary') {\n        // For mode 'primary', drivers MUST NOT set $readPreference.\n        // For all other read preference modes (i.e. 'secondary', 'primaryPreferred', ...),\n        // drivers MUST set $readPreference\n        cmd.$readPreference = readPreference.toJSON();\n      }\n    }\n\n    const commandOptions = {\n      numberToSkip: 0,\n      numberToReturn: -1,\n      checkKeys: false,\n      // This value is not overridable\n      secondaryOk: readPreference.secondaryOk(),\n      ...options\n    };\n\n    options.timeoutContext?.addMaxTimeMSToCommand(cmd, options);\n\n    const message = this.supportsOpMsg\n      ? new OpMsgRequest(db, cmd, commandOptions)\n      : new OpQueryRequest(db, cmd, commandOptions);\n\n    return message;\n  }\n\n  private async *sendWire(\n    message: WriteProtocolMessageType,\n    options: CommandOptions & Abortable,\n    responseType?: MongoDBResponseConstructor\n  ): AsyncGenerator<MongoDBResponse> {\n    this.throwIfAborted();\n\n    const timeout =\n      options.socketTimeoutMS ??\n      options?.timeoutContext?.getSocketTimeoutMS() ??\n      this.socketTimeoutMS;\n    this.socket.setTimeout(timeout);\n\n    try {\n      await this.writeCommand(message, {\n        agreedCompressor: this.description.compressor ?? 'none',\n        zlibCompressionLevel: this.description.zlibCompressionLevel,\n        timeoutContext: options.timeoutContext,\n        signal: options.signal\n      });\n\n      if (options.noResponse || message.moreToCome) {\n        yield MongoDBResponse.empty;\n        return;\n      }\n\n      this.throwIfAborted();\n\n      if (\n        options.timeoutContext?.csotEnabled() &&\n        options.timeoutContext.minRoundTripTime != null &&\n        options.timeoutContext.remainingTimeMS < options.timeoutContext.minRoundTripTime\n      ) {\n        throw new MongoOperationTimeoutError(\n          'Server roundtrip time is greater than the time remaining'\n        );\n      }\n\n      for await (const response of this.readMany(options)) {\n        this.socket.setTimeout(0);\n        const bson = response.parse();\n\n        const document = (responseType ?? MongoDBResponse).make(bson);\n\n        yield document;\n        this.throwIfAborted();\n\n        this.socket.setTimeout(timeout);\n      }\n    } finally {\n      this.socket.setTimeout(0);\n    }\n  }\n\n  private async *sendCommand(\n    ns: MongoDBNamespace,\n    command: Document,\n    options: CommandOptions & Abortable,\n    responseType?: MongoDBResponseConstructor\n  ) {\n    options?.signal?.throwIfAborted();\n\n    const message = this.prepareCommand(ns.db, command, options);\n    let started = 0;\n    if (this.shouldEmitAndLogCommand) {\n      started = now();\n      this.emitAndLogCommand(\n        this.monitorCommands,\n        Connection.COMMAND_STARTED,\n        message.databaseName,\n        this.established,\n        new CommandStartedEvent(this, message, this.description.serverConnectionId)\n      );\n    }\n\n    // If `documentsReturnedIn` not set or raw is not enabled, use input bson options\n    // Otherwise, support raw flag. Raw only works for cursors that hardcode firstBatch/nextBatch fields\n    const bsonOptions: DeserializeOptions =\n      options.documentsReturnedIn == null || !options.raw\n        ? options\n        : {\n            ...options,\n            raw: false,\n            fieldsAsRaw: { [options.documentsReturnedIn]: true }\n          };\n\n    /** MongoDBResponse instance or subclass */\n    let document: MongoDBResponse | undefined = undefined;\n    /** Cached result of a toObject call */\n    let object: Document | undefined = undefined;\n    try {\n      this.throwIfAborted();\n      for await (document of this.sendWire(message, options, responseType)) {\n        object = undefined;\n        if (options.session != null) {\n          updateSessionFromResponse(options.session, document);\n        }\n\n        if (document.$clusterTime) {\n          this.clusterTime = document.$clusterTime;\n          this.emit(Connection.CLUSTER_TIME_RECEIVED, document.$clusterTime);\n        }\n\n        if (document.ok === 0) {\n          if (options.timeoutContext?.csotEnabled() && document.isMaxTimeExpiredError) {\n            throw new MongoOperationTimeoutError('Server reported a timeout error', {\n              cause: new MongoServerError((object ??= document.toObject(bsonOptions)))\n            });\n          }\n          throw new MongoServerError((object ??= document.toObject(bsonOptions)));\n        }\n\n        if (this.shouldEmitAndLogCommand) {\n          this.emitAndLogCommand(\n            this.monitorCommands,\n            Connection.COMMAND_SUCCEEDED,\n            message.databaseName,\n            this.established,\n            new CommandSucceededEvent(\n              this,\n              message,\n              options.noResponse\n                ? undefined\n                : message.moreToCome\n                  ? { ok: 1 }\n                  : (object ??= document.toObject(bsonOptions)),\n              started,\n              this.description.serverConnectionId\n            )\n          );\n        }\n\n        if (responseType == null) {\n          yield (object ??= document.toObject(bsonOptions));\n        } else {\n          yield document;\n        }\n\n        this.throwIfAborted();\n      }\n    } catch (error) {\n      if (this.shouldEmitAndLogCommand) {\n        this.emitAndLogCommand(\n          this.monitorCommands,\n          Connection.COMMAND_FAILED,\n          message.databaseName,\n          this.established,\n          new CommandFailedEvent(this, message, error, started, this.description.serverConnectionId)\n        );\n      }\n      throw error;\n    }\n  }\n\n  public async command<T extends MongoDBResponseConstructor>(\n    ns: MongoDBNamespace,\n    command: Document,\n    options: CommandOptions | undefined,\n    responseType: T\n  ): Promise<InstanceType<T>>;\n\n  public async command<T extends MongoDBResponseConstructor>(\n    ns: MongoDBNamespace,\n    command: Document,\n    options: CommandOptions | undefined,\n    responseType: T | undefined\n  ): Promise<typeof responseType extends undefined ? Document : InstanceType<T>>;\n\n  public async command(\n    ns: MongoDBNamespace,\n    command: Document,\n    options?: CommandOptions\n  ): Promise<Document>;\n\n  public async command(\n    ns: MongoDBNamespace,\n    command: Document,\n    options: CommandOptions & Abortable = {},\n    responseType?: MongoDBResponseConstructor\n  ): Promise<Document> {\n    this.throwIfAborted();\n    options.signal?.throwIfAborted();\n\n    for await (const document of this.sendCommand(ns, command, options, responseType)) {\n      if (options.timeoutContext?.csotEnabled()) {\n        if (MongoDBResponse.is(document)) {\n          if (document.isMaxTimeExpiredError) {\n            throw new MongoOperationTimeoutError('Server reported a timeout error', {\n              cause: new MongoServerError(document.toObject())\n            });\n          }\n        } else {\n          if (\n            (Array.isArray(document?.writeErrors) &&\n              document.writeErrors.some(\n                error => error?.code === MONGODB_ERROR_CODES.MaxTimeMSExpired\n              )) ||\n            document?.writeConcernError?.code === MONGODB_ERROR_CODES.MaxTimeMSExpired\n          ) {\n            throw new MongoOperationTimeoutError('Server reported a timeout error', {\n              cause: new MongoServerError(document)\n            });\n          }\n        }\n      }\n\n      return document;\n    }\n    throw new MongoUnexpectedServerResponseError('Unable to get response from server');\n  }\n\n  public exhaustCommand(\n    ns: MongoDBNamespace,\n    command: Document,\n    options: CommandOptions,\n    replyListener: Callback\n  ) {\n    const exhaustLoop = async () => {\n      this.throwIfAborted();\n      for await (const reply of this.sendCommand(ns, command, options)) {\n        replyListener(undefined, reply);\n        this.throwIfAborted();\n      }\n      throw new MongoUnexpectedServerResponseError('Server ended moreToCome unexpectedly');\n    };\n\n    exhaustLoop().then(undefined, replyListener);\n  }\n\n  private throwIfAborted() {\n    if (this.error) throw this.error;\n  }\n\n  /**\n   * @internal\n   *\n   * Writes an OP_MSG or OP_QUERY request to the socket, optionally compressing the command. This method\n   * waits until the socket's buffer has emptied (the Nodejs socket `drain` event has fired).\n   */\n  private async writeCommand(\n    command: WriteProtocolMessageType,\n    options: {\n      agreedCompressor?: CompressorName;\n      zlibCompressionLevel?: number;\n      timeoutContext?: TimeoutContext;\n    } & Abortable\n  ): Promise<void> {\n    const finalCommand =\n      options.agreedCompressor === 'none' || !OpCompressedRequest.canCompress(command)\n        ? command\n        : new OpCompressedRequest(command, {\n            agreedCompressor: options.agreedCompressor ?? 'none',\n            zlibCompressionLevel: options.zlibCompressionLevel ?? 0\n          });\n\n    const buffer = Buffer.concat(await finalCommand.toBin());\n\n    if (options.timeoutContext?.csotEnabled()) {\n      if (\n        options.timeoutContext.minRoundTripTime != null &&\n        options.timeoutContext.remainingTimeMS < options.timeoutContext.minRoundTripTime\n      ) {\n        throw new MongoOperationTimeoutError(\n          'Server roundtrip time is greater than the time remaining'\n        );\n      }\n    }\n\n    if (this.socket.write(buffer)) return;\n\n    const drainEvent = once<void>(this.socket, 'drain', options);\n    const timeout = options?.timeoutContext?.timeoutForSocketWrite;\n    const drained = timeout ? Promise.race([drainEvent, timeout]) : drainEvent;\n    try {\n      return await drained;\n    } catch (writeError) {\n      if (TimeoutError.is(writeError)) {\n        const timeoutError = new MongoOperationTimeoutError('Timed out at socket write');\n        this.onError(timeoutError);\n        throw timeoutError;\n      } else if (writeError === options.signal?.reason) {\n        this.onError(writeError);\n      }\n      throw writeError;\n    } finally {\n      timeout?.clear();\n    }\n  }\n\n  /**\n   * @internal\n   *\n   * Returns an async generator that yields full wire protocol messages from the underlying socket.  This function\n   * yields messages until `moreToCome` is false or not present in a response, or the caller cancels the request\n   * by calling `return` on the generator.\n   *\n   * Note that `for-await` loops call `return` automatically when the loop is exited.\n   */\n  private async *readMany(\n    options: {\n      timeoutContext?: TimeoutContext;\n    } & Abortable\n  ): AsyncGenerator<OpMsgResponse | OpReply> {\n    try {\n      this.dataEvents = onData(this.messageStream, options);\n      this.messageStream.resume();\n\n      for await (const message of this.dataEvents) {\n        const response = await decompressResponse(message);\n        yield response;\n\n        if (!response.moreToCome) {\n          return;\n        }\n      }\n    } catch (readError) {\n      if (TimeoutError.is(readError)) {\n        const timeoutError = new MongoOperationTimeoutError(\n          `Timed out during socket read (${readError.duration}ms)`\n        );\n        this.dataEvents = null;\n        this.onError(timeoutError);\n        throw timeoutError;\n      } else if (readError === options.signal?.reason) {\n        this.onError(readError);\n      }\n      throw readError;\n    } finally {\n      this.dataEvents = null;\n      this.messageStream.pause();\n      this.throwIfAborted();\n    }\n  }\n}\n\n/** @internal */\nexport class SizedMessageTransform extends Transform {\n  bufferPool: BufferPool;\n  connection: Connection;\n\n  constructor({ connection }: { connection: Connection }) {\n    super({ writableObjectMode: false, readableObjectMode: true });\n    this.bufferPool = new BufferPool();\n    this.connection = connection;\n  }\n\n  override _transform(chunk: Buffer, encoding: unknown, callback: TransformCallback): void {\n    if (this.connection.delayedTimeoutId != null) {\n      clearTimeout(this.connection.delayedTimeoutId);\n      this.connection.delayedTimeoutId = null;\n    }\n\n    this.bufferPool.append(chunk);\n    const sizeOfMessage = this.bufferPool.getInt32();\n\n    if (sizeOfMessage == null) {\n      return callback();\n    }\n\n    if (sizeOfMessage < 0) {\n      return callback(new MongoParseError(`Invalid message size: ${sizeOfMessage}, too small`));\n    }\n\n    if (sizeOfMessage > this.bufferPool.length) {\n      return callback();\n    }\n\n    const message = this.bufferPool.read(sizeOfMessage);\n    return callback(null, message);\n  }\n}\n\n/** @internal */\nexport class CryptoConnection extends Connection {\n  /** @internal */\n  autoEncrypter?: AutoEncrypter;\n\n  constructor(stream: Stream, options: ConnectionOptions) {\n    super(stream, options);\n    this.autoEncrypter = options.autoEncrypter;\n  }\n\n  public override async command<T extends MongoDBResponseConstructor>(\n    ns: MongoDBNamespace,\n    command: Document,\n    options: CommandOptions | undefined,\n    responseType: T\n  ): Promise<InstanceType<T>>;\n\n  public override async command(\n    ns: MongoDBNamespace,\n    command: Document,\n    options?: CommandOptions\n  ): Promise<Document>;\n\n  override async command<T extends MongoDBResponseConstructor>(\n    ns: MongoDBNamespace,\n    cmd: Document,\n    options?: CommandOptions,\n    responseType?: T | undefined\n  ): Promise<Document> {\n    const { autoEncrypter } = this;\n    if (!autoEncrypter) {\n      // TODO(NODE-6065): throw a MongoRuntimeError in Node V7\n      // @ts-expect-error No cause provided because there is no underlying error.\n      throw new MongoMissingDependencyError('No AutoEncrypter available for encryption', {\n        dependencyName: 'n/a'\n      });\n    }\n\n    const serverWireVersion = maxWireVersion(this);\n    if (serverWireVersion === 0) {\n      // This means the initial handshake hasn't happened yet\n      return await super.command<T>(ns, cmd, options, responseType);\n    }\n\n    if (serverWireVersion < 8) {\n      throw new MongoCompatibilityError(\n        'Auto-encryption requires a minimum MongoDB version of 4.2'\n      );\n    }\n\n    // Save sort or indexKeys based on the command being run\n    // the encrypt API serializes our JS objects to BSON to pass to the native code layer\n    // and then deserializes the encrypted result, the protocol level components\n    // of the command (ex. sort) are then converted to JS objects potentially losing\n    // import key order information. These fields are never encrypted so we can save the values\n    // from before the encryption and replace them after encryption has been performed\n    const sort: Map<string, number> | null = cmd.find || cmd.findAndModify ? cmd.sort : null;\n    const indexKeys: Map<string, number>[] | null = cmd.createIndexes\n      ? cmd.indexes.map((index: { key: Map<string, number> }) => index.key)\n      : null;\n\n    const encrypted = await autoEncrypter.encrypt(ns.toString(), cmd, options);\n\n    // Replace the saved values\n    if (sort != null && (cmd.find || cmd.findAndModify)) {\n      encrypted.sort = sort;\n    }\n\n    if (indexKeys != null && cmd.createIndexes) {\n      for (const [offset, index] of indexKeys.entries()) {\n        // @ts-expect-error `encrypted` is a generic \"command\", but we've narrowed for only `createIndexes` commands here\n        encrypted.indexes[offset].key = index;\n      }\n    }\n\n    const encryptedResponse = await super.command(\n      ns,\n      encrypted,\n      options,\n      // Eventually we want to require `responseType` which means we would satisfy `T` as the return type.\n      // In the meantime, we want encryptedResponse to always be _at least_ a MongoDBResponse if not a more specific subclass\n      // So that we can ensure we have access to the on-demand APIs for decorate response\n      responseType ?? MongoDBResponse\n    );\n\n    const result = await autoEncrypter.decrypt(encryptedResponse.toBytes(), options);\n\n    const decryptedResponse = responseType?.make(result) ?? deserialize(result, options);\n\n    if (autoEncrypter[kDecorateResult]) {\n      if (responseType == null) {\n        decorateDecryptionResult(decryptedResponse, encryptedResponse.toObject(), true);\n      } else if (decryptedResponse instanceof CursorResponse) {\n        decryptedResponse.encryptedResponse = encryptedResponse;\n      }\n    }\n\n    return decryptedResponse;\n  }\n}\n", "import type { Socket, SocketConnectOpts } from 'net';\nimport * as net from 'net';\nimport type { ConnectionOptions as TLSConnectionOpts, TLSSocket } from 'tls';\nimport * as tls from 'tls';\n\nimport type { Document } from '../bson';\nimport { LEGACY_HELLO_COMMAND } from '../constants';\nimport { getSocks, type SocksLib } from '../deps';\nimport {\n  MongoCompatibilityError,\n  MongoError,\n  MongoErrorLabel,\n  MongoInvalidArgumentError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoRuntimeError,\n  needsRetryableWriteLabel\n} from '../error';\nimport { HostAddress, ns, promiseWithResolvers } from '../utils';\nimport { AuthContext } from './auth/auth_provider';\nimport { AuthMechanism } from './auth/providers';\nimport {\n  type CommandOptions,\n  Connection,\n  type ConnectionOptions,\n  CryptoConnection\n} from './connection';\nimport {\n  MAX_SUPPORTED_SERVER_VERSION,\n  MAX_SUPPORTED_WIRE_VERSION,\n  MIN_SUPPORTED_SERVER_VERSION,\n  MIN_SUPPORTED_WIRE_VERSION\n} from './wire_protocol/constants';\n\n/** @public */\nexport type Stream = Socket | TLSSocket;\n\nexport async function connect(options: ConnectionOptions): Promise<Connection> {\n  let connection: Connection | null = null;\n  try {\n    const socket = await makeSocket(options);\n    connection = makeConnection(options, socket);\n    await performInitialHandshake(connection, options);\n    return connection;\n  } catch (error) {\n    connection?.destroy();\n    throw error;\n  }\n}\n\nexport function makeConnection(options: ConnectionOptions, socket: Stream): Connection {\n  let ConnectionType = options.connectionType ?? Connection;\n  if (options.autoEncrypter) {\n    ConnectionType = CryptoConnection;\n  }\n\n  return new ConnectionType(socket, options);\n}\n\nfunction checkSupportedServer(hello: Document, options: ConnectionOptions) {\n  const maxWireVersion = Number(hello.maxWireVersion);\n  const minWireVersion = Number(hello.minWireVersion);\n  const serverVersionHighEnough =\n    !Number.isNaN(maxWireVersion) && maxWireVersion >= MIN_SUPPORTED_WIRE_VERSION;\n  const serverVersionLowEnough =\n    !Number.isNaN(minWireVersion) && minWireVersion <= MAX_SUPPORTED_WIRE_VERSION;\n\n  if (serverVersionHighEnough) {\n    if (serverVersionLowEnough) {\n      return null;\n    }\n\n    const message = `Server at ${options.hostAddress} reports minimum wire version ${JSON.stringify(\n      hello.minWireVersion\n    )}, but this version of the Node.js Driver requires at most ${MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${MAX_SUPPORTED_SERVER_VERSION})`;\n    return new MongoCompatibilityError(message);\n  }\n\n  const message = `Server at ${options.hostAddress} reports maximum wire version ${\n    JSON.stringify(hello.maxWireVersion) ?? 0\n  }, but this version of the Node.js Driver requires at least ${MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${MIN_SUPPORTED_SERVER_VERSION})`;\n  return new MongoCompatibilityError(message);\n}\n\nexport async function performInitialHandshake(\n  conn: Connection,\n  options: ConnectionOptions\n): Promise<void> {\n  const credentials = options.credentials;\n\n  if (credentials) {\n    if (\n      !(credentials.mechanism === AuthMechanism.MONGODB_DEFAULT) &&\n      !options.authProviders.getOrCreateProvider(\n        credentials.mechanism,\n        credentials.mechanismProperties\n      )\n    ) {\n      throw new MongoInvalidArgumentError(`AuthMechanism '${credentials.mechanism}' not supported`);\n    }\n  }\n\n  const authContext = new AuthContext(conn, credentials, options);\n  conn.authContext = authContext;\n\n  const handshakeDoc = await prepareHandshakeDocument(authContext);\n\n  // @ts-expect-error: TODO(NODE-5141): The options need to be filtered properly, Connection options differ from Command options\n  const handshakeOptions: CommandOptions = { ...options, raw: false };\n  if (typeof options.connectTimeoutMS === 'number') {\n    // The handshake technically is a monitoring check, so its socket timeout should be connectTimeoutMS\n    handshakeOptions.socketTimeoutMS = options.connectTimeoutMS;\n  }\n\n  const start = new Date().getTime();\n\n  const response = await executeHandshake(handshakeDoc, handshakeOptions);\n\n  if (!('isWritablePrimary' in response)) {\n    // Provide hello-style response document.\n    response.isWritablePrimary = response[LEGACY_HELLO_COMMAND];\n  }\n\n  if (response.helloOk) {\n    conn.helloOk = true;\n  }\n\n  const supportedServerErr = checkSupportedServer(response, options);\n  if (supportedServerErr) {\n    throw supportedServerErr;\n  }\n\n  if (options.loadBalanced) {\n    if (!response.serviceId) {\n      throw new MongoCompatibilityError(\n        'Driver attempted to initialize in load balancing mode, ' +\n          'but the server does not support this mode.'\n      );\n    }\n  }\n\n  // NOTE: This is metadata attached to the connection while porting away from\n  //       handshake being done in the `Server` class. Likely, it should be\n  //       relocated, or at very least restructured.\n  conn.hello = response;\n  conn.lastHelloMS = new Date().getTime() - start;\n\n  if (!response.arbiterOnly && credentials) {\n    // store the response on auth context\n    authContext.response = response;\n\n    const resolvedCredentials = credentials.resolveAuthMechanism(response);\n    const provider = options.authProviders.getOrCreateProvider(\n      resolvedCredentials.mechanism,\n      resolvedCredentials.mechanismProperties\n    );\n    if (!provider) {\n      throw new MongoInvalidArgumentError(\n        `No AuthProvider for ${resolvedCredentials.mechanism} defined.`\n      );\n    }\n\n    try {\n      await provider.auth(authContext);\n    } catch (error) {\n      if (error instanceof MongoError) {\n        error.addErrorLabel(MongoErrorLabel.HandshakeError);\n        if (needsRetryableWriteLabel(error, response.maxWireVersion, conn.description.type)) {\n          error.addErrorLabel(MongoErrorLabel.RetryableWriteError);\n        }\n      }\n      throw error;\n    }\n  }\n\n  // Connection establishment is socket creation (tcp handshake, tls handshake, MongoDB handshake (saslStart, saslContinue))\n  // Once connection is established, command logging can log events (if enabled)\n  conn.established = true;\n\n  async function executeHandshake(handshakeDoc: Document, handshakeOptions: CommandOptions) {\n    try {\n      const handshakeResponse = await conn.command(\n        ns('admin.$cmd'),\n        handshakeDoc,\n        handshakeOptions\n      );\n      return handshakeResponse;\n    } catch (error) {\n      if (error instanceof MongoError) {\n        error.addErrorLabel(MongoErrorLabel.HandshakeError);\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * HandshakeDocument used during authentication.\n * @internal\n */\nexport interface HandshakeDocument extends Document {\n  /**\n   * @deprecated Use hello instead\n   */\n  ismaster?: boolean;\n  hello?: boolean;\n  helloOk?: boolean;\n  client: Document;\n  compression: string[];\n  saslSupportedMechs?: string;\n  loadBalanced?: boolean;\n}\n\n/**\n * @internal\n *\n * This function is only exposed for testing purposes.\n */\nexport async function prepareHandshakeDocument(\n  authContext: AuthContext\n): Promise<HandshakeDocument> {\n  const options = authContext.options;\n  const compressors = options.compressors ? options.compressors : [];\n  const { serverApi } = authContext.connection;\n  const clientMetadata: Document = await options.extendedMetadata;\n\n  const handshakeDoc: HandshakeDocument = {\n    [serverApi?.version || options.loadBalanced === true ? 'hello' : LEGACY_HELLO_COMMAND]: 1,\n    helloOk: true,\n    client: clientMetadata,\n    compression: compressors\n  };\n\n  if (options.loadBalanced === true) {\n    handshakeDoc.loadBalanced = true;\n  }\n\n  const credentials = authContext.credentials;\n  if (credentials) {\n    if (credentials.mechanism === AuthMechanism.MONGODB_DEFAULT && credentials.username) {\n      handshakeDoc.saslSupportedMechs = `${credentials.source}.${credentials.username}`;\n\n      const provider = authContext.options.authProviders.getOrCreateProvider(\n        AuthMechanism.MONGODB_SCRAM_SHA256,\n        credentials.mechanismProperties\n      );\n      if (!provider) {\n        // This auth mechanism is always present.\n        throw new MongoInvalidArgumentError(\n          `No AuthProvider for ${AuthMechanism.MONGODB_SCRAM_SHA256} defined.`\n        );\n      }\n      return await provider.prepare(handshakeDoc, authContext);\n    }\n    const provider = authContext.options.authProviders.getOrCreateProvider(\n      credentials.mechanism,\n      credentials.mechanismProperties\n    );\n    if (!provider) {\n      throw new MongoInvalidArgumentError(`No AuthProvider for ${credentials.mechanism} defined.`);\n    }\n    return await provider.prepare(handshakeDoc, authContext);\n  }\n  return handshakeDoc;\n}\n\n/** @public */\nexport const LEGAL_TLS_SOCKET_OPTIONS = [\n  'allowPartialTrustChain',\n  'ALPNProtocols',\n  'ca',\n  'cert',\n  'checkServerIdentity',\n  'ciphers',\n  'crl',\n  'ecdhCurve',\n  'key',\n  'minDHSize',\n  'passphrase',\n  'pfx',\n  'rejectUnauthorized',\n  'secureContext',\n  'secureProtocol',\n  'servername',\n  'session'\n] as const;\n\n/** @public */\nexport const LEGAL_TCP_SOCKET_OPTIONS = [\n  'autoSelectFamily',\n  'autoSelectFamilyAttemptTimeout',\n  'family',\n  'hints',\n  'localAddress',\n  'localPort',\n  'lookup'\n] as const;\n\nfunction parseConnectOptions(options: ConnectionOptions): SocketConnectOpts {\n  const hostAddress = options.hostAddress;\n  if (!hostAddress) throw new MongoInvalidArgumentError('Option \"hostAddress\" is required');\n\n  const result: Partial<net.TcpNetConnectOpts & net.IpcNetConnectOpts> = {};\n  for (const name of LEGAL_TCP_SOCKET_OPTIONS) {\n    if (options[name] != null) {\n      (result as Document)[name] = options[name];\n    }\n  }\n\n  if (typeof hostAddress.socketPath === 'string') {\n    result.path = hostAddress.socketPath;\n    return result as net.IpcNetConnectOpts;\n  } else if (typeof hostAddress.host === 'string') {\n    result.host = hostAddress.host;\n    result.port = hostAddress.port;\n    return result as net.TcpNetConnectOpts;\n  } else {\n    // This should never happen since we set up HostAddresses\n    // But if we don't throw here the socket could hang until timeout\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError(`Unexpected HostAddress ${JSON.stringify(hostAddress)}`);\n  }\n}\n\ntype MakeConnectionOptions = ConnectionOptions & { existingSocket?: Stream };\n\nfunction parseSslOptions(options: MakeConnectionOptions): TLSConnectionOpts {\n  const result: TLSConnectionOpts = parseConnectOptions(options);\n  // Merge in valid SSL options\n  for (const name of LEGAL_TLS_SOCKET_OPTIONS) {\n    if (options[name] != null) {\n      (result as Document)[name] = options[name];\n    }\n  }\n\n  if (options.existingSocket) {\n    result.socket = options.existingSocket;\n  }\n\n  // Set default sni servername to be the same as host\n  if (result.servername == null && result.host && !net.isIP(result.host)) {\n    result.servername = result.host;\n  }\n\n  return result;\n}\n\nexport async function makeSocket(options: MakeConnectionOptions): Promise<Stream> {\n  const useTLS = options.tls ?? false;\n  const noDelay = options.noDelay ?? true;\n  const connectTimeoutMS = options.connectTimeoutMS ?? 30000;\n  const existingSocket = options.existingSocket;\n\n  let socket: Stream;\n\n  if (options.proxyHost != null) {\n    // Currently, only Socks5 is supported.\n    return await makeSocks5Connection({\n      ...options,\n      connectTimeoutMS // Should always be present for Socks5\n    });\n  }\n\n  if (useTLS) {\n    const tlsSocket = tls.connect(parseSslOptions(options));\n    if (typeof tlsSocket.disableRenegotiation === 'function') {\n      tlsSocket.disableRenegotiation();\n    }\n    socket = tlsSocket;\n  } else if (existingSocket) {\n    // In the TLS case, parseSslOptions() sets options.socket to existingSocket,\n    // so we only need to handle the non-TLS case here (where existingSocket\n    // gives us all we need out of the box).\n    socket = existingSocket;\n  } else {\n    socket = net.createConnection(parseConnectOptions(options));\n  }\n\n  socket.setKeepAlive(true, 300000);\n  socket.setTimeout(connectTimeoutMS);\n  socket.setNoDelay(noDelay);\n\n  let cancellationHandler: ((err: Error) => void) | null = null;\n\n  const { promise: connectedSocket, resolve, reject } = promiseWithResolvers<Stream>();\n  if (existingSocket) {\n    resolve(socket);\n  } else {\n    const start = performance.now();\n    const connectEvent = useTLS ? 'secureConnect' : 'connect';\n    socket\n      .once(connectEvent, () => resolve(socket))\n      .once('error', cause =>\n        reject(new MongoNetworkError(MongoError.buildErrorMessage(cause), { cause }))\n      )\n      .once('timeout', () => {\n        reject(\n          new MongoNetworkTimeoutError(\n            `Socket '${connectEvent}' timed out after ${(performance.now() - start) | 0}ms (connectTimeoutMS: ${connectTimeoutMS})`\n          )\n        );\n      })\n      .once('close', () =>\n        reject(\n          new MongoNetworkError(\n            `Socket closed after ${(performance.now() - start) | 0} during connection establishment`\n          )\n        )\n      );\n\n    if (options.cancellationToken != null) {\n      cancellationHandler = () =>\n        reject(\n          new MongoNetworkError(\n            `Socket connection establishment was cancelled after ${(performance.now() - start) | 0}`\n          )\n        );\n      options.cancellationToken.once('cancel', cancellationHandler);\n    }\n  }\n\n  try {\n    socket = await connectedSocket;\n    return socket;\n  } catch (error) {\n    socket.destroy();\n    throw error;\n  } finally {\n    socket.setTimeout(0);\n    if (cancellationHandler != null) {\n      options.cancellationToken?.removeListener('cancel', cancellationHandler);\n    }\n  }\n}\n\nlet socks: SocksLib | null = null;\nfunction loadSocks() {\n  if (socks == null) {\n    const socksImport = getSocks();\n    if ('kModuleError' in socksImport) {\n      throw socksImport.kModuleError;\n    }\n    socks = socksImport;\n  }\n  return socks;\n}\n\nasync function makeSocks5Connection(options: MakeConnectionOptions): Promise<Stream> {\n  const hostAddress = HostAddress.fromHostPort(\n    options.proxyHost ?? '', // proxyHost is guaranteed to set here\n    options.proxyPort ?? 1080\n  );\n\n  // First, connect to the proxy server itself:\n  const rawSocket = await makeSocket({\n    ...options,\n    hostAddress,\n    tls: false,\n    proxyHost: undefined\n  });\n\n  const destination = parseConnectOptions(options) as net.TcpNetConnectOpts;\n  if (typeof destination.host !== 'string' || typeof destination.port !== 'number') {\n    throw new MongoInvalidArgumentError('Can only make Socks5 connections to TCP hosts');\n  }\n\n  socks ??= loadSocks();\n\n  let existingSocket: Stream;\n\n  try {\n    // Then, establish the Socks5 proxy connection:\n    const connection = await socks.SocksClient.createConnection({\n      existing_socket: rawSocket,\n      timeout: options.connectTimeoutMS,\n      command: 'connect',\n      destination: {\n        host: destination.host,\n        port: destination.port\n      },\n      proxy: {\n        // host and port are ignored because we pass existing_socket\n        host: 'iLoveJavaScript',\n        port: 0,\n        type: 5,\n        userId: options.proxyUsername || undefined,\n        password: options.proxyPassword || undefined\n      }\n    });\n    existingSocket = connection.socket;\n  } catch (cause) {\n    throw new MongoNetworkError(MongoError.buildErrorMessage(cause), { cause });\n  }\n\n  // Finally, now treat the resulting duplex stream as the\n  // socket over which we send and receive wire protocol messages:\n  return await makeSocket({ ...options, existingSocket, proxyHost: undefined });\n}\n", "import type { Document } from '../bson';\nimport {\n  SERVER_CLOSED,\n  SERVER_DESCRIPTION_CHANGED,\n  SERVER_HEARTBEAT_FAILED,\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED,\n  SERVER_OPENING,\n  TOPOLOGY_CLOSED,\n  TOPOLOGY_DESCRIPTION_CHANGED,\n  TOPOLOGY_OPENING\n} from '../constants';\nimport type { ServerDescription } from './server_description';\nimport type { TopologyDescription } from './topology_description';\n\n/**\n * Emitted when server description changes, but does NOT include changes to the RTT.\n * @public\n * @category Event\n */\nexport class ServerDescriptionChangedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The address (host/port pair) of the server */\n  address: string;\n  /** The previous server description */\n  previousDescription: ServerDescription;\n  /** The new server description */\n  newDescription: ServerDescription;\n  name = SERVER_DESCRIPTION_CHANGED;\n\n  /** @internal */\n  constructor(\n    topologyId: number,\n    address: string,\n    previousDescription: ServerDescription,\n    newDescription: ServerDescription\n  ) {\n    this.topologyId = topologyId;\n    this.address = address;\n    this.previousDescription = previousDescription;\n    this.newDescription = newDescription;\n  }\n}\n\n/**\n * Emitted when server is initialized.\n * @public\n * @category Event\n */\nexport class ServerOpeningEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The address (host/port pair) of the server */\n  address: string;\n  /** @internal */\n  name = SERVER_OPENING;\n\n  /** @internal */\n  constructor(topologyId: number, address: string) {\n    this.topologyId = topologyId;\n    this.address = address;\n  }\n}\n\n/**\n * Emitted when server is closed.\n * @public\n * @category Event\n */\nexport class ServerClosedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The address (host/port pair) of the server */\n  address: string;\n  /** @internal */\n  name = SERVER_CLOSED;\n\n  /** @internal */\n  constructor(topologyId: number, address: string) {\n    this.topologyId = topologyId;\n    this.address = address;\n  }\n}\n\n/**\n * Emitted when topology description changes.\n * @public\n * @category Event\n */\nexport class TopologyDescriptionChangedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The old topology description */\n  previousDescription: TopologyDescription;\n  /** The new topology description */\n  newDescription: TopologyDescription;\n  /** @internal */\n  name = TOPOLOGY_DESCRIPTION_CHANGED;\n\n  /** @internal */\n  constructor(\n    topologyId: number,\n    previousDescription: TopologyDescription,\n    newDescription: TopologyDescription\n  ) {\n    this.topologyId = topologyId;\n    this.previousDescription = previousDescription;\n    this.newDescription = newDescription;\n  }\n}\n\n/**\n * Emitted when topology is initialized.\n * @public\n * @category Event\n */\nexport class TopologyOpeningEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** @internal */\n  name = TOPOLOGY_OPENING;\n\n  /** @internal */\n  constructor(topologyId: number) {\n    this.topologyId = topologyId;\n  }\n}\n\n/**\n * Emitted when topology is closed.\n * @public\n * @category Event\n */\nexport class TopologyClosedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** @internal */\n  name = TOPOLOGY_CLOSED;\n\n  /** @internal */\n  constructor(topologyId: number) {\n    this.topologyId = topologyId;\n  }\n}\n\n/**\n * Emitted when the server monitor\u2019s hello command is started - immediately before\n * the hello command is serialized into raw BSON and written to the socket.\n *\n * @public\n * @category Event\n */\nexport class ServerHeartbeatStartedEvent {\n  /** The connection id for the command */\n  connectionId: string;\n  /** Is true when using the streaming protocol */\n  awaited: boolean;\n  /** @internal */\n  name = SERVER_HEARTBEAT_STARTED;\n\n  /** @internal */\n  constructor(connectionId: string, awaited: boolean) {\n    this.connectionId = connectionId;\n    this.awaited = awaited;\n  }\n}\n\n/**\n * Emitted when the server monitor\u2019s hello succeeds.\n * @public\n * @category Event\n */\nexport class ServerHeartbeatSucceededEvent {\n  /** The connection id for the command */\n  connectionId: string;\n  /** The execution time of the event in ms */\n  duration: number;\n  /** The command reply */\n  reply: Document;\n  /** Is true when using the streaming protocol */\n  awaited: boolean;\n  /** @internal */\n  name = SERVER_HEARTBEAT_SUCCEEDED;\n\n  /** @internal */\n  constructor(connectionId: string, duration: number, reply: Document | null, awaited: boolean) {\n    this.connectionId = connectionId;\n    this.duration = duration;\n    this.reply = reply ?? {};\n    this.awaited = awaited;\n  }\n}\n\n/**\n * Emitted when the server monitor\u2019s hello fails, either with an \u201Cok: 0\u201D or a socket exception.\n * @public\n * @category Event\n */\nexport class ServerHeartbeatFailedEvent {\n  /** The connection id for the command */\n  connectionId: string;\n  /** The execution time of the event in ms */\n  duration: number;\n  /** The command failure */\n  failure: Error;\n  /** Is true when using the streaming protocol */\n  awaited: boolean;\n  /** @internal */\n  name = SERVER_HEARTBEAT_FAILED;\n\n  /** @internal */\n  constructor(connectionId: string, duration: number, failure: Error, awaited: boolean) {\n    this.connectionId = connectionId;\n    this.duration = duration;\n    this.failure = failure;\n    this.awaited = awaited;\n  }\n}\n", "import type { ObjectId } from '../bson';\nimport {\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECKED_IN,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_READY\n} from '../constants';\nimport type { MongoError } from '../error';\nimport { now } from '../utils';\nimport type { Connection } from './connection';\nimport type { ConnectionPool, ConnectionPoolOptions } from './connection_pool';\n\n/**\n * The base export class for all monitoring events published from the connection pool\n * @public\n * @category Event\n */\nexport abstract class ConnectionPoolMonitoringEvent {\n  /** A timestamp when the event was created  */\n  time: Date;\n  /** The address (host/port pair) of the pool */\n  address: string;\n  /** @internal */\n  abstract name:\n    | typeof CONNECTION_CHECK_OUT_FAILED\n    | typeof CONNECTION_CHECK_OUT_STARTED\n    | typeof CONNECTION_CHECKED_IN\n    | typeof CONNECTION_CHECKED_OUT\n    | typeof CONNECTION_CLOSED\n    | typeof CONNECTION_CREATED\n    | typeof CONNECTION_POOL_CLEARED\n    | typeof CONNECTION_POOL_CLOSED\n    | typeof CONNECTION_POOL_CREATED\n    | typeof CONNECTION_POOL_READY\n    | typeof CONNECTION_READY;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    this.time = new Date();\n    this.address = pool.address;\n  }\n}\n\n/**\n * An event published when a connection pool is created\n * @public\n * @category Event\n */\nexport class ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** The options used to create this connection pool */\n  options: Pick<\n    ConnectionPoolOptions,\n    'maxPoolSize' | 'minPoolSize' | 'maxConnecting' | 'maxIdleTimeMS' | 'waitQueueTimeoutMS'\n  >;\n  /** @internal */\n  name = CONNECTION_POOL_CREATED;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n    const { maxConnecting, maxPoolSize, minPoolSize, maxIdleTimeMS, waitQueueTimeoutMS } =\n      pool.options;\n    this.options = { maxConnecting, maxPoolSize, minPoolSize, maxIdleTimeMS, waitQueueTimeoutMS };\n  }\n}\n\n/**\n * An event published when a connection pool is ready\n * @public\n * @category Event\n */\nexport class ConnectionPoolReadyEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  name = CONNECTION_POOL_READY;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a connection pool is closed\n * @public\n * @category Event\n */\nexport class ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  name = CONNECTION_POOL_CLOSED;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a connection pool creates a new connection\n * @public\n * @category Event\n */\nexport class ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** A monotonically increasing, per-pool id for the newly created connection */\n  connectionId: number | '<monitor>';\n  /** @internal */\n  name = CONNECTION_CREATED;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: { id: number | '<monitor>' }) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is ready for use\n * @public\n * @category Event\n */\nexport class ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n  /**\n   * The time it took to establish the connection.\n   * In accordance with the definition of establishment of a connection\n   * specified by `ConnectionPoolOptions.maxConnecting`,\n   * it is the time elapsed between emitting a `ConnectionCreatedEvent`\n   * and emitting this event as part of the same checking out.\n   *\n   * Naturally, when establishing a connection is part of checking out,\n   * this duration is not greater than\n   * `ConnectionCheckedOutEvent.duration`.\n   */\n  durationMS: number;\n  /** @internal */\n  name = CONNECTION_READY;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection, connectionCreatedEventTime: number) {\n    super(pool);\n    this.durationMS = now() - connectionCreatedEventTime;\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is closed\n * @public\n * @category Event\n */\nexport class ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n  /** The reason the connection was closed */\n  reason: string;\n  serviceId?: ObjectId;\n  /** @internal */\n  name = CONNECTION_CLOSED;\n  /** @internal */\n  error: MongoError | null;\n\n  /** @internal */\n  constructor(\n    pool: ConnectionPool,\n    connection: Pick<Connection, 'id' | 'serviceId'>,\n    reason: 'idle' | 'stale' | 'poolClosed' | 'error',\n    error?: MongoError\n  ) {\n    super(pool);\n    this.connectionId = connection.id;\n    this.reason = reason;\n    this.serviceId = connection.serviceId;\n    this.error = error ?? null;\n  }\n}\n\n/**\n * An event published when a request to check a connection out begins\n * @public\n * @category Event\n */\nexport class ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  name = CONNECTION_CHECK_OUT_STARTED;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a request to check a connection out fails\n * @public\n * @category Event\n */\nexport class ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n  /** The reason the attempt to check out failed */\n  reason: string;\n  /** @internal */\n  error?: MongoError;\n  /** @internal */\n  name = CONNECTION_CHECK_OUT_FAILED;\n  /**\n   * The time it took to check out the connection.\n   * More specifically, the time elapsed between\n   * emitting a `ConnectionCheckOutStartedEvent`\n   * and emitting this event as part of the same check out.\n   */\n  durationMS: number;\n\n  /** @internal */\n  constructor(\n    pool: ConnectionPool,\n    reason: 'poolClosed' | 'timeout' | 'connectionError',\n    checkoutTime: number,\n    error?: MongoError\n  ) {\n    super(pool);\n    this.durationMS = now() - checkoutTime;\n    this.reason = reason;\n    this.error = error;\n  }\n}\n\n/**\n * An event published when a connection is checked out of the connection pool\n * @public\n * @category Event\n */\nexport class ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n  /** @internal */\n  name = CONNECTION_CHECKED_OUT;\n  /**\n   * The time it took to check out the connection.\n   * More specifically, the time elapsed between\n   * emitting a `ConnectionCheckOutStartedEvent`\n   * and emitting this event as part of the same checking out.\n   *\n   */\n  durationMS: number;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection, checkoutTime: number) {\n    super(pool);\n    this.durationMS = now() - checkoutTime;\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is checked into the connection pool\n * @public\n * @category Event\n */\nexport class ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n  /** @internal */\n  name = CONNECTION_CHECKED_IN;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection pool is cleared\n * @public\n * @category Event\n */\nexport class ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  serviceId?: ObjectId;\n\n  interruptInUseConnections?: boolean;\n  /** @internal */\n  name = CONNECTION_POOL_CLEARED;\n\n  /** @internal */\n  constructor(\n    pool: ConnectionPool,\n    options: { serviceId?: ObjectId; interruptInUseConnections?: boolean } = {}\n  ) {\n    super(pool);\n    this.serviceId = options.serviceId;\n    this.interruptInUseConnections = options.interruptInUseConnections;\n  }\n}\n", "import { MongoDriverError, MongoErrorLabel, MongoNetworkError } from '../error';\nimport type { ConnectionPool } from './connection_pool';\n\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nexport class PoolClosedError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(pool: ConnectionPool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n\n  override get name(): string {\n    return 'MongoPoolClosedError';\n  }\n}\n\n/**\n * An error indicating a connection pool is currently paused\n * @category Error\n */\nexport class PoolClearedError extends MongoNetworkError {\n  /** The address of the connection pool */\n  address: string;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(pool: ConnectionPool, message?: string) {\n    const errorMessage = message\n      ? message\n      : `Connection pool for ${pool.address} was cleared because another operation failed with: \"${pool.serverError?.message}\"`;\n    super(errorMessage, pool.serverError ? { cause: pool.serverError } : undefined);\n    this.address = pool.address;\n\n    this.addErrorLabel(MongoErrorLabel.PoolRequstedRetry);\n  }\n\n  override get name(): string {\n    return 'MongoPoolClearedError';\n  }\n}\n\n/**\n * An error indicating that a connection pool has been cleared after the monitor for that server timed out.\n * @category Error\n */\nexport class PoolClearedOnNetworkError extends PoolClearedError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(pool: ConnectionPool) {\n    super(pool, `Connection to ${pool.address} interrupted due to server monitor timeout`);\n  }\n\n  override get name(): string {\n    return 'PoolClearedOnNetworkError';\n  }\n}\n\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nexport class WaitQueueTimeoutError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, address: string) {\n    super(message);\n    this.address = address;\n  }\n\n  override get name(): string {\n    return 'MongoWaitQueueTimeoutError';\n  }\n}\n", "import { clearTimeout, setTimeout } from 'timers';\n\nimport type { ObjectId } from '../bson';\nimport {\n  APM_EVENTS,\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECKED_IN,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_READY\n} from '../constants';\nimport {\n  type AnyError,\n  type MongoError,\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError,\n  MongoNetworkError,\n  MongoOperationTimeoutError,\n  MongoRuntimeError,\n  MongoServerError\n} from '../error';\nimport { type Abortable, CancellationToken, TypedEventEmitter } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport { type TimeoutContext, TimeoutError } from '../timeout';\nimport {\n  addAbortListener,\n  type Callback,\n  kDispose,\n  List,\n  makeCounter,\n  noop,\n  now,\n  promiseWithResolvers\n} from '../utils';\nimport { connect } from './connect';\nimport { Connection, type ConnectionEvents, type ConnectionOptions } from './connection';\nimport {\n  ConnectionCheckedInEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionPoolClearedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolReadyEvent,\n  ConnectionReadyEvent\n} from './connection_pool_events';\nimport {\n  PoolClearedError,\n  PoolClearedOnNetworkError,\n  PoolClosedError,\n  WaitQueueTimeoutError\n} from './errors';\nimport { ConnectionPoolMetrics } from './metrics';\n\n/** @public */\nexport interface ConnectionPoolOptions extends Omit<ConnectionOptions, 'id' | 'generation'> {\n  /** The maximum number of connections that may be associated with a pool at a given time. This includes in use and available connections. */\n  maxPoolSize: number;\n  /** The minimum number of connections that MUST exist at any moment in a single connection pool. */\n  minPoolSize: number;\n  /** The maximum number of connections that may be in the process of being established concurrently by the connection pool. */\n  maxConnecting: number;\n  /** The maximum amount of time a connection should remain idle in the connection pool before being marked idle. */\n  maxIdleTimeMS: number;\n  /** The maximum amount of time operation execution should wait for a connection to become available. The default is 0 which means there is no limit. */\n  waitQueueTimeoutMS: number;\n  /** If we are in load balancer mode. */\n  loadBalanced: boolean;\n  /** @internal */\n  minPoolSizeCheckFrequencyMS?: number;\n}\n\n/** @internal */\nexport interface WaitQueueMember {\n  resolve: (conn: Connection) => void;\n  reject: (err: AnyError) => void;\n  cancelled: boolean;\n  checkoutTime: number;\n}\n\n/** @internal */\nexport const PoolState = Object.freeze({\n  paused: 'paused',\n  ready: 'ready',\n  closed: 'closed'\n} as const);\n\ntype PoolState = (typeof PoolState)[keyof typeof PoolState];\n\n/**\n * @public\n * @deprecated This interface is deprecated and will be removed in a future release as it is not used\n * in the driver\n */\nexport interface CloseOptions {\n  force?: boolean;\n}\n\n/** @public */\nexport type ConnectionPoolEvents = {\n  connectionPoolCreated(event: ConnectionPoolCreatedEvent): void;\n  connectionPoolReady(event: ConnectionPoolReadyEvent): void;\n  connectionPoolClosed(event: ConnectionPoolClosedEvent): void;\n  connectionPoolCleared(event: ConnectionPoolClearedEvent): void;\n  connectionCreated(event: ConnectionCreatedEvent): void;\n  connectionReady(event: ConnectionReadyEvent): void;\n  connectionClosed(event: ConnectionClosedEvent): void;\n  connectionCheckOutStarted(event: ConnectionCheckOutStartedEvent): void;\n  connectionCheckOutFailed(event: ConnectionCheckOutFailedEvent): void;\n  connectionCheckedOut(event: ConnectionCheckedOutEvent): void;\n  connectionCheckedIn(event: ConnectionCheckedInEvent): void;\n} & Omit<ConnectionEvents, 'close' | 'message'>;\n\n/**\n * A pool of connections which dynamically resizes, and emit events related to pool activity\n * @internal\n */\nexport class ConnectionPool extends TypedEventEmitter<ConnectionPoolEvents> {\n  public options: Readonly<ConnectionPoolOptions>;\n  /**  An integer representing the SDAM generation of the pool */\n  public generation: number;\n  /** A map of generations to service ids */\n  public serviceGenerations: Map<string, number>;\n\n  private poolState: PoolState;\n  private server: Server;\n  private connections: List<Connection>;\n  private pending: number;\n  private checkedOut: Set<Connection>;\n  private minPoolSizeTimer?: NodeJS.Timeout;\n  private connectionCounter: Generator<number>;\n  private cancellationToken: CancellationToken;\n  private waitQueue: List<WaitQueueMember>;\n  private metrics: ConnectionPoolMetrics;\n  private processingWaitQueue: boolean;\n\n  /**\n   * Emitted when the connection pool is created.\n   * @event\n   */\n  static readonly CONNECTION_POOL_CREATED = CONNECTION_POOL_CREATED;\n  /**\n   * Emitted once when the connection pool is closed\n   * @event\n   */\n  static readonly CONNECTION_POOL_CLOSED = CONNECTION_POOL_CLOSED;\n  /**\n   * Emitted each time the connection pool is cleared and it's generation incremented\n   * @event\n   */\n  static readonly CONNECTION_POOL_CLEARED = CONNECTION_POOL_CLEARED;\n  /**\n   * Emitted each time the connection pool is marked ready\n   * @event\n   */\n  static readonly CONNECTION_POOL_READY = CONNECTION_POOL_READY;\n  /**\n   * Emitted when a connection is created.\n   * @event\n   */\n  static readonly CONNECTION_CREATED = CONNECTION_CREATED;\n  /**\n   * Emitted when a connection becomes established, and is ready to use\n   * @event\n   */\n  static readonly CONNECTION_READY = CONNECTION_READY;\n  /**\n   * Emitted when a connection is closed\n   * @event\n   */\n  static readonly CONNECTION_CLOSED = CONNECTION_CLOSED;\n  /**\n   * Emitted when an attempt to check out a connection begins\n   * @event\n   */\n  static readonly CONNECTION_CHECK_OUT_STARTED = CONNECTION_CHECK_OUT_STARTED;\n  /**\n   * Emitted when an attempt to check out a connection fails\n   * @event\n   */\n  static readonly CONNECTION_CHECK_OUT_FAILED = CONNECTION_CHECK_OUT_FAILED;\n  /**\n   * Emitted each time a connection is successfully checked out of the connection pool\n   * @event\n   */\n  static readonly CONNECTION_CHECKED_OUT = CONNECTION_CHECKED_OUT;\n  /**\n   * Emitted each time a connection is successfully checked into the connection pool\n   * @event\n   */\n  static readonly CONNECTION_CHECKED_IN = CONNECTION_CHECKED_IN;\n\n  constructor(server: Server, options: ConnectionPoolOptions) {\n    super();\n    this.on('error', noop);\n\n    this.options = Object.freeze({\n      connectionType: Connection,\n      ...options,\n      maxPoolSize: options.maxPoolSize ?? 100,\n      minPoolSize: options.minPoolSize ?? 0,\n      maxConnecting: options.maxConnecting ?? 2,\n      maxIdleTimeMS: options.maxIdleTimeMS ?? 0,\n      waitQueueTimeoutMS: options.waitQueueTimeoutMS ?? 0,\n      minPoolSizeCheckFrequencyMS: options.minPoolSizeCheckFrequencyMS ?? 100,\n      autoEncrypter: options.autoEncrypter\n    });\n\n    if (this.options.minPoolSize > this.options.maxPoolSize) {\n      throw new MongoInvalidArgumentError(\n        'Connection pool minimum size must not be greater than maximum pool size'\n      );\n    }\n\n    this.poolState = PoolState.paused;\n    this.server = server;\n    this.connections = new List();\n    this.pending = 0;\n    this.checkedOut = new Set();\n    this.minPoolSizeTimer = undefined;\n    this.generation = 0;\n    this.serviceGenerations = new Map();\n    this.connectionCounter = makeCounter(1);\n    this.cancellationToken = new CancellationToken();\n    this.cancellationToken.setMaxListeners(Infinity);\n    this.waitQueue = new List();\n    this.metrics = new ConnectionPoolMetrics();\n    this.processingWaitQueue = false;\n\n    this.mongoLogger = this.server.topology.client?.mongoLogger;\n    this.component = 'connection';\n\n    process.nextTick(() => {\n      this.emitAndLog(ConnectionPool.CONNECTION_POOL_CREATED, new ConnectionPoolCreatedEvent(this));\n    });\n  }\n\n  /** The address of the endpoint the pool is connected to */\n  get address(): string {\n    return this.options.hostAddress.toString();\n  }\n\n  /**\n   * Check if the pool has been closed\n   *\n   * TODO(NODE-3263): We can remove this property once shell no longer needs it\n   */\n  get closed(): boolean {\n    return this.poolState === PoolState.closed;\n  }\n\n  /** An integer expressing how many total connections (available + pending + in use) the pool currently has */\n  get totalConnectionCount(): number {\n    return (\n      this.availableConnectionCount + this.pendingConnectionCount + this.currentCheckedOutCount\n    );\n  }\n\n  /** An integer expressing how many connections are currently available in the pool. */\n  get availableConnectionCount(): number {\n    return this.connections.length;\n  }\n\n  get pendingConnectionCount(): number {\n    return this.pending;\n  }\n\n  get currentCheckedOutCount(): number {\n    return this.checkedOut.size;\n  }\n\n  get waitQueueSize(): number {\n    return this.waitQueue.length;\n  }\n\n  get loadBalanced(): boolean {\n    return this.options.loadBalanced;\n  }\n\n  get serverError() {\n    return this.server.description.error;\n  }\n\n  /**\n   * This is exposed ONLY for use in mongosh, to enable\n   * killing all connections if a user quits the shell with\n   * operations in progress.\n   *\n   * This property may be removed as a part of NODE-3263.\n   */\n  get checkedOutConnections() {\n    return this.checkedOut;\n  }\n\n  /**\n   * Get the metrics information for the pool when a wait queue timeout occurs.\n   */\n  private waitQueueErrorMetrics(): string {\n    return this.metrics.info(this.options.maxPoolSize);\n  }\n\n  /**\n   * Set the pool state to \"ready\"\n   */\n  ready(): void {\n    if (this.poolState !== PoolState.paused) {\n      return;\n    }\n    this.poolState = PoolState.ready;\n    this.emitAndLog(ConnectionPool.CONNECTION_POOL_READY, new ConnectionPoolReadyEvent(this));\n    clearTimeout(this.minPoolSizeTimer);\n    this.ensureMinPoolSize();\n  }\n\n  /**\n   * Check a connection out of this pool. The connection will continue to be tracked, but no reference to it\n   * will be held by the pool. This means that if a connection is checked out it MUST be checked back in or\n   * explicitly destroyed by the new owner.\n   */\n  async checkOut(options: { timeoutContext: TimeoutContext } & Abortable): Promise<Connection> {\n    const checkoutTime = now();\n    this.emitAndLog(\n      ConnectionPool.CONNECTION_CHECK_OUT_STARTED,\n      new ConnectionCheckOutStartedEvent(this)\n    );\n\n    const { promise, resolve, reject } = promiseWithResolvers<Connection>();\n\n    const timeout = options.timeoutContext.connectionCheckoutTimeout;\n\n    const waitQueueMember: WaitQueueMember = {\n      resolve,\n      reject,\n      cancelled: false,\n      checkoutTime\n    };\n\n    const abortListener = addAbortListener(options.signal, function () {\n      waitQueueMember.cancelled = true;\n      reject(this.reason);\n    });\n\n    this.waitQueue.push(waitQueueMember);\n    process.nextTick(() => this.processWaitQueue());\n\n    try {\n      timeout?.throwIfExpired();\n      return await (timeout ? Promise.race([promise, timeout]) : promise);\n    } catch (error) {\n      if (TimeoutError.is(error)) {\n        timeout?.clear();\n        waitQueueMember.cancelled = true;\n\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n          new ConnectionCheckOutFailedEvent(this, 'timeout', waitQueueMember.checkoutTime)\n        );\n        const timeoutError = new WaitQueueTimeoutError(\n          this.loadBalanced\n            ? this.waitQueueErrorMetrics()\n            : 'Timed out while checking out a connection from connection pool',\n          this.address\n        );\n        if (options.timeoutContext.csotEnabled()) {\n          throw new MongoOperationTimeoutError('Timed out during connection checkout', {\n            cause: timeoutError\n          });\n        }\n        throw timeoutError;\n      }\n      throw error;\n    } finally {\n      abortListener?.[kDispose]();\n      timeout?.clear();\n    }\n  }\n\n  /**\n   * Check a connection into the pool.\n   *\n   * @param connection - The connection to check in\n   */\n  checkIn(connection: Connection): void {\n    if (!this.checkedOut.has(connection)) {\n      return;\n    }\n    const poolClosed = this.closed;\n    const stale = this.connectionIsStale(connection);\n    const willDestroy = !!(poolClosed || stale || connection.closed);\n\n    if (!willDestroy) {\n      connection.markAvailable();\n      this.connections.unshift(connection);\n    }\n\n    this.checkedOut.delete(connection);\n    this.emitAndLog(\n      ConnectionPool.CONNECTION_CHECKED_IN,\n      new ConnectionCheckedInEvent(this, connection)\n    );\n\n    if (willDestroy) {\n      const reason = connection.closed ? 'error' : poolClosed ? 'poolClosed' : 'stale';\n      this.destroyConnection(connection, reason);\n    }\n\n    process.nextTick(() => this.processWaitQueue());\n  }\n\n  /**\n   * Clear the pool\n   *\n   * Pool reset is handled by incrementing the pool's generation count. Any existing connection of a\n   * previous generation will eventually be pruned during subsequent checkouts.\n   */\n  clear(options: { serviceId?: ObjectId; interruptInUseConnections?: boolean } = {}): void {\n    if (this.closed) {\n      return;\n    }\n\n    // handle load balanced case\n    if (this.loadBalanced) {\n      const { serviceId } = options;\n      if (!serviceId) {\n        throw new MongoRuntimeError(\n          'ConnectionPool.clear() called in load balanced mode with no serviceId.'\n        );\n      }\n      const sid = serviceId.toHexString();\n      const generation = this.serviceGenerations.get(sid);\n      // Only need to worry if the generation exists, since it should\n      // always be there but typescript needs the check.\n      if (generation == null) {\n        throw new MongoRuntimeError('Service generations are required in load balancer mode.');\n      } else {\n        // Increment the generation for the service id.\n        this.serviceGenerations.set(sid, generation + 1);\n      }\n      this.emitAndLog(\n        ConnectionPool.CONNECTION_POOL_CLEARED,\n        new ConnectionPoolClearedEvent(this, { serviceId })\n      );\n      return;\n    }\n    // handle non load-balanced case\n    const interruptInUseConnections = options.interruptInUseConnections ?? false;\n    const oldGeneration = this.generation;\n    this.generation += 1;\n    const alreadyPaused = this.poolState === PoolState.paused;\n    this.poolState = PoolState.paused;\n\n    this.clearMinPoolSizeTimer();\n    if (!alreadyPaused) {\n      this.emitAndLog(\n        ConnectionPool.CONNECTION_POOL_CLEARED,\n        new ConnectionPoolClearedEvent(this, {\n          interruptInUseConnections\n        })\n      );\n    }\n\n    if (interruptInUseConnections) {\n      process.nextTick(() => this.interruptInUseConnections(oldGeneration));\n    }\n\n    this.processWaitQueue();\n  }\n\n  /**\n   * Closes all stale in-use connections in the pool with a resumable PoolClearedOnNetworkError.\n   *\n   * Only connections where `connection.generation <= minGeneration` are killed.\n   */\n  private interruptInUseConnections(minGeneration: number) {\n    for (const connection of this.checkedOut) {\n      if (connection.generation <= minGeneration) {\n        connection.onError(new PoolClearedOnNetworkError(this));\n        this.checkIn(connection);\n      }\n    }\n  }\n\n  /** Close the pool */\n  close(): void {\n    if (this.closed) {\n      return;\n    }\n\n    // immediately cancel any in-flight connections\n    this.cancellationToken.emit('cancel');\n\n    // end the connection counter\n    if (typeof this.connectionCounter.return === 'function') {\n      this.connectionCounter.return(undefined);\n    }\n\n    this.poolState = PoolState.closed;\n    this.clearMinPoolSizeTimer();\n    this.processWaitQueue();\n\n    for (const conn of this.connections) {\n      this.emitAndLog(\n        ConnectionPool.CONNECTION_CLOSED,\n        new ConnectionClosedEvent(this, conn, 'poolClosed')\n      );\n      conn.destroy();\n    }\n    this.connections.clear();\n    this.emitAndLog(ConnectionPool.CONNECTION_POOL_CLOSED, new ConnectionPoolClosedEvent(this));\n  }\n\n  /**\n   * @internal\n   * Reauthenticate a connection\n   */\n  async reauthenticate(connection: Connection): Promise<void> {\n    const authContext = connection.authContext;\n    if (!authContext) {\n      throw new MongoRuntimeError('No auth context found on connection.');\n    }\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError(\n        'Connection is missing credentials when asked to reauthenticate'\n      );\n    }\n\n    const resolvedCredentials = credentials.resolveAuthMechanism(connection.hello);\n    const provider = this.server.topology.client.s.authProviders.getOrCreateProvider(\n      resolvedCredentials.mechanism,\n      resolvedCredentials.mechanismProperties\n    );\n\n    if (!provider) {\n      throw new MongoMissingCredentialsError(\n        `Reauthenticate failed due to no auth provider for ${credentials.mechanism}`\n      );\n    }\n\n    await provider.reauth(authContext);\n\n    return;\n  }\n\n  /** Clear the min pool size timer */\n  private clearMinPoolSizeTimer(): void {\n    const minPoolSizeTimer = this.minPoolSizeTimer;\n    if (minPoolSizeTimer) {\n      clearTimeout(minPoolSizeTimer);\n    }\n  }\n\n  private destroyConnection(\n    connection: Connection,\n    reason: 'error' | 'idle' | 'stale' | 'poolClosed'\n  ) {\n    this.emitAndLog(\n      ConnectionPool.CONNECTION_CLOSED,\n      new ConnectionClosedEvent(this, connection, reason)\n    );\n    // destroy the connection\n    connection.destroy();\n  }\n\n  private connectionIsStale(connection: Connection) {\n    const serviceId = connection.serviceId;\n    if (this.loadBalanced && serviceId) {\n      const sid = serviceId.toHexString();\n      const generation = this.serviceGenerations.get(sid);\n      return connection.generation !== generation;\n    }\n\n    return connection.generation !== this.generation;\n  }\n\n  private connectionIsIdle(connection: Connection) {\n    return !!(this.options.maxIdleTimeMS && connection.idleTime > this.options.maxIdleTimeMS);\n  }\n\n  /**\n   * Destroys a connection if the connection is perished.\n   *\n   * @returns `true` if the connection was destroyed, `false` otherwise.\n   */\n  private destroyConnectionIfPerished(connection: Connection): boolean {\n    const isStale = this.connectionIsStale(connection);\n    const isIdle = this.connectionIsIdle(connection);\n    if (!isStale && !isIdle && !connection.closed) {\n      return false;\n    }\n    const reason = connection.closed ? 'error' : isStale ? 'stale' : 'idle';\n    this.destroyConnection(connection, reason);\n    return true;\n  }\n\n  private createConnection(callback: Callback<Connection>) {\n    const connectOptions: ConnectionOptions = {\n      ...this.options,\n      id: this.connectionCounter.next().value,\n      generation: this.generation,\n      cancellationToken: this.cancellationToken,\n      mongoLogger: this.mongoLogger,\n      authProviders: this.server.topology.client.s.authProviders\n    };\n\n    this.pending++;\n    // This is our version of a \"virtual\" no-I/O connection as the spec requires\n    const connectionCreatedTime = now();\n    this.emitAndLog(\n      ConnectionPool.CONNECTION_CREATED,\n      new ConnectionCreatedEvent(this, { id: connectOptions.id })\n    );\n\n    connect(connectOptions).then(\n      connection => {\n        // The pool might have closed since we started trying to create a connection\n        if (this.poolState !== PoolState.ready) {\n          this.pending--;\n          connection.destroy();\n          callback(this.closed ? new PoolClosedError(this) : new PoolClearedError(this));\n          return;\n        }\n\n        // forward all events from the connection to the pool\n        for (const event of [...APM_EVENTS, Connection.CLUSTER_TIME_RECEIVED]) {\n          connection.on(event, (e: any) => this.emit(event, e));\n        }\n\n        if (this.loadBalanced) {\n          connection.on(Connection.PINNED, pinType => this.metrics.markPinned(pinType));\n          connection.on(Connection.UNPINNED, pinType => this.metrics.markUnpinned(pinType));\n\n          const serviceId = connection.serviceId;\n          if (serviceId) {\n            let generation;\n            const sid = serviceId.toHexString();\n            if ((generation = this.serviceGenerations.get(sid))) {\n              connection.generation = generation;\n            } else {\n              this.serviceGenerations.set(sid, 0);\n              connection.generation = 0;\n            }\n          }\n        }\n\n        connection.markAvailable();\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_READY,\n          new ConnectionReadyEvent(this, connection, connectionCreatedTime)\n        );\n\n        this.pending--;\n        callback(undefined, connection);\n      },\n      error => {\n        this.pending--;\n        this.server.handleError(error);\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_CLOSED,\n          new ConnectionClosedEvent(\n            this,\n            { id: connectOptions.id, serviceId: undefined },\n            'error',\n            // TODO(NODE-5192): Remove this cast\n            error as MongoError\n          )\n        );\n        if (error instanceof MongoNetworkError || error instanceof MongoServerError) {\n          error.connectionGeneration = connectOptions.generation;\n        }\n        callback(error ?? new MongoRuntimeError('Connection creation failed without error'));\n      }\n    );\n  }\n\n  private ensureMinPoolSize() {\n    const minPoolSize = this.options.minPoolSize;\n    if (this.poolState !== PoolState.ready || minPoolSize === 0) {\n      return;\n    }\n\n    this.connections.prune(connection => this.destroyConnectionIfPerished(connection));\n\n    if (\n      this.totalConnectionCount < minPoolSize &&\n      this.pendingConnectionCount < this.options.maxConnecting\n    ) {\n      // NOTE: ensureMinPoolSize should not try to get all the pending\n      // connection permits because that potentially delays the availability of\n      // the connection to a checkout request\n      this.createConnection((err, connection) => {\n        if (!err && connection) {\n          this.connections.push(connection);\n          process.nextTick(() => this.processWaitQueue());\n        }\n        if (this.poolState === PoolState.ready) {\n          clearTimeout(this.minPoolSizeTimer);\n          this.minPoolSizeTimer = setTimeout(\n            () => this.ensureMinPoolSize(),\n            this.options.minPoolSizeCheckFrequencyMS\n          );\n        }\n      });\n    } else {\n      clearTimeout(this.minPoolSizeTimer);\n      this.minPoolSizeTimer = setTimeout(\n        () => this.ensureMinPoolSize(),\n        this.options.minPoolSizeCheckFrequencyMS\n      );\n    }\n  }\n\n  private processWaitQueue() {\n    if (this.processingWaitQueue) {\n      return;\n    }\n    this.processingWaitQueue = true;\n\n    while (this.waitQueueSize) {\n      const waitQueueMember = this.waitQueue.first();\n      if (!waitQueueMember) {\n        this.waitQueue.shift();\n        continue;\n      }\n\n      if (waitQueueMember.cancelled) {\n        this.waitQueue.shift();\n        continue;\n      }\n\n      if (this.poolState !== PoolState.ready) {\n        const reason = this.closed ? 'poolClosed' : 'connectionError';\n        const error = this.closed ? new PoolClosedError(this) : new PoolClearedError(this);\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n          new ConnectionCheckOutFailedEvent(this, reason, waitQueueMember.checkoutTime, error)\n        );\n        this.waitQueue.shift();\n        waitQueueMember.reject(error);\n        continue;\n      }\n\n      if (!this.availableConnectionCount) {\n        break;\n      }\n\n      const connection = this.connections.shift();\n      if (!connection) {\n        break;\n      }\n\n      if (!this.destroyConnectionIfPerished(connection)) {\n        this.checkedOut.add(connection);\n        this.emitAndLog(\n          ConnectionPool.CONNECTION_CHECKED_OUT,\n          new ConnectionCheckedOutEvent(this, connection, waitQueueMember.checkoutTime)\n        );\n\n        this.waitQueue.shift();\n        waitQueueMember.resolve(connection);\n      }\n    }\n\n    const { maxPoolSize, maxConnecting } = this.options;\n    while (\n      this.waitQueueSize > 0 &&\n      this.pendingConnectionCount < maxConnecting &&\n      (maxPoolSize === 0 || this.totalConnectionCount < maxPoolSize)\n    ) {\n      const waitQueueMember = this.waitQueue.shift();\n      if (!waitQueueMember || waitQueueMember.cancelled) {\n        continue;\n      }\n      this.createConnection((err, connection) => {\n        if (waitQueueMember.cancelled) {\n          if (!err && connection) {\n            this.connections.push(connection);\n          }\n        } else {\n          if (err) {\n            this.emitAndLog(\n              ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n              // TODO(NODE-5192): Remove this cast\n              new ConnectionCheckOutFailedEvent(\n                this,\n                'connectionError',\n                waitQueueMember.checkoutTime,\n                err as MongoError\n              )\n            );\n            waitQueueMember.reject(err);\n          } else if (connection) {\n            this.checkedOut.add(connection);\n            this.emitAndLog(\n              ConnectionPool.CONNECTION_CHECKED_OUT,\n              new ConnectionCheckedOutEvent(this, connection, waitQueueMember.checkoutTime)\n            );\n            waitQueueMember.resolve(connection);\n          }\n        }\n        process.nextTick(() => this.processWaitQueue());\n      });\n    }\n    this.processingWaitQueue = false;\n  }\n}\n\n/**\n * A callback provided to `withConnection`\n * @internal\n *\n * @param error - An error instance representing the error during the execution.\n * @param connection - The managed connection which was checked out of the pool.\n * @param callback - A function to call back after connection management is complete\n */\nexport type WithConnectionCallback = (\n  error: MongoError | undefined,\n  connection: Connection | undefined,\n  callback: Callback<Connection>\n) => void;\n", "import type { Document } from '../bson';\nimport { type AutoEncrypter } from '../client-side-encryption/auto_encrypter';\nimport { type CommandOptions, Connection } from '../cmap/connection';\nimport {\n  ConnectionPool,\n  type ConnectionPoolEvents,\n  type ConnectionPoolOptions\n} from '../cmap/connection_pool';\nimport { PoolClearedError } from '../cmap/errors';\nimport { type MongoDBResponseConstructor } from '../cmap/wire_protocol/responses';\nimport {\n  APM_EVENTS,\n  CLOSED,\n  CMAP_EVENTS,\n  CONNECT,\n  DESCRIPTION_RECEIVED,\n  ENDED,\n  HEARTBEAT_EVENTS,\n  SERVER_HEARTBEAT_FAILED,\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED\n} from '../constants';\nimport {\n  type AnyError,\n  isNodeShuttingDownError,\n  isSDAMUnrecoverableError,\n  MONGODB_ERROR_CODES,\n  MongoError,\n  MongoErrorLabel,\n  MongoInvalidArgumentError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoRuntimeError,\n  MongoServerClosedError,\n  type MongoServerError,\n  needsRetryableWriteLabel\n} from '../error';\nimport type { ServerApi } from '../mongo_client';\nimport { type Abortable, TypedEventEmitter } from '../mongo_types';\nimport type { GetMoreOptions } from '../operations/get_more';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { isTransactionCommand } from '../transactions';\nimport {\n  abortable,\n  type EventEmitterWithState,\n  makeStateMachine,\n  maxWireVersion,\n  type MongoDBNamespace,\n  noop,\n  squashError,\n  supportsRetryableWrites\n} from '../utils';\nimport { throwIfWriteConcernError } from '../write_concern';\nimport {\n  type ClusterTime,\n  STATE_CLOSED,\n  STATE_CLOSING,\n  STATE_CONNECTED,\n  STATE_CONNECTING,\n  TopologyType\n} from './common';\nimport type {\n  ServerHeartbeatFailedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent\n} from './events';\nimport { Monitor, type MonitorOptions } from './monitor';\nimport { compareTopologyVersion, ServerDescription } from './server_description';\nimport type { Topology } from './topology';\n\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_CONNECTING],\n  [STATE_CONNECTING]: [STATE_CONNECTING, STATE_CLOSING, STATE_CONNECTED, STATE_CLOSED],\n  [STATE_CONNECTED]: [STATE_CONNECTED, STATE_CLOSING, STATE_CLOSED],\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_CLOSED]\n});\n\n/** @internal */\nexport type ServerOptions = Omit<ConnectionPoolOptions, 'id' | 'generation' | 'hostAddress'> &\n  MonitorOptions;\n\n/** @internal */\nexport interface ServerPrivate {\n  /** The server description for this server */\n  description: ServerDescription;\n  /** A copy of the options used to construct this instance */\n  options: ServerOptions;\n  /** The current state of the Server */\n  state: string;\n  /** MongoDB server API version */\n  serverApi?: ServerApi;\n  /** A count of the operations currently running against the server. */\n  operationCount: number;\n}\n\n/** @public */\nexport type ServerEvents = {\n  serverHeartbeatStarted(event: ServerHeartbeatStartedEvent): void;\n  serverHeartbeatSucceeded(event: ServerHeartbeatSucceededEvent): void;\n  serverHeartbeatFailed(event: ServerHeartbeatFailedEvent): void;\n  /** Top level MongoClient doesn't emit this so it is marked: @internal */\n  connect(server: Server): void;\n  descriptionReceived(description: ServerDescription): void;\n  closed(): void;\n  ended(): void;\n} & ConnectionPoolEvents &\n  EventEmitterWithState;\n\n/** @internal */\nexport type ServerCommandOptions = Omit<CommandOptions, 'timeoutContext' | 'socketTimeoutMS'> & {\n  timeoutContext: TimeoutContext;\n} & Abortable;\n\n/** @internal */\nexport class Server extends TypedEventEmitter<ServerEvents> {\n  /** @internal */\n  s: ServerPrivate;\n  /** @internal */\n  topology: Topology;\n  /** @internal */\n  pool: ConnectionPool;\n  serverApi?: ServerApi;\n  hello?: Document;\n  monitor: Monitor | null;\n\n  /** @event */\n  static readonly SERVER_HEARTBEAT_STARTED = SERVER_HEARTBEAT_STARTED;\n  /** @event */\n  static readonly SERVER_HEARTBEAT_SUCCEEDED = SERVER_HEARTBEAT_SUCCEEDED;\n  /** @event */\n  static readonly SERVER_HEARTBEAT_FAILED = SERVER_HEARTBEAT_FAILED;\n  /** @event */\n  static readonly CONNECT = CONNECT;\n  /** @event */\n  static readonly DESCRIPTION_RECEIVED = DESCRIPTION_RECEIVED;\n  /** @event */\n  static readonly CLOSED = CLOSED;\n  /** @event */\n  static readonly ENDED = ENDED;\n\n  /**\n   * Create a server\n   */\n  constructor(topology: Topology, description: ServerDescription, options: ServerOptions) {\n    super();\n    this.on('error', noop);\n\n    this.serverApi = options.serverApi;\n\n    const poolOptions = { hostAddress: description.hostAddress, ...options };\n\n    this.topology = topology;\n    this.pool = new ConnectionPool(this, poolOptions);\n\n    this.s = {\n      description,\n      options,\n      state: STATE_CLOSED,\n      operationCount: 0\n    };\n\n    for (const event of [...CMAP_EVENTS, ...APM_EVENTS]) {\n      this.pool.on(event, (e: any) => this.emit(event, e));\n    }\n\n    this.pool.on(Connection.CLUSTER_TIME_RECEIVED, (clusterTime: ClusterTime) => {\n      this.clusterTime = clusterTime;\n    });\n\n    if (this.loadBalanced) {\n      this.monitor = null;\n      // monitoring is disabled in load balancing mode\n      return;\n    }\n\n    // create the monitor\n    this.monitor = new Monitor(this, this.s.options);\n\n    for (const event of HEARTBEAT_EVENTS) {\n      this.monitor.on(event, (e: any) => this.emit(event, e));\n    }\n\n    this.monitor.on('resetServer', (error: MongoServerError) => markServerUnknown(this, error));\n    this.monitor.on(Server.SERVER_HEARTBEAT_SUCCEEDED, (event: ServerHeartbeatSucceededEvent) => {\n      this.emit(\n        Server.DESCRIPTION_RECEIVED,\n        new ServerDescription(this.description.hostAddress, event.reply, {\n          roundTripTime: this.monitor?.roundTripTime,\n          minRoundTripTime: this.monitor?.minRoundTripTime\n        })\n      );\n\n      if (this.s.state === STATE_CONNECTING) {\n        stateTransition(this, STATE_CONNECTED);\n        this.emit(Server.CONNECT, this);\n      }\n    });\n  }\n\n  get clusterTime(): ClusterTime | undefined {\n    return this.topology.clusterTime;\n  }\n\n  set clusterTime(clusterTime: ClusterTime | undefined) {\n    this.topology.clusterTime = clusterTime;\n  }\n\n  get description(): ServerDescription {\n    return this.s.description;\n  }\n\n  get name(): string {\n    return this.s.description.address;\n  }\n\n  get autoEncrypter(): AutoEncrypter | undefined {\n    if (this.s.options && this.s.options.autoEncrypter) {\n      return this.s.options.autoEncrypter;\n    }\n    return;\n  }\n\n  get loadBalanced(): boolean {\n    return this.topology.description.type === TopologyType.LoadBalanced;\n  }\n\n  /**\n   * Initiate server connect\n   */\n  connect(): void {\n    if (this.s.state !== STATE_CLOSED) {\n      return;\n    }\n\n    stateTransition(this, STATE_CONNECTING);\n\n    // If in load balancer mode we automatically set the server to\n    // a load balancer. It never transitions out of this state and\n    // has no monitor.\n    if (!this.loadBalanced) {\n      this.monitor?.connect();\n    } else {\n      stateTransition(this, STATE_CONNECTED);\n      this.emit(Server.CONNECT, this);\n    }\n  }\n\n  /** Destroy the server connection */\n  destroy(): void {\n    if (this.s.state === STATE_CLOSED) {\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n\n    if (!this.loadBalanced) {\n      this.monitor?.close();\n    }\n\n    this.pool.close();\n    stateTransition(this, STATE_CLOSED);\n    this.emit('closed');\n  }\n\n  /**\n   * Immediately schedule monitoring of this server. If there already an attempt being made\n   * this will be a no-op.\n   */\n  requestCheck(): void {\n    if (!this.loadBalanced) {\n      this.monitor?.requestCheck();\n    }\n  }\n\n  public async command<T extends MongoDBResponseConstructor>(\n    ns: MongoDBNamespace,\n    command: Document,\n    options: ServerCommandOptions,\n    responseType: T | undefined\n  ): Promise<typeof responseType extends undefined ? Document : InstanceType<T>>;\n\n  public async command(\n    ns: MongoDBNamespace,\n    command: Document,\n    options: ServerCommandOptions\n  ): Promise<Document>;\n\n  public async command(\n    ns: MongoDBNamespace,\n    cmd: Document,\n    { ...options }: ServerCommandOptions,\n    responseType?: MongoDBResponseConstructor\n  ): Promise<Document> {\n    if (ns.db == null || typeof ns === 'string') {\n      throw new MongoInvalidArgumentError('Namespace must not be a string');\n    }\n\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      throw new MongoServerClosedError();\n    }\n\n    options.directConnection = this.topology.s.options.directConnection;\n\n    // There are cases where we need to flag the read preference not to get sent in\n    // the command, such as pre-5.0 servers attempting to perform an aggregate write\n    // with a non-primary read preference. In this case the effective read preference\n    // (primary) is not the same as the provided and must be removed completely.\n    if (options.omitReadPreference) {\n      delete options.readPreference;\n    }\n\n    if (this.description.iscryptd) {\n      options.omitMaxTimeMS = true;\n    }\n\n    const session = options.session;\n    let conn = session?.pinnedConnection;\n\n    this.incrementOperationCount();\n    if (conn == null) {\n      try {\n        conn = await this.pool.checkOut(options);\n        if (this.loadBalanced && isPinnableCommand(cmd, session)) {\n          session?.pin(conn);\n        }\n      } catch (checkoutError) {\n        this.decrementOperationCount();\n        if (!(checkoutError instanceof PoolClearedError)) this.handleError(checkoutError);\n        throw checkoutError;\n      }\n    }\n\n    let reauthPromise: Promise<void> | null = null;\n\n    try {\n      try {\n        const res = await conn.command(ns, cmd, options, responseType);\n        throwIfWriteConcernError(res);\n        return res;\n      } catch (commandError) {\n        throw this.decorateCommandError(conn, cmd, options, commandError);\n      }\n    } catch (operationError) {\n      if (\n        operationError instanceof MongoError &&\n        operationError.code === MONGODB_ERROR_CODES.Reauthenticate\n      ) {\n        reauthPromise = this.pool.reauthenticate(conn);\n        reauthPromise.then(undefined, error => {\n          reauthPromise = null;\n          squashError(error);\n        });\n\n        await abortable(reauthPromise, options);\n        reauthPromise = null; // only reachable if reauth succeeds\n\n        try {\n          const res = await conn.command(ns, cmd, options, responseType);\n          throwIfWriteConcernError(res);\n          return res;\n        } catch (commandError) {\n          throw this.decorateCommandError(conn, cmd, options, commandError);\n        }\n      } else {\n        throw operationError;\n      }\n    } finally {\n      this.decrementOperationCount();\n      if (session?.pinnedConnection !== conn) {\n        if (reauthPromise != null) {\n          // The reauth promise only exists if it hasn't thrown.\n          const checkBackIn = () => {\n            this.pool.checkIn(conn);\n          };\n          void reauthPromise.then(checkBackIn, checkBackIn);\n        } else {\n          this.pool.checkIn(conn);\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle SDAM error\n   * @internal\n   */\n  handleError(error: AnyError, connection?: Connection) {\n    if (!(error instanceof MongoError)) {\n      return;\n    }\n\n    const isStaleError =\n      error.connectionGeneration && error.connectionGeneration < this.pool.generation;\n    if (isStaleError) {\n      return;\n    }\n\n    const isNetworkNonTimeoutError =\n      error instanceof MongoNetworkError && !(error instanceof MongoNetworkTimeoutError);\n    const isNetworkTimeoutBeforeHandshakeError =\n      error instanceof MongoNetworkError && error.beforeHandshake;\n    const isAuthHandshakeError = error.hasErrorLabel(MongoErrorLabel.HandshakeError);\n    if (isNetworkNonTimeoutError || isNetworkTimeoutBeforeHandshakeError || isAuthHandshakeError) {\n      // In load balanced mode we never mark the server as unknown and always\n      // clear for the specific service id.\n      if (!this.loadBalanced) {\n        error.addErrorLabel(MongoErrorLabel.ResetPool);\n        markServerUnknown(this, error);\n      } else if (connection) {\n        this.pool.clear({ serviceId: connection.serviceId });\n      }\n    } else {\n      if (isSDAMUnrecoverableError(error)) {\n        if (shouldHandleStateChangeError(this, error)) {\n          const shouldClearPool = maxWireVersion(this) <= 7 || isNodeShuttingDownError(error);\n          if (this.loadBalanced && connection && shouldClearPool) {\n            this.pool.clear({ serviceId: connection.serviceId });\n          }\n\n          if (!this.loadBalanced) {\n            if (shouldClearPool) {\n              error.addErrorLabel(MongoErrorLabel.ResetPool);\n            }\n            markServerUnknown(this, error);\n            process.nextTick(() => this.requestCheck());\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Ensure that error is properly decorated and internal state is updated before throwing\n   * @internal\n   */\n  private decorateCommandError(\n    connection: Connection,\n    cmd: Document,\n    options: CommandOptions | GetMoreOptions | undefined,\n    error: unknown\n  ): Error {\n    if (typeof error !== 'object' || error == null || !('name' in error)) {\n      throw new MongoRuntimeError('An unexpected error type: ' + typeof error);\n    }\n\n    if (error.name === 'AbortError' && 'cause' in error && error.cause instanceof MongoError) {\n      error = error.cause;\n    }\n\n    if (!(error instanceof MongoError)) {\n      // Node.js or some other error we have not special handling for\n      return error as Error;\n    }\n\n    if (connectionIsStale(this.pool, connection)) {\n      return error;\n    }\n\n    const session = options?.session;\n    if (error instanceof MongoNetworkError) {\n      if (session && !session.hasEnded && session.serverSession) {\n        session.serverSession.isDirty = true;\n      }\n\n      // inActiveTransaction check handles commit and abort.\n      if (\n        inActiveTransaction(session, cmd) &&\n        !error.hasErrorLabel(MongoErrorLabel.TransientTransactionError)\n      ) {\n        error.addErrorLabel(MongoErrorLabel.TransientTransactionError);\n      }\n\n      if (\n        (isRetryableWritesEnabled(this.topology) || isTransactionCommand(cmd)) &&\n        supportsRetryableWrites(this) &&\n        !inActiveTransaction(session, cmd)\n      ) {\n        error.addErrorLabel(MongoErrorLabel.RetryableWriteError);\n      }\n    } else {\n      if (\n        (isRetryableWritesEnabled(this.topology) || isTransactionCommand(cmd)) &&\n        needsRetryableWriteLabel(error, maxWireVersion(this), this.description.type) &&\n        !inActiveTransaction(session, cmd)\n      ) {\n        error.addErrorLabel(MongoErrorLabel.RetryableWriteError);\n      }\n    }\n\n    if (\n      session &&\n      session.isPinned &&\n      error.hasErrorLabel(MongoErrorLabel.TransientTransactionError)\n    ) {\n      session.unpin({ force: true });\n    }\n\n    this.handleError(error, connection);\n\n    return error;\n  }\n\n  /**\n   * Decrement the operation count, returning the new count.\n   */\n  private decrementOperationCount(): number {\n    return (this.s.operationCount -= 1);\n  }\n\n  /**\n   * Increment the operation count, returning the new count.\n   */\n  private incrementOperationCount(): number {\n    return (this.s.operationCount += 1);\n  }\n}\n\nfunction markServerUnknown(server: Server, error?: MongoError) {\n  // Load balancer servers can never be marked unknown.\n  if (server.loadBalanced) {\n    return;\n  }\n\n  if (error instanceof MongoNetworkError && !(error instanceof MongoNetworkTimeoutError)) {\n    server.monitor?.reset();\n  }\n\n  server.emit(\n    Server.DESCRIPTION_RECEIVED,\n    new ServerDescription(server.description.hostAddress, undefined, { error })\n  );\n}\n\nfunction isPinnableCommand(cmd: Document, session?: ClientSession): boolean {\n  if (session) {\n    return (\n      session.inTransaction() ||\n      (session.transaction.isCommitted && 'commitTransaction' in cmd) ||\n      'aggregate' in cmd ||\n      'find' in cmd ||\n      'getMore' in cmd ||\n      'listCollections' in cmd ||\n      'listIndexes' in cmd ||\n      'bulkWrite' in cmd\n    );\n  }\n\n  return false;\n}\n\nfunction connectionIsStale(pool: ConnectionPool, connection: Connection) {\n  if (connection.serviceId) {\n    return (\n      connection.generation !== pool.serviceGenerations.get(connection.serviceId.toHexString())\n    );\n  }\n\n  return connection.generation !== pool.generation;\n}\n\nfunction shouldHandleStateChangeError(server: Server, err: MongoError) {\n  const etv = err.topologyVersion;\n  const stv = server.description.topologyVersion;\n  return compareTopologyVersion(stv, etv) < 0;\n}\n\nfunction inActiveTransaction(session: ClientSession | undefined, cmd: Document) {\n  return session && session.inTransaction() && !isTransactionCommand(cmd);\n}\n\n/** this checks the retryWrites option passed down from the client options, it\n * does not check if the server supports retryable writes */\nfunction isRetryableWritesEnabled(topology: Topology) {\n  return topology.s.options.retryWrites !== false;\n}\n", "import { clearTimeout, setTimeout } from 'timers';\n\nimport { type Document, Long } from '../bson';\nimport { connect, makeConnection, makeSocket, performInitialHandshake } from '../cmap/connect';\nimport type { Connection, ConnectionOptions } from '../cmap/connection';\nimport { getFAASEnv } from '../cmap/handshake/client_metadata';\nimport { LEGACY_HELLO_COMMAND } from '../constants';\nimport { MongoError, MongoErrorLabel, MongoNetworkTimeoutError } from '../error';\nimport { MongoLoggableComponent } from '../mongo_logger';\nimport { CancellationToken, TypedEventEmitter } from '../mongo_types';\nimport {\n  calculateDurationInMs,\n  type Callback,\n  type EventEmitterWithState,\n  makeStateMachine,\n  noop,\n  now,\n  ns\n} from '../utils';\nimport { ServerType, STATE_CLOSED, STATE_CLOSING } from './common';\nimport {\n  ServerHeartbeatFailedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent\n} from './events';\nimport { Server } from './server';\nimport type { TopologyVersion } from './server_description';\n\nconst STATE_IDLE = 'idle';\nconst STATE_MONITORING = 'monitoring';\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_IDLE, STATE_CLOSED],\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_MONITORING],\n  [STATE_IDLE]: [STATE_IDLE, STATE_MONITORING, STATE_CLOSING],\n  [STATE_MONITORING]: [STATE_MONITORING, STATE_IDLE, STATE_CLOSING]\n});\n\nconst INVALID_REQUEST_CHECK_STATES = new Set([STATE_CLOSING, STATE_CLOSED, STATE_MONITORING]);\nfunction isInCloseState(monitor: Monitor) {\n  return monitor.s.state === STATE_CLOSED || monitor.s.state === STATE_CLOSING;\n}\n\n/** @public */\nexport const ServerMonitoringMode = Object.freeze({\n  auto: 'auto',\n  poll: 'poll',\n  stream: 'stream'\n} as const);\n\n/** @public */\nexport type ServerMonitoringMode = (typeof ServerMonitoringMode)[keyof typeof ServerMonitoringMode];\n\n/** @internal */\nexport interface MonitorPrivate {\n  state: string;\n}\n\n/** @public */\nexport interface MonitorOptions\n  extends Omit<ConnectionOptions, 'id' | 'generation' | 'hostAddress'> {\n  connectTimeoutMS: number;\n  heartbeatFrequencyMS: number;\n  minHeartbeatFrequencyMS: number;\n  serverMonitoringMode: ServerMonitoringMode;\n}\n\n/** @public */\nexport type MonitorEvents = {\n  serverHeartbeatStarted(event: ServerHeartbeatStartedEvent): void;\n  serverHeartbeatSucceeded(event: ServerHeartbeatSucceededEvent): void;\n  serverHeartbeatFailed(event: ServerHeartbeatFailedEvent): void;\n  resetServer(error?: MongoError): void;\n  resetConnectionPool(): void;\n  close(): void;\n} & EventEmitterWithState;\n\n/** @internal */\nexport class Monitor extends TypedEventEmitter<MonitorEvents> {\n  /** @internal */\n  s: MonitorPrivate;\n  address: string;\n  options: Readonly<\n    Pick<\n      MonitorOptions,\n      | 'connectTimeoutMS'\n      | 'heartbeatFrequencyMS'\n      | 'minHeartbeatFrequencyMS'\n      | 'serverMonitoringMode'\n    >\n  >;\n  connectOptions: ConnectionOptions;\n  isRunningInFaasEnv: boolean;\n  server: Server;\n  connection: Connection | null;\n  cancellationToken: CancellationToken;\n  /** @internal */\n  monitorId?: MonitorInterval;\n  rttPinger?: RTTPinger;\n  /** @internal */\n  override component = MongoLoggableComponent.TOPOLOGY;\n  /** @internal */\n  private rttSampler: RTTSampler;\n\n  constructor(server: Server, options: MonitorOptions) {\n    super();\n    this.on('error', noop);\n\n    this.server = server;\n    this.connection = null;\n    this.cancellationToken = new CancellationToken();\n    this.cancellationToken.setMaxListeners(Infinity);\n    this.monitorId = undefined;\n    this.s = {\n      state: STATE_CLOSED\n    };\n    this.address = server.description.address;\n    this.options = Object.freeze({\n      connectTimeoutMS: options.connectTimeoutMS ?? 10000,\n      heartbeatFrequencyMS: options.heartbeatFrequencyMS ?? 10000,\n      minHeartbeatFrequencyMS: options.minHeartbeatFrequencyMS ?? 500,\n      serverMonitoringMode: options.serverMonitoringMode\n    });\n    this.isRunningInFaasEnv = getFAASEnv() != null;\n    this.mongoLogger = this.server.topology.client?.mongoLogger;\n    this.rttSampler = new RTTSampler(10);\n\n    const cancellationToken = this.cancellationToken;\n    // TODO: refactor this to pull it directly from the pool, requires new ConnectionPool integration\n    const connectOptions = {\n      id: '<monitor>' as const,\n      generation: server.pool.generation,\n      cancellationToken,\n      hostAddress: server.description.hostAddress,\n      ...options,\n      // force BSON serialization options\n      raw: false,\n      useBigInt64: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: true\n    };\n\n    // ensure no authentication is used for monitoring\n    delete connectOptions.credentials;\n    if (connectOptions.autoEncrypter) {\n      delete connectOptions.autoEncrypter;\n    }\n\n    this.connectOptions = Object.freeze(connectOptions);\n  }\n\n  connect(): void {\n    if (this.s.state !== STATE_CLOSED) {\n      return;\n    }\n\n    // start\n    const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n    const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n    this.monitorId = new MonitorInterval(monitorServer(this), {\n      heartbeatFrequencyMS: heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: minHeartbeatFrequencyMS,\n      immediate: true\n    });\n  }\n\n  requestCheck(): void {\n    if (INVALID_REQUEST_CHECK_STATES.has(this.s.state)) {\n      return;\n    }\n\n    this.monitorId?.wake();\n  }\n\n  reset(): void {\n    const topologyVersion = this.server.description.topologyVersion;\n    if (isInCloseState(this) || topologyVersion == null) {\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n    resetMonitorState(this);\n\n    // restart monitor\n    stateTransition(this, STATE_IDLE);\n\n    // restart monitoring\n    const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n    const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n    this.monitorId = new MonitorInterval(monitorServer(this), {\n      heartbeatFrequencyMS: heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: minHeartbeatFrequencyMS\n    });\n  }\n\n  close(): void {\n    if (isInCloseState(this)) {\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n    resetMonitorState(this);\n\n    // close monitor\n    this.emit('close');\n    stateTransition(this, STATE_CLOSED);\n  }\n\n  get roundTripTime(): number {\n    return this.rttSampler.average();\n  }\n\n  get minRoundTripTime(): number {\n    return this.rttSampler.min();\n  }\n\n  get latestRtt(): number | null {\n    return this.rttSampler.last;\n  }\n\n  addRttSample(rtt: number) {\n    this.rttSampler.addSample(rtt);\n  }\n\n  clearRttSamples() {\n    this.rttSampler.clear();\n  }\n}\n\nfunction resetMonitorState(monitor: Monitor) {\n  monitor.monitorId?.stop();\n  monitor.monitorId = undefined;\n\n  monitor.rttPinger?.close();\n  monitor.rttPinger = undefined;\n\n  monitor.cancellationToken.emit('cancel');\n\n  monitor.connection?.destroy();\n  monitor.connection = null;\n\n  monitor.clearRttSamples();\n}\n\nfunction useStreamingProtocol(monitor: Monitor, topologyVersion: TopologyVersion | null): boolean {\n  // If we have no topology version we always poll no matter\n  // what the user provided, since the server does not support\n  // the streaming protocol.\n  if (topologyVersion == null) return false;\n\n  const serverMonitoringMode = monitor.options.serverMonitoringMode;\n  if (serverMonitoringMode === ServerMonitoringMode.poll) return false;\n  if (serverMonitoringMode === ServerMonitoringMode.stream) return true;\n\n  // If we are in auto mode, we need to figure out if we're in a FaaS\n  // environment or not and choose the appropriate mode.\n  if (monitor.isRunningInFaasEnv) return false;\n  return true;\n}\n\nfunction checkServer(monitor: Monitor, callback: Callback<Document | null>) {\n  let start: number;\n  let awaited: boolean;\n  const topologyVersion = monitor.server.description.topologyVersion;\n  const isAwaitable = useStreamingProtocol(monitor, topologyVersion);\n  monitor.emitAndLogHeartbeat(\n    Server.SERVER_HEARTBEAT_STARTED,\n    monitor.server.topology.s.id,\n    undefined,\n    new ServerHeartbeatStartedEvent(monitor.address, isAwaitable)\n  );\n\n  function onHeartbeatFailed(err: Error) {\n    monitor.connection?.destroy();\n    monitor.connection = null;\n    monitor.emitAndLogHeartbeat(\n      Server.SERVER_HEARTBEAT_FAILED,\n      monitor.server.topology.s.id,\n      undefined,\n      new ServerHeartbeatFailedEvent(monitor.address, calculateDurationInMs(start), err, awaited)\n    );\n\n    const error = !(err instanceof MongoError)\n      ? new MongoError(MongoError.buildErrorMessage(err), { cause: err })\n      : err;\n    error.addErrorLabel(MongoErrorLabel.ResetPool);\n    if (error instanceof MongoNetworkTimeoutError) {\n      error.addErrorLabel(MongoErrorLabel.InterruptInUseConnections);\n    }\n\n    monitor.emit('resetServer', error);\n    callback(err);\n  }\n\n  function onHeartbeatSucceeded(hello: Document) {\n    if (!('isWritablePrimary' in hello)) {\n      // Provide hello-style response document.\n      hello.isWritablePrimary = hello[LEGACY_HELLO_COMMAND];\n    }\n\n    // NOTE: here we use the latestRtt as this measurement corresponds with the value\n    // obtained for this successful heartbeat, if there is no latestRtt, then we calculate the\n    // duration\n    const duration =\n      isAwaitable && monitor.rttPinger\n        ? (monitor.rttPinger.latestRtt ?? calculateDurationInMs(start))\n        : calculateDurationInMs(start);\n\n    monitor.addRttSample(duration);\n\n    monitor.emitAndLogHeartbeat(\n      Server.SERVER_HEARTBEAT_SUCCEEDED,\n      monitor.server.topology.s.id,\n      hello.connectionId,\n      new ServerHeartbeatSucceededEvent(monitor.address, duration, hello, isAwaitable)\n    );\n\n    if (isAwaitable) {\n      // If we are using the streaming protocol then we immediately issue another 'started'\n      // event, otherwise the \"check\" is complete and return to the main monitor loop\n      monitor.emitAndLogHeartbeat(\n        Server.SERVER_HEARTBEAT_STARTED,\n        monitor.server.topology.s.id,\n        undefined,\n        new ServerHeartbeatStartedEvent(monitor.address, true)\n      );\n      // We have not actually sent an outgoing handshake, but when we get the next response we\n      // want the duration to reflect the time since we last heard from the server\n      start = now();\n    } else {\n      monitor.rttPinger?.close();\n      monitor.rttPinger = undefined;\n\n      callback(undefined, hello);\n    }\n  }\n\n  const { connection } = monitor;\n  if (connection && !connection.closed) {\n    const { serverApi, helloOk } = connection;\n    const connectTimeoutMS = monitor.options.connectTimeoutMS;\n    const maxAwaitTimeMS = monitor.options.heartbeatFrequencyMS;\n\n    const cmd = {\n      [serverApi?.version || helloOk ? 'hello' : LEGACY_HELLO_COMMAND]: 1,\n      ...(isAwaitable && topologyVersion\n        ? { maxAwaitTimeMS, topologyVersion: makeTopologyVersion(topologyVersion) }\n        : {})\n    };\n\n    const options = isAwaitable\n      ? {\n          socketTimeoutMS: connectTimeoutMS ? connectTimeoutMS + maxAwaitTimeMS : 0,\n          exhaustAllowed: true\n        }\n      : { socketTimeoutMS: connectTimeoutMS };\n\n    if (isAwaitable && monitor.rttPinger == null) {\n      monitor.rttPinger = new RTTPinger(monitor);\n    }\n\n    // Record new start time before sending handshake\n    start = now();\n\n    if (isAwaitable) {\n      awaited = true;\n      return connection.exhaustCommand(ns('admin.$cmd'), cmd, options, (error, hello) => {\n        if (error) return onHeartbeatFailed(error);\n        return onHeartbeatSucceeded(hello);\n      });\n    }\n\n    awaited = false;\n    connection\n      .command(ns('admin.$cmd'), cmd, options)\n      .then(onHeartbeatSucceeded, onHeartbeatFailed);\n\n    return;\n  }\n\n  // connecting does an implicit `hello`\n  (async () => {\n    const socket = await makeSocket(monitor.connectOptions);\n    const connection = makeConnection(monitor.connectOptions, socket);\n    // The start time is after socket creation but before the handshake\n    start = now();\n    try {\n      await performInitialHandshake(connection, monitor.connectOptions);\n      return connection;\n    } catch (error) {\n      connection.destroy();\n      throw error;\n    }\n  })().then(\n    connection => {\n      if (isInCloseState(monitor)) {\n        connection.destroy();\n        return;\n      }\n      const duration = calculateDurationInMs(start);\n      monitor.addRttSample(duration);\n\n      monitor.connection = connection;\n      monitor.emitAndLogHeartbeat(\n        Server.SERVER_HEARTBEAT_SUCCEEDED,\n        monitor.server.topology.s.id,\n        connection.hello?.connectionId,\n        new ServerHeartbeatSucceededEvent(\n          monitor.address,\n          duration,\n          connection.hello,\n          useStreamingProtocol(monitor, connection.hello?.topologyVersion)\n        )\n      );\n\n      callback(undefined, connection.hello);\n    },\n    error => {\n      monitor.connection = null;\n      awaited = false;\n      onHeartbeatFailed(error);\n    }\n  );\n}\n\nfunction monitorServer(monitor: Monitor) {\n  return (callback: Callback) => {\n    if (monitor.s.state === STATE_MONITORING) {\n      process.nextTick(callback);\n      return;\n    }\n    stateTransition(monitor, STATE_MONITORING);\n    function done() {\n      if (!isInCloseState(monitor)) {\n        stateTransition(monitor, STATE_IDLE);\n      }\n\n      callback();\n    }\n\n    checkServer(monitor, (err, hello) => {\n      if (err) {\n        // otherwise an error occurred on initial discovery, also bail\n        if (monitor.server.description.type === ServerType.Unknown) {\n          return done();\n        }\n      }\n\n      // if the check indicates streaming is supported, immediately reschedule monitoring\n      if (useStreamingProtocol(monitor, hello?.topologyVersion)) {\n        setTimeout(() => {\n          if (!isInCloseState(monitor)) {\n            monitor.monitorId?.wake();\n          }\n        }, 0);\n      }\n\n      done();\n    });\n  };\n}\n\nfunction makeTopologyVersion(tv: TopologyVersion) {\n  return {\n    processId: tv.processId,\n    // tests mock counter as just number, but in a real situation counter should always be a Long\n    // TODO(NODE-2674): Preserve int64 sent from MongoDB\n    counter: Long.isLong(tv.counter) ? tv.counter : Long.fromNumber(tv.counter)\n  };\n}\n\n/** @internal */\nexport interface RTTPingerOptions extends ConnectionOptions {\n  heartbeatFrequencyMS: number;\n}\n\n/** @internal */\nexport class RTTPinger {\n  connection?: Connection;\n  /** @internal */\n  cancellationToken: CancellationToken;\n  /** @internal */\n  monitorId: NodeJS.Timeout;\n  /** @internal */\n  monitor: Monitor;\n  closed: boolean;\n  /** @internal */\n  latestRtt?: number;\n\n  constructor(monitor: Monitor) {\n    this.connection = undefined;\n    this.cancellationToken = monitor.cancellationToken;\n    this.closed = false;\n    this.monitor = monitor;\n    this.latestRtt = monitor.latestRtt ?? undefined;\n\n    const heartbeatFrequencyMS = monitor.options.heartbeatFrequencyMS;\n    this.monitorId = setTimeout(() => this.measureRoundTripTime(), heartbeatFrequencyMS);\n  }\n\n  get roundTripTime(): number {\n    return this.monitor.roundTripTime;\n  }\n\n  get minRoundTripTime(): number {\n    return this.monitor.minRoundTripTime;\n  }\n\n  close(): void {\n    this.closed = true;\n    clearTimeout(this.monitorId);\n\n    this.connection?.destroy();\n    this.connection = undefined;\n  }\n\n  private measureAndReschedule(start: number, conn?: Connection) {\n    if (this.closed) {\n      conn?.destroy();\n      return;\n    }\n\n    if (this.connection == null) {\n      this.connection = conn;\n    }\n\n    this.latestRtt = calculateDurationInMs(start);\n    this.monitorId = setTimeout(\n      () => this.measureRoundTripTime(),\n      this.monitor.options.heartbeatFrequencyMS\n    );\n  }\n\n  private measureRoundTripTime() {\n    const start = now();\n\n    if (this.closed) {\n      return;\n    }\n\n    const connection = this.connection;\n    if (connection == null) {\n      connect(this.monitor.connectOptions).then(\n        connection => {\n          this.measureAndReschedule(start, connection);\n        },\n        () => {\n          this.connection = undefined;\n        }\n      );\n      return;\n    }\n\n    const commandName =\n      connection.serverApi?.version || connection.helloOk ? 'hello' : LEGACY_HELLO_COMMAND;\n\n    connection.command(ns('admin.$cmd'), { [commandName]: 1 }, undefined).then(\n      () => this.measureAndReschedule(start),\n      () => {\n        this.connection?.destroy();\n        this.connection = undefined;\n        return;\n      }\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport interface MonitorIntervalOptions {\n  /** The interval to execute a method on */\n  heartbeatFrequencyMS: number;\n  /** A minimum interval that must elapse before the method is called */\n  minHeartbeatFrequencyMS: number;\n  /** Whether the method should be called immediately when the interval is started  */\n  immediate: boolean;\n}\n\n/**\n * @internal\n */\nexport class MonitorInterval {\n  fn: (callback: Callback) => void;\n  timerId: NodeJS.Timeout | undefined;\n  lastExecutionEnded: number;\n  isExpeditedCallToFnScheduled = false;\n  stopped = false;\n  isExecutionInProgress = false;\n  hasExecutedOnce = false;\n\n  heartbeatFrequencyMS: number;\n  minHeartbeatFrequencyMS: number;\n\n  constructor(fn: (callback: Callback) => void, options: Partial<MonitorIntervalOptions> = {}) {\n    this.fn = fn;\n    this.lastExecutionEnded = -Infinity;\n\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 1000;\n    this.minHeartbeatFrequencyMS = options.minHeartbeatFrequencyMS ?? 500;\n\n    if (options.immediate) {\n      this._executeAndReschedule();\n    } else {\n      this._reschedule(undefined);\n    }\n  }\n\n  wake() {\n    const currentTime = now();\n    const timeSinceLastCall = currentTime - this.lastExecutionEnded;\n\n    // TODO(NODE-4674): Add error handling and logging to the monitor\n    if (timeSinceLastCall < 0) {\n      return this._executeAndReschedule();\n    }\n\n    if (this.isExecutionInProgress) {\n      return;\n    }\n\n    // debounce multiple calls to wake within the `minInterval`\n    if (this.isExpeditedCallToFnScheduled) {\n      return;\n    }\n\n    // reschedule a call as soon as possible, ensuring the call never happens\n    // faster than the `minInterval`\n    if (timeSinceLastCall < this.minHeartbeatFrequencyMS) {\n      this.isExpeditedCallToFnScheduled = true;\n      this._reschedule(this.minHeartbeatFrequencyMS - timeSinceLastCall);\n      return;\n    }\n\n    this._executeAndReschedule();\n  }\n\n  stop() {\n    this.stopped = true;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n      this.timerId = undefined;\n    }\n\n    this.lastExecutionEnded = -Infinity;\n    this.isExpeditedCallToFnScheduled = false;\n  }\n\n  toString() {\n    return JSON.stringify(this);\n  }\n\n  toJSON() {\n    const currentTime = now();\n    const timeSinceLastCall = currentTime - this.lastExecutionEnded;\n    return {\n      timerId: this.timerId != null ? 'set' : 'cleared',\n      lastCallTime: this.lastExecutionEnded,\n      isExpeditedCheckScheduled: this.isExpeditedCallToFnScheduled,\n      stopped: this.stopped,\n      heartbeatFrequencyMS: this.heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: this.minHeartbeatFrequencyMS,\n      currentTime,\n      timeSinceLastCall\n    };\n  }\n\n  private _reschedule(ms?: number) {\n    if (this.stopped) return;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n    }\n\n    this.timerId = setTimeout(this._executeAndReschedule, ms || this.heartbeatFrequencyMS);\n  }\n\n  private _executeAndReschedule = () => {\n    if (this.stopped) return;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n    }\n\n    this.isExpeditedCallToFnScheduled = false;\n    this.isExecutionInProgress = true;\n\n    this.fn(() => {\n      this.lastExecutionEnded = now();\n      this.isExecutionInProgress = false;\n      this._reschedule(this.heartbeatFrequencyMS);\n    });\n  };\n}\n\n/** @internal\n * This class implements the RTT sampling logic specified for [CSOT](https://github.com/mongodb/specifications/blob/bbb335e60cd7ea1e0f7cd9a9443cb95fc9d3b64d/source/client-side-operations-timeout/client-side-operations-timeout.md#drivers-use-minimum-rtt-to-short-circuit-operations)\n *\n * This is implemented as a [circular buffer](https://en.wikipedia.org/wiki/Circular_buffer) keeping\n * the most recent `windowSize` samples\n * */\nexport class RTTSampler {\n  /** Index of the next slot to be overwritten */\n  private writeIndex: number;\n  private length: number;\n  private rttSamples: Float64Array;\n\n  constructor(windowSize = 10) {\n    this.rttSamples = new Float64Array(windowSize);\n    this.length = 0;\n    this.writeIndex = 0;\n  }\n\n  /**\n   * Adds an rtt sample to the end of the circular buffer\n   * When `windowSize` samples have been collected, `addSample` overwrites the least recently added\n   * sample\n   */\n  addSample(sample: number) {\n    this.rttSamples[this.writeIndex++] = sample;\n    if (this.length < this.rttSamples.length) {\n      this.length++;\n    }\n\n    this.writeIndex %= this.rttSamples.length;\n  }\n\n  /**\n   * When \\< 2 samples have been collected, returns 0\n   * Otherwise computes the minimum value samples contained in the buffer\n   */\n  min(): number {\n    if (this.length < 2) return 0;\n    let min = this.rttSamples[0];\n    for (let i = 1; i < this.length; i++) {\n      if (this.rttSamples[i] < min) min = this.rttSamples[i];\n    }\n\n    return min;\n  }\n\n  /**\n   * Returns mean of samples contained in the buffer\n   */\n  average(): number {\n    if (this.length === 0) return 0;\n    let sum = 0;\n    for (let i = 0; i < this.length; i++) {\n      sum += this.rttSamples[i];\n    }\n\n    return sum / this.length;\n  }\n\n  /**\n   * Returns most recently inserted element in the buffer\n   * Returns null if the buffer is empty\n   * */\n  get last(): number | null {\n    if (this.length === 0) return null;\n    return this.rttSamples[this.writeIndex === 0 ? this.length - 1 : this.writeIndex - 1];\n  }\n\n  /**\n   * Clear the buffer\n   * NOTE: this does not overwrite the data held in the internal array, just the pointers into\n   * this array\n   */\n  clear() {\n    this.length = 0;\n    this.writeIndex = 0;\n  }\n}\n", "import * as dns from 'dns';\nimport ConnectionString from 'mongodb-connection-string-url';\nimport { URLSearchParams } from 'url';\n\nimport type { Document } from './bson';\nimport { MongoCredentials } from './cmap/auth/mongo_credentials';\nimport { AUTH_MECHS_AUTH_SRC_EXTERNAL, AuthMechanism } from './cmap/auth/providers';\nimport { addContainerMetadata, makeClientMetadata } from './cmap/handshake/client_metadata';\nimport { Compressor, type CompressorName } from './cmap/wire_protocol/compression';\nimport { Encrypter } from './encrypter';\nimport {\n  MongoAPIError,\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError,\n  MongoParseError\n} from './error';\nimport {\n  MongoClient,\n  type MongoClientOptions,\n  type MongoOptions,\n  type PkFactory,\n  type ServerApi,\n  ServerApiVersion\n} from './mongo_client';\nimport { MongoLoggableComponent, MongoLogger, SeverityLevel } from './mongo_logger';\nimport { ReadConcern, type ReadConcernLevel } from './read_concern';\nimport { ReadPreference, type ReadPreferenceMode } from './read_preference';\nimport { ServerMonitoringMode } from './sdam/monitor';\nimport type { TagSet } from './sdam/server_description';\nimport {\n  checkParentDomainMatch,\n  DEFAULT_PK_FACTORY,\n  emitWarning,\n  HostAddress,\n  isRecord,\n  parseInteger,\n  setDifference,\n  squashError\n} from './utils';\nimport { type W, WriteConcern } from './write_concern';\n\nconst VALID_TXT_RECORDS = ['authSource', 'replicaSet', 'loadBalanced'];\n\nconst LB_SINGLE_HOST_ERROR = 'loadBalanced option only supported with a single host in the URI';\nconst LB_REPLICA_SET_ERROR = 'loadBalanced option not supported with a replicaSet option';\nconst LB_DIRECT_CONNECTION_ERROR =\n  'loadBalanced option not supported when directConnection is provided';\n\nfunction retryDNSTimeoutFor(api: 'resolveSrv'): (a: string) => Promise<dns.SrvRecord[]>;\nfunction retryDNSTimeoutFor(api: 'resolveTxt'): (a: string) => Promise<string[][]>;\nfunction retryDNSTimeoutFor(\n  api: 'resolveSrv' | 'resolveTxt'\n): (a: string) => Promise<dns.SrvRecord[] | string[][]> {\n  return async function dnsReqRetryTimeout(lookupAddress: string) {\n    try {\n      return await dns.promises[api](lookupAddress);\n    } catch (firstDNSError) {\n      if (firstDNSError.code === dns.TIMEOUT) {\n        return await dns.promises[api](lookupAddress);\n      } else {\n        throw firstDNSError;\n      }\n    }\n  };\n}\n\nconst resolveSrv = retryDNSTimeoutFor('resolveSrv');\nconst resolveTxt = retryDNSTimeoutFor('resolveTxt');\n\n/**\n * Lookup a `mongodb+srv` connection string, combine the parts and reparse it as a normal\n * connection string.\n *\n * @param uri - The connection string to parse\n * @param options - Optional user provided connection string options\n */\nexport async function resolveSRVRecord(options: MongoOptions): Promise<HostAddress[]> {\n  if (typeof options.srvHost !== 'string') {\n    throw new MongoAPIError('Option \"srvHost\" must not be empty');\n  }\n\n  // Asynchronously start TXT resolution so that we do not have to wait until\n  // the SRV record is resolved before starting a second DNS query.\n  const lookupAddress = options.srvHost;\n  const txtResolutionPromise = resolveTxt(lookupAddress);\n\n  txtResolutionPromise.then(undefined, squashError); // rejections will be handled later\n\n  const hostname = `_${options.srvServiceName}._tcp.${lookupAddress}`;\n  // Resolve the SRV record and use the result as the list of hosts to connect to.\n  const addresses = await resolveSrv(hostname);\n\n  if (addresses.length === 0) {\n    throw new MongoAPIError('No addresses found at host');\n  }\n\n  for (const { name } of addresses) {\n    checkParentDomainMatch(name, lookupAddress);\n  }\n\n  const hostAddresses = addresses.map(r => HostAddress.fromString(`${r.name}:${r.port ?? 27017}`));\n\n  validateLoadBalancedOptions(hostAddresses, options, true);\n\n  // Use the result of resolving the TXT record and add options from there if they exist.\n  let record;\n  try {\n    record = await txtResolutionPromise;\n  } catch (error) {\n    if (error.code !== 'ENODATA' && error.code !== 'ENOTFOUND') {\n      throw error;\n    }\n    return hostAddresses;\n  }\n\n  if (record.length > 1) {\n    throw new MongoParseError('Multiple text records not allowed');\n  }\n\n  const txtRecordOptions = new URLSearchParams(record[0].join(''));\n  const txtRecordOptionKeys = [...txtRecordOptions.keys()];\n  if (txtRecordOptionKeys.some(key => !VALID_TXT_RECORDS.includes(key))) {\n    throw new MongoParseError(`Text record may only set any of: ${VALID_TXT_RECORDS.join(', ')}`);\n  }\n\n  if (VALID_TXT_RECORDS.some(option => txtRecordOptions.get(option) === '')) {\n    throw new MongoParseError('Cannot have empty URI params in DNS TXT Record');\n  }\n\n  const source = txtRecordOptions.get('authSource') ?? undefined;\n  const replicaSet = txtRecordOptions.get('replicaSet') ?? undefined;\n  const loadBalanced = txtRecordOptions.get('loadBalanced') ?? undefined;\n\n  if (\n    !options.userSpecifiedAuthSource &&\n    source &&\n    options.credentials &&\n    !AUTH_MECHS_AUTH_SRC_EXTERNAL.has(options.credentials.mechanism)\n  ) {\n    options.credentials = MongoCredentials.merge(options.credentials, { source });\n  }\n\n  if (!options.userSpecifiedReplicaSet && replicaSet) {\n    options.replicaSet = replicaSet;\n  }\n\n  if (loadBalanced === 'true') {\n    options.loadBalanced = true;\n  }\n\n  if (options.replicaSet && options.srvMaxHosts > 0) {\n    throw new MongoParseError('Cannot combine replicaSet option with srvMaxHosts');\n  }\n\n  validateLoadBalancedOptions(hostAddresses, options, true);\n\n  return hostAddresses;\n}\n\n/**\n * Checks if TLS options are valid\n *\n * @param allOptions - All options provided by user or included in default options map\n * @throws MongoAPIError if TLS options are invalid\n */\nfunction checkTLSOptions(allOptions: CaseInsensitiveMap): void {\n  if (!allOptions) return;\n  const check = (a: string, b: string) => {\n    if (allOptions.has(a) && allOptions.has(b)) {\n      throw new MongoAPIError(`The '${a}' option cannot be used with the '${b}' option`);\n    }\n  };\n  check('tlsInsecure', 'tlsAllowInvalidCertificates');\n  check('tlsInsecure', 'tlsAllowInvalidHostnames');\n  check('tlsInsecure', 'tlsDisableCertificateRevocationCheck');\n  check('tlsInsecure', 'tlsDisableOCSPEndpointCheck');\n  check('tlsAllowInvalidCertificates', 'tlsDisableCertificateRevocationCheck');\n  check('tlsAllowInvalidCertificates', 'tlsDisableOCSPEndpointCheck');\n  check('tlsDisableCertificateRevocationCheck', 'tlsDisableOCSPEndpointCheck');\n}\nfunction getBoolean(name: string, value: unknown): boolean {\n  if (typeof value === 'boolean') return value;\n  switch (value) {\n    case 'true':\n      return true;\n    case 'false':\n      return false;\n    default:\n      throw new MongoParseError(`${name} must be either \"true\" or \"false\"`);\n  }\n}\n\nfunction getIntFromOptions(name: string, value: unknown): number {\n  const parsedInt = parseInteger(value);\n  if (parsedInt != null) {\n    return parsedInt;\n  }\n  throw new MongoParseError(`Expected ${name} to be stringified int value, got: ${value}`);\n}\n\nfunction getUIntFromOptions(name: string, value: unknown): number {\n  const parsedValue = getIntFromOptions(name, value);\n  if (parsedValue < 0) {\n    throw new MongoParseError(`${name} can only be a positive int value, got: ${value}`);\n  }\n  return parsedValue;\n}\n\nfunction* entriesFromString(value: string): Generator<[string, string]> {\n  if (value === '') {\n    return;\n  }\n  const keyValuePairs = value.split(',');\n  for (const keyValue of keyValuePairs) {\n    const [key, value] = keyValue.split(/:(.*)/);\n    if (value == null) {\n      throw new MongoParseError('Cannot have undefined values in key value pairs');\n    }\n\n    yield [key, value];\n  }\n}\n\nclass CaseInsensitiveMap<Value = any> extends Map<string, Value> {\n  constructor(entries: Array<[string, any]> = []) {\n    super(entries.map(([k, v]) => [k.toLowerCase(), v]));\n  }\n  override has(k: string) {\n    return super.has(k.toLowerCase());\n  }\n  override get(k: string) {\n    return super.get(k.toLowerCase());\n  }\n  override set(k: string, v: any) {\n    return super.set(k.toLowerCase(), v);\n  }\n  override delete(k: string): boolean {\n    return super.delete(k.toLowerCase());\n  }\n}\n\nexport function parseOptions(\n  uri: string,\n  mongoClient: MongoClient | MongoClientOptions | undefined = undefined,\n  options: MongoClientOptions = {}\n): MongoOptions {\n  if (mongoClient != null && !(mongoClient instanceof MongoClient)) {\n    options = mongoClient;\n    mongoClient = undefined;\n  }\n\n  // validate BSONOptions\n  if (options.useBigInt64 && typeof options.promoteLongs === 'boolean' && !options.promoteLongs) {\n    throw new MongoAPIError('Must request either bigint or Long for int64 deserialization');\n  }\n\n  if (options.useBigInt64 && typeof options.promoteValues === 'boolean' && !options.promoteValues) {\n    throw new MongoAPIError('Must request either bigint or Long for int64 deserialization');\n  }\n\n  const url = new ConnectionString(uri);\n  const { hosts, isSRV } = url;\n\n  const mongoOptions = Object.create(null);\n\n  mongoOptions.hosts = isSRV ? [] : hosts.map(HostAddress.fromString);\n\n  const urlOptions = new CaseInsensitiveMap<unknown[]>();\n\n  if (url.pathname !== '/' && url.pathname !== '') {\n    const dbName = decodeURIComponent(\n      url.pathname[0] === '/' ? url.pathname.slice(1) : url.pathname\n    );\n    if (dbName) {\n      urlOptions.set('dbName', [dbName]);\n    }\n  }\n\n  if (url.username !== '') {\n    const auth: Document = {\n      username: decodeURIComponent(url.username)\n    };\n\n    if (typeof url.password === 'string') {\n      auth.password = decodeURIComponent(url.password);\n    }\n\n    urlOptions.set('auth', [auth]);\n  }\n\n  for (const key of url.searchParams.keys()) {\n    const values = url.searchParams.getAll(key);\n\n    const isReadPreferenceTags = /readPreferenceTags/i.test(key);\n\n    if (!isReadPreferenceTags && values.length > 1) {\n      throw new MongoInvalidArgumentError(\n        `URI option \"${key}\" cannot appear more than once in the connection string`\n      );\n    }\n\n    if (!isReadPreferenceTags && values.includes('')) {\n      throw new MongoAPIError(`URI option \"${key}\" cannot be specified with no value`);\n    }\n\n    if (!urlOptions.has(key)) {\n      urlOptions.set(key, values);\n    }\n  }\n\n  const objectOptions = new CaseInsensitiveMap<unknown>(\n    Object.entries(options).filter(([, v]) => v != null)\n  );\n\n  // Validate options that can only be provided by one of uri or object\n\n  if (urlOptions.has('serverApi')) {\n    throw new MongoParseError(\n      'URI cannot contain `serverApi`, it can only be passed to the client'\n    );\n  }\n\n  const uriMechanismProperties = urlOptions.get('authMechanismProperties');\n  if (uriMechanismProperties) {\n    for (const property of uriMechanismProperties) {\n      if (/(^|,)ALLOWED_HOSTS:/.test(property as string)) {\n        throw new MongoParseError(\n          'Auth mechanism property ALLOWED_HOSTS is not allowed in the connection string.'\n        );\n      }\n    }\n  }\n\n  if (objectOptions.has('loadBalanced')) {\n    throw new MongoParseError('loadBalanced is only a valid option in the URI');\n  }\n\n  // All option collection\n\n  const allProvidedOptions = new CaseInsensitiveMap<unknown[]>();\n\n  const allProvidedKeys = new Set<string>([...urlOptions.keys(), ...objectOptions.keys()]);\n\n  for (const key of allProvidedKeys) {\n    const values = [];\n    const objectOptionValue = objectOptions.get(key);\n    if (objectOptionValue != null) {\n      values.push(objectOptionValue);\n    }\n\n    const urlValues = urlOptions.get(key) ?? [];\n    values.push(...urlValues);\n    allProvidedOptions.set(key, values);\n  }\n\n  if (allProvidedOptions.has('tls') || allProvidedOptions.has('ssl')) {\n    const tlsAndSslOpts = (allProvidedOptions.get('tls') || [])\n      .concat(allProvidedOptions.get('ssl') || [])\n      .map(getBoolean.bind(null, 'tls/ssl'));\n    if (new Set(tlsAndSslOpts).size !== 1) {\n      throw new MongoParseError('All values of tls/ssl must be the same.');\n    }\n  }\n\n  checkTLSOptions(allProvidedOptions);\n\n  const unsupportedOptions = setDifference(\n    allProvidedKeys,\n    Array.from(Object.keys(OPTIONS)).map(s => s.toLowerCase())\n  );\n  if (unsupportedOptions.size !== 0) {\n    const optionWord = unsupportedOptions.size > 1 ? 'options' : 'option';\n    const isOrAre = unsupportedOptions.size > 1 ? 'are' : 'is';\n    throw new MongoParseError(\n      `${optionWord} ${Array.from(unsupportedOptions).join(', ')} ${isOrAre} not supported`\n    );\n  }\n\n  // Option parsing and setting\n\n  for (const [key, descriptor] of Object.entries(OPTIONS)) {\n    const values = allProvidedOptions.get(key);\n    if (!values || values.length === 0) {\n      if (DEFAULT_OPTIONS.has(key)) {\n        setOption(mongoOptions, key, descriptor, [DEFAULT_OPTIONS.get(key)]);\n      }\n    } else {\n      const { deprecated } = descriptor;\n      if (deprecated) {\n        const deprecatedMsg = typeof deprecated === 'string' ? `: ${deprecated}` : '';\n        emitWarning(`${key} is a deprecated option${deprecatedMsg}`);\n      }\n\n      setOption(mongoOptions, key, descriptor, values);\n    }\n  }\n\n  if (mongoOptions.credentials) {\n    const isGssapi = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_GSSAPI;\n    const isX509 = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_X509;\n    const isAws = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_AWS;\n    const isOidc = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_OIDC;\n    if (\n      (isGssapi || isX509) &&\n      allProvidedOptions.has('authSource') &&\n      mongoOptions.credentials.source !== '$external'\n    ) {\n      // If authSource was explicitly given and its incorrect, we error\n      throw new MongoParseError(\n        `authMechanism ${mongoOptions.credentials.mechanism} requires an authSource of '$external'`\n      );\n    }\n\n    if (\n      !(isGssapi || isX509 || isAws || isOidc) &&\n      mongoOptions.dbName &&\n      !allProvidedOptions.has('authSource')\n    ) {\n      // inherit the dbName unless GSSAPI or X509, then silently ignore dbName\n      // and there was no specific authSource given\n      mongoOptions.credentials = MongoCredentials.merge(mongoOptions.credentials, {\n        source: mongoOptions.dbName\n      });\n    }\n\n    if (isAws && mongoOptions.credentials.username && !mongoOptions.credentials.password) {\n      throw new MongoMissingCredentialsError(\n        `When using ${mongoOptions.credentials.mechanism} password must be set when a username is specified`\n      );\n    }\n\n    mongoOptions.credentials.validate();\n\n    // Check if the only auth related option provided was authSource, if so we can remove credentials\n    if (\n      mongoOptions.credentials.password === '' &&\n      mongoOptions.credentials.username === '' &&\n      mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_DEFAULT &&\n      Object.keys(mongoOptions.credentials.mechanismProperties).length === 0\n    ) {\n      delete mongoOptions.credentials;\n    }\n  }\n\n  if (!mongoOptions.dbName) {\n    // dbName default is applied here because of the credential validation above\n    mongoOptions.dbName = 'test';\n  }\n\n  validateLoadBalancedOptions(hosts, mongoOptions, isSRV);\n\n  if (mongoClient && mongoOptions.autoEncryption) {\n    Encrypter.checkForMongoCrypt();\n    mongoOptions.encrypter = new Encrypter(mongoClient, uri, options);\n    mongoOptions.autoEncrypter = mongoOptions.encrypter.autoEncrypter;\n  }\n\n  // Potential SRV Overrides and SRV connection string validations\n\n  mongoOptions.userSpecifiedAuthSource =\n    objectOptions.has('authSource') || urlOptions.has('authSource');\n  mongoOptions.userSpecifiedReplicaSet =\n    objectOptions.has('replicaSet') || urlOptions.has('replicaSet');\n\n  if (isSRV) {\n    // SRV Record is resolved upon connecting\n    mongoOptions.srvHost = hosts[0];\n\n    if (mongoOptions.directConnection) {\n      throw new MongoAPIError('SRV URI does not support directConnection');\n    }\n\n    if (mongoOptions.srvMaxHosts > 0 && typeof mongoOptions.replicaSet === 'string') {\n      throw new MongoParseError('Cannot use srvMaxHosts option with replicaSet');\n    }\n\n    // SRV turns on TLS by default, but users can override and turn it off\n    const noUserSpecifiedTLS = !objectOptions.has('tls') && !urlOptions.has('tls');\n    const noUserSpecifiedSSL = !objectOptions.has('ssl') && !urlOptions.has('ssl');\n    if (noUserSpecifiedTLS && noUserSpecifiedSSL) {\n      mongoOptions.tls = true;\n    }\n  } else {\n    const userSpecifiedSrvOptions =\n      urlOptions.has('srvMaxHosts') ||\n      objectOptions.has('srvMaxHosts') ||\n      urlOptions.has('srvServiceName') ||\n      objectOptions.has('srvServiceName');\n\n    if (userSpecifiedSrvOptions) {\n      throw new MongoParseError(\n        'Cannot use srvMaxHosts or srvServiceName with a non-srv connection string'\n      );\n    }\n  }\n\n  if (mongoOptions.directConnection && mongoOptions.hosts.length !== 1) {\n    throw new MongoParseError('directConnection option requires exactly one host');\n  }\n\n  if (\n    !mongoOptions.proxyHost &&\n    (mongoOptions.proxyPort || mongoOptions.proxyUsername || mongoOptions.proxyPassword)\n  ) {\n    throw new MongoParseError('Must specify proxyHost if other proxy options are passed');\n  }\n\n  if (\n    (mongoOptions.proxyUsername && !mongoOptions.proxyPassword) ||\n    (!mongoOptions.proxyUsername && mongoOptions.proxyPassword)\n  ) {\n    throw new MongoParseError('Can only specify both of proxy username/password or neither');\n  }\n\n  const proxyOptions = ['proxyHost', 'proxyPort', 'proxyUsername', 'proxyPassword'].map(\n    key => urlOptions.get(key) ?? []\n  );\n\n  if (proxyOptions.some(options => options.length > 1)) {\n    throw new MongoParseError(\n      'Proxy options cannot be specified multiple times in the connection string'\n    );\n  }\n\n  mongoOptions.mongoLoggerOptions = MongoLogger.resolveOptions(\n    {\n      MONGODB_LOG_COMMAND: process.env.MONGODB_LOG_COMMAND,\n      MONGODB_LOG_TOPOLOGY: process.env.MONGODB_LOG_TOPOLOGY,\n      MONGODB_LOG_SERVER_SELECTION: process.env.MONGODB_LOG_SERVER_SELECTION,\n      MONGODB_LOG_CONNECTION: process.env.MONGODB_LOG_CONNECTION,\n      MONGODB_LOG_CLIENT: process.env.MONGODB_LOG_CLIENT,\n      MONGODB_LOG_ALL: process.env.MONGODB_LOG_ALL,\n      MONGODB_LOG_MAX_DOCUMENT_LENGTH: process.env.MONGODB_LOG_MAX_DOCUMENT_LENGTH,\n      MONGODB_LOG_PATH: process.env.MONGODB_LOG_PATH\n    },\n    {\n      mongodbLogPath: mongoOptions.mongodbLogPath,\n      mongodbLogComponentSeverities: mongoOptions.mongodbLogComponentSeverities,\n      mongodbLogMaxDocumentLength: mongoOptions.mongodbLogMaxDocumentLength\n    }\n  );\n\n  mongoOptions.metadata = makeClientMetadata(mongoOptions);\n\n  mongoOptions.extendedMetadata = addContainerMetadata(mongoOptions.metadata).then(\n    undefined,\n    squashError\n  ); // rejections will be handled later\n\n  return mongoOptions;\n}\n\n/**\n * #### Throws if LB mode is true:\n * - hosts contains more than one host\n * - there is a replicaSet name set\n * - directConnection is set\n * - if srvMaxHosts is used when an srv connection string is passed in\n *\n * @throws MongoParseError\n */\nfunction validateLoadBalancedOptions(\n  hosts: HostAddress[] | string[],\n  mongoOptions: MongoOptions,\n  isSrv: boolean\n): void {\n  if (mongoOptions.loadBalanced) {\n    if (hosts.length > 1) {\n      throw new MongoParseError(LB_SINGLE_HOST_ERROR);\n    }\n    if (mongoOptions.replicaSet) {\n      throw new MongoParseError(LB_REPLICA_SET_ERROR);\n    }\n    if (mongoOptions.directConnection) {\n      throw new MongoParseError(LB_DIRECT_CONNECTION_ERROR);\n    }\n\n    if (isSrv && mongoOptions.srvMaxHosts > 0) {\n      throw new MongoParseError('Cannot limit srv hosts with loadBalanced enabled');\n    }\n  }\n  return;\n}\n\nfunction setOption(\n  mongoOptions: any,\n  key: string,\n  descriptor: OptionDescriptor,\n  values: unknown[]\n) {\n  const { target, type, transform } = descriptor;\n  const name = target ?? key;\n\n  switch (type) {\n    case 'boolean':\n      mongoOptions[name] = getBoolean(name, values[0]);\n      break;\n    case 'int':\n      mongoOptions[name] = getIntFromOptions(name, values[0]);\n      break;\n    case 'uint':\n      mongoOptions[name] = getUIntFromOptions(name, values[0]);\n      break;\n    case 'string':\n      if (values[0] == null) {\n        break;\n      }\n      mongoOptions[name] = String(values[0]);\n      break;\n    case 'record':\n      if (!isRecord(values[0])) {\n        throw new MongoParseError(`${name} must be an object`);\n      }\n      mongoOptions[name] = values[0];\n      break;\n    case 'any':\n      mongoOptions[name] = values[0];\n      break;\n    default: {\n      if (!transform) {\n        throw new MongoParseError('Descriptors missing a type must define a transform');\n      }\n      const transformValue = transform({ name, options: mongoOptions, values });\n      mongoOptions[name] = transformValue;\n      break;\n    }\n  }\n}\n\ninterface OptionDescriptor {\n  target?: string;\n  type?: 'boolean' | 'int' | 'uint' | 'record' | 'string' | 'any';\n  default?: any;\n\n  deprecated?: boolean | string;\n  /**\n   * @param name - the original option name\n   * @param options - the options so far for resolution\n   * @param values - the possible values in precedence order\n   */\n  transform?: (args: { name: string; options: MongoOptions; values: unknown[] }) => unknown;\n}\n\nexport const OPTIONS = {\n  appName: {\n    type: 'string'\n  },\n  auth: {\n    target: 'credentials',\n    transform({ name, options, values: [value] }): MongoCredentials {\n      if (!isRecord(value, ['username', 'password'] as const)) {\n        throw new MongoParseError(\n          `${name} must be an object with 'username' and 'password' properties`\n        );\n      }\n      return MongoCredentials.merge(options.credentials, {\n        username: value.username,\n        password: value.password\n      });\n    }\n  },\n  authMechanism: {\n    target: 'credentials',\n    transform({ options, values: [value] }): MongoCredentials {\n      const mechanisms = Object.values(AuthMechanism);\n      const [mechanism] = mechanisms.filter(m => m.match(RegExp(String.raw`\\b${value}\\b`, 'i')));\n      if (!mechanism) {\n        throw new MongoParseError(`authMechanism one of ${mechanisms}, got ${value}`);\n      }\n      let source = options.credentials?.source;\n      if (\n        mechanism === AuthMechanism.MONGODB_PLAIN ||\n        AUTH_MECHS_AUTH_SRC_EXTERNAL.has(mechanism)\n      ) {\n        // some mechanisms have '$external' as the Auth Source\n        source = '$external';\n      }\n\n      let password = options.credentials?.password;\n      if (mechanism === AuthMechanism.MONGODB_X509 && password === '') {\n        password = undefined;\n      }\n      return MongoCredentials.merge(options.credentials, {\n        mechanism,\n        source,\n        password\n      });\n    }\n  },\n  // Note that if the authMechanismProperties contain a TOKEN_RESOURCE that has a\n  // comma in it, it MUST be supplied as a MongoClient option instead of in the\n  // connection string.\n  authMechanismProperties: {\n    target: 'credentials',\n    transform({ options, values }): MongoCredentials {\n      // We can have a combination of options passed in the URI and options passed\n      // as an object to the MongoClient. So we must transform the string options\n      // as well as merge them together with a potentially provided object.\n      let mechanismProperties = Object.create(null);\n\n      for (const optionValue of values) {\n        if (typeof optionValue === 'string') {\n          for (const [key, value] of entriesFromString(optionValue)) {\n            try {\n              mechanismProperties[key] = getBoolean(key, value);\n            } catch {\n              mechanismProperties[key] = value;\n            }\n          }\n        } else {\n          if (!isRecord(optionValue)) {\n            throw new MongoParseError('AuthMechanismProperties must be an object');\n          }\n          mechanismProperties = { ...optionValue };\n        }\n      }\n      return MongoCredentials.merge(options.credentials, {\n        mechanismProperties\n      });\n    }\n  },\n  authSource: {\n    target: 'credentials',\n    transform({ options, values: [value] }): MongoCredentials {\n      const source = String(value);\n      return MongoCredentials.merge(options.credentials, { source });\n    }\n  },\n  autoEncryption: {\n    type: 'record'\n  },\n  autoSelectFamily: {\n    type: 'boolean',\n    default: true\n  },\n  autoSelectFamilyAttemptTimeout: {\n    type: 'uint'\n  },\n  bsonRegExp: {\n    type: 'boolean'\n  },\n  serverApi: {\n    target: 'serverApi',\n    transform({ values: [version] }): ServerApi {\n      const serverApiToValidate =\n        typeof version === 'string' ? ({ version } as ServerApi) : (version as ServerApi);\n      const versionToValidate = serverApiToValidate && serverApiToValidate.version;\n      if (!versionToValidate) {\n        throw new MongoParseError(\n          `Invalid \\`serverApi\\` property; must specify a version from the following enum: [\"${Object.values(\n            ServerApiVersion\n          ).join('\", \"')}\"]`\n        );\n      }\n      if (!Object.values(ServerApiVersion).some(v => v === versionToValidate)) {\n        throw new MongoParseError(\n          `Invalid server API version=${versionToValidate}; must be in the following enum: [\"${Object.values(\n            ServerApiVersion\n          ).join('\", \"')}\"]`\n        );\n      }\n      return serverApiToValidate;\n    }\n  },\n  checkKeys: {\n    type: 'boolean'\n  },\n  compressors: {\n    default: 'none',\n    target: 'compressors',\n    transform({ values }) {\n      const compressionList = new Set();\n      for (const compVal of values as (CompressorName[] | string)[]) {\n        const compValArray = typeof compVal === 'string' ? compVal.split(',') : compVal;\n        if (!Array.isArray(compValArray)) {\n          throw new MongoInvalidArgumentError(\n            'compressors must be an array or a comma-delimited list of strings'\n          );\n        }\n        for (const c of compValArray) {\n          if (Object.keys(Compressor).includes(String(c))) {\n            compressionList.add(String(c));\n          } else {\n            throw new MongoInvalidArgumentError(\n              `${c} is not a valid compression mechanism. Must be one of: ${Object.keys(\n                Compressor\n              )}.`\n            );\n          }\n        }\n      }\n      return [...compressionList];\n    }\n  },\n  connectTimeoutMS: {\n    default: 30000,\n    type: 'uint'\n  },\n  dbName: {\n    type: 'string'\n  },\n  directConnection: {\n    default: false,\n    type: 'boolean'\n  },\n  driverInfo: {\n    default: {},\n    type: 'record'\n  },\n  enableUtf8Validation: { type: 'boolean', default: true },\n  family: {\n    transform({ name, values: [value] }): 4 | 6 {\n      const transformValue = getIntFromOptions(name, value);\n      if (transformValue === 4 || transformValue === 6) {\n        return transformValue;\n      }\n      throw new MongoParseError(`Option 'family' must be 4 or 6 got ${transformValue}.`);\n    }\n  },\n  fieldsAsRaw: {\n    type: 'record'\n  },\n  forceServerObjectId: {\n    default: false,\n    type: 'boolean'\n  },\n  fsync: {\n    deprecated: 'Please use journal instead',\n    target: 'writeConcern',\n    transform({ name, options, values: [value] }): WriteConcern {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          fsync: getBoolean(name, value)\n        }\n      });\n      if (!wc) throw new MongoParseError(`Unable to make a writeConcern from fsync=${value}`);\n      return wc;\n    }\n  } as OptionDescriptor,\n  heartbeatFrequencyMS: {\n    default: 10000,\n    type: 'uint'\n  },\n  ignoreUndefined: {\n    type: 'boolean'\n  },\n  j: {\n    deprecated: 'Please use journal instead',\n    target: 'writeConcern',\n    transform({ name, options, values: [value] }): WriteConcern {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          journal: getBoolean(name, value)\n        }\n      });\n      if (!wc) throw new MongoParseError(`Unable to make a writeConcern from journal=${value}`);\n      return wc;\n    }\n  } as OptionDescriptor,\n  journal: {\n    target: 'writeConcern',\n    transform({ name, options, values: [value] }): WriteConcern {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          journal: getBoolean(name, value)\n        }\n      });\n      if (!wc) throw new MongoParseError(`Unable to make a writeConcern from journal=${value}`);\n      return wc;\n    }\n  },\n  loadBalanced: {\n    default: false,\n    type: 'boolean'\n  },\n  localThresholdMS: {\n    default: 15,\n    type: 'uint'\n  },\n  maxConnecting: {\n    default: 2,\n    transform({ name, values: [value] }): number {\n      const maxConnecting = getUIntFromOptions(name, value);\n      if (maxConnecting === 0) {\n        throw new MongoInvalidArgumentError('maxConnecting must be > 0 if specified');\n      }\n      return maxConnecting;\n    }\n  },\n  maxIdleTimeMS: {\n    default: 0,\n    type: 'uint'\n  },\n  maxPoolSize: {\n    default: 100,\n    type: 'uint'\n  },\n  maxStalenessSeconds: {\n    target: 'readPreference',\n    transform({ name, options, values: [value] }) {\n      const maxStalenessSeconds = getUIntFromOptions(name, value);\n      if (options.readPreference) {\n        return ReadPreference.fromOptions({\n          readPreference: { ...options.readPreference, maxStalenessSeconds }\n        });\n      } else {\n        return new ReadPreference('secondary', undefined, { maxStalenessSeconds });\n      }\n    }\n  },\n  minInternalBufferSize: {\n    type: 'uint'\n  },\n  minPoolSize: {\n    default: 0,\n    type: 'uint'\n  },\n  minHeartbeatFrequencyMS: {\n    default: 500,\n    type: 'uint'\n  },\n  monitorCommands: {\n    default: false,\n    type: 'boolean'\n  },\n  name: {\n    target: 'driverInfo',\n    transform({ values: [value], options }) {\n      return { ...options.driverInfo, name: String(value) };\n    }\n  } as OptionDescriptor,\n  noDelay: {\n    default: true,\n    type: 'boolean'\n  },\n  pkFactory: {\n    default: DEFAULT_PK_FACTORY,\n    transform({ values: [value] }): PkFactory {\n      if (isRecord(value, ['createPk'] as const) && typeof value.createPk === 'function') {\n        return value as PkFactory;\n      }\n      throw new MongoParseError(\n        `Option pkFactory must be an object with a createPk function, got ${value}`\n      );\n    }\n  },\n  promoteBuffers: {\n    type: 'boolean'\n  },\n  promoteLongs: {\n    type: 'boolean'\n  },\n  promoteValues: {\n    type: 'boolean'\n  },\n  useBigInt64: {\n    type: 'boolean'\n  },\n  proxyHost: {\n    type: 'string'\n  },\n  proxyPassword: {\n    type: 'string'\n  },\n  proxyPort: {\n    type: 'uint'\n  },\n  proxyUsername: {\n    type: 'string'\n  },\n  raw: {\n    default: false,\n    type: 'boolean'\n  },\n  readConcern: {\n    transform({ values: [value], options }) {\n      if (value instanceof ReadConcern || isRecord(value, ['level'] as const)) {\n        return ReadConcern.fromOptions({ ...options.readConcern, ...value } as any);\n      }\n      throw new MongoParseError(`ReadConcern must be an object, got ${JSON.stringify(value)}`);\n    }\n  },\n  readConcernLevel: {\n    target: 'readConcern',\n    transform({ values: [level], options }) {\n      return ReadConcern.fromOptions({\n        ...options.readConcern,\n        level: level as ReadConcernLevel\n      });\n    }\n  },\n  readPreference: {\n    default: ReadPreference.primary,\n    transform({ values: [value], options }) {\n      if (value instanceof ReadPreference) {\n        return ReadPreference.fromOptions({\n          readPreference: { ...options.readPreference, ...value },\n          ...value\n        } as any);\n      }\n      if (isRecord(value, ['mode'] as const)) {\n        const rp = ReadPreference.fromOptions({\n          readPreference: { ...options.readPreference, ...value },\n          ...value\n        } as any);\n        if (rp) return rp;\n        else throw new MongoParseError(`Cannot make read preference from ${JSON.stringify(value)}`);\n      }\n      if (typeof value === 'string') {\n        const rpOpts = {\n          hedge: options.readPreference?.hedge,\n          maxStalenessSeconds: options.readPreference?.maxStalenessSeconds\n        };\n        return new ReadPreference(\n          value as ReadPreferenceMode,\n          options.readPreference?.tags,\n          rpOpts\n        );\n      }\n      throw new MongoParseError(`Unknown ReadPreference value: ${value}`);\n    }\n  },\n  readPreferenceTags: {\n    target: 'readPreference',\n    transform({\n      values,\n      options\n    }: {\n      values: Array<string | Record<string, string>[]>;\n      options: MongoClientOptions;\n    }) {\n      const tags: Array<string | Record<string, string>> = Array.isArray(values[0])\n        ? values[0]\n        : (values as Array<string>);\n      const readPreferenceTags = [];\n      for (const tag of tags) {\n        const readPreferenceTag: TagSet = Object.create(null);\n        if (typeof tag === 'string') {\n          for (const [k, v] of entriesFromString(tag)) {\n            readPreferenceTag[k] = v;\n          }\n        }\n        if (isRecord(tag)) {\n          for (const [k, v] of Object.entries(tag)) {\n            readPreferenceTag[k] = v;\n          }\n        }\n        readPreferenceTags.push(readPreferenceTag);\n      }\n      return ReadPreference.fromOptions({\n        readPreference: options.readPreference,\n        readPreferenceTags\n      });\n    }\n  },\n  replicaSet: {\n    type: 'string'\n  },\n  retryReads: {\n    default: true,\n    type: 'boolean'\n  },\n  retryWrites: {\n    default: true,\n    type: 'boolean'\n  },\n  serializeFunctions: {\n    type: 'boolean'\n  },\n  serverMonitoringMode: {\n    default: 'auto',\n    transform({ values: [value] }) {\n      if (!Object.values(ServerMonitoringMode).includes(value as any)) {\n        throw new MongoParseError(\n          'serverMonitoringMode must be one of `auto`, `poll`, or `stream`'\n        );\n      }\n      return value;\n    }\n  },\n  serverSelectionTimeoutMS: {\n    default: 30000,\n    type: 'uint'\n  },\n  servername: {\n    type: 'string'\n  },\n  socketTimeoutMS: {\n    // TODO(NODE-6491): deprecated: 'Please use timeoutMS instead',\n    default: 0,\n    type: 'uint'\n  },\n  srvMaxHosts: {\n    type: 'uint',\n    default: 0\n  },\n  srvServiceName: {\n    type: 'string',\n    default: 'mongodb'\n  },\n  ssl: {\n    target: 'tls',\n    type: 'boolean'\n  },\n  timeoutMS: {\n    type: 'uint'\n  },\n  tls: {\n    type: 'boolean'\n  },\n  tlsAllowInvalidCertificates: {\n    target: 'rejectUnauthorized',\n    transform({ name, values: [value] }) {\n      // allowInvalidCertificates is the inverse of rejectUnauthorized\n      return !getBoolean(name, value);\n    }\n  },\n  tlsAllowInvalidHostnames: {\n    target: 'checkServerIdentity',\n    transform({ name, values: [value] }) {\n      // tlsAllowInvalidHostnames means setting the checkServerIdentity function to a noop\n      return getBoolean(name, value) ? () => undefined : undefined;\n    }\n  },\n  tlsCAFile: {\n    type: 'string'\n  },\n  tlsCRLFile: {\n    type: 'string'\n  },\n  tlsCertificateKeyFile: {\n    type: 'string'\n  },\n  tlsCertificateKeyFilePassword: {\n    target: 'passphrase',\n    type: 'any'\n  },\n  tlsInsecure: {\n    transform({ name, options, values: [value] }) {\n      const tlsInsecure = getBoolean(name, value);\n      if (tlsInsecure) {\n        options.checkServerIdentity = () => undefined;\n        options.rejectUnauthorized = false;\n      } else {\n        options.checkServerIdentity = options.tlsAllowInvalidHostnames\n          ? () => undefined\n          : undefined;\n        options.rejectUnauthorized = options.tlsAllowInvalidCertificates ? false : true;\n      }\n      return tlsInsecure;\n    }\n  },\n  w: {\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      return WriteConcern.fromOptions({ writeConcern: { ...options.writeConcern, w: value as W } });\n    }\n  },\n  waitQueueTimeoutMS: {\n    // TODO(NODE-6491): deprecated: 'Please use timeoutMS instead',\n    default: 0,\n    type: 'uint'\n  },\n  writeConcern: {\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      if (isRecord(value) || value instanceof WriteConcern) {\n        return WriteConcern.fromOptions({\n          writeConcern: {\n            ...options.writeConcern,\n            ...value\n          }\n        });\n      } else if (value === 'majority' || typeof value === 'number') {\n        return WriteConcern.fromOptions({\n          writeConcern: {\n            ...options.writeConcern,\n            w: value\n          }\n        });\n      }\n\n      throw new MongoParseError(`Invalid WriteConcern cannot parse: ${JSON.stringify(value)}`);\n    }\n  },\n  wtimeout: {\n    deprecated: 'Please use wtimeoutMS instead',\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          wtimeout: getUIntFromOptions('wtimeout', value)\n        }\n      });\n      if (wc) return wc;\n      throw new MongoParseError(`Cannot make WriteConcern from wtimeout`);\n    }\n  } as OptionDescriptor,\n  wtimeoutMS: {\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          wtimeoutMS: getUIntFromOptions('wtimeoutMS', value)\n        }\n      });\n      if (wc) return wc;\n      throw new MongoParseError(`Cannot make WriteConcern from wtimeout`);\n    }\n  },\n  zlibCompressionLevel: {\n    default: 0,\n    type: 'int'\n  },\n  mongodbLogPath: {\n    transform({ values: [value] }) {\n      if (\n        !(\n          (typeof value === 'string' && ['stderr', 'stdout'].includes(value)) ||\n          (value &&\n            typeof value === 'object' &&\n            'write' in value &&\n            typeof value.write === 'function')\n        )\n      ) {\n        throw new MongoAPIError(\n          `Option 'mongodbLogPath' must be of type 'stderr' | 'stdout' | MongoDBLogWritable`\n        );\n      }\n      return value;\n    }\n  },\n  mongodbLogComponentSeverities: {\n    transform({ values: [value] }) {\n      if (typeof value !== 'object' || !value) {\n        throw new MongoAPIError(`Option 'mongodbLogComponentSeverities' must be a non-null object`);\n      }\n      for (const [k, v] of Object.entries(value)) {\n        if (typeof v !== 'string' || typeof k !== 'string') {\n          throw new MongoAPIError(\n            `User input for option 'mongodbLogComponentSeverities' object cannot include a non-string key or value`\n          );\n        }\n        if (!Object.values(MongoLoggableComponent).some(val => val === k) && k !== 'default') {\n          throw new MongoAPIError(\n            `User input for option 'mongodbLogComponentSeverities' contains invalid key: ${k}`\n          );\n        }\n        if (!Object.values(SeverityLevel).some(val => val === v)) {\n          throw new MongoAPIError(\n            `Option 'mongodbLogComponentSeverities' does not support ${v} as a value for ${k}`\n          );\n        }\n      }\n      return value;\n    }\n  },\n  mongodbLogMaxDocumentLength: { type: 'uint' },\n  // Custom types for modifying core behavior\n  connectionType: { type: 'any' },\n  srvPoller: { type: 'any' },\n  // Accepted Node.js Options\n  allowPartialTrustChain: { type: 'any' },\n  minDHSize: { type: 'any' },\n  pskCallback: { type: 'any' },\n  secureContext: { type: 'any' },\n  enableTrace: { type: 'any' },\n  requestCert: { type: 'any' },\n  rejectUnauthorized: { type: 'any' },\n  checkServerIdentity: { type: 'any' },\n  ALPNProtocols: { type: 'any' },\n  SNICallback: { type: 'any' },\n  session: { type: 'any' },\n  requestOCSP: { type: 'any' },\n  localAddress: { type: 'any' },\n  localPort: { type: 'any' },\n  hints: { type: 'any' },\n  lookup: { type: 'any' },\n  ca: { type: 'any' },\n  cert: { type: 'any' },\n  ciphers: { type: 'any' },\n  crl: { type: 'any' },\n  ecdhCurve: { type: 'any' },\n  key: { type: 'any' },\n  passphrase: { type: 'any' },\n  pfx: { type: 'any' },\n  secureProtocol: { type: 'any' },\n  index: { type: 'any' },\n  // Legacy options from v3 era\n  useNewUrlParser: {\n    type: 'boolean',\n    deprecated:\n      'useNewUrlParser has no effect since Node.js Driver version 4.0.0 and will be removed in the next major version'\n  } as OptionDescriptor,\n  useUnifiedTopology: {\n    type: 'boolean',\n    deprecated:\n      'useUnifiedTopology has no effect since Node.js Driver version 4.0.0 and will be removed in the next major version'\n  } as OptionDescriptor,\n  __skipPingOnConnect: { type: 'boolean' }\n} as Record<keyof MongoClientOptions, OptionDescriptor>;\n\nexport const DEFAULT_OPTIONS = new CaseInsensitiveMap(\n  Object.entries(OPTIONS)\n    .filter(([, descriptor]) => descriptor.default != null)\n    .map(([k, d]) => [k, d.default])\n);\n", "import type { Binary, BSONSerializeOptions } from '../../bson';\nimport * as BSON from '../../bson';\nimport { aws4 } from '../../deps';\nimport {\n  MongoCompatibilityError,\n  MongoMissingCredentialsError,\n  MongoRuntimeError\n} from '../../error';\nimport { ByteUtils, maxWireVersion, ns, randomBytes } from '../../utils';\nimport { type AuthContext, AuthProvider } from './auth_provider';\nimport {\n  type AWSCredentialProvider,\n  AWSSDKCredentialProvider,\n  type AWSTempCredentials,\n  AWSTemporaryCredentialProvider,\n  LegacyAWSTemporaryCredentialProvider\n} from './aws_temporary_credentials';\nimport { MongoCredentials } from './mongo_credentials';\nimport { AuthMechanism } from './providers';\n\nconst ASCII_N = 110;\nconst bsonOptions: BSONSerializeOptions = {\n  useBigInt64: false,\n  promoteLongs: true,\n  promoteValues: true,\n  promoteBuffers: false,\n  bsonRegExp: false\n};\n\ninterface AWSSaslContinuePayload {\n  a: string;\n  d: string;\n  t?: string;\n}\n\nexport class MongoDBAWS extends AuthProvider {\n  private credentialFetcher: AWSTemporaryCredentialProvider;\n  private credentialProvider?: AWSCredentialProvider;\n\n  constructor(credentialProvider?: AWSCredentialProvider) {\n    super();\n\n    this.credentialProvider = credentialProvider;\n    this.credentialFetcher = AWSTemporaryCredentialProvider.isAWSSDKInstalled\n      ? new AWSSDKCredentialProvider(credentialProvider)\n      : new LegacyAWSTemporaryCredentialProvider();\n  }\n\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection } = authContext;\n    if (!authContext.credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n\n    if ('kModuleError' in aws4) {\n      throw aws4['kModuleError'];\n    }\n    const { sign } = aws4;\n\n    if (maxWireVersion(connection) < 9) {\n      throw new MongoCompatibilityError(\n        'MONGODB-AWS authentication requires MongoDB version 4.4 or later'\n      );\n    }\n\n    if (!authContext.credentials.username) {\n      authContext.credentials = await makeTempCredentials(\n        authContext.credentials,\n        this.credentialFetcher\n      );\n    }\n\n    const { credentials } = authContext;\n\n    const accessKeyId = credentials.username;\n    const secretAccessKey = credentials.password;\n    // Allow the user to specify an AWS session token for authentication with temporary credentials.\n    const sessionToken = credentials.mechanismProperties.AWS_SESSION_TOKEN;\n\n    // If all three defined, include sessionToken, else include username and pass, else no credentials\n    const awsCredentials =\n      accessKeyId && secretAccessKey && sessionToken\n        ? { accessKeyId, secretAccessKey, sessionToken }\n        : accessKeyId && secretAccessKey\n          ? { accessKeyId, secretAccessKey }\n          : undefined;\n\n    const db = credentials.source;\n    const nonce = await randomBytes(32);\n\n    // All messages between MongoDB clients and servers are sent as BSON objects\n    // in the payload field of saslStart and saslContinue.\n    const saslStart = {\n      saslStart: 1,\n      mechanism: 'MONGODB-AWS',\n      payload: BSON.serialize({ r: nonce, p: ASCII_N }, bsonOptions)\n    };\n\n    const saslStartResponse = await connection.command(ns(`${db}.$cmd`), saslStart, undefined);\n\n    const serverResponse = BSON.deserialize(saslStartResponse.payload.buffer, bsonOptions) as {\n      s: Binary;\n      h: string;\n    };\n    const host = serverResponse.h;\n    const serverNonce = serverResponse.s.buffer;\n    if (serverNonce.length !== 64) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError(`Invalid server nonce length ${serverNonce.length}, expected 64`);\n    }\n\n    if (!ByteUtils.equals(serverNonce.subarray(0, nonce.byteLength), nonce)) {\n      // throw because the serverNonce's leading 32 bytes must equal the client nonce's 32 bytes\n      // https://github.com/mongodb/specifications/blob/master/source/auth/auth.md#conversation-5\n\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError('Server nonce does not begin with client nonce');\n    }\n\n    if (host.length < 1 || host.length > 255 || host.indexOf('..') !== -1) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError(`Server returned an invalid host: \"${host}\"`);\n    }\n\n    const body = 'Action=GetCallerIdentity&Version=2011-06-15';\n    const options = sign(\n      {\n        method: 'POST',\n        host,\n        region: deriveRegion(serverResponse.h),\n        service: 'sts',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Length': body.length,\n          'X-MongoDB-Server-Nonce': ByteUtils.toBase64(serverNonce),\n          'X-MongoDB-GS2-CB-Flag': 'n'\n        },\n        path: '/',\n        body\n      },\n      awsCredentials\n    );\n\n    const payload: AWSSaslContinuePayload = {\n      a: options.headers.Authorization,\n      d: options.headers['X-Amz-Date']\n    };\n\n    if (sessionToken) {\n      payload.t = sessionToken;\n    }\n\n    const saslContinue = {\n      saslContinue: 1,\n      conversationId: saslStartResponse.conversationId,\n      payload: BSON.serialize(payload, bsonOptions)\n    };\n\n    await connection.command(ns(`${db}.$cmd`), saslContinue, undefined);\n  }\n}\n\nasync function makeTempCredentials(\n  credentials: MongoCredentials,\n  awsCredentialFetcher: AWSTemporaryCredentialProvider\n): Promise<MongoCredentials> {\n  function makeMongoCredentialsFromAWSTemp(creds: AWSTempCredentials) {\n    // The AWS session token (creds.Token) may or may not be set.\n    if (!creds.AccessKeyId || !creds.SecretAccessKey) {\n      throw new MongoMissingCredentialsError('Could not obtain temporary MONGODB-AWS credentials');\n    }\n\n    return new MongoCredentials({\n      username: creds.AccessKeyId,\n      password: creds.SecretAccessKey,\n      source: credentials.source,\n      mechanism: AuthMechanism.MONGODB_AWS,\n      mechanismProperties: {\n        AWS_SESSION_TOKEN: creds.Token\n      }\n    });\n  }\n  const temporaryCredentials = await awsCredentialFetcher.getCredentials();\n\n  return makeMongoCredentialsFromAWSTemp(temporaryCredentials);\n}\n\nfunction deriveRegion(host: string) {\n  const parts = host.split('.');\n  if (parts.length === 1 || parts[1] === 'amazonaws') {\n    return 'us-east-1';\n  }\n\n  return parts[1];\n}\n", "import { Binary, BSON, type Document } from '../../../bson';\nimport { type MongoCredentials } from '../mongo_credentials';\nimport { AuthMechanism } from '../providers';\n\n/** @internal */\nexport interface OIDCCommand {\n  saslStart?: number;\n  saslContinue?: number;\n  conversationId?: number;\n  mechanism?: string;\n  autoAuthorize?: number;\n  db?: string;\n  payload: Binary;\n}\n\n/**\n * Generate the finishing command document for authentication. Will be a\n * saslStart or saslContinue depending on the presence of a conversation id.\n */\nexport function finishCommandDocument(token: string, conversationId?: number): OIDCCommand {\n  if (conversationId != null) {\n    return {\n      saslContinue: 1,\n      conversationId: conversationId,\n      payload: new Binary(BSON.serialize({ jwt: token }))\n    };\n  }\n  // saslContinue requires a conversationId in the command to be valid so in this\n  // case the server allows \"step two\" to actually be a saslStart with the token\n  // as the jwt since the use of the cached value has no correlating conversating\n  // on the particular connection.\n  return {\n    saslStart: 1,\n    mechanism: AuthMechanism.MONGODB_OIDC,\n    payload: new Binary(BSON.serialize({ jwt: token }))\n  };\n}\n\n/**\n * Generate the saslStart command document.\n */\nexport function startCommandDocument(credentials: MongoCredentials): OIDCCommand {\n  const payload: Document = {};\n  if (credentials.username) {\n    payload.n = credentials.username;\n  }\n  return {\n    saslStart: 1,\n    autoAuthorize: 1,\n    mechanism: AuthMechanism.MONGODB_OIDC,\n    payload: new Binary(BSON.serialize(payload))\n  };\n}\n", "import { setTimeout } from 'timers/promises';\n\nimport { type Document } from '../../../bson';\nimport { ns } from '../../../utils';\nimport type { Connection } from '../../connection';\nimport type { MongoCredentials } from '../mongo_credentials';\nimport type { Workflow } from '../mongodb_oidc';\nimport { finishCommandDocument } from './command_builders';\nimport { type TokenCache } from './token_cache';\n\n/** The time to throttle callback calls. */\nconst THROTTLE_MS = 100;\n\n/**\n * The access token format.\n * @internal\n */\nexport interface AccessToken {\n  access_token: string;\n  expires_in?: number;\n}\n\n/** @internal */\nexport type OIDCTokenFunction = (credentials: MongoCredentials) => Promise<AccessToken>;\n\n/**\n * Common behaviour for OIDC machine workflows.\n * @internal\n */\nexport abstract class MachineWorkflow implements Workflow {\n  cache: TokenCache;\n  callback: OIDCTokenFunction;\n  lastExecutionTime: number;\n\n  /**\n   * Instantiate the machine workflow.\n   */\n  constructor(cache: TokenCache) {\n    this.cache = cache;\n    this.callback = this.withLock(this.getToken.bind(this));\n    this.lastExecutionTime = Date.now() - THROTTLE_MS;\n  }\n\n  /**\n   * Execute the workflow. Gets the token from the subclass implementation.\n   */\n  async execute(connection: Connection, credentials: MongoCredentials): Promise<void> {\n    const token = await this.getTokenFromCacheOrEnv(connection, credentials);\n    const command = finishCommandDocument(token);\n    await connection.command(ns(credentials.source), command, undefined);\n  }\n\n  /**\n   * Reauthenticate on a machine workflow just grabs the token again since the server\n   * has said the current access token is invalid or expired.\n   */\n  async reauthenticate(connection: Connection, credentials: MongoCredentials): Promise<void> {\n    if (this.cache.hasAccessToken) {\n      // Reauthentication implies the token has expired.\n      if (connection.accessToken === this.cache.getAccessToken()) {\n        // If connection's access token is the same as the cache's, remove\n        // the token from the cache and connection.\n        this.cache.removeAccessToken();\n        delete connection.accessToken;\n      } else {\n        // If the connection's access token is different from the cache's, set\n        // the cache's token on the connection and do not remove from the\n        // cache.\n        connection.accessToken = this.cache.getAccessToken();\n      }\n    }\n    await this.execute(connection, credentials);\n  }\n\n  /**\n   * Get the document to add for speculative authentication.\n   */\n  async speculativeAuth(connection: Connection, credentials: MongoCredentials): Promise<Document> {\n    // The spec states only cached access tokens can use speculative auth.\n    if (!this.cache.hasAccessToken) {\n      return {};\n    }\n    const token = await this.getTokenFromCacheOrEnv(connection, credentials);\n    const document = finishCommandDocument(token);\n    document.db = credentials.source;\n    return { speculativeAuthenticate: document };\n  }\n\n  /**\n   * Get the token from the cache or environment.\n   */\n  private async getTokenFromCacheOrEnv(\n    connection: Connection,\n    credentials: MongoCredentials\n  ): Promise<string> {\n    if (this.cache.hasAccessToken) {\n      const token = this.cache.getAccessToken();\n      // New connections won't have an access token so ensure we set here.\n      if (!connection.accessToken) {\n        connection.accessToken = token;\n      }\n      return token;\n    } else {\n      const token = await this.callback(credentials);\n      this.cache.put({ accessToken: token.access_token, expiresInSeconds: token.expires_in });\n      // Put the access token on the connection as well.\n      connection.accessToken = token.access_token;\n      return token.access_token;\n    }\n  }\n\n  /**\n   * Ensure the callback is only executed one at a time, and throttled to\n   * only once per 100ms.\n   */\n  private withLock(callback: OIDCTokenFunction): OIDCTokenFunction {\n    let lock: Promise<any> = Promise.resolve();\n    return async (credentials: MongoCredentials): Promise<AccessToken> => {\n      // We do this to ensure that we would never return the result of the\n      // previous lock, only the current callback's value would get returned.\n      await lock;\n      lock = lock\n\n        .catch(() => null)\n\n        .then(async () => {\n          const difference = Date.now() - this.lastExecutionTime;\n          if (difference <= THROTTLE_MS) {\n            await setTimeout(THROTTLE_MS - difference);\n          }\n          this.lastExecutionTime = Date.now();\n          return await callback(credentials);\n        });\n      return await lock;\n    };\n  }\n\n  /**\n   * Get the token from the environment or endpoint.\n   */\n  abstract getToken(credentials: MongoCredentials): Promise<AccessToken>;\n}\n", "import { addAzureParams, AZURE_BASE_URL } from '../../../client-side-encryption/providers/azure';\nimport { MongoAzureError } from '../../../error';\nimport { get } from '../../../utils';\nimport type { MongoCredentials } from '../mongo_credentials';\nimport { type AccessToken, MachineWorkflow } from './machine_workflow';\nimport { type TokenCache } from './token_cache';\n\n/** Azure request headers. */\nconst AZURE_HEADERS = Object.freeze({ Metadata: 'true', Accept: 'application/json' });\n\n/** Invalid endpoint result error. */\nconst ENDPOINT_RESULT_ERROR =\n  'Azure endpoint did not return a value with only access_token and expires_in properties';\n\n/** Error for when the token audience is missing in the environment. */\nconst TOKEN_RESOURCE_MISSING_ERROR =\n  'TOKEN_RESOURCE must be set in the auth mechanism properties when ENVIRONMENT is azure.';\n\n/**\n * Device workflow implementation for Azure.\n *\n * @internal\n */\nexport class AzureMachineWorkflow extends MachineWorkflow {\n  /**\n   * Instantiate the machine workflow.\n   */\n  constructor(cache: TokenCache) {\n    super(cache);\n  }\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(credentials?: MongoCredentials): Promise<AccessToken> {\n    const tokenAudience = credentials?.mechanismProperties.TOKEN_RESOURCE;\n    const username = credentials?.username;\n    if (!tokenAudience) {\n      throw new MongoAzureError(TOKEN_RESOURCE_MISSING_ERROR);\n    }\n    const response = await getAzureTokenData(tokenAudience, username);\n    if (!isEndpointResultValid(response)) {\n      throw new MongoAzureError(ENDPOINT_RESULT_ERROR);\n    }\n    return response;\n  }\n}\n\n/**\n * Hit the Azure endpoint to get the token data.\n */\nasync function getAzureTokenData(tokenAudience: string, username?: string): Promise<AccessToken> {\n  const url = new URL(AZURE_BASE_URL);\n  addAzureParams(url, tokenAudience, username);\n  const response = await get(url, {\n    headers: AZURE_HEADERS\n  });\n  if (response.status !== 200) {\n    throw new MongoAzureError(\n      `Status code ${response.status} returned from the Azure endpoint. Response body: ${response.body}`\n    );\n  }\n  const result = JSON.parse(response.body);\n  return {\n    access_token: result.access_token,\n    expires_in: Number(result.expires_in)\n  };\n}\n\n/**\n * Determines if a result returned from the endpoint is valid.\n * This means the result is not nullish, contains the access_token required field\n * and the expires_in required field.\n */\nfunction isEndpointResultValid(\n  token: unknown\n): token is { access_token: unknown; expires_in: unknown } {\n  if (token == null || typeof token !== 'object') return false;\n  return (\n    'access_token' in token &&\n    typeof token.access_token === 'string' &&\n    'expires_in' in token &&\n    typeof token.expires_in === 'number'\n  );\n}\n", "import { MongoGCPError } from '../../../error';\nimport { get } from '../../../utils';\nimport { type MongoCredentials } from '../mongo_credentials';\nimport { type AccessToken, MachineWorkflow } from './machine_workflow';\nimport { type TokenCache } from './token_cache';\n\n/** GCP base URL. */\nconst GCP_BASE_URL =\n  'http://metadata/computeMetadata/v1/instance/service-accounts/default/identity';\n\n/** GCP request headers. */\nconst GCP_HEADERS = Object.freeze({ 'Metadata-Flavor': 'Google' });\n\n/** Error for when the token audience is missing in the environment. */\nconst TOKEN_RESOURCE_MISSING_ERROR =\n  'TOKEN_RESOURCE must be set in the auth mechanism properties when ENVIRONMENT is gcp.';\n\nexport class GCPMachineWorkflow extends MachineWorkflow {\n  /**\n   * Instantiate the machine workflow.\n   */\n  constructor(cache: TokenCache) {\n    super(cache);\n  }\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(credentials?: MongoCredentials): Promise<AccessToken> {\n    const tokenAudience = credentials?.mechanismProperties.TOKEN_RESOURCE;\n    if (!tokenAudience) {\n      throw new MongoGCPError(TOKEN_RESOURCE_MISSING_ERROR);\n    }\n    return await getGcpTokenData(tokenAudience);\n  }\n}\n\n/**\n * Hit the GCP endpoint to get the token data.\n */\nasync function getGcpTokenData(tokenAudience: string): Promise<AccessToken> {\n  const url = new URL(GCP_BASE_URL);\n  url.searchParams.append('audience', tokenAudience);\n  const response = await get(url, {\n    headers: GCP_HEADERS\n  });\n  if (response.status !== 200) {\n    throw new MongoGCPError(\n      `Status code ${response.status} returned from the GCP endpoint. Response body: ${response.body}`\n    );\n  }\n  return { access_token: response.body };\n}\n", "import { readFile } from 'fs/promises';\n\nimport { type AccessToken, MachineWorkflow } from './machine_workflow';\nimport { type TokenCache } from './token_cache';\n\n/** The fallback file name */\nconst FALLBACK_FILENAME = '/var/run/secrets/kubernetes.io/serviceaccount/token';\n\n/** The azure environment variable for the file name. */\nconst AZURE_FILENAME = 'AZURE_FEDERATED_TOKEN_FILE';\n\n/** The AWS environment variable for the file name. */\nconst AWS_FILENAME = 'AWS_WEB_IDENTITY_TOKEN_FILE';\n\nexport class K8SMachineWorkflow extends MachineWorkflow {\n  /**\n   * Instantiate the machine workflow.\n   */\n  constructor(cache: TokenCache) {\n    super(cache);\n  }\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(): Promise<AccessToken> {\n    let filename: string;\n    if (process.env[AZURE_FILENAME]) {\n      filename = process.env[AZURE_FILENAME];\n    } else if (process.env[AWS_FILENAME]) {\n      filename = process.env[AWS_FILENAME];\n    } else {\n      filename = FALLBACK_FILENAME;\n    }\n    const token = await readFile(filename, 'utf8');\n    return { access_token: token };\n  }\n}\n", "import { MongoDriverError } from '../../../error';\nimport type { IdPInfo, OIDCResponse } from '../mongodb_oidc';\n\nclass MongoOIDCError extends MongoDriverError {}\n\n/** @internal */\nexport class TokenCache {\n  private accessToken?: string;\n  private refreshToken?: string;\n  private idpInfo?: IdPInfo;\n  private expiresInSeconds?: number;\n\n  get hasAccessToken(): boolean {\n    return !!this.accessToken;\n  }\n\n  get hasRefreshToken(): boolean {\n    return !!this.refreshToken;\n  }\n\n  get hasIdpInfo(): boolean {\n    return !!this.idpInfo;\n  }\n\n  getAccessToken(): string {\n    if (!this.accessToken) {\n      throw new MongoOIDCError('Attempted to get an access token when none exists.');\n    }\n    return this.accessToken;\n  }\n\n  getRefreshToken(): string {\n    if (!this.refreshToken) {\n      throw new MongoOIDCError('Attempted to get a refresh token when none exists.');\n    }\n    return this.refreshToken;\n  }\n\n  getIdpInfo(): IdPInfo {\n    if (!this.idpInfo) {\n      throw new MongoOIDCError('Attempted to get IDP information when none exists.');\n    }\n    return this.idpInfo;\n  }\n\n  put(response: OIDCResponse, idpInfo?: IdPInfo) {\n    this.accessToken = response.accessToken;\n    this.refreshToken = response.refreshToken;\n    this.expiresInSeconds = response.expiresInSeconds;\n    if (idpInfo) {\n      this.idpInfo = idpInfo;\n    }\n  }\n\n  removeAccessToken() {\n    this.accessToken = undefined;\n  }\n\n  removeRefreshToken() {\n    this.refreshToken = undefined;\n  }\n}\n", "import * as fs from 'fs';\n\nimport { MongoAWSError } from '../../../error';\nimport { type AccessToken, MachineWorkflow } from './machine_workflow';\nimport { type TokenCache } from './token_cache';\n\n/** Error for when the token is missing in the environment. */\nconst TOKEN_MISSING_ERROR = 'OIDC_TOKEN_FILE must be set in the environment.';\n\n/**\n * Device workflow implementation for AWS.\n *\n * @internal\n */\nexport class TokenMachineWorkflow extends MachineWorkflow {\n  /**\n   * Instantiate the machine workflow.\n   */\n  constructor(cache: TokenCache) {\n    super(cache);\n  }\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(): Promise<AccessToken> {\n    const tokenFile = process.env.OIDC_TOKEN_FILE;\n    if (!tokenFile) {\n      throw new MongoAWSError(TOKEN_MISSING_ERROR);\n    }\n    const token = await fs.promises.readFile(tokenFile, 'utf8');\n    return { access_token: token };\n  }\n}\n", "import type { Document } from '../../bson';\nimport { MongoInvalidArgumentError, MongoMissingCredentialsError } from '../../error';\nimport type { HandshakeDocument } from '../connect';\nimport type { Connection } from '../connection';\nimport { type AuthContext, AuthProvider } from './auth_provider';\nimport type { MongoCredentials } from './mongo_credentials';\nimport { AzureMachineWorkflow } from './mongodb_oidc/azure_machine_workflow';\nimport { GCPMachineWorkflow } from './mongodb_oidc/gcp_machine_workflow';\nimport { K8SMachineWorkflow } from './mongodb_oidc/k8s_machine_workflow';\nimport { TokenCache } from './mongodb_oidc/token_cache';\nimport { TokenMachineWorkflow } from './mongodb_oidc/token_machine_workflow';\n\n/** Error when credentials are missing. */\nconst MISSING_CREDENTIALS_ERROR = 'AuthContext must provide credentials.';\n\n/**\n * The information returned by the server on the IDP server.\n * @public\n */\nexport interface IdPInfo {\n  /**\n   * A URL which describes the Authentication Server. This identifier should\n   * be the iss of provided access tokens, and be viable for RFC8414 metadata\n   * discovery and RFC9207 identification.\n   */\n  issuer: string;\n  /** A unique client ID for this OIDC client. */\n  clientId: string;\n  /** A list of additional scopes to request from IdP. */\n  requestScopes?: string[];\n}\n\n/**\n * The response from the IdP server with the access token and\n * optional expiration time and refresh token.\n * @public\n */\nexport interface IdPServerResponse {\n  /** The OIDC access token. */\n  accessToken: string;\n  /** The time when the access token expires. For future use. */\n  expiresInSeconds?: number;\n  /** The refresh token, if applicable, to be used by the callback to request a new token from the issuer. */\n  refreshToken?: string;\n}\n\n/**\n * The response required to be returned from the machine or\n * human callback workflows' callback.\n * @public\n */\nexport interface OIDCResponse {\n  /** The OIDC access token. */\n  accessToken: string;\n  /** The time when the access token expires. For future use. */\n  expiresInSeconds?: number;\n  /** The refresh token, if applicable, to be used by the callback to request a new token from the issuer. */\n  refreshToken?: string;\n}\n\n/**\n * The parameters that the driver provides to the user supplied\n * human or machine callback.\n *\n * The version number is used to communicate callback API changes that are not breaking but that\n * users may want to know about and review their implementation. Users may wish to check the version\n * number and throw an error if their expected version number and the one provided do not match.\n * @public\n */\nexport interface OIDCCallbackParams {\n  /** Optional username. */\n  username?: string;\n  /** The context in which to timeout the OIDC callback. */\n  timeoutContext: AbortSignal;\n  /** The current OIDC API version. */\n  version: 1;\n  /** The IdP information returned from the server. */\n  idpInfo?: IdPInfo;\n  /** The refresh token, if applicable, to be used by the callback to request a new token from the issuer. */\n  refreshToken?: string;\n}\n\n/**\n * The signature of the human or machine callback functions.\n * @public\n */\nexport type OIDCCallbackFunction = (params: OIDCCallbackParams) => Promise<OIDCResponse>;\n\n/** The current version of OIDC implementation. */\nexport const OIDC_VERSION = 1;\n\ntype EnvironmentName = 'test' | 'azure' | 'gcp' | 'k8s' | undefined;\n\n/** @internal */\nexport interface Workflow {\n  /**\n   * All device workflows must implement this method in order to get the access\n   * token and then call authenticate with it.\n   */\n  execute(\n    connection: Connection,\n    credentials: MongoCredentials,\n    response?: Document\n  ): Promise<void>;\n\n  /**\n   * Each workflow should specify the correct custom behaviour for reauthentication.\n   */\n  reauthenticate(connection: Connection, credentials: MongoCredentials): Promise<void>;\n\n  /**\n   * Get the document to add for speculative authentication.\n   */\n  speculativeAuth(connection: Connection, credentials: MongoCredentials): Promise<Document>;\n}\n\n/** @internal */\nexport const OIDC_WORKFLOWS: Map<EnvironmentName, () => Workflow> = new Map();\nOIDC_WORKFLOWS.set('test', () => new TokenMachineWorkflow(new TokenCache()));\nOIDC_WORKFLOWS.set('azure', () => new AzureMachineWorkflow(new TokenCache()));\nOIDC_WORKFLOWS.set('gcp', () => new GCPMachineWorkflow(new TokenCache()));\nOIDC_WORKFLOWS.set('k8s', () => new K8SMachineWorkflow(new TokenCache()));\n\n/**\n * OIDC auth provider.\n */\nexport class MongoDBOIDC extends AuthProvider {\n  workflow: Workflow;\n\n  /**\n   * Instantiate the auth provider.\n   */\n  constructor(workflow?: Workflow) {\n    super();\n    if (!workflow) {\n      throw new MongoInvalidArgumentError('No workflow provided to the OIDC auth provider.');\n    }\n    this.workflow = workflow;\n  }\n\n  /**\n   * Authenticate using OIDC\n   */\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection, reauthenticating, response } = authContext;\n    if (response?.speculativeAuthenticate?.done && !reauthenticating) {\n      return;\n    }\n    const credentials = getCredentials(authContext);\n    if (reauthenticating) {\n      await this.workflow.reauthenticate(connection, credentials);\n    } else {\n      await this.workflow.execute(connection, credentials, response);\n    }\n  }\n\n  /**\n   * Add the speculative auth for the initial handshake.\n   */\n  override async prepare(\n    handshakeDoc: HandshakeDocument,\n    authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    const { connection } = authContext;\n    const credentials = getCredentials(authContext);\n    const result = await this.workflow.speculativeAuth(connection, credentials);\n    return { ...handshakeDoc, ...result };\n  }\n}\n\n/**\n * Get credentials from the auth context, throwing if they do not exist.\n */\nfunction getCredentials(authContext: AuthContext): MongoCredentials {\n  const { credentials } = authContext;\n  if (!credentials) {\n    throw new MongoMissingCredentialsError(MISSING_CREDENTIALS_ERROR);\n  }\n  return credentials;\n}\n", "import { setTimeout } from 'timers/promises';\n\nimport { type Document } from '../../../bson';\nimport { MongoMissingCredentialsError } from '../../../error';\nimport { ns } from '../../../utils';\nimport type { Connection } from '../../connection';\nimport type { MongoCredentials } from '../mongo_credentials';\nimport {\n  type OIDCCallbackFunction,\n  type OIDCCallbackParams,\n  type OIDCResponse,\n  type Workflow\n} from '../mongodb_oidc';\nimport { finishCommandDocument, startCommandDocument } from './command_builders';\nimport { type TokenCache } from './token_cache';\n\n/** 5 minutes in milliseconds */\nexport const HUMAN_TIMEOUT_MS = 300000;\n/** 1 minute in milliseconds */\nexport const AUTOMATED_TIMEOUT_MS = 60000;\n\n/** Properties allowed on results of callbacks. */\nconst RESULT_PROPERTIES = ['accessToken', 'expiresInSeconds', 'refreshToken'];\n\n/** Error message when the callback result is invalid. */\nconst CALLBACK_RESULT_ERROR =\n  'User provided OIDC callbacks must return a valid object with an accessToken.';\n\n/** The time to throttle callback calls. */\nconst THROTTLE_MS = 100;\n\n/**\n * OIDC implementation of a callback based workflow.\n * @internal\n */\nexport abstract class CallbackWorkflow implements Workflow {\n  cache: TokenCache;\n  callback: OIDCCallbackFunction;\n  lastExecutionTime: number;\n\n  /**\n   * Instantiate the callback workflow.\n   */\n  constructor(cache: TokenCache, callback: OIDCCallbackFunction) {\n    this.cache = cache;\n    this.callback = this.withLock(callback);\n    this.lastExecutionTime = Date.now() - THROTTLE_MS;\n  }\n\n  /**\n   * Get the document to add for speculative authentication. This also needs\n   * to add a db field from the credentials source.\n   */\n  async speculativeAuth(connection: Connection, credentials: MongoCredentials): Promise<Document> {\n    // Check if the Client Cache has an access token.\n    // If it does, cache the access token in the Connection Cache and send a JwtStepRequest\n    // with the cached access token in the speculative authentication SASL payload.\n    if (this.cache.hasAccessToken) {\n      const accessToken = this.cache.getAccessToken();\n      connection.accessToken = accessToken;\n      const document = finishCommandDocument(accessToken);\n      document.db = credentials.source;\n      return { speculativeAuthenticate: document };\n    }\n    return {};\n  }\n\n  /**\n   * Reauthenticate the callback workflow. For this we invalidated the access token\n   * in the cache and run the authentication steps again. No initial handshake needs\n   * to be sent.\n   */\n  async reauthenticate(connection: Connection, credentials: MongoCredentials): Promise<void> {\n    if (this.cache.hasAccessToken) {\n      // Reauthentication implies the token has expired.\n      if (connection.accessToken === this.cache.getAccessToken()) {\n        // If connection's access token is the same as the cache's, remove\n        // the token from the cache and connection.\n        this.cache.removeAccessToken();\n        delete connection.accessToken;\n      } else {\n        // If the connection's access token is different from the cache's, set\n        // the cache's token on the connection and do not remove from the\n        // cache.\n        connection.accessToken = this.cache.getAccessToken();\n      }\n    }\n    await this.execute(connection, credentials);\n  }\n\n  /**\n   * Execute the OIDC callback workflow.\n   */\n  abstract execute(\n    connection: Connection,\n    credentials: MongoCredentials,\n    response?: Document\n  ): Promise<void>;\n\n  /**\n   * Starts the callback authentication process. If there is a speculative\n   * authentication document from the initial handshake, then we will use that\n   * value to get the issuer, otherwise we will send the saslStart command.\n   */\n  protected async startAuthentication(\n    connection: Connection,\n    credentials: MongoCredentials,\n    response?: Document\n  ): Promise<Document> {\n    let result;\n    if (response?.speculativeAuthenticate) {\n      result = response.speculativeAuthenticate;\n    } else {\n      result = await connection.command(\n        ns(credentials.source),\n        startCommandDocument(credentials),\n        undefined\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Finishes the callback authentication process.\n   */\n  protected async finishAuthentication(\n    connection: Connection,\n    credentials: MongoCredentials,\n    token: string,\n    conversationId?: number\n  ): Promise<void> {\n    await connection.command(\n      ns(credentials.source),\n      finishCommandDocument(token, conversationId),\n      undefined\n    );\n  }\n\n  /**\n   * Executes the callback and validates the output.\n   */\n  protected async executeAndValidateCallback(params: OIDCCallbackParams): Promise<OIDCResponse> {\n    const result = await this.callback(params);\n    // Validate that the result returned by the callback is acceptable. If it is not\n    // we must clear the token result from the cache.\n    if (isCallbackResultInvalid(result)) {\n      throw new MongoMissingCredentialsError(CALLBACK_RESULT_ERROR);\n    }\n    return result;\n  }\n\n  /**\n   * Ensure the callback is only executed one at a time and throttles the calls\n   * to every 100ms.\n   */\n  protected withLock(callback: OIDCCallbackFunction): OIDCCallbackFunction {\n    let lock: Promise<any> = Promise.resolve();\n    return async (params: OIDCCallbackParams): Promise<OIDCResponse> => {\n      // We do this to ensure that we would never return the result of the\n      // previous lock, only the current callback's value would get returned.\n      await lock;\n      lock = lock\n\n        .catch(() => null)\n\n        .then(async () => {\n          const difference = Date.now() - this.lastExecutionTime;\n          if (difference <= THROTTLE_MS) {\n            await setTimeout(THROTTLE_MS - difference, { signal: params.timeoutContext });\n          }\n          this.lastExecutionTime = Date.now();\n          return await callback(params);\n        });\n      return await lock;\n    };\n  }\n}\n\n/**\n * Determines if a result returned from a request or refresh callback\n * function is invalid. This means the result is nullish, doesn't contain\n * the accessToken required field, and does not contain extra fields.\n */\nfunction isCallbackResultInvalid(tokenResult: unknown): boolean {\n  if (tokenResult == null || typeof tokenResult !== 'object') return true;\n  if (!('accessToken' in tokenResult)) return true;\n  return !Object.getOwnPropertyNames(tokenResult).every(prop => RESULT_PROPERTIES.includes(prop));\n}\n", "import { MONGODB_ERROR_CODES, MongoError, MongoOIDCError } from '../../../error';\nimport { Timeout, TimeoutError } from '../../../timeout';\nimport { type Connection } from '../../connection';\nimport { type MongoCredentials } from '../mongo_credentials';\nimport {\n  OIDC_VERSION,\n  type OIDCCallbackFunction,\n  type OIDCCallbackParams,\n  type OIDCResponse\n} from '../mongodb_oidc';\nimport { AUTOMATED_TIMEOUT_MS, CallbackWorkflow } from './callback_workflow';\nimport { type TokenCache } from './token_cache';\n\n/**\n * Class implementing behaviour for the non human callback workflow.\n * @internal\n */\nexport class AutomatedCallbackWorkflow extends CallbackWorkflow {\n  /**\n   * Instantiate the human callback workflow.\n   */\n  constructor(cache: TokenCache, callback: OIDCCallbackFunction) {\n    super(cache, callback);\n  }\n\n  /**\n   * Execute the OIDC callback workflow.\n   */\n  async execute(connection: Connection, credentials: MongoCredentials): Promise<void> {\n    // If there is a cached access token, try to authenticate with it. If\n    // authentication fails with an Authentication error (18),\n    // invalidate the access token, fetch a new access token, and try\n    // to authenticate again.\n    // If the server fails for any other reason, do not clear the cache.\n    if (this.cache.hasAccessToken) {\n      const token = this.cache.getAccessToken();\n      try {\n        return await this.finishAuthentication(connection, credentials, token);\n      } catch (error) {\n        if (\n          error instanceof MongoError &&\n          error.code === MONGODB_ERROR_CODES.AuthenticationFailed\n        ) {\n          this.cache.removeAccessToken();\n          return await this.execute(connection, credentials);\n        } else {\n          throw error;\n        }\n      }\n    }\n    const response = await this.fetchAccessToken(credentials);\n    this.cache.put(response);\n    connection.accessToken = response.accessToken;\n    await this.finishAuthentication(connection, credentials, response.accessToken);\n  }\n\n  /**\n   * Fetches the access token using the callback.\n   */\n  protected async fetchAccessToken(credentials: MongoCredentials): Promise<OIDCResponse> {\n    const controller = new AbortController();\n    const params: OIDCCallbackParams = {\n      timeoutContext: controller.signal,\n      version: OIDC_VERSION\n    };\n    if (credentials.username) {\n      params.username = credentials.username;\n    }\n    const timeout = Timeout.expires(AUTOMATED_TIMEOUT_MS);\n    try {\n      return await Promise.race([this.executeAndValidateCallback(params), timeout]);\n    } catch (error) {\n      if (TimeoutError.is(error)) {\n        controller.abort();\n        throw new MongoOIDCError(`OIDC callback timed out after ${AUTOMATED_TIMEOUT_MS}ms.`);\n      }\n      throw error;\n    } finally {\n      timeout.clear();\n    }\n  }\n}\n", "import { BSON } from '../../../bson';\nimport { MONGODB_ERROR_CODES, MongoError, MongoOIDCError } from '../../../error';\nimport { Timeout, TimeoutError } from '../../../timeout';\nimport { type Connection } from '../../connection';\nimport { type MongoCredentials } from '../mongo_credentials';\nimport {\n  type IdPInfo,\n  OIDC_VERSION,\n  type OIDCCallbackFunction,\n  type OIDCCallbackParams,\n  type OIDCResponse\n} from '../mongodb_oidc';\nimport { CallbackWorkflow, HUMAN_TIMEOUT_MS } from './callback_workflow';\nimport { type TokenCache } from './token_cache';\n\n/**\n * Class implementing behaviour for the non human callback workflow.\n * @internal\n */\nexport class HumanCallbackWorkflow extends CallbackWorkflow {\n  /**\n   * Instantiate the human callback workflow.\n   */\n  constructor(cache: TokenCache, callback: OIDCCallbackFunction) {\n    super(cache, callback);\n  }\n\n  /**\n   * Execute the OIDC human callback workflow.\n   */\n  async execute(connection: Connection, credentials: MongoCredentials): Promise<void> {\n    // Check if the Client Cache has an access token.\n    // If it does, cache the access token in the Connection Cache and perform a One-Step SASL conversation\n    // using the access token. If the server returns an Authentication error (18),\n    // invalidate the access token token from the Client Cache, clear the Connection Cache,\n    // and restart the authentication flow. Raise any other errors to the user. On success, exit the algorithm.\n    if (this.cache.hasAccessToken) {\n      const token = this.cache.getAccessToken();\n      connection.accessToken = token;\n      try {\n        return await this.finishAuthentication(connection, credentials, token);\n      } catch (error) {\n        if (\n          error instanceof MongoError &&\n          error.code === MONGODB_ERROR_CODES.AuthenticationFailed\n        ) {\n          this.cache.removeAccessToken();\n          delete connection.accessToken;\n          return await this.execute(connection, credentials);\n        } else {\n          throw error;\n        }\n      }\n    }\n    // Check if the Client Cache has a refresh token.\n    // If it does, call the OIDC Human Callback with the cached refresh token and IdpInfo to get a\n    // new access token. Cache the new access token in the Client Cache and Connection Cache.\n    // Perform a One-Step SASL conversation using the new access token. If the the server returns\n    // an Authentication error (18), clear the refresh token, invalidate the access token from the\n    // Client Cache, clear the Connection Cache, and restart the authentication flow. Raise any other\n    // errors to the user. On success, exit the algorithm.\n    if (this.cache.hasRefreshToken) {\n      const refreshToken = this.cache.getRefreshToken();\n      const result = await this.fetchAccessToken(\n        this.cache.getIdpInfo(),\n        credentials,\n        refreshToken\n      );\n      this.cache.put(result);\n      connection.accessToken = result.accessToken;\n      try {\n        return await this.finishAuthentication(connection, credentials, result.accessToken);\n      } catch (error) {\n        if (\n          error instanceof MongoError &&\n          error.code === MONGODB_ERROR_CODES.AuthenticationFailed\n        ) {\n          this.cache.removeRefreshToken();\n          delete connection.accessToken;\n          return await this.execute(connection, credentials);\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    // Start a new Two-Step SASL conversation.\n    // Run a PrincipalStepRequest to get the IdpInfo.\n    // Call the OIDC Human Callback with the new IdpInfo to get a new access token and optional refresh\n    // token. Drivers MUST NOT pass a cached refresh token to the callback when performing\n    // a new Two-Step conversation. Cache the new IdpInfo and refresh token in the Client Cache and the\n    // new access token in the Client Cache and Connection Cache.\n    // Attempt to authenticate using a JwtStepRequest with the new access token. Raise any errors to the user.\n    const startResponse = await this.startAuthentication(connection, credentials);\n    const conversationId = startResponse.conversationId;\n    const idpInfo = BSON.deserialize(startResponse.payload.buffer) as IdPInfo;\n    const callbackResponse = await this.fetchAccessToken(idpInfo, credentials);\n    this.cache.put(callbackResponse, idpInfo);\n    connection.accessToken = callbackResponse.accessToken;\n    return await this.finishAuthentication(\n      connection,\n      credentials,\n      callbackResponse.accessToken,\n      conversationId\n    );\n  }\n\n  /**\n   * Fetches an access token using the callback.\n   */\n  private async fetchAccessToken(\n    idpInfo: IdPInfo,\n    credentials: MongoCredentials,\n    refreshToken?: string\n  ): Promise<OIDCResponse> {\n    const controller = new AbortController();\n    const params: OIDCCallbackParams = {\n      timeoutContext: controller.signal,\n      version: OIDC_VERSION,\n      idpInfo: idpInfo\n    };\n    if (credentials.username) {\n      params.username = credentials.username;\n    }\n    if (refreshToken) {\n      params.refreshToken = refreshToken;\n    }\n    const timeout = Timeout.expires(HUMAN_TIMEOUT_MS);\n    try {\n      return await Promise.race([this.executeAndValidateCallback(params), timeout]);\n    } catch (error) {\n      if (TimeoutError.is(error)) {\n        controller.abort();\n        throw new MongoOIDCError(`OIDC callback timed out after ${HUMAN_TIMEOUT_MS}ms.`);\n      }\n      throw error;\n    } finally {\n      timeout.clear();\n    }\n  }\n}\n", "import { Binary } from '../../bson';\nimport { MongoMissingCredentialsError } from '../../error';\nimport { ns } from '../../utils';\nimport { type AuthContext, AuthProvider } from './auth_provider';\n\nexport class Plain extends AuthProvider {\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n\n    const { username, password } = credentials;\n\n    const payload = new Binary(Buffer.from(`\\x00${username}\\x00${password}`));\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    await connection.command(ns('$external.$cmd'), command, undefined);\n  }\n}\n", null, "module.exports = Pager\n\nfunction Pager (pageSize, opts) {\n  if (!(this instanceof Pager)) return new Pager(pageSize, opts)\n\n  this.length = 0\n  this.updates = []\n  this.path = new Uint16Array(4)\n  this.pages = new Array(32768)\n  this.maxPages = this.pages.length\n  this.level = 0\n  this.pageSize = pageSize || 1024\n  this.deduplicate = opts ? opts.deduplicate : null\n  this.zeros = this.deduplicate ? alloc(this.deduplicate.length) : null\n}\n\nPager.prototype.updated = function (page) {\n  while (this.deduplicate && page.buffer[page.deduplicate] === this.deduplicate[page.deduplicate]) {\n    page.deduplicate++\n    if (page.deduplicate === this.deduplicate.length) {\n      page.deduplicate = 0\n      if (page.buffer.equals && page.buffer.equals(this.deduplicate)) page.buffer = this.deduplicate\n      break\n    }\n  }\n  if (page.updated || !this.updates) return\n  page.updated = true\n  this.updates.push(page)\n}\n\nPager.prototype.lastUpdate = function () {\n  if (!this.updates || !this.updates.length) return null\n  var page = this.updates.pop()\n  page.updated = false\n  return page\n}\n\nPager.prototype._array = function (i, noAllocate) {\n  if (i >= this.maxPages) {\n    if (noAllocate) return\n    grow(this, i)\n  }\n\n  factor(i, this.path)\n\n  var arr = this.pages\n\n  for (var j = this.level; j > 0; j--) {\n    var p = this.path[j]\n    var next = arr[p]\n\n    if (!next) {\n      if (noAllocate) return\n      next = arr[p] = new Array(32768)\n    }\n\n    arr = next\n  }\n\n  return arr\n}\n\nPager.prototype.get = function (i, noAllocate) {\n  var arr = this._array(i, noAllocate)\n  var first = this.path[0]\n  var page = arr && arr[first]\n\n  if (!page && !noAllocate) {\n    page = arr[first] = new Page(i, alloc(this.pageSize))\n    if (i >= this.length) this.length = i + 1\n  }\n\n  if (page && page.buffer === this.deduplicate && this.deduplicate && !noAllocate) {\n    page.buffer = copy(page.buffer)\n    page.deduplicate = 0\n  }\n\n  return page\n}\n\nPager.prototype.set = function (i, buf) {\n  var arr = this._array(i, false)\n  var first = this.path[0]\n\n  if (i >= this.length) this.length = i + 1\n\n  if (!buf || (this.zeros && buf.equals && buf.equals(this.zeros))) {\n    arr[first] = undefined\n    return\n  }\n\n  if (this.deduplicate && buf.equals && buf.equals(this.deduplicate)) {\n    buf = this.deduplicate\n  }\n\n  var page = arr[first]\n  var b = truncate(buf, this.pageSize)\n\n  if (page) page.buffer = b\n  else arr[first] = new Page(i, b)\n}\n\nPager.prototype.toBuffer = function () {\n  var list = new Array(this.length)\n  var empty = alloc(this.pageSize)\n  var ptr = 0\n\n  while (ptr < list.length) {\n    var arr = this._array(ptr, true)\n    for (var i = 0; i < 32768 && ptr < list.length; i++) {\n      list[ptr++] = (arr && arr[i]) ? arr[i].buffer : empty\n    }\n  }\n\n  return Buffer.concat(list)\n}\n\nfunction grow (pager, index) {\n  while (pager.maxPages < index) {\n    var old = pager.pages\n    pager.pages = new Array(32768)\n    pager.pages[0] = old\n    pager.level++\n    pager.maxPages *= 32768\n  }\n}\n\nfunction truncate (buf, len) {\n  if (buf.length === len) return buf\n  if (buf.length > len) return buf.slice(0, len)\n  var cpy = alloc(len)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction alloc (size) {\n  if (Buffer.alloc) return Buffer.alloc(size)\n  var buf = new Buffer(size)\n  buf.fill(0)\n  return buf\n}\n\nfunction copy (buf) {\n  var cpy = Buffer.allocUnsafe ? Buffer.allocUnsafe(buf.length) : new Buffer(buf.length)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction Page (i, buf) {\n  this.offset = i * buf.length\n  this.buffer = buf\n  this.updated = false\n  this.deduplicate = 0\n}\n\nfunction factor (n, out) {\n  n = (n - (out[0] = (n & 32767))) / 32768\n  n = (n - (out[1] = (n & 32767))) / 32768\n  out[3] = ((n - (out[2] = (n & 32767))) / 32768) & 32767\n}\n", "var pager = require('memory-pager')\n\nmodule.exports = Bitfield\n\nfunction Bitfield (opts) {\n  if (!(this instanceof Bitfield)) return new Bitfield(opts)\n  if (!opts) opts = {}\n  if (Buffer.isBuffer(opts)) opts = {buffer: opts}\n\n  this.pageOffset = opts.pageOffset || 0\n  this.pageSize = opts.pageSize || 1024\n  this.pages = opts.pages || pager(this.pageSize)\n\n  this.byteLength = this.pages.length * this.pageSize\n  this.length = 8 * this.byteLength\n\n  if (!powerOfTwo(this.pageSize)) throw new Error('The page size should be a power of two')\n\n  this._trackUpdates = !!opts.trackUpdates\n  this._pageMask = this.pageSize - 1\n\n  if (opts.buffer) {\n    for (var i = 0; i < opts.buffer.length; i += this.pageSize) {\n      this.pages.set(i / this.pageSize, opts.buffer.slice(i, i + this.pageSize))\n    }\n    this.byteLength = opts.buffer.length\n    this.length = 8 * this.byteLength\n  }\n}\n\nBitfield.prototype.get = function (i) {\n  var o = i & 7\n  var j = (i - o) / 8\n\n  return !!(this.getByte(j) & (128 >> o))\n}\n\nBitfield.prototype.getByte = function (i) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, true)\n\n  return page ? page.buffer[o + this.pageOffset] : 0\n}\n\nBitfield.prototype.set = function (i, v) {\n  var o = i & 7\n  var j = (i - o) / 8\n  var b = this.getByte(j)\n\n  return this.setByte(j, v ? b | (128 >> o) : b & (255 ^ (128 >> o)))\n}\n\nBitfield.prototype.toBuffer = function () {\n  var all = alloc(this.pages.length * this.pageSize)\n\n  for (var i = 0; i < this.pages.length; i++) {\n    var next = this.pages.get(i, true)\n    var allOffset = i * this.pageSize\n    if (next) next.buffer.copy(all, allOffset, this.pageOffset, this.pageOffset + this.pageSize)\n  }\n\n  return all\n}\n\nBitfield.prototype.setByte = function (i, b) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, false)\n\n  o += this.pageOffset\n\n  if (page.buffer[o] === b) return false\n  page.buffer[o] = b\n\n  if (i >= this.byteLength) {\n    this.byteLength = i + 1\n    this.length = this.byteLength * 8\n  }\n\n  if (this._trackUpdates) this.pages.updated(page)\n\n  return true\n}\n\nfunction alloc (n) {\n  if (Buffer.alloc) return Buffer.alloc(n)\n  var b = new Buffer(n)\n  b.fill(0)\n  return b\n}\n\nfunction powerOfTwo (x) {\n  return !(x & (x - 1))\n}\n", null, null, null, "import { saslprep } from '@mongodb-js/saslprep';\nimport * as crypto from 'crypto';\n\nimport { Binary, type Document } from '../../bson';\nimport {\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError,\n  MongoRuntimeError\n} from '../../error';\nimport { ns, randomBytes } from '../../utils';\nimport type { HandshakeDocument } from '../connect';\nimport { type AuthContext, AuthProvider } from './auth_provider';\nimport type { MongoCredentials } from './mongo_credentials';\nimport { AuthMechanism } from './providers';\n\ntype CryptoMethod = 'sha1' | 'sha256';\n\nclass ScramSHA extends AuthProvider {\n  cryptoMethod: CryptoMethod;\n\n  constructor(cryptoMethod: CryptoMethod) {\n    super();\n    this.cryptoMethod = cryptoMethod || 'sha1';\n  }\n\n  override async prepare(\n    handshakeDoc: HandshakeDocument,\n    authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    const cryptoMethod = this.cryptoMethod;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n\n    const nonce = await randomBytes(24);\n    // store the nonce for later use\n    authContext.nonce = nonce;\n\n    const request = {\n      ...handshakeDoc,\n      speculativeAuthenticate: {\n        ...makeFirstMessage(cryptoMethod, credentials, nonce),\n        db: credentials.source\n      }\n    };\n\n    return request;\n  }\n\n  override async auth(authContext: AuthContext) {\n    const { reauthenticating, response } = authContext;\n    if (response?.speculativeAuthenticate && !reauthenticating) {\n      return await continueScramConversation(\n        this.cryptoMethod,\n        response.speculativeAuthenticate,\n        authContext\n      );\n    }\n    return await executeScram(this.cryptoMethod, authContext);\n  }\n}\n\nfunction cleanUsername(username: string) {\n  return username.replace('=', '=3D').replace(',', '=2C');\n}\n\nfunction clientFirstMessageBare(username: string, nonce: Buffer) {\n  // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n  // Since the username is not sasl-prep-d, we need to do this here.\n  return Buffer.concat([\n    Buffer.from('n=', 'utf8'),\n    Buffer.from(username, 'utf8'),\n    Buffer.from(',r=', 'utf8'),\n    Buffer.from(nonce.toString('base64'), 'utf8')\n  ]);\n}\n\nfunction makeFirstMessage(\n  cryptoMethod: CryptoMethod,\n  credentials: MongoCredentials,\n  nonce: Buffer\n) {\n  const username = cleanUsername(credentials.username);\n  const mechanism =\n    cryptoMethod === 'sha1' ? AuthMechanism.MONGODB_SCRAM_SHA1 : AuthMechanism.MONGODB_SCRAM_SHA256;\n\n  // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n  // Since the username is not sasl-prep-d, we need to do this here.\n  return {\n    saslStart: 1,\n    mechanism,\n    payload: new Binary(\n      Buffer.concat([Buffer.from('n,,', 'utf8'), clientFirstMessageBare(username, nonce)])\n    ),\n    autoAuthorize: 1,\n    options: { skipEmptyExchange: true }\n  };\n}\n\nasync function executeScram(cryptoMethod: CryptoMethod, authContext: AuthContext): Promise<void> {\n  const { connection, credentials } = authContext;\n  if (!credentials) {\n    throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n  }\n  if (!authContext.nonce) {\n    throw new MongoInvalidArgumentError('AuthContext must contain a valid nonce property');\n  }\n  const nonce = authContext.nonce;\n  const db = credentials.source;\n\n  const saslStartCmd = makeFirstMessage(cryptoMethod, credentials, nonce);\n  const response = await connection.command(ns(`${db}.$cmd`), saslStartCmd, undefined);\n  await continueScramConversation(cryptoMethod, response, authContext);\n}\n\nasync function continueScramConversation(\n  cryptoMethod: CryptoMethod,\n  response: Document,\n  authContext: AuthContext\n): Promise<void> {\n  const connection = authContext.connection;\n  const credentials = authContext.credentials;\n  if (!credentials) {\n    throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n  }\n  if (!authContext.nonce) {\n    throw new MongoInvalidArgumentError('Unable to continue SCRAM without valid nonce');\n  }\n  const nonce = authContext.nonce;\n\n  const db = credentials.source;\n  const username = cleanUsername(credentials.username);\n  const password = credentials.password;\n\n  const processedPassword =\n    cryptoMethod === 'sha256' ? saslprep(password) : passwordDigest(username, password);\n\n  const payload: Binary = Buffer.isBuffer(response.payload)\n    ? new Binary(response.payload)\n    : response.payload;\n\n  const dict = parsePayload(payload);\n\n  const iterations = parseInt(dict.i, 10);\n  if (iterations && iterations < 4096) {\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError(`Server returned an invalid iteration count ${iterations}`);\n  }\n\n  const salt = dict.s;\n  const rnonce = dict.r;\n  if (rnonce.startsWith('nonce')) {\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError(`Server returned an invalid nonce: ${rnonce}`);\n  }\n\n  // Set up start of proof\n  const withoutProof = `c=biws,r=${rnonce}`;\n  const saltedPassword = HI(\n    processedPassword,\n    Buffer.from(salt, 'base64'),\n    iterations,\n    cryptoMethod\n  );\n\n  const clientKey = HMAC(cryptoMethod, saltedPassword, 'Client Key');\n  const serverKey = HMAC(cryptoMethod, saltedPassword, 'Server Key');\n  const storedKey = H(cryptoMethod, clientKey);\n  const authMessage = [\n    clientFirstMessageBare(username, nonce),\n    payload.toString('utf8'),\n    withoutProof\n  ].join(',');\n\n  const clientSignature = HMAC(cryptoMethod, storedKey, authMessage);\n  const clientProof = `p=${xor(clientKey, clientSignature)}`;\n  const clientFinal = [withoutProof, clientProof].join(',');\n\n  const serverSignature = HMAC(cryptoMethod, serverKey, authMessage);\n  const saslContinueCmd = {\n    saslContinue: 1,\n    conversationId: response.conversationId,\n    payload: new Binary(Buffer.from(clientFinal))\n  };\n\n  const r = await connection.command(ns(`${db}.$cmd`), saslContinueCmd, undefined);\n  const parsedResponse = parsePayload(r.payload);\n\n  if (!compareDigest(Buffer.from(parsedResponse.v, 'base64'), serverSignature)) {\n    throw new MongoRuntimeError('Server returned an invalid signature');\n  }\n\n  if (r.done !== false) {\n    // If the server sends r.done === true we can save one RTT\n    return;\n  }\n\n  const retrySaslContinueCmd = {\n    saslContinue: 1,\n    conversationId: r.conversationId,\n    payload: Buffer.alloc(0)\n  };\n\n  await connection.command(ns(`${db}.$cmd`), retrySaslContinueCmd, undefined);\n}\n\nfunction parsePayload(payload: Binary) {\n  const payloadStr = payload.toString('utf8');\n  const dict: Document = {};\n  const parts = payloadStr.split(',');\n  for (let i = 0; i < parts.length; i++) {\n    const valueParts = (parts[i].match(/^([^=]*)=(.*)$/) ?? []).slice(1);\n    dict[valueParts[0]] = valueParts[1];\n  }\n  return dict;\n}\n\nfunction passwordDigest(username: string, password: string) {\n  if (typeof username !== 'string') {\n    throw new MongoInvalidArgumentError('Username must be a string');\n  }\n\n  if (typeof password !== 'string') {\n    throw new MongoInvalidArgumentError('Password must be a string');\n  }\n\n  if (password.length === 0) {\n    throw new MongoInvalidArgumentError('Password cannot be empty');\n  }\n\n  let md5: crypto.Hash;\n  try {\n    md5 = crypto.createHash('md5');\n  } catch (err) {\n    if (crypto.getFips()) {\n      // This error is (slightly) more helpful than what comes from OpenSSL directly, e.g.\n      // 'Error: error:060800C8:digital envelope routines:EVP_DigestInit_ex:disabled for FIPS'\n      throw new Error('Auth mechanism SCRAM-SHA-1 is not supported in FIPS mode');\n    }\n    throw err;\n  }\n  md5.update(`${username}:mongo:${password}`, 'utf8');\n  return md5.digest('hex');\n}\n\n// XOR two buffers\nfunction xor(a: Buffer, b: Buffer) {\n  if (!Buffer.isBuffer(a)) {\n    a = Buffer.from(a);\n  }\n\n  if (!Buffer.isBuffer(b)) {\n    b = Buffer.from(b);\n  }\n\n  const length = Math.max(a.length, b.length);\n  const res = [];\n\n  for (let i = 0; i < length; i += 1) {\n    res.push(a[i] ^ b[i]);\n  }\n\n  return Buffer.from(res).toString('base64');\n}\n\nfunction H(method: CryptoMethod, text: Buffer) {\n  return crypto.createHash(method).update(text).digest();\n}\n\nfunction HMAC(method: CryptoMethod, key: Buffer, text: Buffer | string) {\n  return crypto.createHmac(method, key).update(text).digest();\n}\n\ninterface HICache {\n  [key: string]: Buffer;\n}\n\nlet _hiCache: HICache = {};\nlet _hiCacheCount = 0;\nfunction _hiCachePurge() {\n  _hiCache = {};\n  _hiCacheCount = 0;\n}\n\nconst hiLengthMap = {\n  sha256: 32,\n  sha1: 20\n};\n\nfunction HI(data: string, salt: Buffer, iterations: number, cryptoMethod: CryptoMethod) {\n  // omit the work if already generated\n  const key = [data, salt.toString('base64'), iterations].join('_');\n  if (_hiCache[key] != null) {\n    return _hiCache[key];\n  }\n\n  // generate the salt\n  const saltedData = crypto.pbkdf2Sync(\n    data,\n    salt,\n    iterations,\n    hiLengthMap[cryptoMethod],\n    cryptoMethod\n  );\n\n  // cache a copy to speed up the next lookup, but prevent unbounded cache growth\n  if (_hiCacheCount >= 200) {\n    _hiCachePurge();\n  }\n\n  _hiCache[key] = saltedData;\n  _hiCacheCount += 1;\n  return saltedData;\n}\n\nfunction compareDigest(lhs: Buffer, rhs: Uint8Array) {\n  if (lhs.length !== rhs.length) {\n    return false;\n  }\n\n  if (typeof crypto.timingSafeEqual === 'function') {\n    return crypto.timingSafeEqual(lhs, rhs);\n  }\n\n  let result = 0;\n  for (let i = 0; i < lhs.length; i++) {\n    result |= lhs[i] ^ rhs[i];\n  }\n\n  return result === 0;\n}\n\nexport class ScramSHA1 extends ScramSHA {\n  constructor() {\n    super('sha1');\n  }\n}\n\nexport class ScramSHA256 extends ScramSHA {\n  constructor() {\n    super('sha256');\n  }\n}\n", "import type { Document } from '../../bson';\nimport { MongoMissingCredentialsError } from '../../error';\nimport { ns } from '../../utils';\nimport type { HandshakeDocument } from '../connect';\nimport { type AuthContext, AuthProvider } from './auth_provider';\nimport type { MongoCredentials } from './mongo_credentials';\n\nexport class X509 extends AuthProvider {\n  override async prepare(\n    handshakeDoc: HandshakeDocument,\n    authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    const { credentials } = authContext;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    return { ...handshakeDoc, speculativeAuthenticate: x509AuthenticateCommand(credentials) };\n  }\n\n  override async auth(authContext: AuthContext) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    const response = authContext.response;\n\n    if (response?.speculativeAuthenticate) {\n      return;\n    }\n\n    await connection.command(ns('$external.$cmd'), x509AuthenticateCommand(credentials), undefined);\n  }\n}\n\nfunction x509AuthenticateCommand(credentials: MongoCredentials) {\n  const command: Document = { authenticate: 1, mechanism: 'MONGODB-X509' };\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n\n  return command;\n}\n", "import { type AuthProvider } from './cmap/auth/auth_provider';\nimport { GSSAPI } from './cmap/auth/gssapi';\nimport { type AuthMechanismProperties } from './cmap/auth/mongo_credentials';\nimport { MongoDBAWS } from './cmap/auth/mongodb_aws';\nimport { MongoDBOIDC, OIDC_WORKFLOWS, type Workflow } from './cmap/auth/mongodb_oidc';\nimport { AutomatedCallbackWorkflow } from './cmap/auth/mongodb_oidc/automated_callback_workflow';\nimport { HumanCallbackWorkflow } from './cmap/auth/mongodb_oidc/human_callback_workflow';\nimport { TokenCache } from './cmap/auth/mongodb_oidc/token_cache';\nimport { Plain } from './cmap/auth/plain';\nimport { AuthMechanism } from './cmap/auth/providers';\nimport { ScramSHA1, ScramSHA256 } from './cmap/auth/scram';\nimport { X509 } from './cmap/auth/x509';\nimport { MongoInvalidArgumentError } from './error';\n\n/** @internal */\nconst AUTH_PROVIDERS = new Map<\n  AuthMechanism | string,\n  (authMechanismProperties: AuthMechanismProperties) => AuthProvider\n>([\n  [\n    AuthMechanism.MONGODB_AWS,\n    ({ AWS_CREDENTIAL_PROVIDER }) => new MongoDBAWS(AWS_CREDENTIAL_PROVIDER)\n  ],\n  [\n    AuthMechanism.MONGODB_CR,\n    () => {\n      throw new MongoInvalidArgumentError(\n        'MONGODB-CR is no longer a supported auth mechanism in MongoDB 4.0+'\n      );\n    }\n  ],\n  [AuthMechanism.MONGODB_GSSAPI, () => new GSSAPI()],\n  [AuthMechanism.MONGODB_OIDC, properties => new MongoDBOIDC(getWorkflow(properties))],\n  [AuthMechanism.MONGODB_PLAIN, () => new Plain()],\n  [AuthMechanism.MONGODB_SCRAM_SHA1, () => new ScramSHA1()],\n  [AuthMechanism.MONGODB_SCRAM_SHA256, () => new ScramSHA256()],\n  [AuthMechanism.MONGODB_X509, () => new X509()]\n]);\n\n/**\n * Create a set of providers per client\n * to avoid sharing the provider's cache between different clients.\n * @internal\n */\nexport class MongoClientAuthProviders {\n  private existingProviders: Map<AuthMechanism | string, AuthProvider> = new Map();\n\n  /**\n   * Get or create an authentication provider based on the provided mechanism.\n   * We don't want to create all providers at once, as some providers may not be used.\n   * @param name - The name of the provider to get or create.\n   * @param credentials - The credentials.\n   * @returns The provider.\n   * @throws MongoInvalidArgumentError if the mechanism is not supported.\n   * @internal\n   */\n  getOrCreateProvider(\n    name: AuthMechanism | string,\n    authMechanismProperties: AuthMechanismProperties\n  ): AuthProvider {\n    const authProvider = this.existingProviders.get(name);\n    if (authProvider) {\n      return authProvider;\n    }\n\n    const providerFunction = AUTH_PROVIDERS.get(name);\n    if (!providerFunction) {\n      throw new MongoInvalidArgumentError(`authMechanism ${name} not supported`);\n    }\n\n    const provider = providerFunction(authMechanismProperties);\n    this.existingProviders.set(name, provider);\n    return provider;\n  }\n}\n\n/**\n * Gets either a device workflow or callback workflow.\n */\nfunction getWorkflow(authMechanismProperties: AuthMechanismProperties): Workflow {\n  if (authMechanismProperties.OIDC_HUMAN_CALLBACK) {\n    return new HumanCallbackWorkflow(new TokenCache(), authMechanismProperties.OIDC_HUMAN_CALLBACK);\n  } else if (authMechanismProperties.OIDC_CALLBACK) {\n    return new AutomatedCallbackWorkflow(new TokenCache(), authMechanismProperties.OIDC_CALLBACK);\n  } else {\n    const environment = authMechanismProperties.ENVIRONMENT;\n    const workflow = OIDC_WORKFLOWS.get(environment)?.();\n    if (!workflow) {\n      throw new MongoInvalidArgumentError(\n        `Could not load workflow for environment ${authMechanismProperties.ENVIRONMENT}`\n      );\n    }\n    return workflow;\n  }\n}\n", "import { type Document } from './bson';\n\nexport * from './index';\n\n/**\n * @internal\n *\n * Since we don't bundle tslib helpers, we need to polyfill this method.\n *\n * This is used in the generated JS.  Adapted from https://github.com/microsoft/TypeScript/blob/aafdfe5b3f76f5c41abeec412ce73c86da94c75f/src/compiler/factory/emitHelpers.ts#L1202.\n */\n\nfunction __exportStar(mod: Document) {\n  for (const key of Object.keys(mod)) {\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return mod[key];\n      }\n    });\n  }\n}\n", "import { MongoClientBulkWriteExecutionError, ServerType } from '../../beta';\nimport { ClientBulkWriteCursorResponse } from '../../cmap/wire_protocol/responses';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport { type TimeoutContext } from '../../timeout';\nimport { MongoDBNamespace } from '../../utils';\nimport { CommandOperation } from '../command';\nimport { Aspect, defineAspects } from '../operation';\nimport { type ClientBulkWriteCommandBuilder } from './command_builder';\nimport { type ClientBulkWriteOptions } from './common';\n\n/**\n * Executes a single client bulk write operation within a potential batch.\n * @internal\n */\nexport class ClientBulkWriteOperation extends CommandOperation<ClientBulkWriteCursorResponse> {\n  commandBuilder: ClientBulkWriteCommandBuilder;\n  override options: ClientBulkWriteOptions;\n\n  override get commandName() {\n    return 'bulkWrite' as const;\n  }\n\n  constructor(commandBuilder: ClientBulkWriteCommandBuilder, options: ClientBulkWriteOptions) {\n    super(undefined, options);\n    this.commandBuilder = commandBuilder;\n    this.options = options;\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  override resetBatch(): boolean {\n    return this.commandBuilder.resetBatch();\n  }\n\n  override get canRetryWrite(): boolean {\n    return this.commandBuilder.isBatchRetryable;\n  }\n\n  /**\n   * Execute the command. Superclass will handle write concern, etc.\n   * @param server - The server.\n   * @param session - The session.\n   * @returns The response.\n   */\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<ClientBulkWriteCursorResponse> {\n    let command;\n\n    if (server.description.type === ServerType.LoadBalancer) {\n      if (session) {\n        let connection;\n        if (!session.pinnedConnection) {\n          // Checkout a connection to build the command.\n          connection = await server.pool.checkOut({ timeoutContext });\n          // Pin the connection to the session so it get used to execute the command and we do not\n          // perform a double check-in/check-out.\n          session.pin(connection);\n        } else {\n          connection = session.pinnedConnection;\n        }\n        command = this.commandBuilder.buildBatch(\n          connection.hello?.maxMessageSizeBytes,\n          connection.hello?.maxWriteBatchSize,\n          connection.hello?.maxBsonObjectSize\n        );\n      } else {\n        throw new MongoClientBulkWriteExecutionError(\n          'Session provided to the client bulk write operation must be present.'\n        );\n      }\n    } else {\n      // At this point we have a server and the auto connect code has already\n      // run in executeOperation, so the server description will be populated.\n      // We can use that to build the command.\n      if (\n        !server.description.maxWriteBatchSize ||\n        !server.description.maxMessageSizeBytes ||\n        !server.description.maxBsonObjectSize\n      ) {\n        throw new MongoClientBulkWriteExecutionError(\n          'In order to execute a client bulk write, both maxWriteBatchSize, maxMessageSizeBytes and maxBsonObjectSize must be provided by the servers hello response.'\n        );\n      }\n      command = this.commandBuilder.buildBatch(\n        server.description.maxMessageSizeBytes,\n        server.description.maxWriteBatchSize,\n        server.description.maxBsonObjectSize\n      );\n    }\n\n    // Check after the batch is built if we cannot retry it and override the option.\n    if (!this.canRetryWrite) {\n      this.options.willRetryWrite = false;\n    }\n    return await super.executeCommand(\n      server,\n      session,\n      command,\n      timeoutContext,\n      ClientBulkWriteCursorResponse\n    );\n  }\n}\n\n// Skipping the collation as it goes on the individual ops.\ndefineAspects(ClientBulkWriteOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.SKIP_COLLATION,\n  Aspect.CURSOR_CREATING,\n  Aspect.RETRYABLE,\n  Aspect.COMMAND_BATCHING\n]);\n", "import { type Document } from '../bson';\nimport { type ClientBulkWriteCursorResponse } from '../cmap/wire_protocol/responses';\nimport type { MongoClient } from '../mongo_client';\nimport { ClientBulkWriteOperation } from '../operations/client_bulk_write/client_bulk_write';\nimport { type ClientBulkWriteCommandBuilder } from '../operations/client_bulk_write/command_builder';\nimport { type ClientBulkWriteOptions } from '../operations/client_bulk_write/common';\nimport { executeOperation } from '../operations/execute_operation';\nimport type { ClientSession } from '../sessions';\nimport { mergeOptions, MongoDBNamespace } from '../utils';\nimport {\n  AbstractCursor,\n  type AbstractCursorOptions,\n  type InitialCursorResponse\n} from './abstract_cursor';\n\n/** @public */\nexport interface ClientBulkWriteCursorOptions\n  extends Omit<AbstractCursorOptions, 'maxAwaitTimeMS' | 'tailable' | 'awaitData'>,\n    ClientBulkWriteOptions {}\n\n/**\n * This is the cursor that handles client bulk write operations. Note this is never\n * exposed directly to the user and is always immediately exhausted.\n * @internal\n */\nexport class ClientBulkWriteCursor extends AbstractCursor {\n  commandBuilder: ClientBulkWriteCommandBuilder;\n  /** @internal */\n  private cursorResponse?: ClientBulkWriteCursorResponse;\n  /** @internal */\n  private clientBulkWriteOptions: ClientBulkWriteOptions;\n\n  /** @internal */\n  constructor(\n    client: MongoClient,\n    commandBuilder: ClientBulkWriteCommandBuilder,\n    options: ClientBulkWriteCursorOptions = {}\n  ) {\n    super(client, new MongoDBNamespace('admin', '$cmd'), options);\n\n    this.commandBuilder = commandBuilder;\n    this.clientBulkWriteOptions = options;\n  }\n\n  /**\n   * We need a way to get the top level cursor response fields for\n   * generating the bulk write result, so we expose this here.\n   */\n  get response(): ClientBulkWriteCursorResponse | null {\n    if (this.cursorResponse) return this.cursorResponse;\n    return null;\n  }\n\n  get operations(): Document[] {\n    return this.commandBuilder.lastOperations;\n  }\n\n  clone(): ClientBulkWriteCursor {\n    const clonedOptions = mergeOptions({}, this.clientBulkWriteOptions);\n    delete clonedOptions.session;\n    return new ClientBulkWriteCursor(this.client, this.commandBuilder, {\n      ...clonedOptions\n    });\n  }\n\n  /** @internal */\n  async _initialize(session: ClientSession): Promise<InitialCursorResponse> {\n    const clientBulkWriteOperation = new ClientBulkWriteOperation(this.commandBuilder, {\n      ...this.clientBulkWriteOptions,\n      ...this.cursorOptions,\n      session\n    });\n\n    const response = await executeOperation(\n      this.client,\n      clientBulkWriteOperation,\n      this.timeoutContext\n    );\n    this.cursorResponse = response;\n\n    return { server: clientBulkWriteOperation.server, session, response };\n  }\n}\n", "import { BSON, type Document } from '../../bson';\nimport { DocumentSequence } from '../../cmap/commands';\nimport { MongoAPIError, MongoInvalidArgumentError } from '../../error';\nimport { type PkFactory } from '../../mongo_client';\nimport type { Filter, OptionalId, UpdateFilter, WithoutId } from '../../mongo_types';\nimport { DEFAULT_PK_FACTORY, hasAtomicOperators } from '../../utils';\nimport { type CollationOptions } from '../command';\nimport { type Hint } from '../operation';\nimport type {\n  AnyClientBulkWriteModel,\n  ClientBulkWriteOptions,\n  ClientDeleteManyModel,\n  ClientDeleteOneModel,\n  ClientInsertOneModel,\n  ClientReplaceOneModel,\n  ClientUpdateManyModel,\n  ClientUpdateOneModel\n} from './common';\n\n/** @internal */\nexport interface ClientBulkWriteCommand {\n  bulkWrite: 1;\n  errorsOnly: boolean;\n  ordered: boolean;\n  ops: DocumentSequence;\n  nsInfo: DocumentSequence;\n  bypassDocumentValidation?: boolean;\n  let?: Document;\n  comment?: any;\n}\n\n/**\n * The bytes overhead for the extra fields added post command generation.\n */\nconst MESSAGE_OVERHEAD_BYTES = 1000;\n\n/** @internal */\nexport class ClientBulkWriteCommandBuilder {\n  models: ReadonlyArray<AnyClientBulkWriteModel<Document>>;\n  options: ClientBulkWriteOptions;\n  pkFactory: PkFactory;\n  /** The current index in the models array that is being processed. */\n  currentModelIndex: number;\n  /** The model index that the builder was on when it finished the previous batch. Used for resets when retrying. */\n  previousModelIndex: number;\n  /** The last array of operations that were created. Used by the results merger for indexing results. */\n  lastOperations: Document[];\n  /** Returns true if the current batch being created has no multi-updates. */\n  isBatchRetryable: boolean;\n\n  /**\n   * Create the command builder.\n   * @param models - The client write models.\n   */\n  constructor(\n    models: ReadonlyArray<AnyClientBulkWriteModel<Document>>,\n    options: ClientBulkWriteOptions,\n    pkFactory?: PkFactory\n  ) {\n    this.models = models;\n    this.options = options;\n    this.pkFactory = pkFactory ?? DEFAULT_PK_FACTORY;\n    this.currentModelIndex = 0;\n    this.previousModelIndex = 0;\n    this.lastOperations = [];\n    this.isBatchRetryable = true;\n  }\n\n  /**\n   * Gets the errorsOnly value for the command, which is the inverse of the\n   * user provided verboseResults option. Defaults to true.\n   */\n  get errorsOnly(): boolean {\n    if ('verboseResults' in this.options) {\n      return !this.options.verboseResults;\n    }\n    return true;\n  }\n\n  /**\n   * Determines if there is another batch to process.\n   * @returns True if not all batches have been built.\n   */\n  hasNextBatch(): boolean {\n    return this.currentModelIndex < this.models.length;\n  }\n\n  /**\n   * When we need to retry a command we need to set the current\n   * model index back to its previous value.\n   */\n  resetBatch(): boolean {\n    this.currentModelIndex = this.previousModelIndex;\n    return true;\n  }\n\n  /**\n   * Build a single batch of a client bulk write command.\n   * @param maxMessageSizeBytes - The max message size in bytes.\n   * @param maxWriteBatchSize - The max write batch size.\n   * @returns The client bulk write command.\n   */\n  buildBatch(\n    maxMessageSizeBytes: number,\n    maxWriteBatchSize: number,\n    maxBsonObjectSize: number\n  ): ClientBulkWriteCommand {\n    // We start by assuming the batch has no multi-updates, so it is retryable\n    // until we find them.\n    this.isBatchRetryable = true;\n    let commandLength = 0;\n    let currentNamespaceIndex = 0;\n    const command: ClientBulkWriteCommand = this.baseCommand();\n    const namespaces = new Map<string, number>();\n    // In the case of retries we need to mark where we started this batch.\n    this.previousModelIndex = this.currentModelIndex;\n\n    while (this.currentModelIndex < this.models.length) {\n      const model = this.models[this.currentModelIndex];\n      const ns = model.namespace;\n      const nsIndex = namespaces.get(ns);\n\n      // Multi updates are not retryable.\n      if (model.name === 'deleteMany' || model.name === 'updateMany') {\n        this.isBatchRetryable = false;\n      }\n\n      if (nsIndex != null) {\n        // Build the operation and serialize it to get the bytes buffer.\n        const operation = buildOperation(model, nsIndex, this.pkFactory);\n        let operationBuffer;\n        try {\n          operationBuffer = BSON.serialize(operation);\n        } catch (cause) {\n          throw new MongoInvalidArgumentError(`Could not serialize operation to BSON`, { cause });\n        }\n\n        validateBufferSize('ops', operationBuffer, maxBsonObjectSize);\n\n        // Check if the operation buffer can fit in the command. If it can,\n        // then add the operation to the document sequence and increment the\n        // current length as long as the ops don't exceed the maxWriteBatchSize.\n        if (\n          commandLength + operationBuffer.length < maxMessageSizeBytes &&\n          command.ops.documents.length < maxWriteBatchSize\n        ) {\n          // Pushing to the ops document sequence returns the total byte length of the document sequence.\n          commandLength = MESSAGE_OVERHEAD_BYTES + command.ops.push(operation, operationBuffer);\n          // Increment the builder's current model index.\n          this.currentModelIndex++;\n        } else {\n          // The operation cannot fit in the current command and will need to\n          // go in the next batch. Exit the loop.\n          break;\n        }\n      } else {\n        // The namespace is not already in the nsInfo so we will set it in the map, and\n        // construct our nsInfo and ops documents and buffers.\n        namespaces.set(ns, currentNamespaceIndex);\n        const nsInfo = { ns: ns };\n        const operation = buildOperation(model, currentNamespaceIndex, this.pkFactory);\n        let nsInfoBuffer;\n        let operationBuffer;\n        try {\n          nsInfoBuffer = BSON.serialize(nsInfo);\n          operationBuffer = BSON.serialize(operation);\n        } catch (cause) {\n          throw new MongoInvalidArgumentError(`Could not serialize ns info to BSON`, { cause });\n        }\n\n        validateBufferSize('nsInfo', nsInfoBuffer, maxBsonObjectSize);\n        validateBufferSize('ops', operationBuffer, maxBsonObjectSize);\n\n        // Check if the operation and nsInfo buffers can fit in the command. If they\n        // can, then add the operation and nsInfo to their respective document\n        // sequences and increment the current length as long as the ops don't exceed\n        // the maxWriteBatchSize.\n        if (\n          commandLength + nsInfoBuffer.length + operationBuffer.length < maxMessageSizeBytes &&\n          command.ops.documents.length < maxWriteBatchSize\n        ) {\n          // Pushing to the ops document sequence returns the total byte length of the document sequence.\n          commandLength =\n            MESSAGE_OVERHEAD_BYTES +\n            command.nsInfo.push(nsInfo, nsInfoBuffer) +\n            command.ops.push(operation, operationBuffer);\n          // We've added a new namespace, increment the namespace index.\n          currentNamespaceIndex++;\n          // Increment the builder's current model index.\n          this.currentModelIndex++;\n        } else {\n          // The operation cannot fit in the current command and will need to\n          // go in the next batch. Exit the loop.\n          break;\n        }\n      }\n    }\n    // Set the last operations and return the command.\n    this.lastOperations = command.ops.documents;\n    return command;\n  }\n\n  private baseCommand(): ClientBulkWriteCommand {\n    const command: ClientBulkWriteCommand = {\n      bulkWrite: 1,\n      errorsOnly: this.errorsOnly,\n      ordered: this.options.ordered ?? true,\n      ops: new DocumentSequence('ops'),\n      nsInfo: new DocumentSequence('nsInfo')\n    };\n    // Add bypassDocumentValidation if it was present in the options.\n    if (this.options.bypassDocumentValidation != null) {\n      command.bypassDocumentValidation = this.options.bypassDocumentValidation;\n    }\n    // Add let if it was present in the options.\n    if (this.options.let) {\n      command.let = this.options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined) {\n      command.comment = this.options.comment;\n    }\n\n    return command;\n  }\n}\n\nfunction validateBufferSize(name: string, buffer: Uint8Array, maxBsonObjectSize: number) {\n  if (buffer.length > maxBsonObjectSize) {\n    throw new MongoInvalidArgumentError(\n      `Client bulk write operation ${name} of length ${buffer.length} exceeds the max bson object size of ${maxBsonObjectSize}`\n    );\n  }\n}\n\n/** @internal */\ninterface ClientInsertOperation {\n  insert: number;\n  document: OptionalId<Document>;\n}\n\n/**\n * Build the insert one operation.\n * @param model - The insert one model.\n * @param index - The namespace index.\n * @returns the operation.\n */\nexport const buildInsertOneOperation = (\n  model: ClientInsertOneModel<Document>,\n  index: number,\n  pkFactory: PkFactory\n): ClientInsertOperation => {\n  const document: ClientInsertOperation = {\n    insert: index,\n    document: model.document\n  };\n  document.document._id = model.document._id ?? pkFactory.createPk();\n  return document;\n};\n\n/** @internal */\nexport interface ClientDeleteOperation {\n  delete: number;\n  multi: boolean;\n  filter: Filter<Document>;\n  hint?: Hint;\n  collation?: CollationOptions;\n}\n\n/**\n * Build the delete one operation.\n * @param model - The insert many model.\n * @param index - The namespace index.\n * @returns the operation.\n */\nexport const buildDeleteOneOperation = (\n  model: ClientDeleteOneModel<Document>,\n  index: number\n): Document => {\n  return createDeleteOperation(model, index, false);\n};\n\n/**\n * Build the delete many operation.\n * @param model - The delete many model.\n * @param index - The namespace index.\n * @returns the operation.\n */\nexport const buildDeleteManyOperation = (\n  model: ClientDeleteManyModel<Document>,\n  index: number\n): Document => {\n  return createDeleteOperation(model, index, true);\n};\n\n/**\n * Creates a delete operation based on the parameters.\n */\nfunction createDeleteOperation(\n  model: ClientDeleteOneModel<Document> | ClientDeleteManyModel<Document>,\n  index: number,\n  multi: boolean\n): ClientDeleteOperation {\n  const document: ClientDeleteOperation = {\n    delete: index,\n    multi: multi,\n    filter: model.filter\n  };\n  if (model.hint) {\n    document.hint = model.hint;\n  }\n  if (model.collation) {\n    document.collation = model.collation;\n  }\n  return document;\n}\n\n/** @internal */\nexport interface ClientUpdateOperation {\n  update: number;\n  multi: boolean;\n  filter: Filter<Document>;\n  updateMods: UpdateFilter<Document> | Document[];\n  hint?: Hint;\n  upsert?: boolean;\n  arrayFilters?: Document[];\n  collation?: CollationOptions;\n}\n\n/**\n * Build the update one operation.\n * @param model - The update one model.\n * @param index - The namespace index.\n * @returns the operation.\n */\nexport const buildUpdateOneOperation = (\n  model: ClientUpdateOneModel<Document>,\n  index: number\n): ClientUpdateOperation => {\n  return createUpdateOperation(model, index, false);\n};\n\n/**\n * Build the update many operation.\n * @param model - The update many model.\n * @param index - The namespace index.\n * @returns the operation.\n */\nexport const buildUpdateManyOperation = (\n  model: ClientUpdateManyModel<Document>,\n  index: number\n): ClientUpdateOperation => {\n  return createUpdateOperation(model, index, true);\n};\n\n/**\n * Validate the update document.\n * @param update - The update document.\n */\nfunction validateUpdate(update: Document) {\n  if (!hasAtomicOperators(update)) {\n    throw new MongoAPIError(\n      'Client bulk write update models must only contain atomic modifiers (start with $) and must not be empty.'\n    );\n  }\n}\n\n/**\n * Creates a delete operation based on the parameters.\n */\nfunction createUpdateOperation(\n  model: ClientUpdateOneModel<Document> | ClientUpdateManyModel<Document>,\n  index: number,\n  multi: boolean\n): ClientUpdateOperation {\n  // Update documents provided in UpdateOne and UpdateMany write models are\n  // required only to contain atomic modifiers (i.e. keys that start with \"$\").\n  // Drivers MUST throw an error if an update document is empty or if the\n  // document's first key does not start with \"$\".\n  validateUpdate(model.update);\n  const document: ClientUpdateOperation = {\n    update: index,\n    multi: multi,\n    filter: model.filter,\n    updateMods: model.update\n  };\n  if (model.hint) {\n    document.hint = model.hint;\n  }\n  if (model.upsert) {\n    document.upsert = model.upsert;\n  }\n  if (model.arrayFilters) {\n    document.arrayFilters = model.arrayFilters;\n  }\n  if (model.collation) {\n    document.collation = model.collation;\n  }\n  return document;\n}\n\n/** @internal */\nexport interface ClientReplaceOneOperation {\n  update: number;\n  multi: boolean;\n  filter: Filter<Document>;\n  updateMods: WithoutId<Document>;\n  hint?: Hint;\n  upsert?: boolean;\n  collation?: CollationOptions;\n}\n\n/**\n * Build the replace one operation.\n * @param model - The replace one model.\n * @param index - The namespace index.\n * @returns the operation.\n */\nexport const buildReplaceOneOperation = (\n  model: ClientReplaceOneModel<Document>,\n  index: number\n): ClientReplaceOneOperation => {\n  if (hasAtomicOperators(model.replacement)) {\n    throw new MongoAPIError(\n      'Client bulk write replace models must not contain atomic modifiers (start with $) and must not be empty.'\n    );\n  }\n\n  const document: ClientReplaceOneOperation = {\n    update: index,\n    multi: false,\n    filter: model.filter,\n    updateMods: model.replacement\n  };\n  if (model.hint) {\n    document.hint = model.hint;\n  }\n  if (model.upsert) {\n    document.upsert = model.upsert;\n  }\n  if (model.collation) {\n    document.collation = model.collation;\n  }\n  return document;\n};\n\n/** @internal */\nexport function buildOperation(\n  model: AnyClientBulkWriteModel<Document>,\n  index: number,\n  pkFactory: PkFactory\n): Document {\n  switch (model.name) {\n    case 'insertOne':\n      return buildInsertOneOperation(model, index, pkFactory);\n    case 'deleteOne':\n      return buildDeleteOneOperation(model, index);\n    case 'deleteMany':\n      return buildDeleteManyOperation(model, index);\n    case 'updateOne':\n      return buildUpdateOneOperation(model, index);\n    case 'updateMany':\n      return buildUpdateManyOperation(model, index);\n    case 'replaceOne':\n      return buildReplaceOneOperation(model, index);\n  }\n}\n", "import { MongoWriteConcernError } from '../..';\nimport { type Document } from '../../bson';\nimport { type ClientBulkWriteCursor } from '../../cursor/client_bulk_write_cursor';\nimport { MongoClientBulkWriteError } from '../../error';\nimport {\n  type ClientBulkWriteError,\n  type ClientBulkWriteOptions,\n  type ClientBulkWriteResult,\n  type ClientDeleteResult,\n  type ClientInsertOneResult,\n  type ClientUpdateResult\n} from './common';\n\n/**\n * Unacknowledged bulk writes are always the same.\n */\nconst UNACKNOWLEDGED = {\n  acknowledged: false,\n  insertedCount: 0,\n  upsertedCount: 0,\n  matchedCount: 0,\n  modifiedCount: 0,\n  deletedCount: 0,\n  insertResults: undefined,\n  updateResults: undefined,\n  deleteResults: undefined\n};\n\ninterface ClientBulkWriteResultAccumulation {\n  /**\n   * Whether the bulk write was acknowledged.\n   */\n  acknowledged: boolean;\n  /**\n   * The total number of documents inserted across all insert operations.\n   */\n  insertedCount: number;\n  /**\n   * The total number of documents upserted across all update operations.\n   */\n  upsertedCount: number;\n  /**\n   * The total number of documents matched across all update operations.\n   */\n  matchedCount: number;\n  /**\n   * The total number of documents modified across all update operations.\n   */\n  modifiedCount: number;\n  /**\n   * The total number of documents deleted across all delete operations.\n   */\n  deletedCount: number;\n  /**\n   * The results of each individual insert operation that was successfully performed.\n   */\n  insertResults?: Map<number, ClientInsertOneResult>;\n  /**\n   * The results of each individual update operation that was successfully performed.\n   */\n  updateResults?: Map<number, ClientUpdateResult>;\n  /**\n   * The results of each individual delete operation that was successfully performed.\n   */\n  deleteResults?: Map<number, ClientDeleteResult>;\n}\n\n/**\n * Merges client bulk write cursor responses together into a single result.\n * @internal\n */\nexport class ClientBulkWriteResultsMerger {\n  private result: ClientBulkWriteResultAccumulation;\n  private options: ClientBulkWriteOptions;\n  private currentBatchOffset: number;\n  writeConcernErrors: Document[];\n  writeErrors: Map<number, ClientBulkWriteError>;\n\n  /**\n   * @returns The standard unacknowledged bulk write result.\n   */\n  static unacknowledged(): ClientBulkWriteResult {\n    return UNACKNOWLEDGED;\n  }\n\n  /**\n   * Instantiate the merger.\n   * @param options - The options.\n   */\n  constructor(options: ClientBulkWriteOptions) {\n    this.options = options;\n    this.currentBatchOffset = 0;\n    this.writeConcernErrors = [];\n    this.writeErrors = new Map();\n    this.result = {\n      acknowledged: true,\n      insertedCount: 0,\n      upsertedCount: 0,\n      matchedCount: 0,\n      modifiedCount: 0,\n      deletedCount: 0,\n      insertResults: undefined,\n      updateResults: undefined,\n      deleteResults: undefined\n    };\n\n    if (options.verboseResults) {\n      this.result.insertResults = new Map<number, ClientInsertOneResult>();\n      this.result.updateResults = new Map<number, ClientUpdateResult>();\n      this.result.deleteResults = new Map<number, ClientDeleteResult>();\n    }\n  }\n\n  /**\n   * Get the bulk write result object.\n   */\n  get bulkWriteResult(): ClientBulkWriteResult {\n    return {\n      acknowledged: this.result.acknowledged,\n      insertedCount: this.result.insertedCount,\n      upsertedCount: this.result.upsertedCount,\n      matchedCount: this.result.matchedCount,\n      modifiedCount: this.result.modifiedCount,\n      deletedCount: this.result.deletedCount,\n      insertResults: this.result.insertResults,\n      updateResults: this.result.updateResults,\n      deleteResults: this.result.deleteResults\n    };\n  }\n\n  /**\n   * Merge the results in the cursor to the existing result.\n   * @param currentBatchOffset - The offset index to the original models.\n   * @param response - The cursor response.\n   * @param documents - The documents in the cursor.\n   * @returns The current result.\n   */\n  async merge(cursor: ClientBulkWriteCursor): Promise<ClientBulkWriteResult> {\n    let writeConcernErrorResult;\n    try {\n      for await (const document of cursor) {\n        // Only add to maps if ok: 1\n        if (document.ok === 1) {\n          if (this.options.verboseResults) {\n            this.processDocument(cursor, document);\n          }\n        } else {\n          // If an individual write error is encountered during an ordered bulk write, drivers MUST\n          // record the error in writeErrors and immediately throw the exception. Otherwise, drivers\n          // MUST continue to iterate the results cursor and execute any further bulkWrite batches.\n          if (this.options.ordered) {\n            const error = new MongoClientBulkWriteError({\n              message: 'Mongo client ordered bulk write encountered a write error.'\n            });\n            error.writeErrors.set(document.idx + this.currentBatchOffset, {\n              code: document.code,\n              message: document.errmsg\n            });\n            error.partialResult = this.result;\n            throw error;\n          } else {\n            this.writeErrors.set(document.idx + this.currentBatchOffset, {\n              code: document.code,\n              message: document.errmsg\n            });\n          }\n        }\n      }\n    } catch (error) {\n      if (error instanceof MongoWriteConcernError) {\n        const result = error.result;\n        writeConcernErrorResult = {\n          insertedCount: result.nInserted,\n          upsertedCount: result.nUpserted,\n          matchedCount: result.nMatched,\n          modifiedCount: result.nModified,\n          deletedCount: result.nDeleted,\n          writeConcernError: result.writeConcernError\n        };\n        if (this.options.verboseResults && result.cursor.firstBatch) {\n          for (const document of result.cursor.firstBatch) {\n            if (document.ok === 1) {\n              this.processDocument(cursor, document);\n            }\n          }\n        }\n      } else {\n        throw error;\n      }\n    } finally {\n      // Update the counts from the cursor response.\n      if (cursor.response) {\n        const response = cursor.response;\n        this.incrementCounts(response);\n      }\n\n      // Increment the batch offset.\n      this.currentBatchOffset += cursor.operations.length;\n    }\n\n    // If we have write concern errors ensure they are added.\n    if (writeConcernErrorResult) {\n      const writeConcernError = writeConcernErrorResult.writeConcernError as Document;\n      this.incrementCounts(writeConcernErrorResult);\n      this.writeConcernErrors.push({\n        code: writeConcernError.code,\n        message: writeConcernError.errmsg\n      });\n    }\n\n    return this.result;\n  }\n\n  /**\n   * Process an individual document in the results.\n   * @param cursor - The cursor.\n   * @param document - The document to process.\n   */\n  private processDocument(cursor: ClientBulkWriteCursor, document: Document) {\n    // Get the corresponding operation from the command.\n    const operation = cursor.operations[document.idx];\n    // Handle insert results.\n    if ('insert' in operation) {\n      this.result.insertResults?.set(document.idx + this.currentBatchOffset, {\n        insertedId: operation.document._id\n      });\n    }\n    // Handle update results.\n    if ('update' in operation) {\n      const result: ClientUpdateResult = {\n        matchedCount: document.n,\n        modifiedCount: document.nModified ?? 0,\n        // Check if the bulk did actually upsert.\n        didUpsert: document.upserted != null\n      };\n      if (document.upserted) {\n        result.upsertedId = document.upserted._id;\n      }\n      this.result.updateResults?.set(document.idx + this.currentBatchOffset, result);\n    }\n    // Handle delete results.\n    if ('delete' in operation) {\n      this.result.deleteResults?.set(document.idx + this.currentBatchOffset, {\n        deletedCount: document.n\n      });\n    }\n  }\n\n  /**\n   * Increment the result counts.\n   * @param document - The document with the results.\n   */\n  private incrementCounts(document: Document) {\n    this.result.insertedCount += document.insertedCount;\n    this.result.upsertedCount += document.upsertedCount;\n    this.result.matchedCount += document.matchedCount;\n    this.result.modifiedCount += document.modifiedCount;\n    this.result.deletedCount += document.deletedCount;\n  }\n}\n", "import { type Document } from '../../bson';\nimport { CursorTimeoutContext, CursorTimeoutMode } from '../../cursor/abstract_cursor';\nimport { ClientBulkWriteCursor } from '../../cursor/client_bulk_write_cursor';\nimport {\n  MongoClientBulkWriteError,\n  MongoClientBulkWriteExecutionError,\n  MongoInvalidArgumentError,\n  MongoServerError\n} from '../../error';\nimport { type MongoClient } from '../../mongo_client';\nimport { TimeoutContext } from '../../timeout';\nimport { resolveTimeoutOptions } from '../../utils';\nimport { WriteConcern } from '../../write_concern';\nimport { executeOperation } from '../execute_operation';\nimport { ClientBulkWriteOperation } from './client_bulk_write';\nimport { ClientBulkWriteCommandBuilder } from './command_builder';\nimport {\n  type AnyClientBulkWriteModel,\n  type ClientBulkWriteOptions,\n  type ClientBulkWriteResult\n} from './common';\nimport { ClientBulkWriteResultsMerger } from './results_merger';\n\n/**\n * Responsible for executing a client bulk write.\n * @internal\n */\nexport class ClientBulkWriteExecutor {\n  private readonly client: MongoClient;\n  private readonly options: ClientBulkWriteOptions;\n  private readonly operations: ReadonlyArray<AnyClientBulkWriteModel<Document>>;\n\n  /**\n   * Instantiate the executor.\n   * @param client - The mongo client.\n   * @param operations - The user supplied bulk write models.\n   * @param options - The bulk write options.\n   */\n  constructor(\n    client: MongoClient,\n    operations: ReadonlyArray<AnyClientBulkWriteModel<Document>>,\n    options?: ClientBulkWriteOptions\n  ) {\n    if (operations.length === 0) {\n      throw new MongoClientBulkWriteExecutionError('No client bulk write models were provided.');\n    }\n\n    this.client = client;\n    this.operations = operations;\n    this.options = {\n      ordered: true,\n      bypassDocumentValidation: false,\n      verboseResults: false,\n      ...options\n    };\n\n    // If no write concern was provided, we inherit one from the client.\n    if (!this.options.writeConcern) {\n      this.options.writeConcern = WriteConcern.fromOptions(this.client.s.options);\n    }\n\n    if (this.options.writeConcern?.w === 0) {\n      if (this.options.verboseResults) {\n        throw new MongoInvalidArgumentError(\n          'Cannot request unacknowledged write concern and verbose results'\n        );\n      }\n\n      if (this.options.ordered) {\n        throw new MongoInvalidArgumentError(\n          'Cannot request unacknowledged write concern and ordered writes'\n        );\n      }\n    }\n  }\n\n  /**\n   * Execute the client bulk write. Will split commands into batches and exhaust the cursors\n   * for each, then merge the results into one.\n   * @returns The result.\n   */\n  async execute(): Promise<ClientBulkWriteResult> {\n    // The command builder will take the user provided models and potential split the batch\n    // into multiple commands due to size.\n    const pkFactory = this.client.s.options.pkFactory;\n    const commandBuilder = new ClientBulkWriteCommandBuilder(\n      this.operations,\n      this.options,\n      pkFactory\n    );\n    // Unacknowledged writes need to execute all batches and return { ok: 1}\n    const resolvedOptions = resolveTimeoutOptions(this.client, this.options);\n    const context = TimeoutContext.create(resolvedOptions);\n\n    if (this.options.writeConcern?.w === 0) {\n      while (commandBuilder.hasNextBatch()) {\n        const operation = new ClientBulkWriteOperation(commandBuilder, this.options);\n        await executeOperation(this.client, operation, context);\n      }\n      return ClientBulkWriteResultsMerger.unacknowledged();\n    } else {\n      const resultsMerger = new ClientBulkWriteResultsMerger(this.options);\n      // For each command will will create and exhaust a cursor for the results.\n      while (commandBuilder.hasNextBatch()) {\n        const cursorContext = new CursorTimeoutContext(context, Symbol());\n        const options = {\n          ...this.options,\n          timeoutContext: cursorContext,\n          ...(resolvedOptions.timeoutMS != null && { timeoutMode: CursorTimeoutMode.LIFETIME })\n        };\n        const cursor = new ClientBulkWriteCursor(this.client, commandBuilder, options);\n        try {\n          await resultsMerger.merge(cursor);\n        } catch (error) {\n          // Write concern errors are recorded in the writeConcernErrors field on MongoClientBulkWriteError.\n          // When a write concern error is encountered, it should not terminate execution of the bulk write\n          // for either ordered or unordered bulk writes. However, drivers MUST throw an exception at the end\n          // of execution if any write concern errors were observed.\n          if (error instanceof MongoServerError && !(error instanceof MongoClientBulkWriteError)) {\n            // Server side errors need to be wrapped inside a MongoClientBulkWriteError, where the root\n            // cause is the error property and a partial result is to be included.\n            const bulkWriteError = new MongoClientBulkWriteError({\n              message: 'Mongo client bulk write encountered an error during execution'\n            });\n            bulkWriteError.cause = error;\n            bulkWriteError.partialResult = resultsMerger.bulkWriteResult;\n            throw bulkWriteError;\n          } else {\n            // Client side errors are just thrown.\n            throw error;\n          }\n        }\n      }\n\n      // If we have write concern errors or unordered write errors at the end we throw.\n      if (resultsMerger.writeConcernErrors.length > 0 || resultsMerger.writeErrors.size > 0) {\n        const error = new MongoClientBulkWriteError({\n          message: 'Mongo client bulk write encountered errors during execution.'\n        });\n        error.writeConcernErrors = resultsMerger.writeConcernErrors;\n        error.writeErrors = resultsMerger.writeErrors;\n        error.partialResult = resultsMerger.bulkWriteResult;\n        throw error;\n      }\n\n      return resultsMerger.bulkWriteResult;\n    }\n  }\n}\n", "import { HostAddress } from '.././utils';\nimport {\n  SERVER_SELECTION_FAILED,\n  SERVER_SELECTION_STARTED,\n  SERVER_SELECTION_SUCCEEDED,\n  WAITING_FOR_SUITABLE_SERVER\n} from '../constants';\nimport { type ReadPreference } from '../read_preference';\nimport { type ServerSelector } from './server_selection';\nimport type { TopologyDescription } from './topology_description';\n\n/**\n * The base export class for all logs published from server selection\n * @internal\n * @category Log Type\n */\nexport abstract class ServerSelectionEvent {\n  /** String representation of the selector being used to select the server.\n   *  Defaults to 'custom selector' for application-provided custom selector case.\n   */\n  selector: string | ReadPreference | ServerSelector;\n  /** The name of the operation for which a server is being selected.  */\n  operation: string;\n  /** \tThe current topology description.  */\n  topologyDescription: TopologyDescription;\n\n  /** @internal */\n  abstract name:\n    | typeof SERVER_SELECTION_STARTED\n    | typeof SERVER_SELECTION_SUCCEEDED\n    | typeof SERVER_SELECTION_FAILED\n    | typeof WAITING_FOR_SUITABLE_SERVER;\n\n  abstract message: string;\n\n  /** @internal */\n  constructor(\n    selector: string | ReadPreference | ServerSelector,\n    topologyDescription: TopologyDescription,\n    operation: string\n  ) {\n    this.selector = selector;\n    this.operation = operation;\n    this.topologyDescription = topologyDescription;\n  }\n}\n\n/**\n * An event published when server selection starts\n * @internal\n * @category Event\n */\nexport class ServerSelectionStartedEvent extends ServerSelectionEvent {\n  /** @internal */\n  name = SERVER_SELECTION_STARTED;\n  message = 'Server selection started';\n\n  /** @internal */\n  constructor(\n    selector: string | ReadPreference | ServerSelector,\n    topologyDescription: TopologyDescription,\n    operation: string\n  ) {\n    super(selector, topologyDescription, operation);\n  }\n}\n\n/**\n * An event published when a server selection fails\n * @internal\n * @category Event\n */\nexport class ServerSelectionFailedEvent extends ServerSelectionEvent {\n  /** @internal */\n  name = SERVER_SELECTION_FAILED;\n  message = 'Server selection failed';\n  /** Representation of the error the driver will throw regarding server selection failing. */\n  failure: Error;\n\n  /** @internal */\n  constructor(\n    selector: string | ReadPreference | ServerSelector,\n    topologyDescription: TopologyDescription,\n    error: Error,\n    operation: string\n  ) {\n    super(selector, topologyDescription, operation);\n    this.failure = error;\n  }\n}\n\n/**\n * An event published when server selection succeeds\n * @internal\n * @category Event\n */\nexport class ServerSelectionSucceededEvent extends ServerSelectionEvent {\n  /** @internal */\n  name = SERVER_SELECTION_SUCCEEDED;\n  message = 'Server selection succeeded';\n  /** \tThe hostname, IP address, or Unix domain socket path for the selected server. */\n  serverHost: string;\n  /** The port for the selected server. Optional; not present for Unix domain sockets. When the user does not specify a port and the default (27017) is used, the driver SHOULD include it here. */\n  serverPort: number | undefined;\n\n  /** @internal */\n  constructor(\n    selector: string | ReadPreference | ServerSelector,\n    topologyDescription: TopologyDescription,\n    address: string,\n    operation: string\n  ) {\n    super(selector, topologyDescription, operation);\n    const { host, port } = HostAddress.fromString(address).toHostPort();\n    this.serverHost = host;\n    this.serverPort = port;\n  }\n}\n\n/**\n * An event published when server selection is waiting for a suitable server to become available\n * @internal\n * @category Event\n */\nexport class WaitingForSuitableServerEvent extends ServerSelectionEvent {\n  /** @internal */\n  name = WAITING_FOR_SUITABLE_SERVER;\n  message = 'Waiting for suitable server to become available';\n  /** The remaining time left until server selection will time out. */\n  remainingTimeMS: number;\n\n  /** @internal */\n  constructor(\n    selector: string | ReadPreference | ServerSelector,\n    topologyDescription: TopologyDescription,\n    remainingTimeMS: number,\n    operation: string\n  ) {\n    super(selector, topologyDescription, operation);\n    this.remainingTimeMS = remainingTimeMS;\n  }\n}\n", "import * as dns from 'dns';\nimport { clearTimeout, setTimeout } from 'timers';\n\nimport { MongoRuntimeError } from '../error';\nimport { TypedEventEmitter } from '../mongo_types';\nimport { checkParentDomainMatch, HostAddress, noop, squashError } from '../utils';\n\n/**\n * @internal\n * @category Event\n */\nexport class SrvPollingEvent {\n  srvRecords: dns.SrvRecord[];\n  constructor(srvRecords: dns.SrvRecord[]) {\n    this.srvRecords = srvRecords;\n  }\n\n  hostnames(): Set<string> {\n    return new Set(this.srvRecords.map(r => HostAddress.fromSrvRecord(r).toString()));\n  }\n}\n\n/** @internal */\nexport interface SrvPollerOptions {\n  srvServiceName: string;\n  srvMaxHosts: number;\n  srvHost: string;\n  heartbeatFrequencyMS: number;\n}\n\n/** @internal */\nexport type SrvPollerEvents = {\n  srvRecordDiscovery(event: SrvPollingEvent): void;\n};\n\n/** @internal */\nexport class SrvPoller extends TypedEventEmitter<SrvPollerEvents> {\n  srvHost: string;\n  rescanSrvIntervalMS: number;\n  heartbeatFrequencyMS: number;\n  haMode: boolean;\n  generation: number;\n  srvMaxHosts: number;\n  srvServiceName: string;\n  _timeout?: NodeJS.Timeout;\n\n  /** @event */\n  static readonly SRV_RECORD_DISCOVERY = 'srvRecordDiscovery' as const;\n\n  constructor(options: SrvPollerOptions) {\n    super();\n    this.on('error', noop);\n\n    if (!options || !options.srvHost) {\n      throw new MongoRuntimeError('Options for SrvPoller must exist and include srvHost');\n    }\n\n    this.srvHost = options.srvHost;\n    this.srvMaxHosts = options.srvMaxHosts ?? 0;\n    this.srvServiceName = options.srvServiceName ?? 'mongodb';\n    this.rescanSrvIntervalMS = 60000;\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 10000;\n\n    this.haMode = false;\n    this.generation = 0;\n\n    this._timeout = undefined;\n  }\n\n  get srvAddress(): string {\n    return `_${this.srvServiceName}._tcp.${this.srvHost}`;\n  }\n\n  get intervalMS(): number {\n    return this.haMode ? this.heartbeatFrequencyMS : this.rescanSrvIntervalMS;\n  }\n\n  start(): void {\n    if (!this._timeout) {\n      this.schedule();\n    }\n  }\n\n  stop(): void {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this.generation += 1;\n      this._timeout = undefined;\n    }\n  }\n\n  // TODO(NODE-4994): implement new logging logic for SrvPoller failures\n  schedule(): void {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._poll().then(undefined, squashError);\n    }, this.intervalMS);\n  }\n\n  success(srvRecords: dns.SrvRecord[]): void {\n    this.haMode = false;\n    this.schedule();\n    this.emit(SrvPoller.SRV_RECORD_DISCOVERY, new SrvPollingEvent(srvRecords));\n  }\n\n  failure(): void {\n    this.haMode = true;\n    this.schedule();\n  }\n\n  async _poll(): Promise<void> {\n    const generation = this.generation;\n    let srvRecords;\n\n    try {\n      srvRecords = await dns.promises.resolveSrv(this.srvAddress);\n    } catch {\n      this.failure();\n      return;\n    }\n\n    if (generation !== this.generation) {\n      return;\n    }\n\n    const finalAddresses: dns.SrvRecord[] = [];\n    for (const record of srvRecords) {\n      try {\n        checkParentDomainMatch(record.name, this.srvHost);\n        finalAddresses.push(record);\n      } catch (error) {\n        squashError(error);\n      }\n    }\n\n    if (!finalAddresses.length) {\n      this.failure();\n      return;\n    }\n\n    this.success(finalAddresses);\n  }\n}\n", "import type { BSONSerializeOptions, Document } from '../bson';\nimport type { MongoCredentials } from '../cmap/auth/mongo_credentials';\nimport type { ConnectionEvents } from '../cmap/connection';\nimport type { ConnectionPoolEvents } from '../cmap/connection_pool';\nimport type { ClientMetadata } from '../cmap/handshake/client_metadata';\nimport { DEFAULT_OPTIONS } from '../connection_string';\nimport {\n  CLOSE,\n  CONNECT,\n  ERROR,\n  LOCAL_SERVER_EVENTS,\n  OPEN,\n  SERVER_CLOSED,\n  SERVER_DESCRIPTION_CHANGED,\n  SERVER_OPENING,\n  SERVER_RELAY_EVENTS,\n  TIMEOUT,\n  TOPOLOGY_CLOSED,\n  TOPOLOGY_DESCRIPTION_CHANGED,\n  TOPOLOGY_OPENING\n} from '../constants';\nimport {\n  MongoCompatibilityError,\n  type MongoDriverError,\n  MongoError,\n  MongoErrorLabel,\n  MongoOperationTimeoutError,\n  MongoRuntimeError,\n  MongoServerSelectionError,\n  MongoTopologyClosedError\n} from '../error';\nimport type { MongoClient, ServerApi } from '../mongo_client';\nimport { MongoLoggableComponent, type MongoLogger, SeverityLevel } from '../mongo_logger';\nimport { type Abortable, TypedEventEmitter } from '../mongo_types';\nimport { ReadPreference, type ReadPreferenceLike } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport { Timeout, TimeoutContext, TimeoutError } from '../timeout';\nimport type { Transaction } from '../transactions';\nimport {\n  addAbortListener,\n  type Callback,\n  type EventEmitterWithState,\n  HostAddress,\n  kDispose,\n  List,\n  makeStateMachine,\n  noop,\n  now,\n  ns,\n  promiseWithResolvers,\n  shuffle\n} from '../utils';\nimport {\n  _advanceClusterTime,\n  type ClusterTime,\n  ServerType,\n  STATE_CLOSED,\n  STATE_CLOSING,\n  STATE_CONNECTED,\n  STATE_CONNECTING,\n  TopologyType\n} from './common';\nimport {\n  ServerClosedEvent,\n  ServerDescriptionChangedEvent,\n  ServerOpeningEvent,\n  TopologyClosedEvent,\n  TopologyDescriptionChangedEvent,\n  TopologyOpeningEvent\n} from './events';\nimport type { ServerMonitoringMode } from './monitor';\nimport { Server, type ServerEvents, type ServerOptions } from './server';\nimport { compareTopologyVersion, ServerDescription } from './server_description';\nimport { readPreferenceServerSelector, type ServerSelector } from './server_selection';\nimport {\n  ServerSelectionFailedEvent,\n  ServerSelectionStartedEvent,\n  ServerSelectionSucceededEvent,\n  WaitingForSuitableServerEvent\n} from './server_selection_events';\nimport { SrvPoller, type SrvPollingEvent } from './srv_polling';\nimport { TopologyDescription } from './topology_description';\n\n// Global state\nlet globalTopologyCounter = 0;\n\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_CONNECTING],\n  [STATE_CONNECTING]: [STATE_CONNECTING, STATE_CLOSING, STATE_CONNECTED, STATE_CLOSED],\n  [STATE_CONNECTED]: [STATE_CONNECTED, STATE_CLOSING, STATE_CLOSED],\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_CLOSED]\n});\n\n/** @internal */\nexport type ServerSelectionCallback = Callback<Server>;\n\n/** @internal */\nexport interface ServerSelectionRequest {\n  serverSelector: ServerSelector;\n  topologyDescription: TopologyDescription;\n  mongoLogger: MongoLogger | undefined;\n  transaction?: Transaction;\n  startTime: number;\n  resolve: (server: Server) => void;\n  reject: (error: MongoError) => void;\n  cancelled: boolean;\n  operationName: string;\n  waitingLogged: boolean;\n  previousServer?: ServerDescription;\n}\n\n/** @internal */\nexport interface TopologyPrivate {\n  /** the id of this topology */\n  id: number;\n  /** passed in options */\n  options: TopologyOptions;\n  /** initial seedlist of servers to connect to */\n  seedlist: HostAddress[];\n  /** initial state */\n  state: string;\n  /** the topology description */\n  description: TopologyDescription;\n  serverSelectionTimeoutMS: number;\n  heartbeatFrequencyMS: number;\n  minHeartbeatFrequencyMS: number;\n  /** A map of server instances to normalized addresses */\n  servers: Map<string, Server>;\n  credentials?: MongoCredentials;\n  clusterTime?: ClusterTime;\n\n  /** related to srv polling */\n  srvPoller?: SrvPoller;\n  detectShardedTopology: (event: TopologyDescriptionChangedEvent) => void;\n  detectSrvRecords: (event: SrvPollingEvent) => void;\n}\n\n/** @internal */\nexport interface TopologyOptions extends BSONSerializeOptions, ServerOptions {\n  srvMaxHosts: number;\n  srvServiceName: string;\n  hosts: HostAddress[];\n  retryWrites: boolean;\n  retryReads: boolean;\n  /** How long to block for server selection before throwing an error */\n  serverSelectionTimeoutMS: number;\n  /** The name of the replica set to connect to */\n  replicaSet?: string;\n  srvHost?: string;\n  srvPoller?: SrvPoller;\n  /** Indicates that a client should directly connect to a node without attempting to discover its topology type */\n  directConnection: boolean;\n  loadBalanced: boolean;\n  metadata: ClientMetadata;\n  extendedMetadata: Promise<Document>;\n  serverMonitoringMode: ServerMonitoringMode;\n  /** MongoDB server API version */\n  serverApi?: ServerApi;\n  __skipPingOnConnect?: boolean;\n}\n\n/** @public */\nexport interface ConnectOptions {\n  readPreference?: ReadPreference;\n}\n\n/** @public */\nexport interface SelectServerOptions {\n  readPreference?: ReadPreferenceLike;\n  /** How long to block for server selection before throwing an error */\n  serverSelectionTimeoutMS?: number;\n  session?: ClientSession;\n  operationName: string;\n  previousServer?: ServerDescription;\n  /**\n   * @internal\n   * TODO(NODE-6496): Make this required by making ChangeStream use LegacyTimeoutContext\n   * */\n  timeoutContext?: TimeoutContext;\n}\n\n/** @public */\nexport type TopologyEvents = {\n  /** Top level MongoClient doesn't emit this so it is marked: @internal */\n  connect(topology: Topology): void;\n  serverOpening(event: ServerOpeningEvent): void;\n  serverClosed(event: ServerClosedEvent): void;\n  serverDescriptionChanged(event: ServerDescriptionChangedEvent): void;\n  topologyClosed(event: TopologyClosedEvent): void;\n  topologyOpening(event: TopologyOpeningEvent): void;\n  topologyDescriptionChanged(event: TopologyDescriptionChangedEvent): void;\n  error(error: Error): void;\n  /** @internal */\n  open(topology: Topology): void;\n  close(): void;\n  timeout(): void;\n} & Omit<ServerEvents, 'connect'> &\n  ConnectionPoolEvents &\n  ConnectionEvents &\n  EventEmitterWithState;\n/**\n * A container of server instances representing a connection to a MongoDB topology.\n * @internal\n */\nexport class Topology extends TypedEventEmitter<TopologyEvents> {\n  /** @internal */\n  s: TopologyPrivate;\n  /** @internal */\n  waitQueue: List<ServerSelectionRequest>;\n  /** @internal */\n  hello?: Document;\n  /** @internal */\n  _type?: string;\n\n  client!: MongoClient;\n\n  /** @internal */\n  private connectionLock?: Promise<Topology>;\n\n  /** @event */\n  static readonly SERVER_OPENING = SERVER_OPENING;\n  /** @event */\n  static readonly SERVER_CLOSED = SERVER_CLOSED;\n  /** @event */\n  static readonly SERVER_DESCRIPTION_CHANGED = SERVER_DESCRIPTION_CHANGED;\n  /** @event */\n  static readonly TOPOLOGY_OPENING = TOPOLOGY_OPENING;\n  /** @event */\n  static readonly TOPOLOGY_CLOSED = TOPOLOGY_CLOSED;\n  /** @event */\n  static readonly TOPOLOGY_DESCRIPTION_CHANGED = TOPOLOGY_DESCRIPTION_CHANGED;\n  /** @event */\n  static readonly ERROR = ERROR;\n  /** @event */\n  static readonly OPEN = OPEN;\n  /** @event */\n  static readonly CONNECT = CONNECT;\n  /** @event */\n  static readonly CLOSE = CLOSE;\n  /** @event */\n  static readonly TIMEOUT = TIMEOUT;\n\n  /**\n   * @param seedlist - a list of HostAddress instances to connect to\n   */\n  constructor(\n    client: MongoClient,\n    seeds: string | string[] | HostAddress | HostAddress[],\n    options: TopologyOptions\n  ) {\n    super();\n    this.on('error', noop);\n\n    this.client = client;\n    // Options should only be undefined in tests, MongoClient will always have defined options\n    options = options ?? {\n      hosts: [HostAddress.fromString('localhost:27017')],\n      ...Object.fromEntries(DEFAULT_OPTIONS.entries())\n    };\n\n    if (typeof seeds === 'string') {\n      seeds = [HostAddress.fromString(seeds)];\n    } else if (!Array.isArray(seeds)) {\n      seeds = [seeds];\n    }\n\n    const seedlist: HostAddress[] = [];\n    for (const seed of seeds) {\n      if (typeof seed === 'string') {\n        seedlist.push(HostAddress.fromString(seed));\n      } else if (seed instanceof HostAddress) {\n        seedlist.push(seed);\n      } else {\n        // FIXME(NODE-3483): May need to be a MongoParseError\n        throw new MongoRuntimeError(`Topology cannot be constructed from ${JSON.stringify(seed)}`);\n      }\n    }\n\n    const topologyType = topologyTypeFromOptions(options);\n    const topologyId = globalTopologyCounter++;\n\n    const selectedHosts =\n      options.srvMaxHosts == null ||\n      options.srvMaxHosts === 0 ||\n      options.srvMaxHosts >= seedlist.length\n        ? seedlist\n        : shuffle(seedlist, options.srvMaxHosts);\n\n    const serverDescriptions = new Map();\n    for (const hostAddress of selectedHosts) {\n      serverDescriptions.set(hostAddress.toString(), new ServerDescription(hostAddress));\n    }\n\n    this.waitQueue = new List();\n    this.s = {\n      // the id of this topology\n      id: topologyId,\n      // passed in options\n      options,\n      // initial seedlist of servers to connect to\n      seedlist,\n      // initial state\n      state: STATE_CLOSED,\n      // the topology description\n      description: new TopologyDescription(\n        topologyType,\n        serverDescriptions,\n        options.replicaSet,\n        undefined,\n        undefined,\n        undefined,\n        options\n      ),\n      serverSelectionTimeoutMS: options.serverSelectionTimeoutMS,\n      heartbeatFrequencyMS: options.heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: options.minHeartbeatFrequencyMS,\n      // a map of server instances to normalized addresses\n      servers: new Map(),\n      credentials: options?.credentials,\n      clusterTime: undefined,\n\n      detectShardedTopology: ev => this.detectShardedTopology(ev),\n      detectSrvRecords: ev => this.detectSrvRecords(ev)\n    };\n\n    this.mongoLogger = client.mongoLogger;\n    this.component = 'topology';\n\n    if (options.srvHost && !options.loadBalanced) {\n      this.s.srvPoller =\n        options.srvPoller ??\n        new SrvPoller({\n          heartbeatFrequencyMS: this.s.heartbeatFrequencyMS,\n          srvHost: options.srvHost,\n          srvMaxHosts: options.srvMaxHosts,\n          srvServiceName: options.srvServiceName\n        });\n\n      this.on(Topology.TOPOLOGY_DESCRIPTION_CHANGED, this.s.detectShardedTopology);\n    }\n    this.connectionLock = undefined;\n  }\n\n  private detectShardedTopology(event: TopologyDescriptionChangedEvent) {\n    const previousType = event.previousDescription.type;\n    const newType = event.newDescription.type;\n\n    const transitionToSharded =\n      previousType !== TopologyType.Sharded && newType === TopologyType.Sharded;\n    const srvListeners = this.s.srvPoller?.listeners(SrvPoller.SRV_RECORD_DISCOVERY);\n    const listeningToSrvPolling = !!srvListeners?.includes(this.s.detectSrvRecords);\n\n    if (transitionToSharded && !listeningToSrvPolling) {\n      this.s.srvPoller?.on(SrvPoller.SRV_RECORD_DISCOVERY, this.s.detectSrvRecords);\n      this.s.srvPoller?.start();\n    }\n  }\n\n  private detectSrvRecords(ev: SrvPollingEvent) {\n    const previousTopologyDescription = this.s.description;\n    this.s.description = this.s.description.updateFromSrvPollingEvent(\n      ev,\n      this.s.options.srvMaxHosts\n    );\n    if (this.s.description === previousTopologyDescription) {\n      // Nothing changed, so return\n      return;\n    }\n\n    updateServers(this);\n\n    this.emitAndLog(\n      Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n      new TopologyDescriptionChangedEvent(\n        this.s.id,\n        previousTopologyDescription,\n        this.s.description\n      )\n    );\n  }\n\n  /**\n   * @returns A `TopologyDescription` for this topology\n   */\n  get description(): TopologyDescription {\n    return this.s.description;\n  }\n\n  get loadBalanced(): boolean {\n    return this.s.options.loadBalanced;\n  }\n\n  get serverApi(): ServerApi | undefined {\n    return this.s.options.serverApi;\n  }\n\n  get capabilities(): ServerCapabilities {\n    return new ServerCapabilities(this.lastHello());\n  }\n\n  /** Initiate server connect */\n  async connect(options?: ConnectOptions): Promise<Topology> {\n    this.connectionLock ??= this._connect(options);\n    try {\n      await this.connectionLock;\n      return this;\n    } finally {\n      this.connectionLock = undefined;\n    }\n  }\n\n  private async _connect(options?: ConnectOptions): Promise<Topology> {\n    options = options ?? {};\n    if (this.s.state === STATE_CONNECTED) {\n      return this;\n    }\n\n    stateTransition(this, STATE_CONNECTING);\n\n    // emit SDAM monitoring events\n    this.emitAndLog(Topology.TOPOLOGY_OPENING, new TopologyOpeningEvent(this.s.id));\n\n    // emit an event for the topology change\n    this.emitAndLog(\n      Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n      new TopologyDescriptionChangedEvent(\n        this.s.id,\n        new TopologyDescription(TopologyType.Unknown), // initial is always Unknown\n        this.s.description\n      )\n    );\n\n    // connect all known servers, then attempt server selection to connect\n    const serverDescriptions = Array.from(this.s.description.servers.values());\n    this.s.servers = new Map(\n      serverDescriptions.map(serverDescription => [\n        serverDescription.address,\n        createAndConnectServer(this, serverDescription)\n      ])\n    );\n\n    // In load balancer mode we need to fake a server description getting\n    // emitted from the monitor, since the monitor doesn't exist.\n    if (this.s.options.loadBalanced) {\n      for (const description of serverDescriptions) {\n        const newDescription = new ServerDescription(description.hostAddress, undefined, {\n          loadBalanced: this.s.options.loadBalanced\n        });\n        this.serverUpdateHandler(newDescription);\n      }\n    }\n\n    const serverSelectionTimeoutMS = this.client.s.options.serverSelectionTimeoutMS;\n    const readPreference = options.readPreference ?? ReadPreference.primary;\n    const timeoutContext = TimeoutContext.create({\n      // TODO(NODE-6448): auto-connect ignores timeoutMS; potential future feature\n      timeoutMS: undefined,\n      serverSelectionTimeoutMS,\n      waitQueueTimeoutMS: this.client.s.options.waitQueueTimeoutMS\n    });\n    const selectServerOptions = {\n      operationName: 'ping',\n      ...options,\n      timeoutContext\n    };\n\n    try {\n      const server = await this.selectServer(\n        readPreferenceServerSelector(readPreference),\n        selectServerOptions\n      );\n      const skipPingOnConnect = this.s.options.__skipPingOnConnect === true;\n      if (!skipPingOnConnect && this.s.credentials) {\n        await server.command(ns('admin.$cmd'), { ping: 1 }, { timeoutContext });\n        stateTransition(this, STATE_CONNECTED);\n        this.emit(Topology.OPEN, this);\n        this.emit(Topology.CONNECT, this);\n\n        return this;\n      }\n\n      stateTransition(this, STATE_CONNECTED);\n      this.emit(Topology.OPEN, this);\n      this.emit(Topology.CONNECT, this);\n\n      return this;\n    } catch (error) {\n      this.close();\n      throw error;\n    }\n  }\n\n  /** Close this topology */\n  close(): void {\n    if (this.s.state === STATE_CLOSED || this.s.state === STATE_CLOSING) {\n      return;\n    }\n\n    for (const server of this.s.servers.values()) {\n      destroyServer(server, this);\n    }\n\n    this.s.servers.clear();\n\n    stateTransition(this, STATE_CLOSING);\n\n    drainWaitQueue(this.waitQueue, new MongoTopologyClosedError());\n\n    if (this.s.srvPoller) {\n      this.s.srvPoller.stop();\n      this.s.srvPoller.removeListener(SrvPoller.SRV_RECORD_DISCOVERY, this.s.detectSrvRecords);\n    }\n\n    this.removeListener(Topology.TOPOLOGY_DESCRIPTION_CHANGED, this.s.detectShardedTopology);\n\n    stateTransition(this, STATE_CLOSED);\n\n    // emit an event for close\n    this.emitAndLog(Topology.TOPOLOGY_CLOSED, new TopologyClosedEvent(this.s.id));\n  }\n\n  /**\n   * Selects a server according to the selection predicate provided\n   *\n   * @param selector - An optional selector to select servers by, defaults to a random selection within a latency window\n   * @param options - Optional settings related to server selection\n   * @param callback - The callback used to indicate success or failure\n   * @returns An instance of a `Server` meeting the criteria of the predicate provided\n   */\n  async selectServer(\n    selector: string | ReadPreference | ServerSelector,\n    options: SelectServerOptions & Abortable\n  ): Promise<Server> {\n    let serverSelector;\n    if (typeof selector !== 'function') {\n      if (typeof selector === 'string') {\n        serverSelector = readPreferenceServerSelector(ReadPreference.fromString(selector));\n      } else {\n        let readPreference;\n        if (selector instanceof ReadPreference) {\n          readPreference = selector;\n        } else {\n          ReadPreference.translate(options);\n          readPreference = options.readPreference || ReadPreference.primary;\n        }\n\n        serverSelector = readPreferenceServerSelector(readPreference as ReadPreference);\n      }\n    } else {\n      serverSelector = selector;\n    }\n\n    options = { serverSelectionTimeoutMS: this.s.serverSelectionTimeoutMS, ...options };\n    if (\n      this.client.mongoLogger?.willLog(MongoLoggableComponent.SERVER_SELECTION, SeverityLevel.DEBUG)\n    ) {\n      this.client.mongoLogger?.debug(\n        MongoLoggableComponent.SERVER_SELECTION,\n        new ServerSelectionStartedEvent(selector, this.description, options.operationName)\n      );\n    }\n    let timeout;\n    if (options.timeoutContext) timeout = options.timeoutContext.serverSelectionTimeout;\n    else {\n      timeout = Timeout.expires(options.serverSelectionTimeoutMS ?? 0);\n    }\n\n    const isSharded = this.description.type === TopologyType.Sharded;\n    const session = options.session;\n    const transaction = session && session.transaction;\n\n    if (isSharded && transaction && transaction.server) {\n      if (\n        this.client.mongoLogger?.willLog(\n          MongoLoggableComponent.SERVER_SELECTION,\n          SeverityLevel.DEBUG\n        )\n      ) {\n        this.client.mongoLogger?.debug(\n          MongoLoggableComponent.SERVER_SELECTION,\n          new ServerSelectionSucceededEvent(\n            selector,\n            this.description,\n            transaction.server.pool.address,\n            options.operationName\n          )\n        );\n      }\n      if (options.timeoutContext?.clearServerSelectionTimeout) timeout?.clear();\n      return transaction.server;\n    }\n\n    const { promise: serverPromise, resolve, reject } = promiseWithResolvers<Server>();\n\n    const waitQueueMember: ServerSelectionRequest = {\n      serverSelector,\n      topologyDescription: this.description,\n      mongoLogger: this.client.mongoLogger,\n      transaction,\n      resolve,\n      reject,\n      cancelled: false,\n      startTime: now(),\n      operationName: options.operationName,\n      waitingLogged: false,\n      previousServer: options.previousServer\n    };\n\n    const abortListener = addAbortListener(options.signal, function () {\n      waitQueueMember.cancelled = true;\n      reject(this.reason);\n    });\n\n    this.waitQueue.push(waitQueueMember);\n    processWaitQueue(this);\n\n    try {\n      timeout?.throwIfExpired();\n      const server = await (timeout ? Promise.race([serverPromise, timeout]) : serverPromise);\n      if (options.timeoutContext?.csotEnabled() && server.description.minRoundTripTime !== 0) {\n        options.timeoutContext.minRoundTripTime = server.description.minRoundTripTime;\n      }\n      return server;\n    } catch (error) {\n      if (TimeoutError.is(error)) {\n        // Timeout\n        waitQueueMember.cancelled = true;\n        const timeoutError = new MongoServerSelectionError(\n          `Server selection timed out after ${timeout?.duration} ms`,\n          this.description\n        );\n        if (\n          this.client.mongoLogger?.willLog(\n            MongoLoggableComponent.SERVER_SELECTION,\n            SeverityLevel.DEBUG\n          )\n        ) {\n          this.client.mongoLogger?.debug(\n            MongoLoggableComponent.SERVER_SELECTION,\n            new ServerSelectionFailedEvent(\n              selector,\n              this.description,\n              timeoutError,\n              options.operationName\n            )\n          );\n        }\n\n        if (options.timeoutContext?.csotEnabled()) {\n          throw new MongoOperationTimeoutError('Timed out during server selection', {\n            cause: timeoutError\n          });\n        }\n        throw timeoutError;\n      }\n      // Other server selection error\n      throw error;\n    } finally {\n      abortListener?.[kDispose]();\n      if (options.timeoutContext?.clearServerSelectionTimeout) timeout?.clear();\n    }\n  }\n  /**\n   * Update the internal TopologyDescription with a ServerDescription\n   *\n   * @param serverDescription - The server to update in the internal list of server descriptions\n   */\n  serverUpdateHandler(serverDescription: ServerDescription): void {\n    if (!this.s.description.hasServer(serverDescription.address)) {\n      return;\n    }\n\n    // ignore this server update if its from an outdated topologyVersion\n    if (isStaleServerDescription(this.s.description, serverDescription)) {\n      return;\n    }\n\n    // these will be used for monitoring events later\n    const previousTopologyDescription = this.s.description;\n    const previousServerDescription = this.s.description.servers.get(serverDescription.address);\n    if (!previousServerDescription) {\n      return;\n    }\n\n    // Driver Sessions Spec: \"Whenever a driver receives a cluster time from\n    // a server it MUST compare it to the current highest seen cluster time\n    // for the deployment. If the new cluster time is higher than the\n    // highest seen cluster time it MUST become the new highest seen cluster\n    // time. Two cluster times are compared using only the BsonTimestamp\n    // value of the clusterTime embedded field.\"\n    const clusterTime = serverDescription.$clusterTime;\n    if (clusterTime) {\n      _advanceClusterTime(this, clusterTime);\n    }\n\n    // If we already know all the information contained in this updated description, then\n    // we don't need to emit SDAM events, but still need to update the description, in order\n    // to keep client-tracked attributes like last update time and round trip time up to date\n    const equalDescriptions =\n      previousServerDescription && previousServerDescription.equals(serverDescription);\n\n    // first update the TopologyDescription\n    this.s.description = this.s.description.update(serverDescription);\n    if (this.s.description.compatibilityError) {\n      this.emit(Topology.ERROR, new MongoCompatibilityError(this.s.description.compatibilityError));\n      return;\n    }\n\n    // emit monitoring events for this change\n    if (!equalDescriptions) {\n      const newDescription = this.s.description.servers.get(serverDescription.address);\n      if (newDescription) {\n        this.emit(\n          Topology.SERVER_DESCRIPTION_CHANGED,\n          new ServerDescriptionChangedEvent(\n            this.s.id,\n            serverDescription.address,\n            previousServerDescription,\n            newDescription\n          )\n        );\n      }\n    }\n\n    // update server list from updated descriptions\n    updateServers(this, serverDescription);\n\n    // attempt to resolve any outstanding server selection attempts\n    if (this.waitQueue.length > 0) {\n      processWaitQueue(this);\n    }\n\n    if (!equalDescriptions) {\n      this.emitAndLog(\n        Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n        new TopologyDescriptionChangedEvent(\n          this.s.id,\n          previousTopologyDescription,\n          this.s.description\n        )\n      );\n    }\n  }\n\n  auth(credentials?: MongoCredentials, callback?: Callback): void {\n    if (typeof credentials === 'function') (callback = credentials), (credentials = undefined);\n    if (typeof callback === 'function') callback(undefined, true);\n  }\n\n  get clientMetadata(): ClientMetadata {\n    return this.s.options.metadata;\n  }\n\n  isConnected(): boolean {\n    return this.s.state === STATE_CONNECTED;\n  }\n\n  isDestroyed(): boolean {\n    return this.s.state === STATE_CLOSED;\n  }\n\n  // NOTE: There are many places in code where we explicitly check the last hello\n  //       to do feature support detection. This should be done any other way, but for\n  //       now we will just return the first hello seen, which should suffice.\n  lastHello(): Document {\n    const serverDescriptions = Array.from(this.description.servers.values());\n    if (serverDescriptions.length === 0) return {};\n    const sd = serverDescriptions.filter(\n      (sd: ServerDescription) => sd.type !== ServerType.Unknown\n    )[0];\n\n    const result = sd || { maxWireVersion: this.description.commonWireVersion };\n    return result;\n  }\n\n  get commonWireVersion(): number | undefined {\n    return this.description.commonWireVersion;\n  }\n\n  get logicalSessionTimeoutMinutes(): number | null {\n    return this.description.logicalSessionTimeoutMinutes;\n  }\n\n  get clusterTime(): ClusterTime | undefined {\n    return this.s.clusterTime;\n  }\n\n  set clusterTime(clusterTime: ClusterTime | undefined) {\n    this.s.clusterTime = clusterTime;\n  }\n}\n\n/** Destroys a server, and removes all event listeners from the instance */\nfunction destroyServer(server: Server, topology: Topology) {\n  for (const event of LOCAL_SERVER_EVENTS) {\n    server.removeAllListeners(event);\n  }\n\n  server.destroy();\n  topology.emitAndLog(\n    Topology.SERVER_CLOSED,\n    new ServerClosedEvent(topology.s.id, server.description.address)\n  );\n\n  for (const event of SERVER_RELAY_EVENTS) {\n    server.removeAllListeners(event);\n  }\n}\n\n/** Predicts the TopologyType from options */\nfunction topologyTypeFromOptions(options?: TopologyOptions) {\n  if (options?.directConnection) {\n    return TopologyType.Single;\n  }\n\n  if (options?.replicaSet) {\n    return TopologyType.ReplicaSetNoPrimary;\n  }\n\n  if (options?.loadBalanced) {\n    return TopologyType.LoadBalanced;\n  }\n\n  return TopologyType.Unknown;\n}\n\n/**\n * Creates new server instances and attempts to connect them\n *\n * @param topology - The topology that this server belongs to\n * @param serverDescription - The description for the server to initialize and connect to\n */\nfunction createAndConnectServer(topology: Topology, serverDescription: ServerDescription) {\n  topology.emitAndLog(\n    Topology.SERVER_OPENING,\n    new ServerOpeningEvent(topology.s.id, serverDescription.address)\n  );\n\n  const server = new Server(topology, serverDescription, topology.s.options);\n  for (const event of SERVER_RELAY_EVENTS) {\n    server.on(event, (e: any) => topology.emit(event, e));\n  }\n\n  server.on(Server.DESCRIPTION_RECEIVED, description => topology.serverUpdateHandler(description));\n\n  server.connect();\n  return server;\n}\n\n/**\n * @param topology - Topology to update.\n * @param incomingServerDescription - New server description.\n */\nfunction updateServers(topology: Topology, incomingServerDescription?: ServerDescription) {\n  // update the internal server's description\n  if (incomingServerDescription && topology.s.servers.has(incomingServerDescription.address)) {\n    const server = topology.s.servers.get(incomingServerDescription.address);\n    if (server) {\n      server.s.description = incomingServerDescription;\n      if (\n        incomingServerDescription.error instanceof MongoError &&\n        incomingServerDescription.error.hasErrorLabel(MongoErrorLabel.ResetPool)\n      ) {\n        const interruptInUseConnections = incomingServerDescription.error.hasErrorLabel(\n          MongoErrorLabel.InterruptInUseConnections\n        );\n\n        server.pool.clear({ interruptInUseConnections });\n      } else if (incomingServerDescription.error == null) {\n        const newTopologyType = topology.s.description.type;\n        const shouldMarkPoolReady =\n          incomingServerDescription.isDataBearing ||\n          (incomingServerDescription.type !== ServerType.Unknown &&\n            newTopologyType === TopologyType.Single);\n        if (shouldMarkPoolReady) {\n          server.pool.ready();\n        }\n      }\n    }\n  }\n\n  // add new servers for all descriptions we currently don't know about locally\n  for (const serverDescription of topology.description.servers.values()) {\n    if (!topology.s.servers.has(serverDescription.address)) {\n      const server = createAndConnectServer(topology, serverDescription);\n      topology.s.servers.set(serverDescription.address, server);\n    }\n  }\n\n  // for all servers no longer known, remove their descriptions and destroy their instances\n  for (const entry of topology.s.servers) {\n    const serverAddress = entry[0];\n    if (topology.description.hasServer(serverAddress)) {\n      continue;\n    }\n\n    if (!topology.s.servers.has(serverAddress)) {\n      continue;\n    }\n\n    const server = topology.s.servers.get(serverAddress);\n    topology.s.servers.delete(serverAddress);\n\n    // prepare server for garbage collection\n    if (server) {\n      destroyServer(server, topology);\n    }\n  }\n}\n\nfunction drainWaitQueue(queue: List<ServerSelectionRequest>, drainError: MongoDriverError) {\n  while (queue.length) {\n    const waitQueueMember = queue.shift();\n    if (!waitQueueMember) {\n      continue;\n    }\n\n    if (!waitQueueMember.cancelled) {\n      if (\n        waitQueueMember.mongoLogger?.willLog(\n          MongoLoggableComponent.SERVER_SELECTION,\n          SeverityLevel.DEBUG\n        )\n      ) {\n        waitQueueMember.mongoLogger?.debug(\n          MongoLoggableComponent.SERVER_SELECTION,\n          new ServerSelectionFailedEvent(\n            waitQueueMember.serverSelector,\n            waitQueueMember.topologyDescription,\n            drainError,\n            waitQueueMember.operationName\n          )\n        );\n      }\n      waitQueueMember.reject(drainError);\n    }\n  }\n}\n\nfunction processWaitQueue(topology: Topology) {\n  if (topology.s.state === STATE_CLOSED) {\n    drainWaitQueue(topology.waitQueue, new MongoTopologyClosedError());\n    return;\n  }\n\n  const isSharded = topology.description.type === TopologyType.Sharded;\n  const serverDescriptions = Array.from(topology.description.servers.values());\n  const membersToProcess = topology.waitQueue.length;\n  for (let i = 0; i < membersToProcess; ++i) {\n    const waitQueueMember = topology.waitQueue.shift();\n    if (!waitQueueMember) {\n      continue;\n    }\n\n    if (waitQueueMember.cancelled) {\n      continue;\n    }\n\n    let selectedDescriptions;\n    try {\n      const serverSelector = waitQueueMember.serverSelector;\n      const previousServer = waitQueueMember.previousServer;\n      selectedDescriptions = serverSelector\n        ? serverSelector(\n            topology.description,\n            serverDescriptions,\n            previousServer ? [previousServer] : []\n          )\n        : serverDescriptions;\n    } catch (selectorError) {\n      if (\n        topology.client.mongoLogger?.willLog(\n          MongoLoggableComponent.SERVER_SELECTION,\n          SeverityLevel.DEBUG\n        )\n      ) {\n        topology.client.mongoLogger?.debug(\n          MongoLoggableComponent.SERVER_SELECTION,\n          new ServerSelectionFailedEvent(\n            waitQueueMember.serverSelector,\n            topology.description,\n            selectorError,\n            waitQueueMember.operationName\n          )\n        );\n      }\n      waitQueueMember.reject(selectorError);\n      continue;\n    }\n\n    let selectedServer: Server | undefined;\n    if (selectedDescriptions.length === 0) {\n      if (!waitQueueMember.waitingLogged) {\n        if (\n          topology.client.mongoLogger?.willLog(\n            MongoLoggableComponent.SERVER_SELECTION,\n            SeverityLevel.INFORMATIONAL\n          )\n        ) {\n          topology.client.mongoLogger?.info(\n            MongoLoggableComponent.SERVER_SELECTION,\n            new WaitingForSuitableServerEvent(\n              waitQueueMember.serverSelector,\n              topology.description,\n              topology.s.serverSelectionTimeoutMS !== 0\n                ? topology.s.serverSelectionTimeoutMS - (now() - waitQueueMember.startTime)\n                : -1,\n              waitQueueMember.operationName\n            )\n          );\n        }\n        waitQueueMember.waitingLogged = true;\n      }\n      topology.waitQueue.push(waitQueueMember);\n      continue;\n    } else if (selectedDescriptions.length === 1) {\n      selectedServer = topology.s.servers.get(selectedDescriptions[0].address);\n    } else {\n      const descriptions = shuffle(selectedDescriptions, 2);\n      const server1 = topology.s.servers.get(descriptions[0].address);\n      const server2 = topology.s.servers.get(descriptions[1].address);\n\n      selectedServer =\n        server1 && server2 && server1.s.operationCount < server2.s.operationCount\n          ? server1\n          : server2;\n    }\n\n    if (!selectedServer) {\n      const serverSelectionError = new MongoServerSelectionError(\n        'server selection returned a server description but the server was not found in the topology',\n        topology.description\n      );\n      if (\n        topology.client.mongoLogger?.willLog(\n          MongoLoggableComponent.SERVER_SELECTION,\n          SeverityLevel.DEBUG\n        )\n      ) {\n        topology.client.mongoLogger?.debug(\n          MongoLoggableComponent.SERVER_SELECTION,\n          new ServerSelectionFailedEvent(\n            waitQueueMember.serverSelector,\n            topology.description,\n            serverSelectionError,\n            waitQueueMember.operationName\n          )\n        );\n      }\n      waitQueueMember.reject(serverSelectionError);\n      return;\n    }\n    const transaction = waitQueueMember.transaction;\n    if (isSharded && transaction && transaction.isActive && selectedServer) {\n      transaction.pinServer(selectedServer);\n    }\n\n    if (\n      topology.client.mongoLogger?.willLog(\n        MongoLoggableComponent.SERVER_SELECTION,\n        SeverityLevel.DEBUG\n      )\n    ) {\n      topology.client.mongoLogger?.debug(\n        MongoLoggableComponent.SERVER_SELECTION,\n        new ServerSelectionSucceededEvent(\n          waitQueueMember.serverSelector,\n          waitQueueMember.topologyDescription,\n          selectedServer.pool.address,\n          waitQueueMember.operationName\n        )\n      );\n    }\n    waitQueueMember.resolve(selectedServer);\n  }\n\n  if (topology.waitQueue.length > 0) {\n    // ensure all server monitors attempt monitoring soon\n    for (const [, server] of topology.s.servers) {\n      process.nextTick(function scheduleServerCheck() {\n        return server.requestCheck();\n      });\n    }\n  }\n}\n\nfunction isStaleServerDescription(\n  topologyDescription: TopologyDescription,\n  incomingServerDescription: ServerDescription\n) {\n  const currentServerDescription = topologyDescription.servers.get(\n    incomingServerDescription.address\n  );\n  const currentTopologyVersion = currentServerDescription?.topologyVersion;\n  return (\n    compareTopologyVersion(currentTopologyVersion, incomingServerDescription.topologyVersion) > 0\n  );\n}\n\n/** @public */\nexport class ServerCapabilities {\n  maxWireVersion: number;\n  minWireVersion: number;\n\n  constructor(hello: Document) {\n    this.minWireVersion = hello.minWireVersion || 0;\n    this.maxWireVersion = hello.maxWireVersion || 0;\n  }\n\n  get hasAggregationCursor(): boolean {\n    return this.maxWireVersion >= 1;\n  }\n\n  get hasWriteCommands(): boolean {\n    return this.maxWireVersion >= 2;\n  }\n  get hasTextSearch(): boolean {\n    return this.minWireVersion >= 0;\n  }\n\n  get hasAuthCommands(): boolean {\n    return this.maxWireVersion >= 1;\n  }\n\n  get hasListCollectionsCommand(): boolean {\n    return this.maxWireVersion >= 3;\n  }\n\n  get hasListIndexesCommand(): boolean {\n    return this.maxWireVersion >= 3;\n  }\n\n  get supportsSnapshotReads(): boolean {\n    return this.maxWireVersion >= 13;\n  }\n\n  get commandsTakeWriteConcern(): boolean {\n    return this.maxWireVersion >= 5;\n  }\n\n  get commandsTakeCollation(): boolean {\n    return this.maxWireVersion >= 5;\n  }\n}\n", "import { promises as fs } from 'fs';\nimport type { TcpNetConnectOpts } from 'net';\nimport type { ConnectionOptions as TLSConnectionOptions, TLSSocketOptions } from 'tls';\n\nimport { type BSONSerializeOptions, type Document, resolveBSONOptions } from './bson';\nimport { ChangeStream, type ChangeStreamDocument, type ChangeStreamOptions } from './change_stream';\nimport type { AutoEncrypter, AutoEncryptionOptions } from './client-side-encryption/auto_encrypter';\nimport {\n  type AuthMechanismProperties,\n  DEFAULT_ALLOWED_HOSTS,\n  type MongoCredentials\n} from './cmap/auth/mongo_credentials';\nimport { type TokenCache } from './cmap/auth/mongodb_oidc/token_cache';\nimport { AuthMechanism } from './cmap/auth/providers';\nimport type { LEGAL_TCP_SOCKET_OPTIONS, LEGAL_TLS_SOCKET_OPTIONS } from './cmap/connect';\nimport type { Connection } from './cmap/connection';\nimport type { ClientMetadata } from './cmap/handshake/client_metadata';\nimport type { CompressorName } from './cmap/wire_protocol/compression';\nimport { parseOptions, resolveSRVRecord } from './connection_string';\nimport { MONGO_CLIENT_EVENTS } from './constants';\nimport { type AbstractCursor } from './cursor/abstract_cursor';\nimport { Db, type DbOptions } from './db';\nimport type { Encrypter } from './encrypter';\nimport { MongoInvalidArgumentError } from './error';\nimport { MongoClientAuthProviders } from './mongo_client_auth_providers';\nimport {\n  type LogComponentSeveritiesClientOptions,\n  type MongoDBLogWritable,\n  MongoLogger,\n  type MongoLoggerOptions,\n  SeverityLevel\n} from './mongo_logger';\nimport { TypedEventEmitter } from './mongo_types';\nimport {\n  type ClientBulkWriteModel,\n  type ClientBulkWriteOptions,\n  type ClientBulkWriteResult\n} from './operations/client_bulk_write/common';\nimport { ClientBulkWriteExecutor } from './operations/client_bulk_write/executor';\nimport { executeOperation } from './operations/execute_operation';\nimport { RunAdminCommandOperation } from './operations/run_command';\nimport type { ReadConcern, ReadConcernLevel, ReadConcernLike } from './read_concern';\nimport { ReadPreference, type ReadPreferenceMode } from './read_preference';\nimport { type AsyncDisposable, configureResourceManagement } from './resource_management';\nimport type { ServerMonitoringMode } from './sdam/monitor';\nimport type { TagSet } from './sdam/server_description';\nimport { readPreferenceServerSelector } from './sdam/server_selection';\nimport type { SrvPoller } from './sdam/srv_polling';\nimport { Topology, type TopologyEvents } from './sdam/topology';\nimport { ClientSession, type ClientSessionOptions, ServerSessionPool } from './sessions';\nimport {\n  COSMOS_DB_CHECK,\n  COSMOS_DB_MSG,\n  DOCUMENT_DB_CHECK,\n  DOCUMENT_DB_MSG,\n  type HostAddress,\n  hostMatchesWildcards,\n  isHostMatch,\n  type MongoDBNamespace,\n  noop,\n  ns,\n  resolveOptions,\n  squashError\n} from './utils';\nimport type { W, WriteConcern, WriteConcernSettings } from './write_concern';\n\n/** @public */\nexport const ServerApiVersion = Object.freeze({\n  v1: '1'\n} as const);\n\n/** @public */\nexport type ServerApiVersion = (typeof ServerApiVersion)[keyof typeof ServerApiVersion];\n\n/** @public */\nexport interface ServerApi {\n  version: ServerApiVersion;\n  strict?: boolean;\n  deprecationErrors?: boolean;\n}\n\n/** @public */\nexport interface DriverInfo {\n  name?: string;\n  version?: string;\n  platform?: string;\n}\n\n/** @public */\nexport interface Auth {\n  /** The username for auth */\n  username?: string;\n  /** The password for auth */\n  password?: string;\n}\n\n/** @public */\nexport interface PkFactory {\n  createPk(): any;\n}\n\n/** @public */\nexport type SupportedTLSConnectionOptions = Pick<\n  TLSConnectionOptions & {\n    allowPartialTrustChain?: boolean;\n  },\n  (typeof LEGAL_TLS_SOCKET_OPTIONS)[number]\n>;\n\n/** @public */\nexport type SupportedTLSSocketOptions = Pick<\n  TLSSocketOptions,\n  Extract<keyof TLSSocketOptions, (typeof LEGAL_TLS_SOCKET_OPTIONS)[number]>\n>;\n\n/** @public */\nexport type SupportedSocketOptions = Pick<\n  TcpNetConnectOpts & { autoSelectFamily?: boolean; autoSelectFamilyAttemptTimeout?: number },\n  (typeof LEGAL_TCP_SOCKET_OPTIONS)[number]\n>;\n\n/** @public */\nexport type SupportedNodeConnectionOptions = SupportedTLSConnectionOptions &\n  SupportedTLSSocketOptions &\n  SupportedSocketOptions;\n\n/**\n * Describes all possible URI query options for the mongo client\n * @public\n * @see https://www.mongodb.com/docs/manual/reference/connection-string\n */\nexport interface MongoClientOptions extends BSONSerializeOptions, SupportedNodeConnectionOptions {\n  /** Specifies the name of the replica set, if the mongod is a member of a replica set. */\n  replicaSet?: string;\n  /**\n   * @experimental\n   * Specifies the time an operation will run until it throws a timeout error\n   */\n  timeoutMS?: number;\n  /** Enables or disables TLS/SSL for the connection. */\n  tls?: boolean;\n  /** A boolean to enable or disables TLS/SSL for the connection. (The ssl option is equivalent to the tls option.) */\n  ssl?: boolean;\n  /** Specifies the location of a local .pem file that contains either the client's TLS/SSL certificate and key. */\n  tlsCertificateKeyFile?: string;\n  /** Specifies the password to de-crypt the tlsCertificateKeyFile. */\n  tlsCertificateKeyFilePassword?: string;\n  /** Specifies the location of a local .pem file that contains the root certificate chain from the Certificate Authority. This file is used to validate the certificate presented by the mongod/mongos instance. */\n  tlsCAFile?: string;\n  /** Specifies the location of a local CRL .pem file that contains the client revokation list. */\n  tlsCRLFile?: string;\n  /** Bypasses validation of the certificates presented by the mongod/mongos instance */\n  tlsAllowInvalidCertificates?: boolean;\n  /** Disables hostname validation of the certificate presented by the mongod/mongos instance. */\n  tlsAllowInvalidHostnames?: boolean;\n  /** Disables various certificate validations. */\n  tlsInsecure?: boolean;\n  /** The time in milliseconds to attempt a connection before timing out. */\n  connectTimeoutMS?: number;\n  /** The time in milliseconds to attempt a send or receive on a socket before the attempt times out. */\n  socketTimeoutMS?: number;\n  /** An array or comma-delimited string of compressors to enable network compression for communication between this client and a mongod/mongos instance. */\n  compressors?: CompressorName[] | string;\n  /** An integer that specifies the compression level if using zlib for network compression. */\n  zlibCompressionLevel?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | undefined;\n  /** The maximum number of hosts to connect to when using an srv connection string, a setting of `0` means unlimited hosts */\n  srvMaxHosts?: number;\n  /**\n   * Modifies the srv URI to look like:\n   *\n   * `_{srvServiceName}._tcp.{hostname}.{domainname}`\n   *\n   * Querying this DNS URI is expected to respond with SRV records\n   */\n  srvServiceName?: string;\n  /** The maximum number of connections in the connection pool. */\n  maxPoolSize?: number;\n  /** The minimum number of connections in the connection pool. */\n  minPoolSize?: number;\n  /** The maximum number of connections that may be in the process of being established concurrently by the connection pool. */\n  maxConnecting?: number;\n  /** The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. */\n  maxIdleTimeMS?: number;\n  /** The maximum time in milliseconds that a thread can wait for a connection to become available. */\n  waitQueueTimeoutMS?: number;\n  /** Specify a read concern for the collection (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcernLike;\n  /** The level of isolation */\n  readConcernLevel?: ReadConcernLevel;\n  /** Specifies the read preferences for this connection */\n  readPreference?: ReadPreferenceMode | ReadPreference;\n  /** Specifies, in seconds, how stale a secondary can be before the client stops using it for read operations. */\n  maxStalenessSeconds?: number;\n  /** Specifies the tags document as a comma-separated list of colon-separated key-value pairs.  */\n  readPreferenceTags?: TagSet[];\n  /** The auth settings for when connection to server. */\n  auth?: Auth;\n  /** Specify the database name associated with the user\u2019s credentials. */\n  authSource?: string;\n  /** Specify the authentication mechanism that MongoDB will use to authenticate the connection. */\n  authMechanism?: AuthMechanism;\n  /** Specify properties for the specified authMechanism as a comma-separated list of colon-separated key-value pairs. */\n  authMechanismProperties?: AuthMechanismProperties;\n  /** The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. */\n  localThresholdMS?: number;\n  /** Specifies how long (in milliseconds) to block for server selection before throwing an exception.  */\n  serverSelectionTimeoutMS?: number;\n  /** heartbeatFrequencyMS controls when the driver checks the state of the MongoDB deployment. Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. */\n  heartbeatFrequencyMS?: number;\n  /** Sets the minimum heartbeat frequency. In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. */\n  minHeartbeatFrequencyMS?: number;\n  /** The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections */\n  appName?: string;\n  /** Enables retryable reads. */\n  retryReads?: boolean;\n  /** Enable retryable writes. */\n  retryWrites?: boolean;\n  /** Allow a driver to force a Single topology type with a connection string containing one host */\n  directConnection?: boolean;\n  /** Instruct the driver it is connecting to a load balancer fronting a mongos like service */\n  loadBalanced?: boolean;\n  /**\n   * The write concern w value\n   * @deprecated Please use the `writeConcern` option instead\n   */\n  w?: W;\n  /**\n   * The write concern timeout\n   * @deprecated Please use the `writeConcern` option instead\n   */\n  wtimeoutMS?: number;\n  /**\n   * The journal write concern\n   * @deprecated Please use the `writeConcern` option instead\n   */\n  journal?: boolean;\n  /**\n   * A MongoDB WriteConcern, which describes the level of acknowledgement\n   * requested from MongoDB for write operations.\n   *\n   * @see https://www.mongodb.com/docs/manual/reference/write-concern/\n   */\n  writeConcern?: WriteConcern | WriteConcernSettings;\n  /** TCP Connection no delay */\n  noDelay?: boolean;\n  /** Force server to assign `_id` values instead of driver */\n  forceServerObjectId?: boolean;\n  /** A primary key factory function for generation of custom `_id` keys */\n  pkFactory?: PkFactory;\n  /** Enable command monitoring for this client */\n  monitorCommands?: boolean;\n  /** Server API version */\n  serverApi?: ServerApi | ServerApiVersion;\n  /**\n   * Optionally enable in-use auto encryption\n   *\n   * @remarks\n   *  Automatic encryption is an enterprise only feature that only applies to operations on a collection. Automatic encryption is not supported for operations on a database or view, and operations that are not bypassed will result in error\n   *  (see [libmongocrypt: Auto Encryption Allow-List](https://github.com/mongodb/specifications/blob/master/source/client-side-encryption/client-side-encryption.md#libmongocrypt-auto-encryption-allow-list)). To bypass automatic encryption for all operations, set bypassAutoEncryption=true in AutoEncryptionOpts.\n   *\n   *  Automatic encryption requires the authenticated user to have the [listCollections privilege action](https://www.mongodb.com/docs/manual/reference/command/listCollections/#dbcmd.listCollections).\n   *\n   *  If a MongoClient with a limited connection pool size (i.e a non-zero maxPoolSize) is configured with AutoEncryptionOptions, a separate internal MongoClient is created if any of the following are true:\n   *  - AutoEncryptionOptions.keyVaultClient is not passed.\n   *  - AutoEncryptionOptions.bypassAutomaticEncryption is false.\n   *\n   * If an internal MongoClient is created, it is configured with the same options as the parent MongoClient except minPoolSize is set to 0 and AutoEncryptionOptions is omitted.\n   */\n  autoEncryption?: AutoEncryptionOptions;\n  /** Allows a wrapping driver to amend the client metadata generated by the driver to include information about the wrapping driver */\n  driverInfo?: DriverInfo;\n  /** Configures a Socks5 proxy host used for creating TCP connections. */\n  proxyHost?: string;\n  /** Configures a Socks5 proxy port used for creating TCP connections. */\n  proxyPort?: number;\n  /** Configures a Socks5 proxy username when the proxy in proxyHost requires username/password authentication. */\n  proxyUsername?: string;\n  /** Configures a Socks5 proxy password when the proxy in proxyHost requires username/password authentication. */\n  proxyPassword?: string;\n  /** Instructs the driver monitors to use a specific monitoring mode */\n  serverMonitoringMode?: ServerMonitoringMode;\n  /**\n   * @public\n   * Specifies the destination of the driver's logging. The default is stderr.\n   */\n  mongodbLogPath?: 'stderr' | 'stdout' | MongoDBLogWritable;\n  /**\n   * @public\n   * Enable logging level per component or use `default` to control any unset components.\n   */\n  mongodbLogComponentSeverities?: LogComponentSeveritiesClientOptions;\n  /**\n   * @public\n   * All BSON documents are stringified to EJSON. This controls the maximum length of those strings.\n   * It is defaulted to 1000.\n   */\n  mongodbLogMaxDocumentLength?: number;\n\n  /** @internal */\n  srvPoller?: SrvPoller;\n  /** @internal */\n  connectionType?: typeof Connection;\n  /** @internal */\n  __skipPingOnConnect?: boolean;\n}\n\n/** @public */\nexport type WithSessionCallback<T = unknown> = (session: ClientSession) => Promise<T>;\n\n/** @internal */\nexport interface MongoClientPrivate {\n  url: string;\n  bsonOptions: BSONSerializeOptions;\n  namespace: MongoDBNamespace;\n  hasBeenClosed: boolean;\n  authProviders: MongoClientAuthProviders;\n  /**\n   * We keep a reference to the sessions that are acquired from the pool.\n   * - used to track and close all sessions in client.close() (which is non-standard behavior)\n   * - used to notify the leak checker in our tests if test author forgot to clean up explicit sessions\n   */\n  readonly activeSessions: Set<ClientSession>;\n  /**\n   * We keep a reference to the cursors that are created from this client.\n   * - used to track and close all cursors in client.close().\n   *   Cursors in this set are ones that still need to have their close method invoked (no other conditions are considered)\n   */\n  readonly activeCursors: Set<AbstractCursor>;\n  readonly sessionPool: ServerSessionPool;\n  readonly options: MongoOptions;\n  readonly readConcern?: ReadConcern;\n  readonly writeConcern?: WriteConcern;\n  readonly readPreference: ReadPreference;\n  readonly isMongoClient: true;\n}\n\n/** @public */\nexport type MongoClientEvents = Pick<TopologyEvents, (typeof MONGO_CLIENT_EVENTS)[number]> & {\n  // In previous versions the open event emitted a topology, in an effort to no longer\n  // expose internals but continue to expose this useful event API, it now emits a mongoClient\n  open(mongoClient: MongoClient): void;\n};\n\n/**\n * The **MongoClient** class is a class that allows for making Connections to MongoDB.\n * @public\n *\n * @remarks\n * The programmatically provided options take precedence over the URI options.\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * // Enable command monitoring for debugging\n * const client = new MongoClient('mongodb://localhost:27017', { monitorCommands: true });\n *\n * client.on('commandStarted', started => console.log(started));\n * client.db().collection('pets');\n * await client.insertOne({ name: 'spot', kind: 'dog' });\n * ```\n */\nexport class MongoClient extends TypedEventEmitter<MongoClientEvents> implements AsyncDisposable {\n  /** @internal */\n  s: MongoClientPrivate;\n  /** @internal */\n  topology?: Topology;\n  /** @internal */\n  override readonly mongoLogger: MongoLogger | undefined;\n  /** @internal */\n  private connectionLock?: Promise<this>;\n  /** @internal */\n  private closeLock?: Promise<void>;\n\n  /**\n   * The consolidate, parsed, transformed and merged options.\n   */\n  public readonly options: Readonly<\n    Omit<MongoOptions, 'monitorCommands' | 'ca' | 'crl' | 'key' | 'cert'>\n  > &\n    Pick<MongoOptions, 'monitorCommands' | 'ca' | 'crl' | 'key' | 'cert'>;\n\n  constructor(url: string, options?: MongoClientOptions) {\n    super();\n    this.on('error', noop);\n\n    this.options = parseOptions(url, this, options);\n\n    const shouldSetLogger = Object.values(this.options.mongoLoggerOptions.componentSeverities).some(\n      value => value !== SeverityLevel.OFF\n    );\n    this.mongoLogger = shouldSetLogger\n      ? new MongoLogger(this.options.mongoLoggerOptions)\n      : undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const client = this;\n\n    // The internal state\n    this.s = {\n      url,\n      bsonOptions: resolveBSONOptions(this.options),\n      namespace: ns('admin'),\n      hasBeenClosed: false,\n      sessionPool: new ServerSessionPool(this),\n      activeSessions: new Set(),\n      activeCursors: new Set(),\n      authProviders: new MongoClientAuthProviders(),\n\n      get options() {\n        return client.options;\n      },\n      get readConcern() {\n        return client.options.readConcern;\n      },\n      get writeConcern() {\n        return client.options.writeConcern;\n      },\n      get readPreference() {\n        return client.options.readPreference;\n      },\n      get isMongoClient(): true {\n        return true;\n      }\n    };\n    this.checkForNonGenuineHosts();\n  }\n\n  /**\n   * @beta\n   * @experimental\n   * An alias for {@link MongoClient.close|MongoClient.close()}.\n   */\n  declare [Symbol.asyncDispose]: () => Promise<void>;\n  /** @internal */\n  async asyncDispose() {\n    await this.close();\n  }\n\n  /** @internal */\n  private checkForNonGenuineHosts() {\n    const documentDBHostnames = this.options.hosts.filter((hostAddress: HostAddress) =>\n      isHostMatch(DOCUMENT_DB_CHECK, hostAddress.host)\n    );\n    const srvHostIsDocumentDB = isHostMatch(DOCUMENT_DB_CHECK, this.options.srvHost);\n\n    const cosmosDBHostnames = this.options.hosts.filter((hostAddress: HostAddress) =>\n      isHostMatch(COSMOS_DB_CHECK, hostAddress.host)\n    );\n    const srvHostIsCosmosDB = isHostMatch(COSMOS_DB_CHECK, this.options.srvHost);\n\n    if (documentDBHostnames.length !== 0 || srvHostIsDocumentDB) {\n      this.mongoLogger?.info('client', DOCUMENT_DB_MSG);\n    } else if (cosmosDBHostnames.length !== 0 || srvHostIsCosmosDB) {\n      this.mongoLogger?.info('client', COSMOS_DB_MSG);\n    }\n  }\n\n  get serverApi(): Readonly<ServerApi | undefined> {\n    return this.options.serverApi && Object.freeze({ ...this.options.serverApi });\n  }\n  /**\n   * Intended for APM use only\n   * @internal\n   */\n  get monitorCommands(): boolean {\n    return this.options.monitorCommands;\n  }\n  set monitorCommands(value: boolean) {\n    this.options.monitorCommands = value;\n  }\n\n  /** @internal */\n  get autoEncrypter(): AutoEncrypter | undefined {\n    return this.options.autoEncrypter;\n  }\n\n  get readConcern(): ReadConcern | undefined {\n    return this.s.readConcern;\n  }\n\n  get writeConcern(): WriteConcern | undefined {\n    return this.s.writeConcern;\n  }\n\n  get readPreference(): ReadPreference {\n    return this.s.readPreference;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  get timeoutMS(): number | undefined {\n    return this.s.options.timeoutMS;\n  }\n\n  /**\n   * Executes a client bulk write operation, available on server 8.0+.\n   * @param models - The client bulk write models.\n   * @param options - The client bulk write options.\n   * @returns A ClientBulkWriteResult for acknowledged writes and ok: 1 for unacknowledged writes.\n   */\n  async bulkWrite<SchemaMap extends Record<string, Document> = Record<string, Document>>(\n    models: ReadonlyArray<ClientBulkWriteModel<SchemaMap>>,\n    options?: ClientBulkWriteOptions\n  ): Promise<ClientBulkWriteResult> {\n    if (this.autoEncrypter) {\n      throw new MongoInvalidArgumentError(\n        'MongoClient bulkWrite does not currently support automatic encryption.'\n      );\n    }\n    // We do not need schema type information past this point (\"as any\" is fine)\n    return await new ClientBulkWriteExecutor(\n      this,\n      models as any,\n      resolveOptions(this, options)\n    ).execute();\n  }\n\n  /**\n   * Connect to MongoDB using a url\n   *\n   * @remarks\n   * Calling `connect` is optional since the first operation you perform will call `connect` if it's needed.\n   * `timeoutMS` will bound the time any operation can take before throwing a timeout error.\n   * However, when the operation being run is automatically connecting your `MongoClient` the `timeoutMS` will not apply to the time taken to connect the MongoClient.\n   * This means the time to setup the `MongoClient` does not count against `timeoutMS`.\n   * If you are using `timeoutMS` we recommend connecting your client explicitly in advance of any operation to avoid this inconsistent execution time.\n   *\n   * @remarks\n   * The driver will look up corresponding SRV and TXT records if the connection string starts with `mongodb+srv://`.\n   * If those look ups throw a DNS Timeout error, the driver will retry the look up once.\n   *\n   * @see docs.mongodb.org/manual/reference/connection-string/\n   */\n  async connect(): Promise<this> {\n    if (this.connectionLock) {\n      return await this.connectionLock;\n    }\n\n    try {\n      this.connectionLock = this._connect();\n      await this.connectionLock;\n    } finally {\n      // release\n      this.connectionLock = undefined;\n    }\n\n    return this;\n  }\n\n  /**\n   * Create a topology to open the connection, must be locked to avoid topology leaks in concurrency scenario.\n   * Locking is enforced by the connect method.\n   *\n   * @internal\n   */\n  private async _connect(): Promise<this> {\n    if (this.topology && this.topology.isConnected()) {\n      return this;\n    }\n\n    const options = this.options;\n\n    if (options.tls) {\n      if (typeof options.tlsCAFile === 'string') {\n        options.ca ??= await fs.readFile(options.tlsCAFile);\n      }\n      if (typeof options.tlsCRLFile === 'string') {\n        options.crl ??= await fs.readFile(options.tlsCRLFile);\n      }\n      if (typeof options.tlsCertificateKeyFile === 'string') {\n        if (!options.key || !options.cert) {\n          const contents = await fs.readFile(options.tlsCertificateKeyFile);\n          options.key ??= contents;\n          options.cert ??= contents;\n        }\n      }\n    }\n    if (typeof options.srvHost === 'string') {\n      const hosts = await resolveSRVRecord(options);\n\n      for (const [index, host] of hosts.entries()) {\n        options.hosts[index] = host;\n      }\n    }\n\n    // It is important to perform validation of hosts AFTER SRV resolution, to check the real hostname,\n    // but BEFORE we even attempt connecting with a potentially not allowed hostname\n    if (options.credentials?.mechanism === AuthMechanism.MONGODB_OIDC) {\n      const allowedHosts =\n        options.credentials?.mechanismProperties?.ALLOWED_HOSTS || DEFAULT_ALLOWED_HOSTS;\n      const isServiceAuth = !!options.credentials?.mechanismProperties?.ENVIRONMENT;\n      if (!isServiceAuth) {\n        for (const host of options.hosts) {\n          if (!hostMatchesWildcards(host.toHostPort().host, allowedHosts)) {\n            throw new MongoInvalidArgumentError(\n              `Host '${host}' is not valid for OIDC authentication with ALLOWED_HOSTS of '${allowedHosts.join(\n                ','\n              )}'`\n            );\n          }\n        }\n      }\n    }\n\n    this.topology = new Topology(this, options.hosts, options);\n    // Events can be emitted before initialization is complete so we have to\n    // save the reference to the topology on the client ASAP if the event handlers need to access it\n\n    this.topology.once(Topology.OPEN, () => this.emit('open', this));\n\n    for (const event of MONGO_CLIENT_EVENTS) {\n      this.topology.on(event, (...args: any[]) => this.emit(event, ...(args as any)));\n    }\n\n    const topologyConnect = async () => {\n      try {\n        await this.topology?.connect(options);\n      } catch (error) {\n        this.topology?.close();\n        throw error;\n      }\n    };\n\n    if (this.autoEncrypter) {\n      await this.autoEncrypter?.init();\n      await topologyConnect();\n      await options.encrypter.connectInternalClient();\n    } else {\n      await topologyConnect();\n    }\n\n    return this;\n  }\n\n  /**\n   * Cleans up client-side resources used by the MongoCLient and .  This includes:\n   *\n   * - Closes all open, unused connections (see note).\n   * - Ends all in-use sessions with {@link ClientSession#endSession|ClientSession.endSession()}.\n   * - Ends all unused sessions server-side.\n   * - Cleans up any resources being used for auto encryption if auto encryption is enabled.\n   *\n   * @remarks Any in-progress operations are not killed and any connections used by in progress operations\n   * will be cleaned up lazily as operations finish.\n   *\n   * @param force - Force close, emitting no events\n   */\n  async close(force = false): Promise<void> {\n    if (this.closeLock) {\n      return await this.closeLock;\n    }\n\n    try {\n      this.closeLock = this._close(force);\n      await this.closeLock;\n    } finally {\n      // release\n      this.closeLock = undefined;\n    }\n  }\n\n  /* @internal */\n  private async _close(force = false): Promise<void> {\n    // There's no way to set hasBeenClosed back to false\n    Object.defineProperty(this.s, 'hasBeenClosed', {\n      value: true,\n      enumerable: true,\n      configurable: false,\n      writable: false\n    });\n\n    const activeCursorCloses = Array.from(this.s.activeCursors, cursor => cursor.close());\n    this.s.activeCursors.clear();\n\n    await Promise.all(activeCursorCloses);\n\n    const activeSessionEnds = Array.from(this.s.activeSessions, session => session.endSession());\n    this.s.activeSessions.clear();\n\n    await Promise.all(activeSessionEnds);\n\n    if (this.topology == null) {\n      return;\n    }\n\n    // If we would attempt to select a server and get nothing back we short circuit\n    // to avoid the server selection timeout.\n    const selector = readPreferenceServerSelector(ReadPreference.primaryPreferred);\n    const topologyDescription = this.topology.description;\n    const serverDescriptions = Array.from(topologyDescription.servers.values());\n    const servers = selector(topologyDescription, serverDescriptions);\n    if (servers.length !== 0) {\n      const endSessions = Array.from(this.s.sessionPool.sessions, ({ id }) => id);\n      if (endSessions.length !== 0) {\n        try {\n          await executeOperation(\n            this,\n            new RunAdminCommandOperation(\n              { endSessions },\n              { readPreference: ReadPreference.primaryPreferred, noResponse: true }\n            )\n          );\n        } catch (error) {\n          squashError(error);\n        }\n      }\n    }\n\n    // clear out references to old topology\n    const topology = this.topology;\n    this.topology = undefined;\n\n    topology.close();\n\n    const { encrypter } = this.options;\n    if (encrypter) {\n      await encrypter.close(this, force);\n    }\n  }\n\n  /**\n   * Create a new Db instance sharing the current socket connections.\n   *\n   * @param dbName - The name of the database we want to use. If not provided, use database name from connection string.\n   * @param options - Optional settings for Db construction\n   */\n  db(dbName?: string, options?: DbOptions): Db {\n    options = options ?? {};\n\n    // Default to db from connection string if not provided\n    if (!dbName) {\n      dbName = this.s.options.dbName;\n    }\n\n    // Copy the options and add out internal override of the not shared flag\n    const finalOptions = Object.assign({}, this.options, options);\n\n    // Return the db object\n    const db = new Db(this, dbName, finalOptions);\n\n    // Return the database\n    return db;\n  }\n\n  /**\n   * Connect to MongoDB using a url\n   *\n   * @remarks\n   * Calling `connect` is optional since the first operation you perform will call `connect` if it's needed.\n   * `timeoutMS` will bound the time any operation can take before throwing a timeout error.\n   * However, when the operation being run is automatically connecting your `MongoClient` the `timeoutMS` will not apply to the time taken to connect the MongoClient.\n   * This means the time to setup the `MongoClient` does not count against `timeoutMS`.\n   * If you are using `timeoutMS` we recommend connecting your client explicitly in advance of any operation to avoid this inconsistent execution time.\n   *\n   * @remarks\n   * The programmatically provided options take precedence over the URI options.\n   *\n   * @remarks\n   * The driver will look up corresponding SRV and TXT records if the connection string starts with `mongodb+srv://`.\n   * If those look ups throw a DNS Timeout error, the driver will retry the look up once.\n   *\n   * @see https://www.mongodb.com/docs/manual/reference/connection-string/\n   */\n  static async connect(url: string, options?: MongoClientOptions): Promise<MongoClient> {\n    const client = new this(url, options);\n    return await client.connect();\n  }\n\n  /**\n   * Creates a new ClientSession. When using the returned session in an operation\n   * a corresponding ServerSession will be created.\n   *\n   * @remarks\n   * A ClientSession instance may only be passed to operations being performed on the same\n   * MongoClient it was started from.\n   */\n  startSession(options?: ClientSessionOptions): ClientSession {\n    const session = new ClientSession(\n      this,\n      this.s.sessionPool,\n      { explicit: true, ...options },\n      this.options\n    );\n    this.s.activeSessions.add(session);\n    session.once('ended', () => {\n      this.s.activeSessions.delete(session);\n    });\n    return session;\n  }\n\n  /**\n   * A convenience method for creating and handling the clean up of a ClientSession.\n   * The session will always be ended when the executor finishes.\n   *\n   * @param executor - An executor function that all operations using the provided session must be invoked in\n   * @param options - optional settings for the session\n   */\n  async withSession<T = any>(executor: WithSessionCallback<T>): Promise<T>;\n  async withSession<T = any>(\n    options: ClientSessionOptions,\n    executor: WithSessionCallback<T>\n  ): Promise<T>;\n  async withSession<T = any>(\n    optionsOrExecutor: ClientSessionOptions | WithSessionCallback<T>,\n    executor?: WithSessionCallback<T>\n  ): Promise<T> {\n    const options = {\n      // Always define an owner\n      owner: Symbol(),\n      // If it's an object inherit the options\n      ...(typeof optionsOrExecutor === 'object' ? optionsOrExecutor : {})\n    };\n\n    const withSessionCallback =\n      typeof optionsOrExecutor === 'function' ? optionsOrExecutor : executor;\n\n    if (withSessionCallback == null) {\n      throw new MongoInvalidArgumentError('Missing required callback parameter');\n    }\n\n    const session = this.startSession(options);\n\n    try {\n      return await withSessionCallback(session);\n    } finally {\n      try {\n        await session.endSession();\n      } catch (error) {\n        squashError(error);\n      }\n    }\n  }\n\n  /**\n   * Create a new Change Stream, watching for new changes (insertions, updates,\n   * replacements, deletions, and invalidations) in this cluster. Will ignore all\n   * changes to system collections, as well as the local, admin, and config databases.\n   *\n   * @remarks\n   * watch() accepts two generic arguments for distinct use cases:\n   * - The first is to provide the schema that may be defined for all the data within the current cluster\n   * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n   *\n   * @remarks\n   * When `timeoutMS` is configured for a change stream, it will have different behaviour depending\n   * on whether the change stream is in iterator mode or emitter mode. In both cases, a change\n   * stream will time out if it does not receive a change event within `timeoutMS` of the last change\n   * event.\n   *\n   * Note that if a change stream is consistently timing out when watching a collection, database or\n   * client that is being changed, then this may be due to the server timing out before it can finish\n   * processing the existing oplog. To address this, restart the change stream with a higher\n   * `timeoutMS`.\n   *\n   * If the change stream times out the initial aggregate operation to establish the change stream on\n   * the server, then the client will close the change stream. If the getMore calls to the server\n   * time out, then the change stream will be left open, but will throw a MongoOperationTimeoutError\n   * when in iterator mode and emit an error event that returns a MongoOperationTimeoutError in\n   * emitter mode.\n   *\n   * To determine whether or not the change stream is still open following a timeout, check the\n   * {@link ChangeStream.closed} getter.\n   *\n   * @example\n   * In iterator mode, if a next() call throws a timeout error, it will attempt to resume the change stream.\n   * The next call can just be retried after this succeeds.\n   * ```ts\n   * const changeStream = collection.watch([], { timeoutMS: 100 });\n   * try {\n   *     await changeStream.next();\n   * } catch (e) {\n   *     if (e instanceof MongoOperationTimeoutError && !changeStream.closed) {\n   *       await changeStream.next();\n   *     }\n   *     throw e;\n   * }\n   * ```\n   *\n   * @example\n   * In emitter mode, if the change stream goes `timeoutMS` without emitting a change event, it will\n   * emit an error event that returns a MongoOperationTimeoutError, but will not close the change\n   * stream unless the resume attempt fails. There is no need to re-establish change listeners as\n   * this will automatically continue emitting change events once the resume attempt completes.\n   *\n   * ```ts\n   * const changeStream = collection.watch([], { timeoutMS: 100 });\n   * changeStream.on('change', console.log);\n   * changeStream.on('error', e => {\n   *     if (e instanceof MongoOperationTimeoutError && !changeStream.closed) {\n   *         // do nothing\n   *     } else {\n   *         changeStream.close();\n   *     }\n   * });\n   * ```\n   * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n   * @param options - Optional settings for the command\n   * @typeParam TSchema - Type of the data being detected by the change stream\n   * @typeParam TChange - Type of the whole change stream document emitted\n   */\n  watch<\n    TSchema extends Document = Document,\n    TChange extends Document = ChangeStreamDocument<TSchema>\n  >(pipeline: Document[] = [], options: ChangeStreamOptions = {}): ChangeStream<TSchema, TChange> {\n    // Allow optionally not specifying a pipeline\n    if (!Array.isArray(pipeline)) {\n      options = pipeline;\n      pipeline = [];\n    }\n\n    return new ChangeStream<TSchema, TChange>(this, pipeline, resolveOptions(this, options));\n  }\n}\n\nconfigureResourceManagement(MongoClient.prototype);\n\n/**\n * Parsed Mongo Client Options.\n *\n * User supplied options are documented by `MongoClientOptions`.\n *\n * **NOTE:** The client's options parsing is subject to change to support new features.\n * This type is provided to aid with inspection of options after parsing, it should not be relied upon programmatically.\n *\n * Options are sourced from:\n * - connection string\n * - options object passed to the MongoClient constructor\n * - file system (ex. tls settings)\n * - environment variables\n * - DNS SRV records and TXT records\n *\n * Not all options may be present after client construction as some are obtained from asynchronous operations.\n *\n * @public\n */\nexport interface MongoOptions\n  extends Required<\n      Pick<\n        MongoClientOptions,\n        | 'autoEncryption'\n        | 'connectTimeoutMS'\n        | 'directConnection'\n        | 'driverInfo'\n        | 'forceServerObjectId'\n        | 'minHeartbeatFrequencyMS'\n        | 'heartbeatFrequencyMS'\n        | 'localThresholdMS'\n        | 'maxConnecting'\n        | 'maxIdleTimeMS'\n        | 'maxPoolSize'\n        | 'minPoolSize'\n        | 'monitorCommands'\n        | 'noDelay'\n        | 'pkFactory'\n        | 'raw'\n        | 'replicaSet'\n        | 'retryReads'\n        | 'retryWrites'\n        | 'serverSelectionTimeoutMS'\n        | 'socketTimeoutMS'\n        | 'srvMaxHosts'\n        | 'srvServiceName'\n        | 'tlsAllowInvalidCertificates'\n        | 'tlsAllowInvalidHostnames'\n        | 'tlsInsecure'\n        | 'waitQueueTimeoutMS'\n        | 'zlibCompressionLevel'\n      >\n    >,\n    SupportedNodeConnectionOptions {\n  appName?: string;\n  hosts: HostAddress[];\n  srvHost?: string;\n  credentials?: MongoCredentials;\n  readPreference: ReadPreference;\n  readConcern: ReadConcern;\n  loadBalanced: boolean;\n  directConnection: boolean;\n  serverApi: ServerApi;\n  compressors: CompressorName[];\n  writeConcern: WriteConcern;\n  dbName: string;\n  metadata: ClientMetadata;\n  /** @internal */\n  extendedMetadata: Promise<Document>;\n  /** @internal */\n  autoEncrypter?: AutoEncrypter;\n  /** @internal */\n  tokenCache?: TokenCache;\n  proxyHost?: string;\n  proxyPort?: number;\n  proxyUsername?: string;\n  proxyPassword?: string;\n  serverMonitoringMode: ServerMonitoringMode;\n  /** @internal */\n  connectionType?: typeof Connection;\n  /** @internal */\n  authProviders: MongoClientAuthProviders;\n  /** @internal */\n  encrypter: Encrypter;\n  /** @internal */\n  userSpecifiedAuthSource: boolean;\n  /** @internal */\n  userSpecifiedReplicaSet: boolean;\n\n  /**\n   * # NOTE ABOUT TLS Options\n   *\n   * If `tls` is provided as an option, it is equivalent to setting the `ssl` option.\n   *\n   * NodeJS native TLS options are passed through to the socket and retain their original types.\n   *\n   * ### Additional options:\n   *\n   * | nodejs native option  | driver spec equivalent option name            | driver option type |\n   * |:----------------------|:----------------------------------------------|:-------------------|\n   * | `ca`                  | `tlsCAFile`                                   | `string`           |\n   * | `crl`                 | `tlsCRLFile`                                  | `string`           |\n   * | `cert`                | `tlsCertificateKeyFile`                       | `string`           |\n   * | `key`                 | `tlsCertificateKeyFile`                       | `string`           |\n   * | `passphrase`          | `tlsCertificateKeyFilePassword`               | `string`           |\n   * | `rejectUnauthorized`  | `tlsAllowInvalidCertificates`                 | `boolean`          |\n   * | `checkServerIdentity` | `tlsAllowInvalidHostnames`                    | `boolean`          |\n   * | see note below        | `tlsInsecure`                                 | `boolean`          |\n   *\n   * If `tlsInsecure` is set to `true`, then it will set the node native options `checkServerIdentity`\n   * to a no-op and `rejectUnauthorized` to `false`.\n   *\n   * If `tlsInsecure` is set to `false`, then it will set the node native options `checkServerIdentity`\n   * to a no-op and `rejectUnauthorized` to the inverse value of `tlsAllowInvalidCertificates`. If\n   * `tlsAllowInvalidCertificates` is not set, then `rejectUnauthorized` will be set to `true`.\n   *\n   * ### Note on `tlsCAFile`, `tlsCertificateKeyFile` and `tlsCRLFile`\n   *\n   * The files specified by the paths passed in to the `tlsCAFile`, `tlsCertificateKeyFile` and `tlsCRLFile`\n   * fields are read lazily on the first call to `MongoClient.connect`. Once these files have been read and\n   * the `ca`, `cert`, `crl` and `key` fields are populated, they will not be read again on subsequent calls to\n   * `MongoClient.connect`. As a result, until the first call to `MongoClient.connect`, the `ca`,\n   * `cert`, `crl` and `key` fields will be undefined.\n   */\n  tls: boolean;\n  tlsCAFile?: string;\n  tlsCRLFile?: string;\n  tlsCertificateKeyFile?: string;\n\n  /**\n   * @internal\n   * TODO: NODE-5671 - remove internal flag\n   */\n  mongoLoggerOptions: MongoLoggerOptions;\n  /**\n   * @internal\n   * TODO: NODE-5671 - remove internal flag\n   */\n  mongodbLogPath?: 'stderr' | 'stdout' | MongoDBLogWritable;\n  timeoutMS?: number;\n  /** @internal */\n  __skipPingOnConnect?: boolean;\n}\n", "/**\n * @public\n */\nexport interface AsyncDisposable {\n  /**\n   * @beta\n   * @experimental\n   */\n  [Symbol.asyncDispose](): Promise<void>;\n\n  /**\n   * @internal\n   *\n   * A method that wraps disposal semantics for a given resource in the class.\n   */\n  asyncDispose(): Promise<void>;\n}\n\n/** @internal */\nexport function configureResourceManagement(target: AsyncDisposable) {\n  Symbol.asyncDispose &&\n    Object.defineProperty(target, Symbol.asyncDispose, {\n      value: async function asyncDispose(this: AsyncDisposable) {\n        await this.asyncDispose();\n      },\n      enumerable: false,\n      configurable: true,\n      writable: true\n    });\n}\n\n/**\n * @beta\n * @experimental\n *\n * Attaches `Symbol.asyncDispose` methods to the MongoClient, Cursors, sessions and change streams\n * if Symbol.asyncDispose is defined.\n *\n * It's usually not necessary to call this method - the driver attempts to attach these methods\n * itself when its loaded.  However, sometimes the driver may be loaded before `Symbol.asyncDispose`\n * is defined, in which case it is necessary to call this method directly.  This can happen if the\n * application is polyfilling `Symbol.asyncDispose`.\n *\n * Example:\n *\n * ```typescript\n * import { configureExplicitResourceManagement, MongoClient } from 'mongodb/lib/beta';\n *\n * Symbol.asyncDispose ??= Symbol('dispose');\n * load();\n *\n * await using client = new MongoClient(...);\n * ```\n */\nexport function configureExplicitResourceManagement() {\n  // We must import lazily here, because there's a circular dependency between the resource management\n  // file and each resources' file.  We could move `configureResourceManagement` to a separate\n  // function, but keeping all resource-management related code together seemed preferable and I chose\n  // lazy requiring of resources instead.\n\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const { MongoClient } = require('./mongo_client');\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const { ClientSession } = require('./sessions');\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const { AbstractCursor } = require('./cursor/abstract_cursor');\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const { ChangeStream } = require('./change_stream');\n\n  configureResourceManagement(MongoClient.prototype);\n  configureResourceManagement(ClientSession.prototype);\n  configureResourceManagement(AbstractCursor.prototype);\n  configureResourceManagement(ChangeStream.prototype);\n}\n", "import { Readable, Transform } from 'stream';\n\nimport { type BSONSerializeOptions, type Document, Long, pluckBSONSerializeOptions } from '../bson';\nimport { type OnDemandDocumentDeserializeOptions } from '../cmap/wire_protocol/on_demand/document';\nimport { type CursorResponse } from '../cmap/wire_protocol/responses';\nimport {\n  MongoAPIError,\n  MongoCursorExhaustedError,\n  MongoCursorInUseError,\n  MongoInvalidArgumentError,\n  MongoRuntimeError,\n  MongoTailableCursorError\n} from '../error';\nimport type { MongoClient } from '../mongo_client';\nimport { type Abortable, TypedEventEmitter } from '../mongo_types';\nimport { executeOperation } from '../operations/execute_operation';\nimport { GetMoreOperation } from '../operations/get_more';\nimport { KillCursorsOperation } from '../operations/kill_cursors';\nimport { ReadConcern, type ReadConcernLike } from '../read_concern';\nimport { ReadPreference, type ReadPreferenceLike } from '../read_preference';\nimport { type AsyncDisposable, configureResourceManagement } from '../resource_management';\nimport type { Server } from '../sdam/server';\nimport { ClientSession, maybeClearPinnedConnection } from '../sessions';\nimport { type CSOTTimeoutContext, type Timeout, TimeoutContext } from '../timeout';\nimport {\n  addAbortListener,\n  type Disposable,\n  kDispose,\n  type MongoDBNamespace,\n  noop,\n  squashError\n} from '../utils';\n\n/**\n * @internal\n * TODO(NODE-2882): A cursor's getMore commands must be run on the same server it was started on\n * and the same session must be used for the lifetime of the cursor. This object serves to get the\n * server and session (along with the response) out of executeOperation back to the AbstractCursor.\n *\n * There may be a better design for communicating these values back to the cursor, currently an operation\n * MUST store the selected server on itself so it can be read after executeOperation has returned.\n */\nexport interface InitialCursorResponse {\n  /** The server selected for the operation */\n  server: Server;\n  /** The session used for this operation, may be implicitly created */\n  session?: ClientSession;\n  /** The raw server response for the operation */\n  response: CursorResponse;\n}\n\n/** @public */\nexport const CURSOR_FLAGS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'exhaust',\n  'partial'\n] as const;\n\n/** @public */\nexport interface CursorStreamOptions {\n  /** A transformation method applied to each document emitted by the stream */\n  transform?(this: void, doc: Document): Document;\n}\n\n/** @public */\nexport type CursorFlag = (typeof CURSOR_FLAGS)[number];\n\nfunction removeActiveCursor(this: AbstractCursor) {\n  this.client.s.activeCursors.delete(this);\n}\n\n/**\n * @public\n * @experimental\n * Specifies how `timeoutMS` is applied to the cursor. Can be either `'cursorLifeTime'` or `'iteration'`\n * When set to `'iteration'`, the deadline specified by `timeoutMS` applies to each call of\n * `cursor.next()`.\n * When set to `'cursorLifetime'`, the deadline applies to the life of the entire cursor.\n *\n * Depending on the type of cursor being used, this option has different default values.\n * For non-tailable cursors, this value defaults to `'cursorLifetime'`\n * For tailable cursors, this value defaults to `'iteration'` since tailable cursors, by\n * definition can have an arbitrarily long lifetime.\n *\n * @example\n * ```ts\n * const cursor = collection.find({}, {timeoutMS: 100, timeoutMode: 'iteration'});\n * for await (const doc of cursor) {\n *  // process doc\n *  // This will throw a timeout error if any of the iterator's `next()` calls takes more than 100ms, but\n *  // will continue to iterate successfully otherwise, regardless of the number of batches.\n * }\n * ```\n *\n * @example\n * ```ts\n * const cursor = collection.find({}, { timeoutMS: 1000, timeoutMode: 'cursorLifetime' });\n * const docs = await cursor.toArray(); // This entire line will throw a timeout error if all batches are not fetched and returned within 1000ms.\n * ```\n */\nexport const CursorTimeoutMode = Object.freeze({\n  ITERATION: 'iteration',\n  LIFETIME: 'cursorLifetime'\n} as const);\n\n/**\n * @public\n * @experimental\n */\nexport type CursorTimeoutMode = (typeof CursorTimeoutMode)[keyof typeof CursorTimeoutMode];\n\n/** @public */\nexport interface AbstractCursorOptions extends BSONSerializeOptions {\n  session?: ClientSession;\n  readPreference?: ReadPreferenceLike;\n  readConcern?: ReadConcernLike;\n  /**\n   * Specifies the number of documents to return in each response from MongoDB\n   */\n  batchSize?: number;\n  /**\n   * When applicable `maxTimeMS` controls the amount of time the initial command\n   * that constructs a cursor should take. (ex. find, aggregate, listCollections)\n   */\n  maxTimeMS?: number;\n  /**\n   * When applicable `maxAwaitTimeMS` controls the amount of time subsequent getMores\n   * that a cursor uses to fetch more data should take. (ex. cursor.next())\n   */\n  maxAwaitTimeMS?: number;\n  /**\n   * Comment to apply to the operation.\n   *\n   * In server versions pre-4.4, 'comment' must be string.  A server\n   * error will be thrown if any other type is provided.\n   *\n   * In server versions 4.4 and above, 'comment' can be any valid BSON type.\n   */\n  comment?: unknown;\n  /**\n   * By default, MongoDB will automatically close a cursor when the\n   * client has exhausted all results in the cursor. However, for [capped collections](https://www.mongodb.com/docs/manual/core/capped-collections)\n   * you may use a Tailable Cursor that remains open after the client exhausts\n   * the results in the initial cursor.\n   */\n  tailable?: boolean;\n  /**\n   * If awaitData is set to true, when the cursor reaches the end of the capped collection,\n   * MongoDB blocks the query thread for a period of time waiting for new data to arrive.\n   * When new data is inserted into the capped collection, the blocked thread is signaled\n   * to wake up and return the next batch to the client.\n   */\n  awaitData?: boolean;\n  noCursorTimeout?: boolean;\n  /** Specifies the time an operation will run until it throws a timeout error. See {@link AbstractCursorOptions.timeoutMode} for more details on how this option applies to cursors. */\n  timeoutMS?: number;\n  /**\n   * @public\n   * @experimental\n   * Specifies how `timeoutMS` is applied to the cursor. Can be either `'cursorLifeTime'` or `'iteration'`\n   * When set to `'iteration'`, the deadline specified by `timeoutMS` applies to each call of\n   * `cursor.next()`.\n   * When set to `'cursorLifetime'`, the deadline applies to the life of the entire cursor.\n   *\n   * Depending on the type of cursor being used, this option has different default values.\n   * For non-tailable cursors, this value defaults to `'cursorLifetime'`\n   * For tailable cursors, this value defaults to `'iteration'` since tailable cursors, by\n   * definition can have an arbitrarily long lifetime.\n   *\n   * @example\n   * ```ts\n   * const cursor = collection.find({}, {timeoutMS: 100, timeoutMode: 'iteration'});\n   * for await (const doc of cursor) {\n   *  // process doc\n   *  // This will throw a timeout error if any of the iterator's `next()` calls takes more than 100ms, but\n   *  // will continue to iterate successfully otherwise, regardless of the number of batches.\n   * }\n   * ```\n   *\n   * @example\n   * ```ts\n   * const cursor = collection.find({}, { timeoutMS: 1000, timeoutMode: 'cursorLifetime' });\n   * const docs = await cursor.toArray(); // This entire line will throw a timeout error if all batches are not fetched and returned within 1000ms.\n   * ```\n   */\n  timeoutMode?: CursorTimeoutMode;\n\n  /**\n   * @internal\n   *\n   * A timeout context to govern the total time the cursor can live.  If provided, the cursor\n   * cannot be used in ITERATION mode.\n   */\n  timeoutContext?: CursorTimeoutContext;\n}\n\n/** @internal */\nexport type InternalAbstractCursorOptions = Omit<AbstractCursorOptions, 'readPreference'> & {\n  // resolved\n  readPreference: ReadPreference;\n  readConcern?: ReadConcern;\n\n  // cursor flags, some are deprecated\n  oplogReplay?: boolean;\n  exhaust?: boolean;\n  partial?: boolean;\n\n  omitMaxTimeMS?: boolean;\n};\n\n/** @public */\nexport type AbstractCursorEvents = {\n  [AbstractCursor.CLOSE](): void;\n};\n\n/** @public */\nexport abstract class AbstractCursor<\n    TSchema = any,\n    CursorEvents extends AbstractCursorEvents = AbstractCursorEvents\n  >\n  extends TypedEventEmitter<CursorEvents>\n  implements AsyncDisposable\n{\n  /** @internal */\n  private cursorId: Long | null;\n  /** @internal */\n  private cursorSession: ClientSession;\n  /** @internal */\n  private selectedServer?: Server;\n  /** @internal */\n  private cursorNamespace: MongoDBNamespace;\n  /** @internal */\n  private documents: CursorResponse | null = null;\n  /** @internal */\n  private cursorClient: MongoClient;\n  /** @internal */\n  private transform?: (doc: TSchema) => any;\n  /**\n   * @internal\n   * This is true whether or not the first command fails. It only indicates whether or not the first\n   * command has been run.\n   */\n  private initialized: boolean;\n  /** @internal */\n  private isClosed: boolean;\n  /** @internal */\n  private isKilled: boolean;\n  /** @internal */\n  protected readonly cursorOptions: InternalAbstractCursorOptions;\n  /** @internal */\n  protected timeoutContext?: CursorTimeoutContext;\n\n  /** @event */\n  static readonly CLOSE = 'close' as const;\n\n  /** @internal */\n  protected deserializationOptions: OnDemandDocumentDeserializeOptions;\n  protected signal: AbortSignal | undefined;\n  private abortListener: Disposable | undefined;\n\n  /** @internal */\n  protected constructor(\n    client: MongoClient,\n    namespace: MongoDBNamespace,\n    options: AbstractCursorOptions & Abortable = {}\n  ) {\n    super();\n    this.on('error', noop);\n\n    if (!client.s.isMongoClient) {\n      throw new MongoRuntimeError('Cursor must be constructed with MongoClient');\n    }\n    this.cursorClient = client;\n    this.cursorNamespace = namespace;\n    this.cursorId = null;\n    this.initialized = false;\n    this.isClosed = false;\n    this.isKilled = false;\n    this.cursorOptions = {\n      readPreference:\n        options.readPreference && options.readPreference instanceof ReadPreference\n          ? options.readPreference\n          : ReadPreference.primary,\n      ...pluckBSONSerializeOptions(options),\n      timeoutMS: options?.timeoutContext?.csotEnabled()\n        ? options.timeoutContext.timeoutMS\n        : options.timeoutMS,\n      tailable: options.tailable,\n      awaitData: options.awaitData\n    };\n\n    if (this.cursorOptions.timeoutMS != null) {\n      if (options.timeoutMode == null) {\n        if (options.tailable) {\n          if (options.awaitData) {\n            if (\n              options.maxAwaitTimeMS != null &&\n              options.maxAwaitTimeMS >= this.cursorOptions.timeoutMS\n            )\n              throw new MongoInvalidArgumentError(\n                'Cannot specify maxAwaitTimeMS >= timeoutMS for a tailable awaitData cursor'\n              );\n          }\n\n          this.cursorOptions.timeoutMode = CursorTimeoutMode.ITERATION;\n        } else {\n          this.cursorOptions.timeoutMode = CursorTimeoutMode.LIFETIME;\n        }\n      } else {\n        if (options.tailable && options.timeoutMode === CursorTimeoutMode.LIFETIME) {\n          throw new MongoInvalidArgumentError(\n            \"Cannot set tailable cursor's timeoutMode to LIFETIME\"\n          );\n        }\n        this.cursorOptions.timeoutMode = options.timeoutMode;\n      }\n    } else {\n      if (options.timeoutMode != null)\n        throw new MongoInvalidArgumentError('Cannot set timeoutMode without setting timeoutMS');\n    }\n\n    // Set for initial command\n    this.cursorOptions.omitMaxTimeMS =\n      this.cursorOptions.timeoutMS != null &&\n      ((this.cursorOptions.timeoutMode === CursorTimeoutMode.ITERATION &&\n        !this.cursorOptions.tailable) ||\n        (this.cursorOptions.tailable && !this.cursorOptions.awaitData));\n\n    const readConcern = ReadConcern.fromOptions(options);\n    if (readConcern) {\n      this.cursorOptions.readConcern = readConcern;\n    }\n\n    if (typeof options.batchSize === 'number') {\n      this.cursorOptions.batchSize = options.batchSize;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      this.cursorOptions.comment = options.comment;\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      this.cursorOptions.maxTimeMS = options.maxTimeMS;\n    }\n\n    if (typeof options.maxAwaitTimeMS === 'number') {\n      this.cursorOptions.maxAwaitTimeMS = options.maxAwaitTimeMS;\n    }\n\n    if (options.session instanceof ClientSession) {\n      this.cursorSession = options.session;\n    } else {\n      this.cursorSession = this.cursorClient.startSession({ owner: this, explicit: false });\n    }\n\n    this.deserializationOptions = {\n      ...this.cursorOptions,\n      validation: {\n        utf8: options?.enableUtf8Validation === false ? false : true\n      }\n    };\n\n    this.timeoutContext = options.timeoutContext;\n    this.signal = options.signal;\n    this.abortListener = addAbortListener(\n      this.signal,\n      () => void this.close().then(undefined, squashError)\n    );\n    this.trackCursor();\n  }\n\n  /**\n   * The cursor has no id until it receives a response from the initial cursor creating command.\n   *\n   * It is non-zero for as long as the database has an open cursor.\n   *\n   * The initiating command may receive a zero id if the entire result is in the `firstBatch`.\n   */\n  get id(): Long | undefined {\n    return this.cursorId ?? undefined;\n  }\n\n  /** @internal */\n  get isDead() {\n    return (this.cursorId?.isZero() ?? false) || this.isClosed || this.isKilled;\n  }\n\n  /** @internal */\n  get client(): MongoClient {\n    return this.cursorClient;\n  }\n\n  /** @internal */\n  get server(): Server | undefined {\n    return this.selectedServer;\n  }\n\n  get namespace(): MongoDBNamespace {\n    return this.cursorNamespace;\n  }\n\n  get readPreference(): ReadPreference {\n    return this.cursorOptions.readPreference;\n  }\n\n  get readConcern(): ReadConcern | undefined {\n    return this.cursorOptions.readConcern;\n  }\n\n  /** @internal */\n  get session(): ClientSession {\n    return this.cursorSession;\n  }\n\n  set session(clientSession: ClientSession) {\n    this.cursorSession = clientSession;\n  }\n\n  /**\n   * The cursor is closed and all remaining locally buffered documents have been iterated.\n   */\n  get closed(): boolean {\n    return this.isClosed && (this.documents?.length ?? 0) === 0;\n  }\n\n  /**\n   * A `killCursors` command was attempted on this cursor.\n   * This is performed if the cursor id is non zero.\n   */\n  get killed(): boolean {\n    return this.isKilled;\n  }\n\n  get loadBalanced(): boolean {\n    return !!this.cursorClient.topology?.loadBalanced;\n  }\n\n  /**\n   * @beta\n   * @experimental\n   * An alias for {@link AbstractCursor.close|AbstractCursor.close()}.\n   */\n  declare [Symbol.asyncDispose]: () => Promise<void>;\n  /** @internal */\n  async asyncDispose() {\n    await this.close();\n  }\n\n  /** Adds cursor to client's tracking so it will be closed by MongoClient.close() */\n  private trackCursor() {\n    this.cursorClient.s.activeCursors.add(this);\n    if (!this.listeners('close').includes(removeActiveCursor)) {\n      this.once('close', removeActiveCursor);\n    }\n  }\n\n  /** Returns current buffered documents length */\n  bufferedCount(): number {\n    return this.documents?.length ?? 0;\n  }\n\n  /** Returns current buffered documents */\n  readBufferedDocuments(number?: number): NonNullable<TSchema>[] {\n    const bufferedDocs: NonNullable<TSchema>[] = [];\n    const documentsToRead = Math.min(\n      number ?? this.documents?.length ?? 0,\n      this.documents?.length ?? 0\n    );\n\n    for (let count = 0; count < documentsToRead; count++) {\n      const document = this.documents?.shift(this.deserializationOptions);\n      if (document != null) {\n        bufferedDocs.push(document);\n      }\n    }\n\n    return bufferedDocs;\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<TSchema, void, void> {\n    this.signal?.throwIfAborted();\n\n    if (this.closed) {\n      return;\n    }\n\n    try {\n      while (true) {\n        if (this.isKilled) {\n          return;\n        }\n\n        if (this.closed) {\n          return;\n        }\n\n        if (this.cursorId != null && this.isDead && (this.documents?.length ?? 0) === 0) {\n          return;\n        }\n\n        const document = await this.next();\n\n        // eslint-disable-next-line no-restricted-syntax\n        if (document === null) {\n          return;\n        }\n\n        yield document;\n\n        this.signal?.throwIfAborted();\n      }\n    } finally {\n      // Only close the cursor if it has not already been closed. This finally clause handles\n      // the case when a user would break out of a for await of loop early.\n      if (!this.isClosed) {\n        try {\n          await this.close();\n        } catch (error) {\n          squashError(error);\n        }\n      }\n    }\n  }\n\n  stream(options?: CursorStreamOptions): Readable & AsyncIterable<TSchema> {\n    const readable = new ReadableCursorStream(this);\n    const abortListener = addAbortListener(this.signal, function () {\n      readable.destroy(this.reason);\n    });\n    readable.once('end', () => {\n      abortListener?.[kDispose]();\n    });\n\n    if (options?.transform) {\n      const transform = options.transform;\n\n      const transformedStream = readable.pipe(\n        new Transform({\n          objectMode: true,\n          highWaterMark: 1,\n          transform(chunk, _, callback) {\n            try {\n              const transformed = transform(chunk);\n              callback(undefined, transformed);\n            } catch (err) {\n              callback(err);\n            }\n          }\n        })\n      );\n\n      // Bubble errors to transformed stream, because otherwise no way\n      // to handle this error.\n      readable.on('error', err => transformedStream.emit('error', err));\n\n      return transformedStream;\n    }\n\n    return readable;\n  }\n\n  async hasNext(): Promise<boolean> {\n    this.signal?.throwIfAborted();\n\n    if (this.cursorId === Long.ZERO) {\n      return false;\n    }\n\n    if (this.cursorOptions.timeoutMode === CursorTimeoutMode.ITERATION && this.cursorId != null) {\n      this.timeoutContext?.refresh();\n    }\n    try {\n      do {\n        if ((this.documents?.length ?? 0) !== 0) {\n          return true;\n        }\n        await this.fetchBatch();\n      } while (!this.isDead || (this.documents?.length ?? 0) !== 0);\n    } finally {\n      if (this.cursorOptions.timeoutMode === CursorTimeoutMode.ITERATION) {\n        this.timeoutContext?.clear();\n      }\n    }\n\n    return false;\n  }\n\n  /** Get the next available document from the cursor, returns null if no more documents are available. */\n  async next(): Promise<TSchema | null> {\n    this.signal?.throwIfAborted();\n\n    if (this.cursorId === Long.ZERO) {\n      throw new MongoCursorExhaustedError();\n    }\n\n    if (this.cursorOptions.timeoutMode === CursorTimeoutMode.ITERATION && this.cursorId != null) {\n      this.timeoutContext?.refresh();\n    }\n\n    try {\n      do {\n        const doc = this.documents?.shift(this.deserializationOptions);\n        if (doc != null) {\n          if (this.transform != null) return await this.transformDocument(doc);\n          return doc;\n        }\n        await this.fetchBatch();\n      } while (!this.isDead || (this.documents?.length ?? 0) !== 0);\n    } finally {\n      if (this.cursorOptions.timeoutMode === CursorTimeoutMode.ITERATION) {\n        this.timeoutContext?.clear();\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Try to get the next available document from the cursor or `null` if an empty batch is returned\n   */\n  async tryNext(): Promise<TSchema | null> {\n    this.signal?.throwIfAborted();\n\n    if (this.cursorId === Long.ZERO) {\n      throw new MongoCursorExhaustedError();\n    }\n\n    if (this.cursorOptions.timeoutMode === CursorTimeoutMode.ITERATION && this.cursorId != null) {\n      this.timeoutContext?.refresh();\n    }\n    try {\n      let doc = this.documents?.shift(this.deserializationOptions);\n      if (doc != null) {\n        if (this.transform != null) return await this.transformDocument(doc);\n        return doc;\n      }\n\n      await this.fetchBatch();\n\n      doc = this.documents?.shift(this.deserializationOptions);\n      if (doc != null) {\n        if (this.transform != null) return await this.transformDocument(doc);\n        return doc;\n      }\n    } finally {\n      if (this.cursorOptions.timeoutMode === CursorTimeoutMode.ITERATION) {\n        this.timeoutContext?.clear();\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Iterates over all the documents for this cursor using the iterator, callback pattern.\n   *\n   * If the iterator returns `false`, iteration will stop.\n   *\n   * @param iterator - The iteration callback.\n   * @deprecated - Will be removed in a future release. Use for await...of instead.\n   */\n  async forEach(iterator: (doc: TSchema) => boolean | void): Promise<void> {\n    this.signal?.throwIfAborted();\n\n    if (typeof iterator !== 'function') {\n      throw new MongoInvalidArgumentError('Argument \"iterator\" must be a function');\n    }\n    for await (const document of this) {\n      const result = iterator(document);\n      if (result === false) {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Frees any client-side resources used by the cursor.\n   */\n  async close(options?: { timeoutMS?: number }): Promise<void> {\n    await this.cleanup(options?.timeoutMS);\n  }\n\n  /**\n   * Returns an array of documents. The caller is responsible for making sure that there\n   * is enough memory to store the results. Note that the array only contains partial\n   * results when this cursor had been previously accessed. In that case,\n   * cursor.rewind() can be used to reset the cursor.\n   */\n  async toArray(): Promise<TSchema[]> {\n    this.signal?.throwIfAborted();\n\n    const array: TSchema[] = [];\n    // at the end of the loop (since readBufferedDocuments is called) the buffer will be empty\n    // then, the 'await of' syntax will run a getMore call\n    for await (const document of this) {\n      array.push(document);\n      const docs = this.readBufferedDocuments();\n      if (this.transform != null) {\n        for (const doc of docs) {\n          array.push(await this.transformDocument(doc));\n        }\n      } else {\n        array.push(...docs);\n      }\n    }\n    return array;\n  }\n  /**\n   * Add a cursor flag to the cursor\n   *\n   * @param flag - The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial' -.\n   * @param value - The flag boolean value.\n   */\n  addCursorFlag(flag: CursorFlag, value: boolean): this {\n    this.throwIfInitialized();\n    if (!CURSOR_FLAGS.includes(flag)) {\n      throw new MongoInvalidArgumentError(`Flag ${flag} is not one of ${CURSOR_FLAGS}`);\n    }\n\n    if (typeof value !== 'boolean') {\n      throw new MongoInvalidArgumentError(`Flag ${flag} must be a boolean value`);\n    }\n\n    this.cursorOptions[flag] = value;\n    return this;\n  }\n\n  /**\n   * Map all documents using the provided function\n   * If there is a transform set on the cursor, that will be called first and the result passed to\n   * this function's transform.\n   *\n   * @remarks\n   *\n   * **Note** Cursors use `null` internally to indicate that there are no more documents in the cursor. Providing a mapping\n   * function that maps values to `null` will result in the cursor closing itself before it has finished iterating\n   * all documents.  This will **not** result in a memory leak, just surprising behavior.  For example:\n   *\n   * ```typescript\n   * const cursor = collection.find({});\n   * cursor.map(() => null);\n   *\n   * const documents = await cursor.toArray();\n   * // documents is always [], regardless of how many documents are in the collection.\n   * ```\n   *\n   * Other falsey values are allowed:\n   *\n   * ```typescript\n   * const cursor = collection.find({});\n   * cursor.map(() => '');\n   *\n   * const documents = await cursor.toArray();\n   * // documents is now an array of empty strings\n   * ```\n   *\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling map,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: FindCursor<Document> = coll.find();\n   * const mappedCursor: FindCursor<number> = cursor.map(doc => Object.keys(doc).length);\n   * const keyCounts: number[] = await mappedCursor.toArray(); // cursor.toArray() still returns Document[]\n   * ```\n   * @param transform - The mapping transformation method.\n   */\n  map<T = any>(transform: (doc: TSchema) => T): AbstractCursor<T> {\n    this.throwIfInitialized();\n    const oldTransform = this.transform;\n    if (oldTransform) {\n      this.transform = doc => {\n        return transform(oldTransform(doc));\n      };\n    } else {\n      this.transform = transform;\n    }\n\n    return this as unknown as AbstractCursor<T>;\n  }\n\n  /**\n   * Set the ReadPreference for the cursor.\n   *\n   * @param readPreference - The new read preference for the cursor.\n   */\n  withReadPreference(readPreference: ReadPreferenceLike): this {\n    this.throwIfInitialized();\n    if (readPreference instanceof ReadPreference) {\n      this.cursorOptions.readPreference = readPreference;\n    } else if (typeof readPreference === 'string') {\n      this.cursorOptions.readPreference = ReadPreference.fromString(readPreference);\n    } else {\n      throw new MongoInvalidArgumentError(`Invalid read preference: ${readPreference}`);\n    }\n\n    return this;\n  }\n\n  /**\n   * Set the ReadPreference for the cursor.\n   *\n   * @param readPreference - The new read preference for the cursor.\n   */\n  withReadConcern(readConcern: ReadConcernLike): this {\n    this.throwIfInitialized();\n    const resolvedReadConcern = ReadConcern.fromOptions({ readConcern });\n    if (resolvedReadConcern) {\n      this.cursorOptions.readConcern = resolvedReadConcern;\n    }\n\n    return this;\n  }\n\n  /**\n   * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n   *\n   * @param value - Number of milliseconds to wait before aborting the query.\n   */\n  maxTimeMS(value: number): this {\n    this.throwIfInitialized();\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n    }\n\n    this.cursorOptions.maxTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Set the batch size for the cursor.\n   *\n   * @param value - The number of documents to return per batch. See {@link https://www.mongodb.com/docs/manual/reference/command/find/|find command documentation}.\n   */\n  batchSize(value: number): this {\n    this.throwIfInitialized();\n    if (this.cursorOptions.tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support batchSize');\n    }\n\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Operation \"batchSize\" requires an integer');\n    }\n\n    this.cursorOptions.batchSize = value;\n    return this;\n  }\n\n  /**\n   * Rewind this cursor to its uninitialized state. Any options that are present on the cursor will\n   * remain in effect. Iterating this cursor will cause new queries to be sent to the server, even\n   * if the resultant data has already been retrieved by this cursor.\n   */\n  rewind(): void {\n    if (this.timeoutContext && this.timeoutContext.owner !== this) {\n      throw new MongoAPIError(`Cannot rewind cursor that does not own its timeout context.`);\n    }\n    if (!this.initialized) {\n      return;\n    }\n\n    this.cursorId = null;\n    this.documents?.clear();\n    this.timeoutContext?.clear();\n    this.timeoutContext = undefined;\n    this.isClosed = false;\n    this.isKilled = false;\n    this.initialized = false;\n    this.hasEmittedClose = false;\n    this.trackCursor();\n\n    // We only want to end this session if we created it, and it hasn't ended yet\n    if (this.cursorSession.explicit === false) {\n      if (!this.cursorSession.hasEnded) {\n        this.cursorSession.endSession().then(undefined, squashError);\n      }\n      this.cursorSession = this.cursorClient.startSession({ owner: this, explicit: false });\n    }\n  }\n\n  /**\n   * Returns a new uninitialized copy of this cursor, with options matching those that have been set on the current instance\n   */\n  abstract clone(): AbstractCursor<TSchema>;\n\n  /** @internal */\n  protected abstract _initialize(\n    session: ClientSession | undefined\n  ): Promise<InitialCursorResponse>;\n\n  /** @internal */\n  async getMore(batchSize: number): Promise<CursorResponse> {\n    if (this.cursorId == null) {\n      throw new MongoRuntimeError(\n        'Unexpected null cursor id. A cursor creating command should have set this'\n      );\n    }\n    if (this.selectedServer == null) {\n      throw new MongoRuntimeError(\n        'Unexpected null selectedServer. A cursor creating command should have set this'\n      );\n    }\n    const getMoreOptions = {\n      ...this.cursorOptions,\n      session: this.cursorSession,\n      batchSize\n    };\n\n    const getMoreOperation = new GetMoreOperation(\n      this.cursorNamespace,\n      this.cursorId,\n      this.selectedServer,\n      getMoreOptions\n    );\n\n    return await executeOperation(this.cursorClient, getMoreOperation, this.timeoutContext);\n  }\n\n  /**\n   * @internal\n   *\n   * This function is exposed for the unified test runner's createChangeStream\n   * operation.  We cannot refactor to use the abstract _initialize method without\n   * a significant refactor.\n   */\n  private async cursorInit(): Promise<void> {\n    if (this.cursorOptions.timeoutMS != null) {\n      this.timeoutContext ??= new CursorTimeoutContext(\n        TimeoutContext.create({\n          serverSelectionTimeoutMS: this.client.s.options.serverSelectionTimeoutMS,\n          timeoutMS: this.cursorOptions.timeoutMS\n        }),\n        this\n      );\n    }\n    try {\n      const state = await this._initialize(this.cursorSession);\n      // Set omitMaxTimeMS to the value needed for subsequent getMore calls\n      this.cursorOptions.omitMaxTimeMS = this.cursorOptions.timeoutMS != null;\n      const response = state.response;\n      this.selectedServer = state.server;\n      this.cursorId = response.id;\n      this.cursorNamespace = response.ns ?? this.namespace;\n      this.documents = response;\n      this.initialized = true; // the cursor is now initialized, even if it is dead\n    } catch (error) {\n      // the cursor is now initialized, even if an error occurred\n      this.initialized = true;\n      await this.cleanup(undefined, error);\n      throw error;\n    }\n\n    if (this.isDead) {\n      await this.cleanup();\n    }\n\n    return;\n  }\n\n  /** @internal Attempt to obtain more documents */\n  private async fetchBatch(): Promise<void> {\n    if (this.isClosed) {\n      return;\n    }\n\n    if (this.isDead) {\n      // if the cursor is dead, we clean it up\n      // cleanupCursor should never throw, but if it does it indicates a bug in the driver\n      // and we should surface the error\n      await this.cleanup();\n      return;\n    }\n\n    if (this.cursorId == null) {\n      await this.cursorInit();\n      // If the cursor died or returned documents, return\n      if ((this.documents?.length ?? 0) !== 0 || this.isDead) return;\n      // Otherwise, run a getMore\n    }\n\n    // otherwise need to call getMore\n    const batchSize = this.cursorOptions.batchSize || 1000;\n\n    try {\n      const response = await this.getMore(batchSize);\n      this.cursorId = response.id;\n      this.documents = response;\n    } catch (error) {\n      try {\n        await this.cleanup(undefined, error);\n      } catch (cleanupError) {\n        // `cleanupCursor` should never throw, squash and throw the original error\n        squashError(cleanupError);\n      }\n      throw error;\n    }\n\n    if (this.isDead) {\n      // If we successfully received a response from a cursor BUT the cursor indicates that it is exhausted,\n      // we intentionally clean up the cursor to release its session back into the pool before the cursor\n      // is iterated.  This prevents a cursor that is exhausted on the server from holding\n      // onto a session indefinitely until the AbstractCursor is iterated.\n      //\n      // cleanupCursorAsync should never throw, but if it does it indicates a bug in the driver\n      // and we should surface the error\n      await this.cleanup();\n    }\n  }\n\n  /** @internal */\n  private async cleanup(timeoutMS?: number, error?: Error) {\n    this.abortListener?.[kDispose]();\n    this.isClosed = true;\n    const timeoutContextForKillCursors = (): CursorTimeoutContext | undefined => {\n      if (timeoutMS != null) {\n        this.timeoutContext?.clear();\n        return new CursorTimeoutContext(\n          TimeoutContext.create({\n            serverSelectionTimeoutMS: this.client.s.options.serverSelectionTimeoutMS,\n            timeoutMS\n          }),\n          this\n        );\n      } else {\n        return this.timeoutContext?.refreshed();\n      }\n    };\n    try {\n      if (\n        !this.isKilled &&\n        this.cursorId &&\n        !this.cursorId.isZero() &&\n        this.cursorNamespace &&\n        this.selectedServer &&\n        !this.cursorSession.hasEnded\n      ) {\n        this.isKilled = true;\n        const cursorId = this.cursorId;\n        this.cursorId = Long.ZERO;\n\n        await executeOperation(\n          this.cursorClient,\n          new KillCursorsOperation(cursorId, this.cursorNamespace, this.selectedServer, {\n            session: this.cursorSession\n          }),\n          timeoutContextForKillCursors()\n        );\n      }\n    } catch (error) {\n      squashError(error);\n    } finally {\n      try {\n        if (this.cursorSession?.owner === this) {\n          await this.cursorSession.endSession({ error });\n        }\n        if (!this.cursorSession?.inTransaction()) {\n          maybeClearPinnedConnection(this.cursorSession, { error });\n        }\n      } finally {\n        this.emitClose();\n      }\n    }\n  }\n\n  /** @internal */\n  private hasEmittedClose = false;\n  /** @internal */\n  private emitClose() {\n    try {\n      if (!this.hasEmittedClose && ((this.documents?.length ?? 0) === 0 || this.isClosed)) {\n        // @ts-expect-error: CursorEvents is generic so Parameters<CursorEvents[\"close\"]> may not be assignable to `[]`. Not sure how to require extenders do not add parameters.\n        this.emit('close');\n      }\n    } finally {\n      this.hasEmittedClose = true;\n    }\n  }\n\n  /** @internal */\n  private async transformDocument(document: NonNullable<TSchema>): Promise<NonNullable<TSchema>> {\n    if (this.transform == null) return document;\n\n    try {\n      const transformedDocument = this.transform(document);\n      // eslint-disable-next-line no-restricted-syntax\n      if (transformedDocument === null) {\n        const TRANSFORM_TO_NULL_ERROR =\n          'Cursor returned a `null` document, but the cursor is not exhausted.  Mapping documents to `null` is not supported in the cursor transform.';\n        throw new MongoAPIError(TRANSFORM_TO_NULL_ERROR);\n      }\n      return transformedDocument;\n    } catch (transformError) {\n      try {\n        await this.close();\n      } catch (closeError) {\n        squashError(closeError);\n      }\n      throw transformError;\n    }\n  }\n\n  /** @internal */\n  protected throwIfInitialized() {\n    if (this.initialized) throw new MongoCursorInUseError();\n  }\n}\n\nclass ReadableCursorStream extends Readable {\n  private _cursor: AbstractCursor;\n  private _readInProgress = false;\n\n  constructor(cursor: AbstractCursor) {\n    super({\n      objectMode: true,\n      autoDestroy: false,\n      highWaterMark: 1\n    });\n    this._cursor = cursor;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  override _read(size: number): void {\n    if (!this._readInProgress) {\n      this._readInProgress = true;\n      this._readNext();\n    }\n  }\n\n  override _destroy(error: Error | null, callback: (error?: Error | null) => void): void {\n    this._cursor.close().then(\n      () => callback(error),\n      closeError => callback(closeError)\n    );\n  }\n\n  private _readNext() {\n    if (this._cursor.id === Long.ZERO) {\n      this.push(null);\n      return;\n    }\n\n    this._cursor\n      .next()\n      .then(\n        // result from next()\n        result => {\n          if (result == null) {\n            this.push(null);\n          } else if (this.destroyed) {\n            this._cursor.close().then(undefined, squashError);\n          } else {\n            if (this.push(result)) {\n              return this._readNext();\n            }\n\n            this._readInProgress = false;\n          }\n        },\n        // error from next()\n        err => {\n          // NOTE: This is questionable, but we have a test backing the behavior. It seems the\n          //       desired behavior is that a stream ends cleanly when a user explicitly closes\n          //       a client during iteration. Alternatively, we could do the \"right\" thing and\n          //       propagate the error message by removing this special case.\n          if (err.message.match(/server is closed/)) {\n            this._cursor.close().then(undefined, squashError);\n            return this.push(null);\n          }\n\n          // NOTE: This is also perhaps questionable. The rationale here is that these errors tend\n          //       to be \"operation was interrupted\", where a cursor has been closed but there is an\n          //       active getMore in-flight. This used to check if the cursor was killed but once\n          //       that changed to happen in cleanup legitimate errors would not destroy the\n          //       stream. There are change streams test specifically test these cases.\n          if (err.message.match(/operation was interrupted/)) {\n            return this.push(null);\n          }\n\n          // NOTE: The two above checks on the message of the error will cause a null to be pushed\n          //       to the stream, thus closing the stream before the destroy call happens. This means\n          //       that either of those error messages on a change stream will not get a proper\n          //       'error' event to be emitted (the error passed to destroy). Change stream resumability\n          //       relies on that error event to be emitted to create its new cursor and thus was not\n          //       working on 4.4 servers because the error emitted on failover was \"interrupted at\n          //       shutdown\" while on 5.0+ it is \"The server is in quiesce mode and will shut down\".\n          //       See NODE-4475.\n          return this.destroy(err);\n        }\n      )\n      // if either of the above handlers throw\n      .catch(error => {\n        this._readInProgress = false;\n        this.destroy(error);\n      });\n  }\n}\n\nconfigureResourceManagement(AbstractCursor.prototype);\n\n/**\n * @internal\n * The cursor timeout context is a wrapper around a timeout context\n * that keeps track of the \"owner\" of the cursor.  For timeout contexts\n * instantiated inside a cursor, the owner will be the cursor.\n *\n * All timeout behavior is exactly the same as the wrapped timeout context's.\n */\nexport class CursorTimeoutContext extends TimeoutContext {\n  constructor(\n    public timeoutContext: TimeoutContext,\n    public owner: symbol | AbstractCursor\n  ) {\n    super();\n  }\n  override get serverSelectionTimeout(): Timeout | null {\n    return this.timeoutContext.serverSelectionTimeout;\n  }\n  override get connectionCheckoutTimeout(): Timeout | null {\n    return this.timeoutContext.connectionCheckoutTimeout;\n  }\n  override get clearServerSelectionTimeout(): boolean {\n    return this.timeoutContext.clearServerSelectionTimeout;\n  }\n  override get timeoutForSocketWrite(): Timeout | null {\n    return this.timeoutContext.timeoutForSocketWrite;\n  }\n  override get timeoutForSocketRead(): Timeout | null {\n    return this.timeoutContext.timeoutForSocketRead;\n  }\n  override csotEnabled(): this is CSOTTimeoutContext {\n    return this.timeoutContext.csotEnabled();\n  }\n  override refresh(): void {\n    if (typeof this.owner !== 'symbol') return this.timeoutContext.refresh();\n  }\n  override clear(): void {\n    if (typeof this.owner !== 'symbol') return this.timeoutContext.clear();\n  }\n  override get maxTimeMS(): number | null {\n    return this.timeoutContext.maxTimeMS;\n  }\n  get timeoutMS(): number | null {\n    return this.timeoutContext.csotEnabled() ? this.timeoutContext.timeoutMS : null;\n  }\n  override refreshed(): CursorTimeoutContext {\n    return new CursorTimeoutContext(this.timeoutContext.refreshed(), this.owner);\n  }\n  override addMaxTimeMSToCommand(command: Document, options: { omitMaxTimeMS?: boolean }): void {\n    this.timeoutContext.addMaxTimeMSToCommand(command, options);\n  }\n  override getSocketTimeoutMS(): number | undefined {\n    return this.timeoutContext.getSocketTimeoutMS();\n  }\n}\n", "import { type Document } from './bson';\nimport { AbstractCursor } from './cursor/abstract_cursor';\nimport { MongoAPIError } from './error';\n\n/** @public */\nexport const ExplainVerbosity = Object.freeze({\n  queryPlanner: 'queryPlanner',\n  queryPlannerExtended: 'queryPlannerExtended',\n  executionStats: 'executionStats',\n  allPlansExecution: 'allPlansExecution'\n} as const);\n\n/** @public */\nexport type ExplainVerbosity = string;\n\n/**\n * For backwards compatibility, true is interpreted as \"allPlansExecution\"\n * and false as \"queryPlanner\".\n * @public\n */\nexport type ExplainVerbosityLike = ExplainVerbosity | boolean;\n\n/** @public */\nexport interface ExplainCommandOptions {\n  /** The explain verbosity for the command. */\n  verbosity: ExplainVerbosity;\n  /** The maxTimeMS setting for the command. */\n  maxTimeMS?: number;\n}\n\n/**\n * @public\n *\n * When set, this configures an explain command.  Valid values are boolean (for legacy compatibility,\n * see {@link ExplainVerbosityLike}), a string containing the explain verbosity, or an object containing the verbosity and\n * an optional maxTimeMS.\n *\n * Examples of valid usage:\n *\n * ```typescript\n * collection.find({ name: 'john doe' }, { explain: true });\n * collection.find({ name: 'john doe' }, { explain: false });\n * collection.find({ name: 'john doe' }, { explain: 'queryPlanner' });\n * collection.find({ name: 'john doe' }, { explain: { verbosity: 'queryPlanner' } });\n * ```\n *\n * maxTimeMS can be configured to limit the amount of time the server\n * spends executing an explain by providing an object:\n *\n * ```typescript\n * // limits the `explain` command to no more than 2 seconds\n * collection.find({ name: 'john doe' }, {\n *   explain:  {\n *    verbosity: 'queryPlanner',\n *    maxTimeMS: 2000\n *  }\n * });\n * ```\n */\nexport interface ExplainOptions {\n  /** Specifies the verbosity mode for the explain output. */\n  explain?: ExplainVerbosityLike | ExplainCommandOptions;\n}\n\n/** @internal */\nexport class Explain {\n  readonly verbosity: ExplainVerbosity;\n  readonly maxTimeMS?: number;\n\n  private constructor(verbosity: ExplainVerbosityLike, maxTimeMS?: number) {\n    if (typeof verbosity === 'boolean') {\n      this.verbosity = verbosity\n        ? ExplainVerbosity.allPlansExecution\n        : ExplainVerbosity.queryPlanner;\n    } else {\n      this.verbosity = verbosity;\n    }\n\n    this.maxTimeMS = maxTimeMS;\n  }\n\n  static fromOptions({ explain }: ExplainOptions = {}): Explain | undefined {\n    if (explain == null) return;\n\n    if (typeof explain === 'boolean' || typeof explain === 'string') {\n      return new Explain(explain);\n    }\n\n    const { verbosity, maxTimeMS } = explain;\n    return new Explain(verbosity, maxTimeMS);\n  }\n}\n\nexport function validateExplainTimeoutOptions(options: Document, explain?: Explain) {\n  const { maxTimeMS, timeoutMS } = options;\n  if (timeoutMS != null && (maxTimeMS != null || explain?.maxTimeMS != null)) {\n    throw new MongoAPIError('Cannot use maxTimeMS with timeoutMS for explain commands.');\n  }\n}\n\n/**\n * Applies an explain to a given command.\n * @internal\n *\n * @param command - the command on which to apply the explain\n * @param options - the options containing the explain verbosity\n */\nexport function decorateWithExplain(\n  command: Document,\n  explain: Explain\n): {\n  explain: Document;\n  verbosity: ExplainVerbosity;\n  maxTimeMS?: number;\n} {\n  type ExplainCommand = ReturnType<typeof decorateWithExplain>;\n  const { verbosity, maxTimeMS } = explain;\n  const baseCommand: ExplainCommand = { explain: command, verbosity };\n\n  if (typeof maxTimeMS === 'number') {\n    baseCommand.maxTimeMS = maxTimeMS;\n  }\n\n  return baseCommand;\n}\n\n/**\n * @public\n *\n * A base class for any cursors that have `explain()` methods.\n */\nexport abstract class ExplainableCursor<TSchema> extends AbstractCursor<TSchema> {\n  /** Execute the explain for the cursor */\n  abstract explain(): Promise<Document>;\n  abstract explain(verbosity: ExplainVerbosityLike | ExplainCommandOptions): Promise<Document>;\n  abstract explain(options: { timeoutMS?: number }): Promise<Document>;\n  abstract explain(\n    verbosity: ExplainVerbosityLike | ExplainCommandOptions,\n    options: { timeoutMS?: number }\n  ): Promise<Document>;\n  abstract explain(\n    verbosity?: ExplainVerbosityLike | ExplainCommandOptions | { timeoutMS?: number },\n    options?: { timeoutMS?: number }\n  ): Promise<Document>;\n\n  protected resolveExplainTimeoutOptions(\n    verbosity?: ExplainVerbosityLike | ExplainCommandOptions | { timeoutMS?: number },\n    options?: { timeoutMS?: number }\n  ): { timeout?: { timeoutMS?: number }; explain?: ExplainVerbosityLike | ExplainCommandOptions } {\n    let explain: ExplainVerbosityLike | ExplainCommandOptions | undefined;\n    let timeout: { timeoutMS?: number } | undefined;\n\n    if (verbosity == null && options == null) {\n      explain = undefined;\n      timeout = undefined;\n    } else if (verbosity != null && options == null) {\n      explain =\n        typeof verbosity !== 'object'\n          ? verbosity\n          : 'verbosity' in verbosity\n            ? verbosity\n            : undefined;\n\n      timeout = typeof verbosity === 'object' && 'timeoutMS' in verbosity ? verbosity : undefined;\n    } else {\n      // @ts-expect-error TS isn't smart enough to determine that if both options are provided, the first is explain options\n      explain = verbosity;\n      timeout = options;\n    }\n\n    return { timeout, explain };\n  }\n}\n", "import type { BSONSerializeOptions, Document } from '../bson';\nimport { type MongoDBResponseConstructor } from '../cmap/wire_protocol/responses';\nimport { MongoInvalidArgumentError } from '../error';\nimport {\n  decorateWithExplain,\n  Explain,\n  type ExplainOptions,\n  validateExplainTimeoutOptions\n} from '../explain';\nimport { ReadConcern } from '../read_concern';\nimport type { ReadPreference } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport { MIN_SECONDARY_WRITE_WIRE_VERSION } from '../sdam/server_selection';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { commandSupportsReadConcern, maxWireVersion, MongoDBNamespace } from '../utils';\nimport { WriteConcern, type WriteConcernOptions } from '../write_concern';\nimport type { ReadConcernLike } from './../read_concern';\nimport { AbstractOperation, Aspect, type OperationOptions } from './operation';\n\n/** @public */\nexport interface CollationOptions {\n  locale: string;\n  caseLevel?: boolean;\n  caseFirst?: string;\n  strength?: number;\n  numericOrdering?: boolean;\n  alternate?: string;\n  maxVariable?: string;\n  backwards?: boolean;\n  normalization?: boolean;\n}\n\n/** @public */\nexport interface CommandOperationOptions\n  extends OperationOptions,\n    WriteConcernOptions,\n    ExplainOptions {\n  /** Specify a read concern and level for the collection. (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcernLike;\n  /** Collation */\n  collation?: CollationOptions;\n  /**\n   * maxTimeMS is a server-side time limit in milliseconds for processing an operation.\n   */\n  maxTimeMS?: number;\n  /**\n   * Comment to apply to the operation.\n   *\n   * In server versions pre-4.4, 'comment' must be string.  A server\n   * error will be thrown if any other type is provided.\n   *\n   * In server versions 4.4 and above, 'comment' can be any valid BSON type.\n   */\n  comment?: unknown;\n  /** Should retry failed writes */\n  retryWrites?: boolean;\n\n  // Admin command overrides.\n  dbName?: string;\n  authdb?: string;\n  noResponse?: boolean;\n}\n\n/** @internal */\nexport interface OperationParent {\n  s: { namespace: MongoDBNamespace };\n  readConcern?: ReadConcern;\n  writeConcern?: WriteConcern;\n  readPreference?: ReadPreference;\n  bsonOptions?: BSONSerializeOptions;\n  timeoutMS?: number;\n}\n\n/** @internal */\nexport abstract class CommandOperation<T> extends AbstractOperation<T> {\n  override options: CommandOperationOptions;\n  readConcern?: ReadConcern;\n  writeConcern?: WriteConcern;\n  explain?: Explain;\n\n  constructor(parent?: OperationParent, options?: CommandOperationOptions) {\n    super(options);\n    this.options = options ?? {};\n\n    // NOTE: this was explicitly added for the add/remove user operations, it's likely\n    //       something we'd want to reconsider. Perhaps those commands can use `Admin`\n    //       as a parent?\n    const dbNameOverride = options?.dbName || options?.authdb;\n    if (dbNameOverride) {\n      this.ns = new MongoDBNamespace(dbNameOverride, '$cmd');\n    } else {\n      this.ns = parent\n        ? parent.s.namespace.withCollection('$cmd')\n        : new MongoDBNamespace('admin', '$cmd');\n    }\n\n    this.readConcern = ReadConcern.fromOptions(options);\n    this.writeConcern = WriteConcern.fromOptions(options);\n\n    if (this.hasAspect(Aspect.EXPLAINABLE)) {\n      this.explain = Explain.fromOptions(options);\n      if (this.explain) validateExplainTimeoutOptions(this.options, this.explain);\n    } else if (options?.explain != null) {\n      throw new MongoInvalidArgumentError(`Option \"explain\" is not supported on this command`);\n    }\n  }\n\n  override get canRetryWrite(): boolean {\n    if (this.hasAspect(Aspect.EXPLAINABLE)) {\n      return this.explain == null;\n    }\n    return super.canRetryWrite;\n  }\n\n  public async executeCommand<T extends MongoDBResponseConstructor>(\n    server: Server,\n    session: ClientSession | undefined,\n    cmd: Document,\n    timeoutContext: TimeoutContext,\n    responseType: T | undefined\n  ): Promise<typeof responseType extends undefined ? Document : InstanceType<T>>;\n\n  public async executeCommand(\n    server: Server,\n    session: ClientSession | undefined,\n    cmd: Document,\n    timeoutContext: TimeoutContext\n  ): Promise<Document>;\n\n  async executeCommand(\n    server: Server,\n    session: ClientSession | undefined,\n    cmd: Document,\n    timeoutContext: TimeoutContext,\n    responseType?: MongoDBResponseConstructor\n  ): Promise<Document> {\n    this.server = server;\n\n    const options = {\n      ...this.options,\n      ...this.bsonOptions,\n      timeoutContext,\n      readPreference: this.readPreference,\n      session\n    };\n\n    const serverWireVersion = maxWireVersion(server);\n    const inTransaction = this.session && this.session.inTransaction();\n\n    if (this.readConcern && commandSupportsReadConcern(cmd) && !inTransaction) {\n      Object.assign(cmd, { readConcern: this.readConcern });\n    }\n\n    if (this.trySecondaryWrite && serverWireVersion < MIN_SECONDARY_WRITE_WIRE_VERSION) {\n      options.omitReadPreference = true;\n    }\n\n    if (this.writeConcern && this.hasAspect(Aspect.WRITE_OPERATION) && !inTransaction) {\n      WriteConcern.apply(cmd, this.writeConcern);\n    }\n\n    if (\n      options.collation &&\n      typeof options.collation === 'object' &&\n      !this.hasAspect(Aspect.SKIP_COLLATION)\n    ) {\n      Object.assign(cmd, { collation: options.collation });\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    if (this.hasAspect(Aspect.EXPLAINABLE) && this.explain) {\n      cmd = decorateWithExplain(cmd, this.explain);\n    }\n\n    return await server.command(this.ns, cmd, options, responseType);\n  }\n}\n", "import type { Document } from '../bson';\nimport type { Db } from '../db';\nimport { type TODO_NODE_3286 } from '../mongo_types';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { maxWireVersion, MongoDBNamespace } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface ListDatabasesResult {\n  databases: ({ name: string; sizeOnDisk?: number; empty?: boolean } & Document)[];\n  totalSize?: number;\n  totalSizeMb?: number;\n  ok: 1 | 0;\n}\n\n/** @public */\nexport interface ListDatabasesOptions extends CommandOperationOptions {\n  /** A query predicate that determines which databases are listed */\n  filter?: Document;\n  /** A flag to indicate whether the command should return just the database names, or return both database names and size information */\n  nameOnly?: boolean;\n  /** A flag that determines which databases are returned based on the user privileges when access control is enabled */\n  authorizedDatabases?: boolean;\n}\n\n/** @internal */\nexport class ListDatabasesOperation extends CommandOperation<ListDatabasesResult> {\n  override options: ListDatabasesOptions;\n\n  constructor(db: Db, options?: ListDatabasesOptions) {\n    super(db, options);\n    this.options = options ?? {};\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  override get commandName() {\n    return 'listDatabases' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<ListDatabasesResult> {\n    const cmd: Document = { listDatabases: 1 };\n\n    if (typeof this.options.nameOnly === 'boolean') {\n      cmd.nameOnly = this.options.nameOnly;\n    }\n\n    if (this.options.filter) {\n      cmd.filter = this.options.filter;\n    }\n\n    if (typeof this.options.authorizedDatabases === 'boolean') {\n      cmd.authorizedDatabases = this.options.authorizedDatabases;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (maxWireVersion(server) >= 9 && this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    return await (super.executeCommand(\n      server,\n      session,\n      cmd,\n      timeoutContext\n    ) as Promise<TODO_NODE_3286>);\n  }\n}\n\ndefineAspects(ListDatabasesOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE]);\n", "import type { Admin } from '../admin';\nimport type { Document } from '../bson';\nimport { MongoUnexpectedServerResponseError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type TimeoutContext } from '../timeout';\nimport { CommandOperation, type CommandOperationOptions } from './command';\n\n/** @public */\nexport interface ValidateCollectionOptions extends CommandOperationOptions {\n  /** Validates a collection in the background, without interrupting read or write traffic (only in MongoDB 4.4+) */\n  background?: boolean;\n}\n\n/** @internal */\nexport class ValidateCollectionOperation extends CommandOperation<Document> {\n  override options: ValidateCollectionOptions;\n  collectionName: string;\n  command: Document;\n\n  constructor(admin: Admin, collectionName: string, options: ValidateCollectionOptions) {\n    // Decorate command with extra options\n    const command: Document = { validate: collectionName };\n    const keys = Object.keys(options);\n    for (let i = 0; i < keys.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(options, keys[i]) && keys[i] !== 'session') {\n        command[keys[i]] = (options as Document)[keys[i]];\n      }\n    }\n\n    super(admin.s.db, options);\n    this.options = options;\n    this.command = command;\n    this.collectionName = collectionName;\n  }\n\n  override get commandName() {\n    return 'validate' as const;\n  }\n\n  override async execute(\n    server: Server,\n    session: ClientSession | undefined,\n    timeoutContext: TimeoutContext\n  ): Promise<Document> {\n    const collectionName = this.collectionName;\n\n    const doc = await super.executeCommand(server, session, this.command, timeoutContext);\n    if (doc.result != null && typeof doc.result !== 'string')\n      throw new MongoUnexpectedServerResponseError('Error with validation data');\n    if (doc.result != null && doc.result.match(/exception|corrupt/) != null)\n      throw new MongoUnexpectedServerResponseError(`Invalid collection ${collectionName}`);\n    if (doc.valid != null && !doc.valid)\n      throw new MongoUnexpectedServerResponseError(`Invalid collection ${collectionName}`);\n\n    return doc;\n  }\n}\n", "import { type Document, resolveBSONOptions } from './bson';\nimport type { Db } from './db';\nimport type { CommandOperationOptions } from './operations/command';\nimport { executeOperation } from './operations/execute_operation';\nimport {\n  ListDatabasesOperation,\n  type ListDatabasesOptions,\n  type ListDatabasesResult\n} from './operations/list_databases';\nimport { RemoveUserOperation, type RemoveUserOptions } from './operations/remove_user';\nimport { RunAdminCommandOperation, type RunCommandOptions } from './operations/run_command';\nimport {\n  ValidateCollectionOperation,\n  type ValidateCollectionOptions\n} from './operations/validate_collection';\n\n/** @internal */\nexport interface AdminPrivate {\n  db: Db;\n}\n\n/**\n * The **Admin** class is an internal class that allows convenient access to\n * the admin functionality and commands for MongoDB.\n *\n * **ADMIN Cannot directly be instantiated**\n * @public\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * const client = new MongoClient('mongodb://localhost:27017');\n * const admin = client.db().admin();\n * const dbInfo = await admin.listDatabases();\n * for (const db of dbInfo.databases) {\n *   console.log(db.name);\n * }\n * ```\n */\nexport class Admin {\n  /** @internal */\n  s: AdminPrivate;\n\n  /**\n   * Create a new Admin instance\n   * @internal\n   */\n  constructor(db: Db) {\n    this.s = { db };\n  }\n\n  /**\n   * Execute a command\n   *\n   * The driver will ensure the following fields are attached to the command sent to the server:\n   * - `lsid` - sourced from an implicit session or options.session\n   * - `$readPreference` - defaults to primary or can be configured by options.readPreference\n   * - `$db` - sourced from the name of this database\n   *\n   * If the client has a serverApi setting:\n   * - `apiVersion`\n   * - `apiStrict`\n   * - `apiDeprecationErrors`\n   *\n   * When in a transaction:\n   * - `readConcern` - sourced from readConcern set on the TransactionOptions\n   * - `writeConcern` - sourced from writeConcern set on the TransactionOptions\n   *\n   * Attaching any of the above fields to the command will have no effect as the driver will overwrite the value.\n   *\n   * @param command - The command to execute\n   * @param options - Optional settings for the command\n   */\n  async command(command: Document, options?: RunCommandOptions): Promise<Document> {\n    return await executeOperation(\n      this.s.db.client,\n      new RunAdminCommandOperation(command, {\n        ...resolveBSONOptions(options),\n        session: options?.session,\n        readPreference: options?.readPreference,\n        timeoutMS: options?.timeoutMS ?? this.s.db.timeoutMS\n      })\n    );\n  }\n\n  /**\n   * Retrieve the server build information\n   *\n   * @param options - Optional settings for the command\n   */\n  async buildInfo(options?: CommandOperationOptions): Promise<Document> {\n    return await this.command({ buildinfo: 1 }, options);\n  }\n\n  /**\n   * Retrieve the server build information\n   *\n   * @param options - Optional settings for the command\n   */\n  async serverInfo(options?: CommandOperationOptions): Promise<Document> {\n    return await this.command({ buildinfo: 1 }, options);\n  }\n\n  /**\n   * Retrieve this db's server status.\n   *\n   * @param options - Optional settings for the command\n   */\n  async serverStatus(options?: CommandOperationOptions): Promise<Document> {\n    return await this.command({ serverStatus: 1 }, options);\n  }\n\n  /**\n   * Ping the MongoDB server and retrieve results\n   *\n   * @param options - Optional settings for the command\n   */\n  async ping(options?: CommandOperationOptions): Promise<Document> {\n    return await this.command({ ping: 1 }, options);\n  }\n\n  /**\n   * Remove a user from a database\n   *\n   * @param username - The username to remove\n   * @param options - Optional settings for the command\n   */\n  async removeUser(username: string, options?: RemoveUserOptions): Promise<boolean> {\n    return await executeOperation(\n      this.s.db.client,\n      new RemoveUserOperation(this.s.db, username, { dbName: 'admin', ...options })\n    );\n  }\n\n  /**\n   * Validate an existing collection\n   *\n   * @param collectionName - The name of the collection to validate.\n   * @param options - Optional settings for the command\n   */\n  async validateCollection(\n    collectionName: string,\n    options: ValidateCollectionOptions = {}\n  ): Promise<Document> {\n    return await executeOperation(\n      this.s.db.client,\n      new ValidateCollectionOperation(this, collectionName, options)\n    );\n  }\n\n  /**\n   * List the available databases\n   *\n   * @param options - Optional settings for the command\n   */\n  async listDatabases(options?: ListDatabasesOptions): Promise<ListDatabasesResult> {\n    return await executeOperation(\n      this.s.db.client,\n      new ListDatabasesOperation(this.s.db, { timeoutMS: this.s.db.timeoutMS, ...options })\n    );\n  }\n\n  /**\n   * Get ReplicaSet status\n   *\n   * @param options - Optional settings for the command\n   */\n  async replSetGetStatus(options?: CommandOperationOptions): Promise<Document> {\n    return await this.command({ replSetGetStatus: 1 }, options);\n  }\n}\n", "import { Readable } from 'stream';\n\nimport type { Document, ObjectId } from '../bson';\nimport type { Collection } from '../collection';\nimport { CursorTimeoutMode } from '../cursor/abstract_cursor';\nimport type { FindCursor } from '../cursor/find_cursor';\nimport {\n  MongoGridFSChunkError,\n  MongoGridFSStreamError,\n  MongoInvalidArgumentError,\n  MongoRuntimeError\n} from '../error';\nimport type { FindOptions } from '../operations/find';\nimport type { ReadPreference } from '../read_preference';\nimport type { Sort } from '../sort';\nimport { CSOTTimeoutContext } from '../timeout';\nimport type { Callback } from '../utils';\nimport type { GridFSChunk } from './upload';\n\n/** @public */\nexport interface GridFSBucketReadStreamOptions {\n  sort?: Sort;\n  skip?: number;\n  /**\n   * 0-indexed non-negative byte offset from the beginning of the file\n   */\n  start?: number;\n  /**\n   * 0-indexed non-negative byte offset to the end of the file contents\n   * to be returned by the stream. `end` is non-inclusive\n   */\n  end?: number;\n  /**\n   * @experimental\n   * Specifies the time an operation will run until it throws a timeout error\n   */\n  timeoutMS?: number;\n}\n\n/** @public */\nexport interface GridFSBucketReadStreamOptionsWithRevision extends GridFSBucketReadStreamOptions {\n  /** The revision number relative to the oldest file with the given filename. 0\n   * gets you the oldest file, 1 gets you the 2nd oldest, -1 gets you the\n   * newest. */\n  revision?: number;\n}\n\n/** @public */\nexport interface GridFSFile {\n  _id: ObjectId;\n  length: number;\n  chunkSize: number;\n  filename: string;\n  metadata?: Document;\n  uploadDate: Date;\n  /** @deprecated Will be removed in the next major version. */\n  contentType?: string;\n  /** @deprecated Will be removed in the next major version. */\n  aliases?: string[];\n}\n\n/** @internal */\nexport interface GridFSBucketReadStreamPrivate {\n  /**\n   * The running total number of bytes read from the chunks collection.\n   */\n  bytesRead: number;\n  /**\n   * The number of bytes to remove from the last chunk read in the file.  This is non-zero\n   * if `end` is not equal to the length of the document and `end` is not a multiple\n   * of the chunkSize.\n   */\n  bytesToTrim: number;\n\n  /**\n   * The number of bytes to remove from the first chunk read in the file.  This is non-zero\n   * if `start` is not equal to the 0  and `start` is not a multiple\n   * of the chunkSize.\n   */\n  bytesToSkip: number;\n\n  files: Collection<GridFSFile>;\n  chunks: Collection<GridFSChunk>;\n  cursor?: FindCursor<GridFSChunk>;\n\n  /** The running total number of chunks read from the chunks collection. */\n  expected: number;\n\n  /**\n   * The filter used to search in the _files_ collection (i.e., `{ _id: <> }`)\n   * This is not the same filter used when reading chunks from the chunks collection.\n   */\n  filter: Document;\n\n  /** Indicates whether or not download has started. */\n  init: boolean;\n\n  /** The expected number of chunks to read, calculated from start, end, chunkSize and file length. */\n  expectedEnd: number;\n  file?: GridFSFile;\n  options: {\n    sort?: Sort;\n    skip?: number;\n    start: number;\n    end: number;\n    timeoutMS?: number;\n  };\n  readPreference?: ReadPreference;\n  timeoutContext?: CSOTTimeoutContext;\n}\n\n/**\n * A readable stream that enables you to read buffers from GridFS.\n *\n * Do not instantiate this class directly. Use `openDownloadStream()` instead.\n * @public\n */\nexport class GridFSBucketReadStream extends Readable {\n  /** @internal */\n  s: GridFSBucketReadStreamPrivate;\n\n  /**\n   * Fires when the stream loaded the file document corresponding to the provided id.\n   * @event\n   */\n  static readonly FILE = 'file' as const;\n\n  /**\n   * @param chunks - Handle for chunks collection\n   * @param files - Handle for files collection\n   * @param readPreference - The read preference to use\n   * @param filter - The filter to use to find the file document\n   * @internal\n   */\n  constructor(\n    chunks: Collection<GridFSChunk>,\n    files: Collection<GridFSFile>,\n    readPreference: ReadPreference | undefined,\n    filter: Document,\n    options?: GridFSBucketReadStreamOptions\n  ) {\n    super({ emitClose: true });\n    this.s = {\n      bytesToTrim: 0,\n      bytesToSkip: 0,\n      bytesRead: 0,\n      chunks,\n      expected: 0,\n      files,\n      filter,\n      init: false,\n      expectedEnd: 0,\n      options: {\n        start: 0,\n        end: 0,\n        ...options\n      },\n      readPreference,\n      timeoutContext:\n        options?.timeoutMS != null\n          ? new CSOTTimeoutContext({ timeoutMS: options.timeoutMS, serverSelectionTimeoutMS: 0 })\n          : undefined\n    };\n  }\n\n  /**\n   * Reads from the cursor and pushes to the stream.\n   * Private Impl, do not call directly\n   * @internal\n   */\n  override _read(): void {\n    if (this.destroyed) return;\n    waitForFile(this, () => doRead(this));\n  }\n\n  /**\n   * Sets the 0-based offset in bytes to start streaming from. Throws\n   * an error if this stream has entered flowing mode\n   * (e.g. if you've already called `on('data')`)\n   *\n   * @param start - 0-based offset in bytes to start streaming from\n   */\n  start(start = 0): this {\n    throwIfInitialized(this);\n    this.s.options.start = start;\n    return this;\n  }\n\n  /**\n   * Sets the 0-based offset in bytes to start streaming from. Throws\n   * an error if this stream has entered flowing mode\n   * (e.g. if you've already called `on('data')`)\n   *\n   * @param end - Offset in bytes to stop reading at\n   */\n  end(end = 0): this {\n    throwIfInitialized(this);\n    this.s.options.end = end;\n    return this;\n  }\n\n  /**\n   * Marks this stream as aborted (will never push another `data` event)\n   * and kills the underlying cursor. Will emit the 'end' event, and then\n   * the 'close' event once the cursor is successfully killed.\n   */\n  async abort(): Promise<void> {\n    this.push(null);\n    this.destroy();\n    const remainingTimeMS = this.s.timeoutContext?.getRemainingTimeMSOrThrow();\n    await this.s.cursor?.close({ timeoutMS: remainingTimeMS });\n  }\n}\n\nfunction throwIfInitialized(stream: GridFSBucketReadStream): void {\n  if (stream.s.init) {\n    throw new MongoGridFSStreamError('Options cannot be changed after the stream is initialized');\n  }\n}\n\nfunction doRead(stream: GridFSBucketReadStream): void {\n  if (stream.destroyed) return;\n  if (!stream.s.cursor) return;\n  if (!stream.s.file) return;\n\n  const handleReadResult = (doc: Document | null) => {\n    if (stream.destroyed) return;\n\n    if (!doc) {\n      stream.push(null);\n\n      stream.s.cursor?.close().then(undefined, error => stream.destroy(error));\n      return;\n    }\n\n    if (!stream.s.file) return;\n\n    const bytesRemaining = stream.s.file.length - stream.s.bytesRead;\n    const expectedN = stream.s.expected++;\n    const expectedLength = Math.min(stream.s.file.chunkSize, bytesRemaining);\n    if (doc.n > expectedN) {\n      return stream.destroy(\n        new MongoGridFSChunkError(\n          `ChunkIsMissing: Got unexpected n: ${doc.n}, expected: ${expectedN}`\n        )\n      );\n    }\n\n    if (doc.n < expectedN) {\n      return stream.destroy(\n        new MongoGridFSChunkError(`ExtraChunk: Got unexpected n: ${doc.n}, expected: ${expectedN}`)\n      );\n    }\n\n    let buf = Buffer.isBuffer(doc.data) ? doc.data : doc.data.buffer;\n\n    if (buf.byteLength !== expectedLength) {\n      if (bytesRemaining <= 0) {\n        return stream.destroy(\n          new MongoGridFSChunkError(\n            `ExtraChunk: Got unexpected n: ${doc.n}, expected file length ${stream.s.file.length} bytes but already read ${stream.s.bytesRead} bytes`\n          )\n        );\n      }\n\n      return stream.destroy(\n        new MongoGridFSChunkError(\n          `ChunkIsWrongSize: Got unexpected length: ${buf.byteLength}, expected: ${expectedLength}`\n        )\n      );\n    }\n\n    stream.s.bytesRead += buf.byteLength;\n\n    if (buf.byteLength === 0) {\n      return stream.push(null);\n    }\n\n    let sliceStart = null;\n    let sliceEnd = null;\n\n    if (stream.s.bytesToSkip != null) {\n      sliceStart = stream.s.bytesToSkip;\n      stream.s.bytesToSkip = 0;\n    }\n\n    const atEndOfStream = expectedN === stream.s.expectedEnd - 1;\n    const bytesLeftToRead = stream.s.options.end - stream.s.bytesToSkip;\n    if (atEndOfStream && stream.s.bytesToTrim != null) {\n      sliceEnd = stream.s.file.chunkSize - stream.s.bytesToTrim;\n    } else if (stream.s.options.end && bytesLeftToRead < doc.data.byteLength) {\n      sliceEnd = bytesLeftToRead;\n    }\n\n    if (sliceStart != null || sliceEnd != null) {\n      buf = buf.slice(sliceStart || 0, sliceEnd || buf.byteLength);\n    }\n\n    stream.push(buf);\n    return;\n  };\n\n  stream.s.cursor.next().then(handleReadResult, error => {\n    if (stream.destroyed) return;\n    stream.destroy(error);\n  });\n}\n\nfunction init(stream: GridFSBucketReadStream): void {\n  const findOneOptions: FindOptions = {};\n  if (stream.s.readPreference) {\n    findOneOptions.readPreference = stream.s.readPreference;\n  }\n  if (stream.s.options && stream.s.options.sort) {\n    findOneOptions.sort = stream.s.options.sort;\n  }\n  if (stream.s.options && stream.s.options.skip) {\n    findOneOptions.skip = stream.s.options.skip;\n  }\n\n  const handleReadResult = (doc: Document | null) => {\n    if (stream.destroyed) return;\n\n    if (!doc) {\n      const identifier = stream.s.filter._id\n        ? stream.s.filter._id.toString()\n        : stream.s.filter.filename;\n      const errmsg = `FileNotFound: file ${identifier} was not found`;\n      // TODO(NODE-3483)\n      const err = new MongoRuntimeError(errmsg);\n      err.code = 'ENOENT'; // TODO: NODE-3338 set property as part of constructor\n      return stream.destroy(err);\n    }\n\n    // If document is empty, kill the stream immediately and don't\n    // execute any reads\n    if (doc.length <= 0) {\n      stream.push(null);\n      return;\n    }\n\n    if (stream.destroyed) {\n      // If user destroys the stream before we have a cursor, wait\n      // until the query is done to say we're 'closed' because we can't\n      // cancel a query.\n      stream.destroy();\n      return;\n    }\n\n    try {\n      stream.s.bytesToSkip = handleStartOption(stream, doc, stream.s.options);\n    } catch (error) {\n      return stream.destroy(error);\n    }\n\n    const filter: Document = { files_id: doc._id };\n\n    // Currently (MongoDB 3.4.4) skip function does not support the index,\n    // it needs to retrieve all the documents first and then skip them. (CS-25811)\n    // As work around we use $gte on the \"n\" field.\n    if (stream.s.options && stream.s.options.start != null) {\n      const skip = Math.floor(stream.s.options.start / doc.chunkSize);\n      if (skip > 0) {\n        filter['n'] = { $gte: skip };\n      }\n    }\n\n    let remainingTimeMS: number | undefined;\n    try {\n      remainingTimeMS = stream.s.timeoutContext?.getRemainingTimeMSOrThrow(\n        `Download timed out after ${stream.s.timeoutContext?.timeoutMS}ms`\n      );\n    } catch (error) {\n      return stream.destroy(error);\n    }\n\n    stream.s.cursor = stream.s.chunks\n      .find(filter, {\n        timeoutMode: stream.s.options.timeoutMS != null ? CursorTimeoutMode.LIFETIME : undefined,\n        timeoutMS: remainingTimeMS\n      })\n      .sort({ n: 1 });\n\n    if (stream.s.readPreference) {\n      stream.s.cursor.withReadPreference(stream.s.readPreference);\n    }\n\n    stream.s.expectedEnd = Math.ceil(doc.length / doc.chunkSize);\n    stream.s.file = doc as GridFSFile;\n\n    try {\n      stream.s.bytesToTrim = handleEndOption(stream, doc, stream.s.cursor, stream.s.options);\n    } catch (error) {\n      return stream.destroy(error);\n    }\n\n    stream.emit(GridFSBucketReadStream.FILE, doc);\n    return;\n  };\n\n  let remainingTimeMS: number | undefined;\n  try {\n    remainingTimeMS = stream.s.timeoutContext?.getRemainingTimeMSOrThrow(\n      `Download timed out after ${stream.s.timeoutContext?.timeoutMS}ms`\n    );\n  } catch (error) {\n    if (!stream.destroyed) stream.destroy(error);\n    return;\n  }\n\n  findOneOptions.timeoutMS = remainingTimeMS;\n\n  stream.s.files.findOne(stream.s.filter, findOneOptions).then(handleReadResult, error => {\n    if (stream.destroyed) return;\n    stream.destroy(error);\n  });\n}\n\nfunction waitForFile(stream: GridFSBucketReadStream, callback: Callback): void {\n  if (stream.s.file) {\n    return callback();\n  }\n\n  if (!stream.s.init) {\n    init(stream);\n    stream.s.init = true;\n  }\n\n  stream.once('file', () => {\n    callback();\n  });\n}\n\nfunction handleStartOption(\n  stream: GridFSBucketReadStream,\n  doc: Document,\n  options: GridFSBucketReadStreamOptions\n): number {\n  if (options && options.start != null) {\n    if (options.start > doc.length) {\n      throw new MongoInvalidArgumentError(\n        `Stream start (${options.start}) must not be more than the length of the file (${doc.length})`\n      );\n    }\n    if (options.start < 0) {\n      throw new MongoInvalidArgumentError(`Stream start (${options.start}) must not be negative`);\n    }\n    if (options.end != null && options.end < options.start) {\n      throw new MongoInvalidArgumentError(\n        `Stream start (${options.start}) must not be greater than stream end (${options.end})`\n      );\n    }\n\n    stream.s.bytesRead = Math.floor(options.start / doc.chunkSize) * doc.chunkSize;\n    stream.s.expected = Math.floor(options.start / doc.chunkSize);\n\n    return options.start - stream.s.bytesRead;\n  }\n  throw new MongoInvalidArgumentError('Start option must be defined');\n}\n\nfunction handleEndOption(\n  stream: GridFSBucketReadStream,\n  doc: Document,\n  cursor: FindCursor<GridFSChunk>,\n  options: GridFSBucketReadStreamOptions\n) {\n  if (options && options.end != null) {\n    if (options.end > doc.length) {\n      throw new MongoInvalidArgumentError(\n        `Stream end (${options.end}) must not be more than the length of the file (${doc.length})`\n      );\n    }\n    if (options.start == null || options.start < 0) {\n      throw new MongoInvalidArgumentError(`Stream end (${options.end}) must not be negative`);\n    }\n\n    const start = options.start != null ? Math.floor(options.start / doc.chunkSize) : 0;\n\n    cursor.limit(Math.ceil(options.end / doc.chunkSize) - start);\n\n    stream.s.expectedEnd = Math.ceil(options.end / doc.chunkSize);\n\n    return Math.ceil(options.end / doc.chunkSize) * doc.chunkSize - options.end;\n  }\n  throw new MongoInvalidArgumentError('End option must be defined');\n}\n", "import { Writable } from 'stream';\n\nimport { type Document, ObjectId } from '../bson';\nimport type { Collection } from '../collection';\nimport { CursorTimeoutMode } from '../cursor/abstract_cursor';\nimport {\n  MongoAPIError,\n  MONGODB_ERROR_CODES,\n  MongoError,\n  MongoOperationTimeoutError\n} from '../error';\nimport { CSOTTimeoutContext } from '../timeout';\nimport { type Callback, resolveTimeoutOptions, squashError } from '../utils';\nimport type { WriteConcernOptions } from '../write_concern';\nimport { WriteConcern } from './../write_concern';\nimport type { GridFSFile } from './download';\nimport type { GridFSBucket } from './index';\n\n/** @public */\nexport interface GridFSChunk {\n  _id: ObjectId;\n  files_id: ObjectId;\n  n: number;\n  data: Buffer | Uint8Array;\n}\n\n/** @public */\nexport interface GridFSBucketWriteStreamOptions extends WriteConcernOptions {\n  /** Overwrite this bucket's chunkSizeBytes for this file */\n  chunkSizeBytes?: number;\n  /** Custom file id for the GridFS file. */\n  id?: ObjectId;\n  /** Object to store in the file document's `metadata` field */\n  metadata?: Document;\n  /**\n   * String to store in the file document's `contentType` field.\n   * @deprecated Will be removed in the next major version. Add a contentType field to the metadata document instead.\n   */\n  contentType?: string;\n  /**\n   * Array of strings to store in the file document's `aliases` field.\n   * @deprecated Will be removed in the next major version. Add an aliases field to the metadata document instead.\n   */\n  aliases?: string[];\n  /**\n   * @experimental\n   * Specifies the time an operation will run until it throws a timeout error\n   */\n  timeoutMS?: number;\n}\n\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n * @public\n */\nexport class GridFSBucketWriteStream extends Writable {\n  bucket: GridFSBucket;\n  /** A Collection instance where the file's chunks are stored */\n  chunks: Collection<GridFSChunk>;\n  /** A Collection instance where the file's GridFSFile document is stored */\n  files: Collection<GridFSFile>;\n  /** The name of the file */\n  filename: string;\n  /** Options controlling the metadata inserted along with the file */\n  options: GridFSBucketWriteStreamOptions;\n  /** Indicates the stream is finished uploading */\n  done: boolean;\n  /** The ObjectId used for the `_id` field on the GridFSFile document */\n  id: ObjectId;\n  /** The number of bytes that each chunk will be limited to */\n  chunkSizeBytes: number;\n  /** Space used to store a chunk currently being inserted */\n  bufToStore: Buffer;\n  /** Accumulates the number of bytes inserted as the stream uploads chunks */\n  length: number;\n  /** Accumulates the number of chunks inserted as the stream uploads file contents */\n  n: number;\n  /** Tracks the current offset into the buffered bytes being uploaded */\n  pos: number;\n  /** Contains a number of properties indicating the current state of the stream */\n  state: {\n    /** If set the stream has ended */\n    streamEnd: boolean;\n    /** Indicates the number of chunks that still need to be inserted to exhaust the current buffered data */\n    outstandingRequests: number;\n    /** If set an error occurred during insertion */\n    errored: boolean;\n    /** If set the stream was intentionally aborted */\n    aborted: boolean;\n  };\n  /** The write concern setting to be used with every insert operation */\n  writeConcern?: WriteConcern;\n  /**\n   * The document containing information about the inserted file.\n   * This property is defined _after_ the finish event has been emitted.\n   * It will remain `null` if an error occurs.\n   *\n   * @example\n   * ```ts\n   * fs.createReadStream('file.txt')\n   *   .pipe(bucket.openUploadStream('file.txt'))\n   *   .on('finish', function () {\n   *     console.log(this.gridFSFile)\n   *   })\n   * ```\n   */\n  gridFSFile: GridFSFile | null = null;\n  /** @internal */\n  timeoutContext?: CSOTTimeoutContext;\n\n  /**\n   * @param bucket - Handle for this stream's corresponding bucket\n   * @param filename - The value of the 'filename' key in the files doc\n   * @param options - Optional settings.\n   * @internal\n   */\n  constructor(bucket: GridFSBucket, filename: string, options?: GridFSBucketWriteStreamOptions) {\n    super();\n\n    options = options ?? {};\n    this.bucket = bucket;\n    this.chunks = bucket.s._chunksCollection;\n    this.filename = filename;\n    this.files = bucket.s._filesCollection;\n    this.options = options;\n    this.writeConcern = WriteConcern.fromOptions(options) || bucket.s.options.writeConcern;\n    // Signals the write is all done\n    this.done = false;\n\n    this.id = options.id ? options.id : new ObjectId();\n    // properly inherit the default chunksize from parent\n    this.chunkSizeBytes = options.chunkSizeBytes || this.bucket.s.options.chunkSizeBytes;\n    this.bufToStore = Buffer.alloc(this.chunkSizeBytes);\n    this.length = 0;\n    this.n = 0;\n    this.pos = 0;\n    this.state = {\n      streamEnd: false,\n      outstandingRequests: 0,\n      errored: false,\n      aborted: false\n    };\n\n    if (options.timeoutMS != null)\n      this.timeoutContext = new CSOTTimeoutContext({\n        timeoutMS: options.timeoutMS,\n        serverSelectionTimeoutMS: resolveTimeoutOptions(this.bucket.s.db.client, {})\n          .serverSelectionTimeoutMS\n      });\n  }\n\n  /**\n   * @internal\n   *\n   * The stream is considered constructed when the indexes are done being created\n   */\n  override _construct(callback: (error?: Error | null) => void): void {\n    if (!this.bucket.s.calledOpenUploadStream) {\n      this.bucket.s.calledOpenUploadStream = true;\n\n      checkIndexes(this).then(\n        () => {\n          this.bucket.s.checkedIndexes = true;\n          this.bucket.emit('index');\n          callback();\n        },\n        error => {\n          if (error instanceof MongoOperationTimeoutError) {\n            return handleError(this, error, callback);\n          }\n          squashError(error);\n          callback();\n        }\n      );\n    } else {\n      return process.nextTick(callback);\n    }\n  }\n\n  /**\n   * @internal\n   * Write a buffer to the stream.\n   *\n   * @param chunk - Buffer to write\n   * @param encoding - Optional encoding for the buffer\n   * @param callback - Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n   */\n  override _write(\n    chunk: Buffer | string,\n    encoding: BufferEncoding,\n    callback: Callback<void>\n  ): void {\n    doWrite(this, chunk, encoding, callback);\n  }\n\n  /** @internal */\n  override _final(callback: (error?: Error | null) => void): void {\n    if (this.state.streamEnd) {\n      return process.nextTick(callback);\n    }\n    this.state.streamEnd = true;\n    writeRemnant(this, callback);\n  }\n\n  /**\n   * Places this write stream into an aborted state (all future writes fail)\n   * and deletes all chunks that have already been written.\n   */\n  async abort(): Promise<void> {\n    if (this.state.streamEnd) {\n      // TODO(NODE-3485): Replace with MongoGridFSStreamClosed\n      throw new MongoAPIError('Cannot abort a stream that has already completed');\n    }\n\n    if (this.state.aborted) {\n      // TODO(NODE-3485): Replace with MongoGridFSStreamClosed\n      throw new MongoAPIError('Cannot call abort() on a stream twice');\n    }\n\n    this.state.aborted = true;\n    const remainingTimeMS = this.timeoutContext?.getRemainingTimeMSOrThrow(\n      `Upload timed out after ${this.timeoutContext?.timeoutMS}ms`\n    );\n\n    await this.chunks.deleteMany({ files_id: this.id }, { timeoutMS: remainingTimeMS });\n  }\n}\n\nfunction handleError(stream: GridFSBucketWriteStream, error: Error, callback: Callback): void {\n  if (stream.state.errored) {\n    process.nextTick(callback);\n    return;\n  }\n  stream.state.errored = true;\n  process.nextTick(callback, error);\n}\n\nfunction createChunkDoc(filesId: ObjectId, n: number, data: Buffer): GridFSChunk {\n  return {\n    _id: new ObjectId(),\n    files_id: filesId,\n    n,\n    data\n  };\n}\n\nasync function checkChunksIndex(stream: GridFSBucketWriteStream): Promise<void> {\n  const index = { files_id: 1, n: 1 };\n\n  let remainingTimeMS;\n  remainingTimeMS = stream.timeoutContext?.getRemainingTimeMSOrThrow(\n    `Upload timed out after ${stream.timeoutContext?.timeoutMS}ms`\n  );\n\n  let indexes;\n  try {\n    indexes = await stream.chunks\n      .listIndexes({\n        timeoutMode: remainingTimeMS != null ? CursorTimeoutMode.LIFETIME : undefined,\n        timeoutMS: remainingTimeMS\n      })\n      .toArray();\n  } catch (error) {\n    if (error instanceof MongoError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound) {\n      indexes = [];\n    } else {\n      throw error;\n    }\n  }\n\n  const hasChunksIndex = !!indexes.find(index => {\n    const keys = Object.keys(index.key);\n    if (keys.length === 2 && index.key.files_id === 1 && index.key.n === 1) {\n      return true;\n    }\n    return false;\n  });\n\n  if (!hasChunksIndex) {\n    remainingTimeMS = stream.timeoutContext?.getRemainingTimeMSOrThrow(\n      `Upload timed out after ${stream.timeoutContext?.timeoutMS}ms`\n    );\n    await stream.chunks.createIndex(index, {\n      ...stream.writeConcern,\n      background: true,\n      unique: true,\n      timeoutMS: remainingTimeMS\n    });\n  }\n}\n\nfunction checkDone(stream: GridFSBucketWriteStream, callback: Callback): void {\n  if (stream.done) {\n    return process.nextTick(callback);\n  }\n\n  if (stream.state.streamEnd && stream.state.outstandingRequests === 0 && !stream.state.errored) {\n    // Set done so we do not trigger duplicate createFilesDoc\n    stream.done = true;\n    // Create a new files doc\n    const gridFSFile = createFilesDoc(\n      stream.id,\n      stream.length,\n      stream.chunkSizeBytes,\n      stream.filename,\n      stream.options.contentType,\n      stream.options.aliases,\n      stream.options.metadata\n    );\n\n    if (isAborted(stream, callback)) {\n      return;\n    }\n\n    const remainingTimeMS = stream.timeoutContext?.remainingTimeMS;\n    if (remainingTimeMS != null && remainingTimeMS <= 0) {\n      return handleError(\n        stream,\n        new MongoOperationTimeoutError(\n          `Upload timed out after ${stream.timeoutContext?.timeoutMS}ms`\n        ),\n        callback\n      );\n    }\n\n    stream.files\n      .insertOne(gridFSFile, { writeConcern: stream.writeConcern, timeoutMS: remainingTimeMS })\n      .then(\n        () => {\n          stream.gridFSFile = gridFSFile;\n          callback();\n        },\n        error => {\n          return handleError(stream, error, callback);\n        }\n      );\n    return;\n  }\n\n  process.nextTick(callback);\n}\n\nasync function checkIndexes(stream: GridFSBucketWriteStream): Promise<void> {\n  let remainingTimeMS = stream.timeoutContext?.getRemainingTimeMSOrThrow(\n    `Upload timed out after ${stream.timeoutContext?.timeoutMS}ms`\n  );\n  const doc = await stream.files.findOne(\n    {},\n    {\n      projection: { _id: 1 },\n      timeoutMS: remainingTimeMS\n    }\n  );\n  if (doc != null) {\n    // If at least one document exists assume the collection has the required index\n    return;\n  }\n\n  const index = { filename: 1, uploadDate: 1 };\n\n  let indexes;\n  remainingTimeMS = stream.timeoutContext?.getRemainingTimeMSOrThrow(\n    `Upload timed out after ${stream.timeoutContext?.timeoutMS}ms`\n  );\n  const listIndexesOptions = {\n    timeoutMode: remainingTimeMS != null ? CursorTimeoutMode.LIFETIME : undefined,\n    timeoutMS: remainingTimeMS\n  };\n  try {\n    indexes = await stream.files.listIndexes(listIndexesOptions).toArray();\n  } catch (error) {\n    if (error instanceof MongoError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound) {\n      indexes = [];\n    } else {\n      throw error;\n    }\n  }\n\n  const hasFileIndex = !!indexes.find(index => {\n    const keys = Object.keys(index.key);\n    if (keys.length === 2 && index.key.filename === 1 && index.key.uploadDate === 1) {\n      return true;\n    }\n    return false;\n  });\n\n  if (!hasFileIndex) {\n    remainingTimeMS = stream.timeoutContext?.getRemainingTimeMSOrThrow(\n      `Upload timed out after ${stream.timeoutContext?.timeoutMS}ms`\n    );\n\n    await stream.files.createIndex(index, { background: false, timeoutMS: remainingTimeMS });\n  }\n\n  await checkChunksIndex(stream);\n}\n\nfunction createFilesDoc(\n  _id: ObjectId,\n  length: number,\n  chunkSize: number,\n  filename: string,\n  contentType?: string,\n  aliases?: string[],\n  metadata?: Document\n): GridFSFile {\n  const ret: GridFSFile = {\n    _id,\n    length,\n    chunkSize,\n    uploadDate: new Date(),\n    filename\n  };\n\n  if (contentType) {\n    ret.contentType = contentType;\n  }\n\n  if (aliases) {\n    ret.aliases = aliases;\n  }\n\n  if (metadata) {\n    ret.metadata = metadata;\n  }\n\n  return ret;\n}\n\nfunction doWrite(\n  stream: GridFSBucketWriteStream,\n  chunk: Buffer | string,\n  encoding: BufferEncoding,\n  callback: Callback<void>\n): void {\n  if (isAborted(stream, callback)) {\n    return;\n  }\n\n  const inputBuf = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding);\n\n  stream.length += inputBuf.length;\n\n  // Input is small enough to fit in our buffer\n  if (stream.pos + inputBuf.length < stream.chunkSizeBytes) {\n    inputBuf.copy(stream.bufToStore, stream.pos);\n    stream.pos += inputBuf.length;\n    process.nextTick(callback);\n    return;\n  }\n\n  // Otherwise, buffer is too big for current chunk, so we need to flush\n  // to MongoDB.\n  let inputBufRemaining = inputBuf.length;\n  let spaceRemaining: number = stream.chunkSizeBytes - stream.pos;\n  let numToCopy = Math.min(spaceRemaining, inputBuf.length);\n  let outstandingRequests = 0;\n  while (inputBufRemaining > 0) {\n    const inputBufPos = inputBuf.length - inputBufRemaining;\n    inputBuf.copy(stream.bufToStore, stream.pos, inputBufPos, inputBufPos + numToCopy);\n    stream.pos += numToCopy;\n    spaceRemaining -= numToCopy;\n    let doc: GridFSChunk;\n    if (spaceRemaining === 0) {\n      doc = createChunkDoc(stream.id, stream.n, Buffer.from(stream.bufToStore));\n\n      const remainingTimeMS = stream.timeoutContext?.remainingTimeMS;\n      if (remainingTimeMS != null && remainingTimeMS <= 0) {\n        return handleError(\n          stream,\n          new MongoOperationTimeoutError(\n            `Upload timed out after ${stream.timeoutContext?.timeoutMS}ms`\n          ),\n          callback\n        );\n      }\n\n      ++stream.state.outstandingRequests;\n      ++outstandingRequests;\n\n      if (isAborted(stream, callback)) {\n        return;\n      }\n\n      stream.chunks\n        .insertOne(doc, { writeConcern: stream.writeConcern, timeoutMS: remainingTimeMS })\n        .then(\n          () => {\n            --stream.state.outstandingRequests;\n            --outstandingRequests;\n\n            if (!outstandingRequests) {\n              checkDone(stream, callback);\n            }\n          },\n          error => {\n            return handleError(stream, error, callback);\n          }\n        );\n\n      spaceRemaining = stream.chunkSizeBytes;\n      stream.pos = 0;\n      ++stream.n;\n    }\n    inputBufRemaining -= numToCopy;\n    numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n  }\n}\n\nfunction writeRemnant(stream: GridFSBucketWriteStream, callback: Callback): void {\n  // Buffer is empty, so don't bother to insert\n  if (stream.pos === 0) {\n    return checkDone(stream, callback);\n  }\n\n  // Create a new buffer to make sure the buffer isn't bigger than it needs\n  // to be.\n  const remnant = Buffer.alloc(stream.pos);\n  stream.bufToStore.copy(remnant, 0, 0, stream.pos);\n  const doc = createChunkDoc(stream.id, stream.n, remnant);\n\n  // If the stream was aborted, do not write remnant\n  if (isAborted(stream, callback)) {\n    return;\n  }\n\n  const remainingTimeMS = stream.timeoutContext?.remainingTimeMS;\n  if (remainingTimeMS != null && remainingTimeMS <= 0) {\n    return handleError(\n      stream,\n      new MongoOperationTimeoutError(\n        `Upload timed out after ${stream.timeoutContext?.timeoutMS}ms`\n      ),\n      callback\n    );\n  }\n  ++stream.state.outstandingRequests;\n  stream.chunks\n    .insertOne(doc, { writeConcern: stream.writeConcern, timeoutMS: remainingTimeMS })\n    .then(\n      () => {\n        --stream.state.outstandingRequests;\n        checkDone(stream, callback);\n      },\n      error => {\n        return handleError(stream, error, callback);\n      }\n    );\n}\n\nfunction isAborted(stream: GridFSBucketWriteStream, callback: Callback<void>): boolean {\n  if (stream.state.aborted) {\n    process.nextTick(callback, new MongoAPIError('Stream has been aborted'));\n    return true;\n  }\n  return false;\n}\n", "import type { ObjectId } from '../bson';\nimport type { Collection } from '../collection';\nimport type { FindCursor } from '../cursor/find_cursor';\nimport type { Db } from '../db';\nimport { MongoOperationTimeoutError, MongoRuntimeError } from '../error';\nimport { type Filter, TypedEventEmitter } from '../mongo_types';\nimport type { ReadPreference } from '../read_preference';\nimport type { Sort } from '../sort';\nimport { CSOTTimeoutContext } from '../timeout';\nimport { noop, resolveOptions } from '../utils';\nimport { WriteConcern, type WriteConcernOptions } from '../write_concern';\nimport type { FindOptions } from './../operations/find';\nimport {\n  GridFSBucketReadStream,\n  type GridFSBucketReadStreamOptions,\n  type GridFSBucketReadStreamOptionsWithRevision,\n  type GridFSFile\n} from './download';\nimport {\n  GridFSBucketWriteStream,\n  type GridFSBucketWriteStreamOptions,\n  type GridFSChunk\n} from './upload';\n\nconst DEFAULT_GRIDFS_BUCKET_OPTIONS: {\n  bucketName: string;\n  chunkSizeBytes: number;\n} = {\n  bucketName: 'fs',\n  chunkSizeBytes: 255 * 1024\n};\n\n/** @public */\nexport interface GridFSBucketOptions extends WriteConcernOptions {\n  /** The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot. */\n  bucketName?: string;\n  /** Number of bytes stored in each chunk. Defaults to 255KB */\n  chunkSizeBytes?: number;\n  /** Read preference to be passed to read operations */\n  readPreference?: ReadPreference;\n  /**\n   * @experimental\n   * Specifies the lifetime duration of a gridFS stream. If any async operations are in progress\n   * when this timeout expires, the stream will throw a timeout error.\n   */\n  timeoutMS?: number;\n}\n\n/** @internal */\nexport interface GridFSBucketPrivate {\n  db: Db;\n  options: {\n    bucketName: string;\n    chunkSizeBytes: number;\n    readPreference?: ReadPreference;\n    writeConcern: WriteConcern | undefined;\n    timeoutMS?: number;\n  };\n  _chunksCollection: Collection<GridFSChunk>;\n  _filesCollection: Collection<GridFSFile>;\n  checkedIndexes: boolean;\n  calledOpenUploadStream: boolean;\n}\n\n/** @public */\nexport type GridFSBucketEvents = {\n  index(): void;\n};\n\n/**\n * Constructor for a streaming GridFS interface\n * @public\n */\nexport class GridFSBucket extends TypedEventEmitter<GridFSBucketEvents> {\n  /** @internal */\n  s: GridFSBucketPrivate;\n\n  /**\n   * When the first call to openUploadStream is made, the upload stream will\n   * check to see if it needs to create the proper indexes on the chunks and\n   * files collections. This event is fired either when 1) it determines that\n   * no index creation is necessary, 2) when it successfully creates the\n   * necessary indexes.\n   * @event\n   */\n  static readonly INDEX = 'index' as const;\n\n  constructor(db: Db, options?: GridFSBucketOptions) {\n    super();\n    this.on('error', noop);\n    this.setMaxListeners(0);\n    const privateOptions = resolveOptions(db, {\n      ...DEFAULT_GRIDFS_BUCKET_OPTIONS,\n      ...options,\n      writeConcern: WriteConcern.fromOptions(options)\n    });\n    this.s = {\n      db,\n      options: privateOptions,\n      _chunksCollection: db.collection<GridFSChunk>(privateOptions.bucketName + '.chunks'),\n      _filesCollection: db.collection<GridFSFile>(privateOptions.bucketName + '.files'),\n      checkedIndexes: false,\n      calledOpenUploadStream: false\n    };\n  }\n\n  /**\n   * Returns a writable stream (GridFSBucketWriteStream) for writing\n   * buffers to GridFS. The stream's 'id' property contains the resulting\n   * file's id.\n   *\n   * @param filename - The value of the 'filename' key in the files doc\n   * @param options - Optional settings.\n   */\n\n  openUploadStream(\n    filename: string,\n    options?: GridFSBucketWriteStreamOptions\n  ): GridFSBucketWriteStream {\n    return new GridFSBucketWriteStream(this, filename, {\n      timeoutMS: this.s.options.timeoutMS,\n      ...options\n    });\n  }\n\n  /**\n   * Returns a writable stream (GridFSBucketWriteStream) for writing\n   * buffers to GridFS for a custom file id. The stream's 'id' property contains the resulting\n   * file's id.\n   */\n  openUploadStreamWithId(\n    id: ObjectId,\n    filename: string,\n    options?: GridFSBucketWriteStreamOptions\n  ): GridFSBucketWriteStream {\n    return new GridFSBucketWriteStream(this, filename, {\n      timeoutMS: this.s.options.timeoutMS,\n      ...options,\n      id\n    });\n  }\n\n  /** Returns a readable stream (GridFSBucketReadStream) for streaming file data from GridFS. */\n  openDownloadStream(\n    id: ObjectId,\n    options?: GridFSBucketReadStreamOptions\n  ): GridFSBucketReadStream {\n    return new GridFSBucketReadStream(\n      this.s._chunksCollection,\n      this.s._filesCollection,\n      this.s.options.readPreference,\n      { _id: id },\n      { timeoutMS: this.s.options.timeoutMS, ...options }\n    );\n  }\n\n  /**\n   * Deletes a file with the given id\n   *\n   * @param id - The id of the file doc\n   */\n  async delete(id: ObjectId, options?: { timeoutMS: number }): Promise<void> {\n    const { timeoutMS } = resolveOptions(this.s.db, options);\n    let timeoutContext: CSOTTimeoutContext | undefined = undefined;\n\n    if (timeoutMS) {\n      timeoutContext = new CSOTTimeoutContext({\n        timeoutMS,\n        serverSelectionTimeoutMS: this.s.db.client.s.options.serverSelectionTimeoutMS\n      });\n    }\n\n    const { deletedCount } = await this.s._filesCollection.deleteOne(\n      { _id: id },\n      { timeoutMS: timeoutContext?.remainingTimeMS }\n    );\n\n    const remainingTimeMS = timeoutContext?.remainingTimeMS;\n    if (remainingTimeMS != null && remainingTimeMS <= 0)\n      throw new MongoOperationTimeoutError(`Timed out after ${timeoutMS}ms`);\n    // Delete orphaned chunks before returning FileNotFound\n    await this.s._chunksCollection.deleteMany({ files_id: id }, { timeoutMS: remainingTimeMS });\n\n    if (deletedCount === 0) {\n      // TODO(NODE-3483): Replace with more appropriate error\n      // Consider creating new error MongoGridFSFileNotFoundError\n      throw new MongoRuntimeError(`File not found for id ${id}`);\n    }\n  }\n\n  /** Convenience wrapper around find on the files collection */\n  find(filter: Filter<GridFSFile> = {}, options: FindOptions = {}): FindCursor<GridFSFile> {\n    return this.s._filesCollection.find(filter, options);\n  }\n\n  /**\n   * Returns a readable stream (GridFSBucketReadStream) for streaming the\n   * file with the given name from GridFS. If there are multiple files with\n   * the same name, this will stream the most recent file with the given name\n   * (as determined by the `uploadDate` field). You can set the `revision`\n   * option to change this behavior.\n   */\n  openDownloadStreamByName(\n    filename: string,\n    options?: GridFSBucketReadStreamOptionsWithRevision\n  ): GridFSBucketReadStream {\n    let sort: Sort = { uploadDate: -1 };\n    let skip = undefined;\n    if (options && options.revision != null) {\n      if (options.revision >= 0) {\n        sort = { uploadDate: 1 };\n        skip = options.revision;\n      } else {\n        skip = -options.revision - 1;\n      }\n    }\n    return new GridFSBucketReadStream(\n      this.s._chunksCollection,\n      this.s._filesCollection,\n      this.s.options.readPreference,\n      { filename },\n      { timeoutMS: this.s.options.timeoutMS, ...options, sort, skip }\n    );\n  }\n\n  /**\n   * Renames the file with the given _id to the given string\n   *\n   * @param id - the id of the file to rename\n   * @param filename - new name for the file\n   */\n  async rename(id: ObjectId, filename: string, options?: { timeoutMS: number }): Promise<void> {\n    const filter = { _id: id };\n    const update = { $set: { filename } };\n    const { matchedCount } = await this.s._filesCollection.updateOne(filter, update, options);\n    if (matchedCount === 0) {\n      throw new MongoRuntimeError(`File with id ${id} not found`);\n    }\n  }\n\n  /** Removes this bucket's files collection, followed by its chunks collection. */\n  async drop(options?: { timeoutMS: number }): Promise<void> {\n    const { timeoutMS } = resolveOptions(this.s.db, options);\n    let timeoutContext: CSOTTimeoutContext | undefined = undefined;\n\n    if (timeoutMS) {\n      timeoutContext = new CSOTTimeoutContext({\n        timeoutMS,\n        serverSelectionTimeoutMS: this.s.db.client.s.options.serverSelectionTimeoutMS\n      });\n    }\n\n    if (timeoutContext) {\n      await this.s._filesCollection.drop({ timeoutMS: timeoutContext.remainingTimeMS });\n      const remainingTimeMS = timeoutContext.getRemainingTimeMSOrThrow(\n        `Timed out after ${timeoutMS}ms`\n      );\n      await this.s._chunksCollection.drop({ timeoutMS: remainingTimeMS });\n    } else {\n      await this.s._filesCollection.drop();\n      await this.s._chunksCollection.drop();\n    }\n  }\n}\n", "import { Admin } from './admin';\nimport { OrderedBulkOperation } from './bulk/ordered';\nimport { UnorderedBulkOperation } from './bulk/unordered';\nimport { ChangeStream } from './change_stream';\nimport { Collection } from './collection';\nimport { AbstractCursor } from './cursor/abstract_cursor';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { FindCursor } from './cursor/find_cursor';\nimport { ListCollectionsCursor } from './cursor/list_collections_cursor';\nimport { ListIndexesCursor } from './cursor/list_indexes_cursor';\nimport type { RunCommandCursor } from './cursor/run_command_cursor';\nimport { Db } from './db';\nimport { ExplainableCursor } from './explain';\nimport { GridFSBucket } from './gridfs';\nimport { GridFSBucketReadStream } from './gridfs/download';\nimport { GridFSBucketWriteStream } from './gridfs/upload';\nimport { MongoClient } from './mongo_client';\nimport { CancellationToken } from './mongo_types';\nimport { ClientSession } from './sessions';\n\n/** @public */\nexport { BSON } from './bson';\nexport {\n  Binary,\n  BSONRegExp,\n  BSONSymbol,\n  BSONType,\n  Code,\n  DBRef,\n  Decimal128,\n  Double,\n  Int32,\n  Long,\n  MaxKey,\n  MinKey,\n  ObjectId,\n  Timestamp,\n  UUID\n} from './bson';\nexport {\n  type AnyBulkWriteOperation,\n  type BulkWriteOptions,\n  MongoBulkWriteError\n} from './bulk/common';\nexport { ClientEncryption } from './client-side-encryption/client_encryption';\nexport { ChangeStreamCursor } from './cursor/change_stream_cursor';\nexport {\n  MongoAPIError,\n  MongoAWSError,\n  MongoAzureError,\n  MongoBatchReExecutionError,\n  MongoChangeStreamError,\n  MongoClientBulkWriteCursorError,\n  MongoClientBulkWriteError,\n  MongoClientBulkWriteExecutionError,\n  MongoCompatibilityError,\n  MongoCursorExhaustedError,\n  MongoCursorInUseError,\n  MongoDecompressionError,\n  MongoDriverError,\n  MongoError,\n  MongoExpiredSessionError,\n  MongoGCPError,\n  MongoGridFSChunkError,\n  MongoGridFSStreamError,\n  MongoInvalidArgumentError,\n  MongoKerberosError,\n  MongoMissingCredentialsError,\n  MongoMissingDependencyError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoNotConnectedError,\n  MongoOIDCError,\n  MongoOperationTimeoutError,\n  MongoParseError,\n  MongoRuntimeError,\n  MongoServerClosedError,\n  MongoServerError,\n  MongoServerSelectionError,\n  MongoStalePrimaryError,\n  MongoSystemError,\n  MongoTailableCursorError,\n  MongoTopologyClosedError,\n  MongoTransactionError,\n  MongoUnexpectedServerResponseError,\n  MongoWriteConcernError,\n  WriteConcernErrorResult\n} from './error';\nexport { configureExplicitResourceManagement } from './resource_management';\nexport {\n  AbstractCursor,\n  // Actual driver classes exported\n  Admin,\n  AggregationCursor,\n  CancellationToken,\n  ChangeStream,\n  ClientSession,\n  Collection,\n  Db,\n  ExplainableCursor,\n  FindCursor,\n  GridFSBucket,\n  GridFSBucketReadStream,\n  GridFSBucketWriteStream,\n  ListCollectionsCursor,\n  ListIndexesCursor,\n  MongoClient,\n  OrderedBulkOperation,\n  RunCommandCursor,\n  UnorderedBulkOperation\n};\n\n// enums\nexport { BatchType } from './bulk/common';\nexport { AutoEncryptionLoggerLevel } from './client-side-encryption/auto_encrypter';\nexport { GSSAPICanonicalizationValue } from './cmap/auth/gssapi';\nexport { AuthMechanism } from './cmap/auth/providers';\nexport { Compressor } from './cmap/wire_protocol/compression';\nexport { CURSOR_FLAGS, CursorTimeoutMode } from './cursor/abstract_cursor';\nexport { MongoErrorLabel } from './error';\nexport { ExplainVerbosity } from './explain';\nexport { ServerApiVersion } from './mongo_client';\nexport { MongoLoggableComponent, SeverityLevel } from './mongo_logger';\nexport { ReturnDocument } from './operations/find_and_modify';\nexport { ProfilingLevel } from './operations/set_profiling_level';\nexport { ReadConcernLevel } from './read_concern';\nexport { ReadPreferenceMode } from './read_preference';\nexport { ServerType, TopologyType } from './sdam/common';\n\n// Helper classes\nexport type { AWSCredentialProvider } from './cmap/auth/aws_temporary_credentials';\nexport type { AWSCredentials } from './deps';\nexport { ReadConcern } from './read_concern';\nexport { ReadPreference } from './read_preference';\nexport { WriteConcern } from './write_concern';\n// events\nexport {\n  CommandFailedEvent,\n  CommandStartedEvent,\n  CommandSucceededEvent\n} from './cmap/command_monitoring_events';\nexport {\n  ConnectionCheckedInEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionPoolClearedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolMonitoringEvent,\n  ConnectionPoolReadyEvent,\n  ConnectionReadyEvent\n} from './cmap/connection_pool_events';\nexport {\n  ServerClosedEvent,\n  ServerDescriptionChangedEvent,\n  ServerHeartbeatFailedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent,\n  ServerOpeningEvent,\n  TopologyClosedEvent,\n  TopologyDescriptionChangedEvent,\n  TopologyOpeningEvent\n} from './sdam/events';\nexport {\n  ServerSelectionEvent,\n  ServerSelectionFailedEvent,\n  ServerSelectionStartedEvent,\n  ServerSelectionSucceededEvent,\n  WaitingForSuitableServerEvent\n} from './sdam/server_selection_events';\nexport { SrvPollingEvent } from './sdam/srv_polling';\n\n// type only exports below, these are removed from emitted JS\nexport type { AdminPrivate } from './admin';\nexport type { BSONElement, BSONSerializeOptions, Document } from './bson';\nexport type { deserialize, serialize } from './bson';\nexport type {\n  BulkResult,\n  BulkWriteOperationError,\n  BulkWriteResult,\n  DeleteManyModel,\n  DeleteOneModel,\n  InsertOneModel,\n  ReplaceOneModel,\n  UpdateManyModel,\n  UpdateOneModel,\n  WriteConcernError,\n  WriteError\n} from './bulk/common';\nexport type {\n  Batch,\n  BulkOperationBase,\n  BulkOperationPrivate,\n  FindOperators,\n  WriteConcernErrorData\n} from './bulk/common';\nexport type {\n  ChangeStreamCollModDocument,\n  ChangeStreamCreateDocument,\n  ChangeStreamCreateIndexDocument,\n  ChangeStreamDeleteDocument,\n  ChangeStreamDocument,\n  ChangeStreamDocumentCollectionUUID,\n  ChangeStreamDocumentCommon,\n  ChangeStreamDocumentKey,\n  ChangeStreamDocumentOperationDescription,\n  ChangeStreamDropDatabaseDocument,\n  ChangeStreamDropDocument,\n  ChangeStreamDropIndexDocument,\n  ChangeStreamEvents,\n  ChangeStreamInsertDocument,\n  ChangeStreamInvalidateDocument,\n  ChangeStreamNameSpace,\n  ChangeStreamOptions,\n  ChangeStreamRefineCollectionShardKeyDocument,\n  ChangeStreamRenameDocument,\n  ChangeStreamReplaceDocument,\n  ChangeStreamReshardCollectionDocument,\n  ChangeStreamShardCollectionDocument,\n  ChangeStreamSplitEvent,\n  ChangeStreamUpdateDocument,\n  OperationTime,\n  ResumeOptions,\n  ResumeToken,\n  UpdateDescription\n} from './change_stream';\nexport type { AutoEncrypter } from './client-side-encryption/auto_encrypter';\nexport type { AutoEncryptionOptions } from './client-side-encryption/auto_encrypter';\nexport type { AutoEncryptionExtraOptions } from './client-side-encryption/auto_encrypter';\nexport type {\n  AWSEncryptionKeyOptions,\n  AzureEncryptionKeyOptions,\n  ClientEncryptionCreateDataKeyProviderOptions,\n  ClientEncryptionEncryptOptions,\n  ClientEncryptionOptions,\n  ClientEncryptionRewrapManyDataKeyProviderOptions,\n  ClientEncryptionRewrapManyDataKeyResult,\n  DataKey,\n  GCPEncryptionKeyOptions,\n  KMIPEncryptionKeyOptions,\n  RangeOptions\n} from './client-side-encryption/client_encryption';\nexport {\n  MongoCryptAzureKMSRequestError,\n  MongoCryptCreateDataKeyError,\n  MongoCryptCreateEncryptedCollectionError,\n  MongoCryptError,\n  MongoCryptInvalidArgumentError,\n  MongoCryptKMSRequestNetworkTimeoutError\n} from './client-side-encryption/errors';\nexport type { MongocryptdManager } from './client-side-encryption/mongocryptd_manager';\nexport type {\n  AWSKMSProviderConfiguration,\n  AzureKMSProviderConfiguration,\n  ClientEncryptionDataKeyProvider,\n  CredentialProviders,\n  GCPKMSProviderConfiguration,\n  KMIPKMSProviderConfiguration,\n  KMSProviders,\n  LocalKMSProviderConfiguration\n} from './client-side-encryption/providers/index';\nexport type {\n  ClientEncryptionSocketOptions,\n  ClientEncryptionTlsOptions,\n  CSFLEKMSTlsOptions,\n  StateMachineExecutable\n} from './client-side-encryption/state_machine';\nexport type { AuthContext, AuthProvider } from './cmap/auth/auth_provider';\nexport type {\n  AuthMechanismProperties,\n  MongoCredentials,\n  MongoCredentialsOptions\n} from './cmap/auth/mongo_credentials';\nexport type {\n  IdPInfo,\n  IdPServerResponse,\n  OIDCCallbackFunction,\n  OIDCCallbackParams,\n  OIDCResponse\n} from './cmap/auth/mongodb_oidc';\nexport type { Workflow } from './cmap/auth/mongodb_oidc';\nexport type { TokenCache } from './cmap/auth/mongodb_oidc/token_cache';\nexport type {\n  MessageHeader,\n  OpCompressedRequest,\n  OpMsgOptions,\n  OpMsgRequest,\n  OpMsgResponse,\n  OpQueryOptions,\n  OpQueryRequest,\n  OpReply,\n  WriteProtocolMessageType\n} from './cmap/commands';\nexport type { HandshakeDocument } from './cmap/connect';\nexport type { LEGAL_TCP_SOCKET_OPTIONS, LEGAL_TLS_SOCKET_OPTIONS, Stream } from './cmap/connect';\nexport type {\n  CommandOptions,\n  Connection,\n  ConnectionEvents,\n  ConnectionOptions,\n  ProxyOptions\n} from './cmap/connection';\nexport type {\n  CloseOptions,\n  ConnectionPool,\n  ConnectionPoolEvents,\n  ConnectionPoolOptions,\n  PoolState,\n  WaitQueueMember,\n  WithConnectionCallback\n} from './cmap/connection_pool';\nexport type { ClientMetadata, ClientMetadataOptions } from './cmap/handshake/client_metadata';\nexport type { ConnectionPoolMetrics } from './cmap/metrics';\nexport type { StreamDescription, StreamDescriptionOptions } from './cmap/stream_description';\nexport type { CompressorName } from './cmap/wire_protocol/compression';\nexport type {\n  JSTypeOf,\n  OnDemandDocument,\n  OnDemandDocumentDeserializeOptions\n} from './cmap/wire_protocol/on_demand/document';\nexport type {\n  CursorResponse,\n  MongoDBResponse,\n  MongoDBResponseConstructor\n} from './cmap/wire_protocol/responses';\nexport type {\n  CollectionOptions,\n  CollectionPrivate,\n  CountDocumentsOptions,\n  ModifyResult\n} from './collection';\nexport type {\n  COMMAND_FAILED,\n  COMMAND_STARTED,\n  COMMAND_SUCCEEDED,\n  CONNECTION_CHECK_OUT_FAILED,\n  CONNECTION_CHECK_OUT_STARTED,\n  CONNECTION_CHECKED_IN,\n  CONNECTION_CHECKED_OUT,\n  CONNECTION_CLOSED,\n  CONNECTION_CREATED,\n  CONNECTION_POOL_CLEARED,\n  CONNECTION_POOL_CLOSED,\n  CONNECTION_POOL_CREATED,\n  CONNECTION_POOL_READY,\n  CONNECTION_READY,\n  MONGO_CLIENT_EVENTS,\n  SERVER_CLOSED,\n  SERVER_DESCRIPTION_CHANGED,\n  SERVER_HEARTBEAT_FAILED,\n  SERVER_HEARTBEAT_STARTED,\n  SERVER_HEARTBEAT_SUCCEEDED,\n  SERVER_OPENING,\n  SERVER_SELECTION_FAILED,\n  SERVER_SELECTION_STARTED,\n  SERVER_SELECTION_SUCCEEDED,\n  TOPOLOGY_CLOSED,\n  TOPOLOGY_DESCRIPTION_CHANGED,\n  TOPOLOGY_OPENING,\n  WAITING_FOR_SUITABLE_SERVER\n} from './constants';\nexport type {\n  AbstractCursorEvents,\n  AbstractCursorOptions,\n  CursorFlag,\n  CursorStreamOptions\n} from './cursor/abstract_cursor';\nexport type {\n  CursorTimeoutContext,\n  InitialCursorResponse,\n  InternalAbstractCursorOptions\n} from './cursor/abstract_cursor';\nexport type { AggregationCursorOptions } from './cursor/aggregation_cursor';\nexport type { ChangeStreamCursorOptions } from './cursor/change_stream_cursor';\nexport type {\n  ListSearchIndexesCursor,\n  ListSearchIndexesOptions\n} from './cursor/list_search_indexes_cursor';\nexport type { RunCursorCommandOptions } from './cursor/run_command_cursor';\nexport type { DbOptions, DbPrivate } from './db';\nexport type { Encrypter, EncrypterOptions } from './encrypter';\nexport type { AnyError, ErrorDescription, MongoNetworkErrorOptions } from './error';\nexport type {\n  Explain,\n  ExplainCommandOptions,\n  ExplainOptions,\n  ExplainVerbosityLike\n} from './explain';\nexport type {\n  GridFSBucketReadStreamOptions,\n  GridFSBucketReadStreamOptionsWithRevision,\n  GridFSBucketReadStreamPrivate,\n  GridFSFile\n} from './gridfs/download';\nexport type { GridFSBucketEvents, GridFSBucketOptions, GridFSBucketPrivate } from './gridfs/index';\nexport type { GridFSBucketWriteStreamOptions, GridFSChunk } from './gridfs/upload';\nexport type {\n  Auth,\n  DriverInfo,\n  MongoClientEvents,\n  MongoClientOptions,\n  MongoClientPrivate,\n  MongoOptions,\n  PkFactory,\n  ServerApi,\n  SupportedNodeConnectionOptions,\n  SupportedSocketOptions,\n  SupportedTLSConnectionOptions,\n  SupportedTLSSocketOptions,\n  WithSessionCallback\n} from './mongo_client';\nexport { MongoClientAuthProviders } from './mongo_client_auth_providers';\nexport type {\n  Log,\n  LogComponentSeveritiesClientOptions,\n  LogConvertible,\n  Loggable,\n  LoggableCommandFailedEvent,\n  LoggableCommandSucceededEvent,\n  LoggableEvent,\n  LoggableServerHeartbeatFailedEvent,\n  LoggableServerHeartbeatStartedEvent,\n  LoggableServerHeartbeatSucceededEvent,\n  MongoDBLogWritable,\n  MongoLogger,\n  MongoLoggerEnvOptions,\n  MongoLoggerMongoClientOptions,\n  MongoLoggerOptions\n} from './mongo_logger';\nexport type {\n  Abortable,\n  CommonEvents,\n  EventsDescription,\n  GenericListener,\n  TypedEventEmitter\n} from './mongo_types';\nexport type {\n  AcceptedFields,\n  AddToSetOperators,\n  AlternativeType,\n  ArrayElement,\n  ArrayOperator,\n  BitwiseFilter,\n  BSONTypeAlias,\n  Condition,\n  EnhancedOmit,\n  Filter,\n  FilterOperations,\n  FilterOperators,\n  Flatten,\n  InferIdType,\n  IntegerType,\n  IsAny,\n  Join,\n  KeysOfAType,\n  KeysOfOtherType,\n  MatchKeysAndValues,\n  NestedPaths,\n  NestedPathsOfType,\n  NonObjectIdLikeDocument,\n  NotAcceptedFields,\n  NumericType,\n  OneOrMore,\n  OnlyFieldsOfType,\n  OptionalId,\n  OptionalUnlessRequiredId,\n  PropertyType,\n  PullAllOperator,\n  PullOperator,\n  PushOperator,\n  RegExpOrString,\n  RootFilterOperators,\n  SchemaMember,\n  SetFields,\n  StrictFilter,\n  StrictMatchKeysAndValues,\n  StrictUpdateFilter,\n  UpdateFilter,\n  WithId,\n  WithoutId\n} from './mongo_types';\nexport type {\n  AggregateOperation,\n  AggregateOptions,\n  DB_AGGREGATE_COLLECTION\n} from './operations/aggregate';\nexport type {\n  AnyClientBulkWriteModel,\n  ClientBulkWriteError,\n  ClientBulkWriteModel,\n  ClientBulkWriteOptions,\n  ClientBulkWriteResult,\n  ClientDeleteManyModel,\n  ClientDeleteOneModel,\n  ClientDeleteResult,\n  ClientInsertOneModel,\n  ClientInsertOneResult,\n  ClientReplaceOneModel,\n  ClientUpdateManyModel,\n  ClientUpdateOneModel,\n  ClientUpdateResult,\n  ClientWriteModel\n} from './operations/client_bulk_write/common';\nexport type {\n  CollationOptions,\n  CommandOperation,\n  CommandOperationOptions,\n  OperationParent\n} from './operations/command';\nexport type { CountOptions } from './operations/count';\nexport type {\n  ClusteredCollectionOptions,\n  CreateCollectionOptions,\n  TimeSeriesCollectionOptions\n} from './operations/create_collection';\nexport type { DeleteOptions, DeleteResult, DeleteStatement } from './operations/delete';\nexport type { DistinctOptions } from './operations/distinct';\nexport type { DropCollectionOptions, DropDatabaseOptions } from './operations/drop';\nexport type { EstimatedDocumentCountOptions } from './operations/estimated_document_count';\nexport type { FindOptions } from './operations/find';\nexport type {\n  FindOneAndDeleteOptions,\n  FindOneAndReplaceOptions,\n  FindOneAndUpdateOptions\n} from './operations/find_and_modify';\nexport type { IndexInformationOptions } from './operations/indexes';\nexport type {\n  CreateIndexesOptions,\n  DropIndexesOptions,\n  IndexDescription,\n  IndexDescriptionCompact,\n  IndexDescriptionInfo,\n  IndexDirection,\n  IndexSpecification,\n  ListIndexesOptions\n} from './operations/indexes';\nexport type { InsertManyResult, InsertOneOptions, InsertOneResult } from './operations/insert';\nexport type { CollectionInfo, ListCollectionsOptions } from './operations/list_collections';\nexport type { ListDatabasesOptions, ListDatabasesResult } from './operations/list_databases';\nexport type { AbstractOperation, Hint, OperationOptions } from './operations/operation';\nexport type { ProfilingLevelOptions } from './operations/profiling_level';\nexport type { RemoveUserOptions } from './operations/remove_user';\nexport type { RenameOptions } from './operations/rename';\nexport type { RunCommandOptions } from './operations/run_command';\nexport type { SearchIndexDescription } from './operations/search_indexes/create';\nexport type { SetProfilingLevelOptions } from './operations/set_profiling_level';\nexport type { DbStatsOptions } from './operations/stats';\nexport type {\n  ReplaceOptions,\n  UpdateOptions,\n  UpdateResult,\n  UpdateStatement\n} from './operations/update';\nexport type { ValidateCollectionOptions } from './operations/validate_collection';\nexport type { ReadConcernLike } from './read_concern';\nexport type {\n  HedgeOptions,\n  ReadPreferenceFromOptions,\n  ReadPreferenceLike,\n  ReadPreferenceLikeOptions,\n  ReadPreferenceOptions\n} from './read_preference';\nexport type { AsyncDisposable } from './resource_management';\nexport type { ClusterTime } from './sdam/common';\nexport type {\n  Monitor,\n  MonitorEvents,\n  MonitorInterval,\n  MonitorIntervalOptions,\n  MonitorOptions,\n  MonitorPrivate,\n  RTTPinger,\n  RTTPingerOptions,\n  RTTSampler,\n  ServerMonitoringMode\n} from './sdam/monitor';\nexport type {\n  Server,\n  ServerCommandOptions,\n  ServerEvents,\n  ServerOptions,\n  ServerPrivate\n} from './sdam/server';\nexport type {\n  ServerDescription,\n  ServerDescriptionOptions,\n  TagSet,\n  TopologyVersion\n} from './sdam/server_description';\nexport type { ServerSelector } from './sdam/server_selection';\nexport type { SrvPoller, SrvPollerEvents, SrvPollerOptions } from './sdam/srv_polling';\nexport type {\n  ConnectOptions,\n  SelectServerOptions,\n  ServerCapabilities,\n  ServerSelectionCallback,\n  ServerSelectionRequest,\n  Topology,\n  TopologyEvents,\n  TopologyOptions,\n  TopologyPrivate\n} from './sdam/topology';\nexport type { TopologyDescription, TopologyDescriptionOptions } from './sdam/topology_description';\nexport type {\n  ClientSessionEvents,\n  ClientSessionOptions,\n  EndSessionOptions,\n  ServerSession,\n  ServerSessionId,\n  ServerSessionPool,\n  WithTransactionCallback\n} from './sessions';\nexport type { Sort, SortDirection, SortDirectionForCmd, SortForCmd } from './sort';\nexport type {\n  CSOTTimeoutContext,\n  CSOTTimeoutContextOptions,\n  LegacyTimeoutContext,\n  LegacyTimeoutContextOptions,\n  Timeout,\n  TimeoutContext,\n  TimeoutContextOptions\n} from './timeout';\nexport type { Transaction, TransactionOptions, TxnState } from './transactions';\nexport type {\n  BufferPool,\n  Callback,\n  EventEmitterWithState,\n  HostAddress,\n  List,\n  MongoDBCollectionNamespace,\n  MongoDBNamespace\n} from './utils';\nexport type { W, WriteConcernOptions, WriteConcernSettings } from './write_concern';\n", "\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "[[[0,44],\"disallowed_STD3_valid\"],[[45,46],\"valid\"],[[47,47],\"disallowed_STD3_valid\"],[[48,57],\"valid\"],[[58,64],\"disallowed_STD3_valid\"],[[65,65],\"mapped\",[97]],[[66,66],\"mapped\",[98]],[[67,67],\"mapped\",[99]],[[68,68],\"mapped\",[100]],[[69,69],\"mapped\",[101]],[[70,70],\"mapped\",[102]],[[71,71],\"mapped\",[103]],[[72,72],\"mapped\",[104]],[[73,73],\"mapped\",[105]],[[74,74],\"mapped\",[106]],[[75,75],\"mapped\",[107]],[[76,76],\"mapped\",[108]],[[77,77],\"mapped\",[109]],[[78,78],\"mapped\",[110]],[[79,79],\"mapped\",[111]],[[80,80],\"mapped\",[112]],[[81,81],\"mapped\",[113]],[[82,82],\"mapped\",[114]],[[83,83],\"mapped\",[115]],[[84,84],\"mapped\",[116]],[[85,85],\"mapped\",[117]],[[86,86],\"mapped\",[118]],[[87,87],\"mapped\",[119]],[[88,88],\"mapped\",[120]],[[89,89],\"mapped\",[121]],[[90,90],\"mapped\",[122]],[[91,96],\"disallowed_STD3_valid\"],[[97,122],\"valid\"],[[123,127],\"disallowed_STD3_valid\"],[[128,159],\"disallowed\"],[[160,160],\"disallowed_STD3_mapped\",[32]],[[161,167],\"valid\",[],\"NV8\"],[[168,168],\"disallowed_STD3_mapped\",[32,776]],[[169,169],\"valid\",[],\"NV8\"],[[170,170],\"mapped\",[97]],[[171,172],\"valid\",[],\"NV8\"],[[173,173],\"ignored\"],[[174,174],\"valid\",[],\"NV8\"],[[175,175],\"disallowed_STD3_mapped\",[32,772]],[[176,177],\"valid\",[],\"NV8\"],[[178,178],\"mapped\",[50]],[[179,179],\"mapped\",[51]],[[180,180],\"disallowed_STD3_mapped\",[32,769]],[[181,181],\"mapped\",[956]],[[182,182],\"valid\",[],\"NV8\"],[[183,183],\"valid\"],[[184,184],\"disallowed_STD3_mapped\",[32,807]],[[185,185],\"mapped\",[49]],[[186,186],\"mapped\",[111]],[[187,187],\"valid\",[],\"NV8\"],[[188,188],\"mapped\",[49,8260,52]],[[189,189],\"mapped\",[49,8260,50]],[[190,190],\"mapped\",[51,8260,52]],[[191,191],\"valid\",[],\"NV8\"],[[192,192],\"mapped\",[224]],[[193,193],\"mapped\",[225]],[[194,194],\"mapped\",[226]],[[195,195],\"mapped\",[227]],[[196,196],\"mapped\",[228]],[[197,197],\"mapped\",[229]],[[198,198],\"mapped\",[230]],[[199,199],\"mapped\",[231]],[[200,200],\"mapped\",[232]],[[201,201],\"mapped\",[233]],[[202,202],\"mapped\",[234]],[[203,203],\"mapped\",[235]],[[204,204],\"mapped\",[236]],[[205,205],\"mapped\",[237]],[[206,206],\"mapped\",[238]],[[207,207],\"mapped\",[239]],[[208,208],\"mapped\",[240]],[[209,209],\"mapped\",[241]],[[210,210],\"mapped\",[242]],[[211,211],\"mapped\",[243]],[[212,212],\"mapped\",[244]],[[213,213],\"mapped\",[245]],[[214,214],\"mapped\",[246]],[[215,215],\"valid\",[],\"NV8\"],[[216,216],\"mapped\",[248]],[[217,217],\"mapped\",[249]],[[218,218],\"mapped\",[250]],[[219,219],\"mapped\",[251]],[[220,220],\"mapped\",[252]],[[221,221],\"mapped\",[253]],[[222,222],\"mapped\",[254]],[[223,223],\"deviation\",[115,115]],[[224,246],\"valid\"],[[247,247],\"valid\",[],\"NV8\"],[[248,255],\"valid\"],[[256,256],\"mapped\",[257]],[[257,257],\"valid\"],[[258,258],\"mapped\",[259]],[[259,259],\"valid\"],[[260,260],\"mapped\",[261]],[[261,261],\"valid\"],[[262,262],\"mapped\",[263]],[[263,263],\"valid\"],[[264,264],\"mapped\",[265]],[[265,265],\"valid\"],[[266,266],\"mapped\",[267]],[[267,267],\"valid\"],[[268,268],\"mapped\",[269]],[[269,269],\"valid\"],[[270,270],\"mapped\",[271]],[[271,271],\"valid\"],[[272,272],\"mapped\",[273]],[[273,273],\"valid\"],[[274,274],\"mapped\",[275]],[[275,275],\"valid\"],[[276,276],\"mapped\",[277]],[[277,277],\"valid\"],[[278,278],\"mapped\",[279]],[[279,279],\"valid\"],[[280,280],\"mapped\",[281]],[[281,281],\"valid\"],[[282,282],\"mapped\",[283]],[[283,283],\"valid\"],[[284,284],\"mapped\",[285]],[[285,285],\"valid\"],[[286,286],\"mapped\",[287]],[[287,287],\"valid\"],[[288,288],\"mapped\",[289]],[[289,289],\"valid\"],[[290,290],\"mapped\",[291]],[[291,291],\"valid\"],[[292,292],\"mapped\",[293]],[[293,293],\"valid\"],[[294,294],\"mapped\",[295]],[[295,295],\"valid\"],[[296,296],\"mapped\",[297]],[[297,297],\"valid\"],[[298,298],\"mapped\",[299]],[[299,299],\"valid\"],[[300,300],\"mapped\",[301]],[[301,301],\"valid\"],[[302,302],\"mapped\",[303]],[[303,303],\"valid\"],[[304,304],\"mapped\",[105,775]],[[305,305],\"valid\"],[[306,307],\"mapped\",[105,106]],[[308,308],\"mapped\",[309]],[[309,309],\"valid\"],[[310,310],\"mapped\",[311]],[[311,312],\"valid\"],[[313,313],\"mapped\",[314]],[[314,314],\"valid\"],[[315,315],\"mapped\",[316]],[[316,316],\"valid\"],[[317,317],\"mapped\",[318]],[[318,318],\"valid\"],[[319,320],\"mapped\",[108,183]],[[321,321],\"mapped\",[322]],[[322,322],\"valid\"],[[323,323],\"mapped\",[324]],[[324,324],\"valid\"],[[325,325],\"mapped\",[326]],[[326,326],\"valid\"],[[327,327],\"mapped\",[328]],[[328,328],\"valid\"],[[329,329],\"mapped\",[700,110]],[[330,330],\"mapped\",[331]],[[331,331],\"valid\"],[[332,332],\"mapped\",[333]],[[333,333],\"valid\"],[[334,334],\"mapped\",[335]],[[335,335],\"valid\"],[[336,336],\"mapped\",[337]],[[337,337],\"valid\"],[[338,338],\"mapped\",[339]],[[339,339],\"valid\"],[[340,340],\"mapped\",[341]],[[341,341],\"valid\"],[[342,342],\"mapped\",[343]],[[343,343],\"valid\"],[[344,344],\"mapped\",[345]],[[345,345],\"valid\"],[[346,346],\"mapped\",[347]],[[347,347],\"valid\"],[[348,348],\"mapped\",[349]],[[349,349],\"valid\"],[[350,350],\"mapped\",[351]],[[351,351],\"valid\"],[[352,352],\"mapped\",[353]],[[353,353],\"valid\"],[[354,354],\"mapped\",[355]],[[355,355],\"valid\"],[[356,356],\"mapped\",[357]],[[357,357],\"valid\"],[[358,358],\"mapped\",[359]],[[359,359],\"valid\"],[[360,360],\"mapped\",[361]],[[361,361],\"valid\"],[[362,362],\"mapped\",[363]],[[363,363],\"valid\"],[[364,364],\"mapped\",[365]],[[365,365],\"valid\"],[[366,366],\"mapped\",[367]],[[367,367],\"valid\"],[[368,368],\"mapped\",[369]],[[369,369],\"valid\"],[[370,370],\"mapped\",[371]],[[371,371],\"valid\"],[[372,372],\"mapped\",[373]],[[373,373],\"valid\"],[[374,374],\"mapped\",[375]],[[375,375],\"valid\"],[[376,376],\"mapped\",[255]],[[377,377],\"mapped\",[378]],[[378,378],\"valid\"],[[379,379],\"mapped\",[380]],[[380,380],\"valid\"],[[381,381],\"mapped\",[382]],[[382,382],\"valid\"],[[383,383],\"mapped\",[115]],[[384,384],\"valid\"],[[385,385],\"mapped\",[595]],[[386,386],\"mapped\",[387]],[[387,387],\"valid\"],[[388,388],\"mapped\",[389]],[[389,389],\"valid\"],[[390,390],\"mapped\",[596]],[[391,391],\"mapped\",[392]],[[392,392],\"valid\"],[[393,393],\"mapped\",[598]],[[394,394],\"mapped\",[599]],[[395,395],\"mapped\",[396]],[[396,397],\"valid\"],[[398,398],\"mapped\",[477]],[[399,399],\"mapped\",[601]],[[400,400],\"mapped\",[603]],[[401,401],\"mapped\",[402]],[[402,402],\"valid\"],[[403,403],\"mapped\",[608]],[[404,404],\"mapped\",[611]],[[405,405],\"valid\"],[[406,406],\"mapped\",[617]],[[407,407],\"mapped\",[616]],[[408,408],\"mapped\",[409]],[[409,411],\"valid\"],[[412,412],\"mapped\",[623]],[[413,413],\"mapped\",[626]],[[414,414],\"valid\"],[[415,415],\"mapped\",[629]],[[416,416],\"mapped\",[417]],[[417,417],\"valid\"],[[418,418],\"mapped\",[419]],[[419,419],\"valid\"],[[420,420],\"mapped\",[421]],[[421,421],\"valid\"],[[422,422],\"mapped\",[640]],[[423,423],\"mapped\",[424]],[[424,424],\"valid\"],[[425,425],\"mapped\",[643]],[[426,427],\"valid\"],[[428,428],\"mapped\",[429]],[[429,429],\"valid\"],[[430,430],\"mapped\",[648]],[[431,431],\"mapped\",[432]],[[432,432],\"valid\"],[[433,433],\"mapped\",[650]],[[434,434],\"mapped\",[651]],[[435,435],\"mapped\",[436]],[[436,436],\"valid\"],[[437,437],\"mapped\",[438]],[[438,438],\"valid\"],[[439,439],\"mapped\",[658]],[[440,440],\"mapped\",[441]],[[441,443],\"valid\"],[[444,444],\"mapped\",[445]],[[445,451],\"valid\"],[[452,454],\"mapped\",[100,382]],[[455,457],\"mapped\",[108,106]],[[458,460],\"mapped\",[110,106]],[[461,461],\"mapped\",[462]],[[462,462],\"valid\"],[[463,463],\"mapped\",[464]],[[464,464],\"valid\"],[[465,465],\"mapped\",[466]],[[466,466],\"valid\"],[[467,467],\"mapped\",[468]],[[468,468],\"valid\"],[[469,469],\"mapped\",[470]],[[470,470],\"valid\"],[[471,471],\"mapped\",[472]],[[472,472],\"valid\"],[[473,473],\"mapped\",[474]],[[474,474],\"valid\"],[[475,475],\"mapped\",[476]],[[476,477],\"valid\"],[[478,478],\"mapped\",[479]],[[479,479],\"valid\"],[[480,480],\"mapped\",[481]],[[481,481],\"valid\"],[[482,482],\"mapped\",[483]],[[483,483],\"valid\"],[[484,484],\"mapped\",[485]],[[485,485],\"valid\"],[[486,486],\"mapped\",[487]],[[487,487],\"valid\"],[[488,488],\"mapped\",[489]],[[489,489],\"valid\"],[[490,490],\"mapped\",[491]],[[491,491],\"valid\"],[[492,492],\"mapped\",[493]],[[493,493],\"valid\"],[[494,494],\"mapped\",[495]],[[495,496],\"valid\"],[[497,499],\"mapped\",[100,122]],[[500,500],\"mapped\",[501]],[[501,501],\"valid\"],[[502,502],\"mapped\",[405]],[[503,503],\"mapped\",[447]],[[504,504],\"mapped\",[505]],[[505,505],\"valid\"],[[506,506],\"mapped\",[507]],[[507,507],\"valid\"],[[508,508],\"mapped\",[509]],[[509,509],\"valid\"],[[510,510],\"mapped\",[511]],[[511,511],\"valid\"],[[512,512],\"mapped\",[513]],[[513,513],\"valid\"],[[514,514],\"mapped\",[515]],[[515,515],\"valid\"],[[516,516],\"mapped\",[517]],[[517,517],\"valid\"],[[518,518],\"mapped\",[519]],[[519,519],\"valid\"],[[520,520],\"mapped\",[521]],[[521,521],\"valid\"],[[522,522],\"mapped\",[523]],[[523,523],\"valid\"],[[524,524],\"mapped\",[525]],[[525,525],\"valid\"],[[526,526],\"mapped\",[527]],[[527,527],\"valid\"],[[528,528],\"mapped\",[529]],[[529,529],\"valid\"],[[530,530],\"mapped\",[531]],[[531,531],\"valid\"],[[532,532],\"mapped\",[533]],[[533,533],\"valid\"],[[534,534],\"mapped\",[535]],[[535,535],\"valid\"],[[536,536],\"mapped\",[537]],[[537,537],\"valid\"],[[538,538],\"mapped\",[539]],[[539,539],\"valid\"],[[540,540],\"mapped\",[541]],[[541,541],\"valid\"],[[542,542],\"mapped\",[543]],[[543,543],\"valid\"],[[544,544],\"mapped\",[414]],[[545,545],\"valid\"],[[546,546],\"mapped\",[547]],[[547,547],\"valid\"],[[548,548],\"mapped\",[549]],[[549,549],\"valid\"],[[550,550],\"mapped\",[551]],[[551,551],\"valid\"],[[552,552],\"mapped\",[553]],[[553,553],\"valid\"],[[554,554],\"mapped\",[555]],[[555,555],\"valid\"],[[556,556],\"mapped\",[557]],[[557,557],\"valid\"],[[558,558],\"mapped\",[559]],[[559,559],\"valid\"],[[560,560],\"mapped\",[561]],[[561,561],\"valid\"],[[562,562],\"mapped\",[563]],[[563,563],\"valid\"],[[564,566],\"valid\"],[[567,569],\"valid\"],[[570,570],\"mapped\",[11365]],[[571,571],\"mapped\",[572]],[[572,572],\"valid\"],[[573,573],\"mapped\",[410]],[[574,574],\"mapped\",[11366]],[[575,576],\"valid\"],[[577,577],\"mapped\",[578]],[[578,578],\"valid\"],[[579,579],\"mapped\",[384]],[[580,580],\"mapped\",[649]],[[581,581],\"mapped\",[652]],[[582,582],\"mapped\",[583]],[[583,583],\"valid\"],[[584,584],\"mapped\",[585]],[[585,585],\"valid\"],[[586,586],\"mapped\",[587]],[[587,587],\"valid\"],[[588,588],\"mapped\",[589]],[[589,589],\"valid\"],[[590,590],\"mapped\",[591]],[[591,591],\"valid\"],[[592,680],\"valid\"],[[681,685],\"valid\"],[[686,687],\"valid\"],[[688,688],\"mapped\",[104]],[[689,689],\"mapped\",[614]],[[690,690],\"mapped\",[106]],[[691,691],\"mapped\",[114]],[[692,692],\"mapped\",[633]],[[693,693],\"mapped\",[635]],[[694,694],\"mapped\",[641]],[[695,695],\"mapped\",[119]],[[696,696],\"mapped\",[121]],[[697,705],\"valid\"],[[706,709],\"valid\",[],\"NV8\"],[[710,721],\"valid\"],[[722,727],\"valid\",[],\"NV8\"],[[728,728],\"disallowed_STD3_mapped\",[32,774]],[[729,729],\"disallowed_STD3_mapped\",[32,775]],[[730,730],\"disallowed_STD3_mapped\",[32,778]],[[731,731],\"disallowed_STD3_mapped\",[32,808]],[[732,732],\"disallowed_STD3_mapped\",[32,771]],[[733,733],\"disallowed_STD3_mapped\",[32,779]],[[734,734],\"valid\",[],\"NV8\"],[[735,735],\"valid\",[],\"NV8\"],[[736,736],\"mapped\",[611]],[[737,737],\"mapped\",[108]],[[738,738],\"mapped\",[115]],[[739,739],\"mapped\",[120]],[[740,740],\"mapped\",[661]],[[741,745],\"valid\",[],\"NV8\"],[[746,747],\"valid\",[],\"NV8\"],[[748,748],\"valid\"],[[749,749],\"valid\",[],\"NV8\"],[[750,750],\"valid\"],[[751,767],\"valid\",[],\"NV8\"],[[768,831],\"valid\"],[[832,832],\"mapped\",[768]],[[833,833],\"mapped\",[769]],[[834,834],\"valid\"],[[835,835],\"mapped\",[787]],[[836,836],\"mapped\",[776,769]],[[837,837],\"mapped\",[953]],[[838,846],\"valid\"],[[847,847],\"ignored\"],[[848,855],\"valid\"],[[856,860],\"valid\"],[[861,863],\"valid\"],[[864,865],\"valid\"],[[866,866],\"valid\"],[[867,879],\"valid\"],[[880,880],\"mapped\",[881]],[[881,881],\"valid\"],[[882,882],\"mapped\",[883]],[[883,883],\"valid\"],[[884,884],\"mapped\",[697]],[[885,885],\"valid\"],[[886,886],\"mapped\",[887]],[[887,887],\"valid\"],[[888,889],\"disallowed\"],[[890,890],\"disallowed_STD3_mapped\",[32,953]],[[891,893],\"valid\"],[[894,894],\"disallowed_STD3_mapped\",[59]],[[895,895],\"mapped\",[1011]],[[896,899],\"disallowed\"],[[900,900],\"disallowed_STD3_mapped\",[32,769]],[[901,901],\"disallowed_STD3_mapped\",[32,776,769]],[[902,902],\"mapped\",[940]],[[903,903],\"mapped\",[183]],[[904,904],\"mapped\",[941]],[[905,905],\"mapped\",[942]],[[906,906],\"mapped\",[943]],[[907,907],\"disallowed\"],[[908,908],\"mapped\",[972]],[[909,909],\"disallowed\"],[[910,910],\"mapped\",[973]],[[911,911],\"mapped\",[974]],[[912,912],\"valid\"],[[913,913],\"mapped\",[945]],[[914,914],\"mapped\",[946]],[[915,915],\"mapped\",[947]],[[916,916],\"mapped\",[948]],[[917,917],\"mapped\",[949]],[[918,918],\"mapped\",[950]],[[919,919],\"mapped\",[951]],[[920,920],\"mapped\",[952]],[[921,921],\"mapped\",[953]],[[922,922],\"mapped\",[954]],[[923,923],\"mapped\",[955]],[[924,924],\"mapped\",[956]],[[925,925],\"mapped\",[957]],[[926,926],\"mapped\",[958]],[[927,927],\"mapped\",[959]],[[928,928],\"mapped\",[960]],[[929,929],\"mapped\",[961]],[[930,930],\"disallowed\"],[[931,931],\"mapped\",[963]],[[932,932],\"mapped\",[964]],[[933,933],\"mapped\",[965]],[[934,934],\"mapped\",[966]],[[935,935],\"mapped\",[967]],[[936,936],\"mapped\",[968]],[[937,937],\"mapped\",[969]],[[938,938],\"mapped\",[970]],[[939,939],\"mapped\",[971]],[[940,961],\"valid\"],[[962,962],\"deviation\",[963]],[[963,974],\"valid\"],[[975,975],\"mapped\",[983]],[[976,976],\"mapped\",[946]],[[977,977],\"mapped\",[952]],[[978,978],\"mapped\",[965]],[[979,979],\"mapped\",[973]],[[980,980],\"mapped\",[971]],[[981,981],\"mapped\",[966]],[[982,982],\"mapped\",[960]],[[983,983],\"valid\"],[[984,984],\"mapped\",[985]],[[985,985],\"valid\"],[[986,986],\"mapped\",[987]],[[987,987],\"valid\"],[[988,988],\"mapped\",[989]],[[989,989],\"valid\"],[[990,990],\"mapped\",[991]],[[991,991],\"valid\"],[[992,992],\"mapped\",[993]],[[993,993],\"valid\"],[[994,994],\"mapped\",[995]],[[995,995],\"valid\"],[[996,996],\"mapped\",[997]],[[997,997],\"valid\"],[[998,998],\"mapped\",[999]],[[999,999],\"valid\"],[[1000,1000],\"mapped\",[1001]],[[1001,1001],\"valid\"],[[1002,1002],\"mapped\",[1003]],[[1003,1003],\"valid\"],[[1004,1004],\"mapped\",[1005]],[[1005,1005],\"valid\"],[[1006,1006],\"mapped\",[1007]],[[1007,1007],\"valid\"],[[1008,1008],\"mapped\",[954]],[[1009,1009],\"mapped\",[961]],[[1010,1010],\"mapped\",[963]],[[1011,1011],\"valid\"],[[1012,1012],\"mapped\",[952]],[[1013,1013],\"mapped\",[949]],[[1014,1014],\"valid\",[],\"NV8\"],[[1015,1015],\"mapped\",[1016]],[[1016,1016],\"valid\"],[[1017,1017],\"mapped\",[963]],[[1018,1018],\"mapped\",[1019]],[[1019,1019],\"valid\"],[[1020,1020],\"valid\"],[[1021,1021],\"mapped\",[891]],[[1022,1022],\"mapped\",[892]],[[1023,1023],\"mapped\",[893]],[[1024,1024],\"mapped\",[1104]],[[1025,1025],\"mapped\",[1105]],[[1026,1026],\"mapped\",[1106]],[[1027,1027],\"mapped\",[1107]],[[1028,1028],\"mapped\",[1108]],[[1029,1029],\"mapped\",[1109]],[[1030,1030],\"mapped\",[1110]],[[1031,1031],\"mapped\",[1111]],[[1032,1032],\"mapped\",[1112]],[[1033,1033],\"mapped\",[1113]],[[1034,1034],\"mapped\",[1114]],[[1035,1035],\"mapped\",[1115]],[[1036,1036],\"mapped\",[1116]],[[1037,1037],\"mapped\",[1117]],[[1038,1038],\"mapped\",[1118]],[[1039,1039],\"mapped\",[1119]],[[1040,1040],\"mapped\",[1072]],[[1041,1041],\"mapped\",[1073]],[[1042,1042],\"mapped\",[1074]],[[1043,1043],\"mapped\",[1075]],[[1044,1044],\"mapped\",[1076]],[[1045,1045],\"mapped\",[1077]],[[1046,1046],\"mapped\",[1078]],[[1047,1047],\"mapped\",[1079]],[[1048,1048],\"mapped\",[1080]],[[1049,1049],\"mapped\",[1081]],[[1050,1050],\"mapped\",[1082]],[[1051,1051],\"mapped\",[1083]],[[1052,1052],\"mapped\",[1084]],[[1053,1053],\"mapped\",[1085]],[[1054,1054],\"mapped\",[1086]],[[1055,1055],\"mapped\",[1087]],[[1056,1056],\"mapped\",[1088]],[[1057,1057],\"mapped\",[1089]],[[1058,1058],\"mapped\",[1090]],[[1059,1059],\"mapped\",[1091]],[[1060,1060],\"mapped\",[1092]],[[1061,1061],\"mapped\",[1093]],[[1062,1062],\"mapped\",[1094]],[[1063,1063],\"mapped\",[1095]],[[1064,1064],\"mapped\",[1096]],[[1065,1065],\"mapped\",[1097]],[[1066,1066],\"mapped\",[1098]],[[1067,1067],\"mapped\",[1099]],[[1068,1068],\"mapped\",[1100]],[[1069,1069],\"mapped\",[1101]],[[1070,1070],\"mapped\",[1102]],[[1071,1071],\"mapped\",[1103]],[[1072,1103],\"valid\"],[[1104,1104],\"valid\"],[[1105,1116],\"valid\"],[[1117,1117],\"valid\"],[[1118,1119],\"valid\"],[[1120,1120],\"mapped\",[1121]],[[1121,1121],\"valid\"],[[1122,1122],\"mapped\",[1123]],[[1123,1123],\"valid\"],[[1124,1124],\"mapped\",[1125]],[[1125,1125],\"valid\"],[[1126,1126],\"mapped\",[1127]],[[1127,1127],\"valid\"],[[1128,1128],\"mapped\",[1129]],[[1129,1129],\"valid\"],[[1130,1130],\"mapped\",[1131]],[[1131,1131],\"valid\"],[[1132,1132],\"mapped\",[1133]],[[1133,1133],\"valid\"],[[1134,1134],\"mapped\",[1135]],[[1135,1135],\"valid\"],[[1136,1136],\"mapped\",[1137]],[[1137,1137],\"valid\"],[[1138,1138],\"mapped\",[1139]],[[1139,1139],\"valid\"],[[1140,1140],\"mapped\",[1141]],[[1141,1141],\"valid\"],[[1142,1142],\"mapped\",[1143]],[[1143,1143],\"valid\"],[[1144,1144],\"mapped\",[1145]],[[1145,1145],\"valid\"],[[1146,1146],\"mapped\",[1147]],[[1147,1147],\"valid\"],[[1148,1148],\"mapped\",[1149]],[[1149,1149],\"valid\"],[[1150,1150],\"mapped\",[1151]],[[1151,1151],\"valid\"],[[1152,1152],\"mapped\",[1153]],[[1153,1153],\"valid\"],[[1154,1154],\"valid\",[],\"NV8\"],[[1155,1158],\"valid\"],[[1159,1159],\"valid\"],[[1160,1161],\"valid\",[],\"NV8\"],[[1162,1162],\"mapped\",[1163]],[[1163,1163],\"valid\"],[[1164,1164],\"mapped\",[1165]],[[1165,1165],\"valid\"],[[1166,1166],\"mapped\",[1167]],[[1167,1167],\"valid\"],[[1168,1168],\"mapped\",[1169]],[[1169,1169],\"valid\"],[[1170,1170],\"mapped\",[1171]],[[1171,1171],\"valid\"],[[1172,1172],\"mapped\",[1173]],[[1173,1173],\"valid\"],[[1174,1174],\"mapped\",[1175]],[[1175,1175],\"valid\"],[[1176,1176],\"mapped\",[1177]],[[1177,1177],\"valid\"],[[1178,1178],\"mapped\",[1179]],[[1179,1179],\"valid\"],[[1180,1180],\"mapped\",[1181]],[[1181,1181],\"valid\"],[[1182,1182],\"mapped\",[1183]],[[1183,1183],\"valid\"],[[1184,1184],\"mapped\",[1185]],[[1185,1185],\"valid\"],[[1186,1186],\"mapped\",[1187]],[[1187,1187],\"valid\"],[[1188,1188],\"mapped\",[1189]],[[1189,1189],\"valid\"],[[1190,1190],\"mapped\",[1191]],[[1191,1191],\"valid\"],[[1192,1192],\"mapped\",[1193]],[[1193,1193],\"valid\"],[[1194,1194],\"mapped\",[1195]],[[1195,1195],\"valid\"],[[1196,1196],\"mapped\",[1197]],[[1197,1197],\"valid\"],[[1198,1198],\"mapped\",[1199]],[[1199,1199],\"valid\"],[[1200,1200],\"mapped\",[1201]],[[1201,1201],\"valid\"],[[1202,1202],\"mapped\",[1203]],[[1203,1203],\"valid\"],[[1204,1204],\"mapped\",[1205]],[[1205,1205],\"valid\"],[[1206,1206],\"mapped\",[1207]],[[1207,1207],\"valid\"],[[1208,1208],\"mapped\",[1209]],[[1209,1209],\"valid\"],[[1210,1210],\"mapped\",[1211]],[[1211,1211],\"valid\"],[[1212,1212],\"mapped\",[1213]],[[1213,1213],\"valid\"],[[1214,1214],\"mapped\",[1215]],[[1215,1215],\"valid\"],[[1216,1216],\"disallowed\"],[[1217,1217],\"mapped\",[1218]],[[1218,1218],\"valid\"],[[1219,1219],\"mapped\",[1220]],[[1220,1220],\"valid\"],[[1221,1221],\"mapped\",[1222]],[[1222,1222],\"valid\"],[[1223,1223],\"mapped\",[1224]],[[1224,1224],\"valid\"],[[1225,1225],\"mapped\",[1226]],[[1226,1226],\"valid\"],[[1227,1227],\"mapped\",[1228]],[[1228,1228],\"valid\"],[[1229,1229],\"mapped\",[1230]],[[1230,1230],\"valid\"],[[1231,1231],\"valid\"],[[1232,1232],\"mapped\",[1233]],[[1233,1233],\"valid\"],[[1234,1234],\"mapped\",[1235]],[[1235,1235],\"valid\"],[[1236,1236],\"mapped\",[1237]],[[1237,1237],\"valid\"],[[1238,1238],\"mapped\",[1239]],[[1239,1239],\"valid\"],[[1240,1240],\"mapped\",[1241]],[[1241,1241],\"valid\"],[[1242,1242],\"mapped\",[1243]],[[1243,1243],\"valid\"],[[1244,1244],\"mapped\",[1245]],[[1245,1245],\"valid\"],[[1246,1246],\"mapped\",[1247]],[[1247,1247],\"valid\"],[[1248,1248],\"mapped\",[1249]],[[1249,1249],\"valid\"],[[1250,1250],\"mapped\",[1251]],[[1251,1251],\"valid\"],[[1252,1252],\"mapped\",[1253]],[[1253,1253],\"valid\"],[[1254,1254],\"mapped\",[1255]],[[1255,1255],\"valid\"],[[1256,1256],\"mapped\",[1257]],[[1257,1257],\"valid\"],[[1258,1258],\"mapped\",[1259]],[[1259,1259],\"valid\"],[[1260,1260],\"mapped\",[1261]],[[1261,1261],\"valid\"],[[1262,1262],\"mapped\",[1263]],[[1263,1263],\"valid\"],[[1264,1264],\"mapped\",[1265]],[[1265,1265],\"valid\"],[[1266,1266],\"mapped\",[1267]],[[1267,1267],\"valid\"],[[1268,1268],\"mapped\",[1269]],[[1269,1269],\"valid\"],[[1270,1270],\"mapped\",[1271]],[[1271,1271],\"valid\"],[[1272,1272],\"mapped\",[1273]],[[1273,1273],\"valid\"],[[1274,1274],\"mapped\",[1275]],[[1275,1275],\"valid\"],[[1276,1276],\"mapped\",[1277]],[[1277,1277],\"valid\"],[[1278,1278],\"mapped\",[1279]],[[1279,1279],\"valid\"],[[1280,1280],\"mapped\",[1281]],[[1281,1281],\"valid\"],[[1282,1282],\"mapped\",[1283]],[[1283,1283],\"valid\"],[[1284,1284],\"mapped\",[1285]],[[1285,1285],\"valid\"],[[1286,1286],\"mapped\",[1287]],[[1287,1287],\"valid\"],[[1288,1288],\"mapped\",[1289]],[[1289,1289],\"valid\"],[[1290,1290],\"mapped\",[1291]],[[1291,1291],\"valid\"],[[1292,1292],\"mapped\",[1293]],[[1293,1293],\"valid\"],[[1294,1294],\"mapped\",[1295]],[[1295,1295],\"valid\"],[[1296,1296],\"mapped\",[1297]],[[1297,1297],\"valid\"],[[1298,1298],\"mapped\",[1299]],[[1299,1299],\"valid\"],[[1300,1300],\"mapped\",[1301]],[[1301,1301],\"valid\"],[[1302,1302],\"mapped\",[1303]],[[1303,1303],\"valid\"],[[1304,1304],\"mapped\",[1305]],[[1305,1305],\"valid\"],[[1306,1306],\"mapped\",[1307]],[[1307,1307],\"valid\"],[[1308,1308],\"mapped\",[1309]],[[1309,1309],\"valid\"],[[1310,1310],\"mapped\",[1311]],[[1311,1311],\"valid\"],[[1312,1312],\"mapped\",[1313]],[[1313,1313],\"valid\"],[[1314,1314],\"mapped\",[1315]],[[1315,1315],\"valid\"],[[1316,1316],\"mapped\",[1317]],[[1317,1317],\"valid\"],[[1318,1318],\"mapped\",[1319]],[[1319,1319],\"valid\"],[[1320,1320],\"mapped\",[1321]],[[1321,1321],\"valid\"],[[1322,1322],\"mapped\",[1323]],[[1323,1323],\"valid\"],[[1324,1324],\"mapped\",[1325]],[[1325,1325],\"valid\"],[[1326,1326],\"mapped\",[1327]],[[1327,1327],\"valid\"],[[1328,1328],\"disallowed\"],[[1329,1329],\"mapped\",[1377]],[[1330,1330],\"mapped\",[1378]],[[1331,1331],\"mapped\",[1379]],[[1332,1332],\"mapped\",[1380]],[[1333,1333],\"mapped\",[1381]],[[1334,1334],\"mapped\",[1382]],[[1335,1335],\"mapped\",[1383]],[[1336,1336],\"mapped\",[1384]],[[1337,1337],\"mapped\",[1385]],[[1338,1338],\"mapped\",[1386]],[[1339,1339],\"mapped\",[1387]],[[1340,1340],\"mapped\",[1388]],[[1341,1341],\"mapped\",[1389]],[[1342,1342],\"mapped\",[1390]],[[1343,1343],\"mapped\",[1391]],[[1344,1344],\"mapped\",[1392]],[[1345,1345],\"mapped\",[1393]],[[1346,1346],\"mapped\",[1394]],[[1347,1347],\"mapped\",[1395]],[[1348,1348],\"mapped\",[1396]],[[1349,1349],\"mapped\",[1397]],[[1350,1350],\"mapped\",[1398]],[[1351,1351],\"mapped\",[1399]],[[1352,1352],\"mapped\",[1400]],[[1353,1353],\"mapped\",[1401]],[[1354,1354],\"mapped\",[1402]],[[1355,1355],\"mapped\",[1403]],[[1356,1356],\"mapped\",[1404]],[[1357,1357],\"mapped\",[1405]],[[1358,1358],\"mapped\",[1406]],[[1359,1359],\"mapped\",[1407]],[[1360,1360],\"mapped\",[1408]],[[1361,1361],\"mapped\",[1409]],[[1362,1362],\"mapped\",[1410]],[[1363,1363],\"mapped\",[1411]],[[1364,1364],\"mapped\",[1412]],[[1365,1365],\"mapped\",[1413]],[[1366,1366],\"mapped\",[1414]],[[1367,1368],\"disallowed\"],[[1369,1369],\"valid\"],[[1370,1375],\"valid\",[],\"NV8\"],[[1376,1376],\"disallowed\"],[[1377,1414],\"valid\"],[[1415,1415],\"mapped\",[1381,1410]],[[1416,1416],\"disallowed\"],[[1417,1417],\"valid\",[],\"NV8\"],[[1418,1418],\"valid\",[],\"NV8\"],[[1419,1420],\"disallowed\"],[[1421,1422],\"valid\",[],\"NV8\"],[[1423,1423],\"valid\",[],\"NV8\"],[[1424,1424],\"disallowed\"],[[1425,1441],\"valid\"],[[1442,1442],\"valid\"],[[1443,1455],\"valid\"],[[1456,1465],\"valid\"],[[1466,1466],\"valid\"],[[1467,1469],\"valid\"],[[1470,1470],\"valid\",[],\"NV8\"],[[1471,1471],\"valid\"],[[1472,1472],\"valid\",[],\"NV8\"],[[1473,1474],\"valid\"],[[1475,1475],\"valid\",[],\"NV8\"],[[1476,1476],\"valid\"],[[1477,1477],\"valid\"],[[1478,1478],\"valid\",[],\"NV8\"],[[1479,1479],\"valid\"],[[1480,1487],\"disallowed\"],[[1488,1514],\"valid\"],[[1515,1519],\"disallowed\"],[[1520,1524],\"valid\"],[[1525,1535],\"disallowed\"],[[1536,1539],\"disallowed\"],[[1540,1540],\"disallowed\"],[[1541,1541],\"disallowed\"],[[1542,1546],\"valid\",[],\"NV8\"],[[1547,1547],\"valid\",[],\"NV8\"],[[1548,1548],\"valid\",[],\"NV8\"],[[1549,1551],\"valid\",[],\"NV8\"],[[1552,1557],\"valid\"],[[1558,1562],\"valid\"],[[1563,1563],\"valid\",[],\"NV8\"],[[1564,1564],\"disallowed\"],[[1565,1565],\"disallowed\"],[[1566,1566],\"valid\",[],\"NV8\"],[[1567,1567],\"valid\",[],\"NV8\"],[[1568,1568],\"valid\"],[[1569,1594],\"valid\"],[[1595,1599],\"valid\"],[[1600,1600],\"valid\",[],\"NV8\"],[[1601,1618],\"valid\"],[[1619,1621],\"valid\"],[[1622,1624],\"valid\"],[[1625,1630],\"valid\"],[[1631,1631],\"valid\"],[[1632,1641],\"valid\"],[[1642,1645],\"valid\",[],\"NV8\"],[[1646,1647],\"valid\"],[[1648,1652],\"valid\"],[[1653,1653],\"mapped\",[1575,1652]],[[1654,1654],\"mapped\",[1608,1652]],[[1655,1655],\"mapped\",[1735,1652]],[[1656,1656],\"mapped\",[1610,1652]],[[1657,1719],\"valid\"],[[1720,1721],\"valid\"],[[1722,1726],\"valid\"],[[1727,1727],\"valid\"],[[1728,1742],\"valid\"],[[1743,1743],\"valid\"],[[1744,1747],\"valid\"],[[1748,1748],\"valid\",[],\"NV8\"],[[1749,1756],\"valid\"],[[1757,1757],\"disallowed\"],[[1758,1758],\"valid\",[],\"NV8\"],[[1759,1768],\"valid\"],[[1769,1769],\"valid\",[],\"NV8\"],[[1770,1773],\"valid\"],[[1774,1775],\"valid\"],[[1776,1785],\"valid\"],[[1786,1790],\"valid\"],[[1791,1791],\"valid\"],[[1792,1805],\"valid\",[],\"NV8\"],[[1806,1806],\"disallowed\"],[[1807,1807],\"disallowed\"],[[1808,1836],\"valid\"],[[1837,1839],\"valid\"],[[1840,1866],\"valid\"],[[1867,1868],\"disallowed\"],[[1869,1871],\"valid\"],[[1872,1901],\"valid\"],[[1902,1919],\"valid\"],[[1920,1968],\"valid\"],[[1969,1969],\"valid\"],[[1970,1983],\"disallowed\"],[[1984,2037],\"valid\"],[[2038,2042],\"valid\",[],\"NV8\"],[[2043,2047],\"disallowed\"],[[2048,2093],\"valid\"],[[2094,2095],\"disallowed\"],[[2096,2110],\"valid\",[],\"NV8\"],[[2111,2111],\"disallowed\"],[[2112,2139],\"valid\"],[[2140,2141],\"disallowed\"],[[2142,2142],\"valid\",[],\"NV8\"],[[2143,2207],\"disallowed\"],[[2208,2208],\"valid\"],[[2209,2209],\"valid\"],[[2210,2220],\"valid\"],[[2221,2226],\"valid\"],[[2227,2228],\"valid\"],[[2229,2274],\"disallowed\"],[[2275,2275],\"valid\"],[[2276,2302],\"valid\"],[[2303,2303],\"valid\"],[[2304,2304],\"valid\"],[[2305,2307],\"valid\"],[[2308,2308],\"valid\"],[[2309,2361],\"valid\"],[[2362,2363],\"valid\"],[[2364,2381],\"valid\"],[[2382,2382],\"valid\"],[[2383,2383],\"valid\"],[[2384,2388],\"valid\"],[[2389,2389],\"valid\"],[[2390,2391],\"valid\"],[[2392,2392],\"mapped\",[2325,2364]],[[2393,2393],\"mapped\",[2326,2364]],[[2394,2394],\"mapped\",[2327,2364]],[[2395,2395],\"mapped\",[2332,2364]],[[2396,2396],\"mapped\",[2337,2364]],[[2397,2397],\"mapped\",[2338,2364]],[[2398,2398],\"mapped\",[2347,2364]],[[2399,2399],\"mapped\",[2351,2364]],[[2400,2403],\"valid\"],[[2404,2405],\"valid\",[],\"NV8\"],[[2406,2415],\"valid\"],[[2416,2416],\"valid\",[],\"NV8\"],[[2417,2418],\"valid\"],[[2419,2423],\"valid\"],[[2424,2424],\"valid\"],[[2425,2426],\"valid\"],[[2427,2428],\"valid\"],[[2429,2429],\"valid\"],[[2430,2431],\"valid\"],[[2432,2432],\"valid\"],[[2433,2435],\"valid\"],[[2436,2436],\"disallowed\"],[[2437,2444],\"valid\"],[[2445,2446],\"disallowed\"],[[2447,2448],\"valid\"],[[2449,2450],\"disallowed\"],[[2451,2472],\"valid\"],[[2473,2473],\"disallowed\"],[[2474,2480],\"valid\"],[[2481,2481],\"disallowed\"],[[2482,2482],\"valid\"],[[2483,2485],\"disallowed\"],[[2486,2489],\"valid\"],[[2490,2491],\"disallowed\"],[[2492,2492],\"valid\"],[[2493,2493],\"valid\"],[[2494,2500],\"valid\"],[[2501,2502],\"disallowed\"],[[2503,2504],\"valid\"],[[2505,2506],\"disallowed\"],[[2507,2509],\"valid\"],[[2510,2510],\"valid\"],[[2511,2518],\"disallowed\"],[[2519,2519],\"valid\"],[[2520,2523],\"disallowed\"],[[2524,2524],\"mapped\",[2465,2492]],[[2525,2525],\"mapped\",[2466,2492]],[[2526,2526],\"disallowed\"],[[2527,2527],\"mapped\",[2479,2492]],[[2528,2531],\"valid\"],[[2532,2533],\"disallowed\"],[[2534,2545],\"valid\"],[[2546,2554],\"valid\",[],\"NV8\"],[[2555,2555],\"valid\",[],\"NV8\"],[[2556,2560],\"disallowed\"],[[2561,2561],\"valid\"],[[2562,2562],\"valid\"],[[2563,2563],\"valid\"],[[2564,2564],\"disallowed\"],[[2565,2570],\"valid\"],[[2571,2574],\"disallowed\"],[[2575,2576],\"valid\"],[[2577,2578],\"disallowed\"],[[2579,2600],\"valid\"],[[2601,2601],\"disallowed\"],[[2602,2608],\"valid\"],[[2609,2609],\"disallowed\"],[[2610,2610],\"valid\"],[[2611,2611],\"mapped\",[2610,2620]],[[2612,2612],\"disallowed\"],[[2613,2613],\"valid\"],[[2614,2614],\"mapped\",[2616,2620]],[[2615,2615],\"disallowed\"],[[2616,2617],\"valid\"],[[2618,2619],\"disallowed\"],[[2620,2620],\"valid\"],[[2621,2621],\"disallowed\"],[[2622,2626],\"valid\"],[[2627,2630],\"disallowed\"],[[2631,2632],\"valid\"],[[2633,2634],\"disallowed\"],[[2635,2637],\"valid\"],[[2638,2640],\"disallowed\"],[[2641,2641],\"valid\"],[[2642,2648],\"disallowed\"],[[2649,2649],\"mapped\",[2582,2620]],[[2650,2650],\"mapped\",[2583,2620]],[[2651,2651],\"mapped\",[2588,2620]],[[2652,2652],\"valid\"],[[2653,2653],\"disallowed\"],[[2654,2654],\"mapped\",[2603,2620]],[[2655,2661],\"disallowed\"],[[2662,2676],\"valid\"],[[2677,2677],\"valid\"],[[2678,2688],\"disallowed\"],[[2689,2691],\"valid\"],[[2692,2692],\"disallowed\"],[[2693,2699],\"valid\"],[[2700,2700],\"valid\"],[[2701,2701],\"valid\"],[[2702,2702],\"disallowed\"],[[2703,2705],\"valid\"],[[2706,2706],\"disallowed\"],[[2707,2728],\"valid\"],[[2729,2729],\"disallowed\"],[[2730,2736],\"valid\"],[[2737,2737],\"disallowed\"],[[2738,2739],\"valid\"],[[2740,2740],\"disallowed\"],[[2741,2745],\"valid\"],[[2746,2747],\"disallowed\"],[[2748,2757],\"valid\"],[[2758,2758],\"disallowed\"],[[2759,2761],\"valid\"],[[2762,2762],\"disallowed\"],[[2763,2765],\"valid\"],[[2766,2767],\"disallowed\"],[[2768,2768],\"valid\"],[[2769,2783],\"disallowed\"],[[2784,2784],\"valid\"],[[2785,2787],\"valid\"],[[2788,2789],\"disallowed\"],[[2790,2799],\"valid\"],[[2800,2800],\"valid\",[],\"NV8\"],[[2801,2801],\"valid\",[],\"NV8\"],[[2802,2808],\"disallowed\"],[[2809,2809],\"valid\"],[[2810,2816],\"disallowed\"],[[2817,2819],\"valid\"],[[2820,2820],\"disallowed\"],[[2821,2828],\"valid\"],[[2829,2830],\"disallowed\"],[[2831,2832],\"valid\"],[[2833,2834],\"disallowed\"],[[2835,2856],\"valid\"],[[2857,2857],\"disallowed\"],[[2858,2864],\"valid\"],[[2865,2865],\"disallowed\"],[[2866,2867],\"valid\"],[[2868,2868],\"disallowed\"],[[2869,2869],\"valid\"],[[2870,2873],\"valid\"],[[2874,2875],\"disallowed\"],[[2876,2883],\"valid\"],[[2884,2884],\"valid\"],[[2885,2886],\"disallowed\"],[[2887,2888],\"valid\"],[[2889,2890],\"disallowed\"],[[2891,2893],\"valid\"],[[2894,2901],\"disallowed\"],[[2902,2903],\"valid\"],[[2904,2907],\"disallowed\"],[[2908,2908],\"mapped\",[2849,2876]],[[2909,2909],\"mapped\",[2850,2876]],[[2910,2910],\"disallowed\"],[[2911,2913],\"valid\"],[[2914,2915],\"valid\"],[[2916,2917],\"disallowed\"],[[2918,2927],\"valid\"],[[2928,2928],\"valid\",[],\"NV8\"],[[2929,2929],\"valid\"],[[2930,2935],\"valid\",[],\"NV8\"],[[2936,2945],\"disallowed\"],[[2946,2947],\"valid\"],[[2948,2948],\"disallowed\"],[[2949,2954],\"valid\"],[[2955,2957],\"disallowed\"],[[2958,2960],\"valid\"],[[2961,2961],\"disallowed\"],[[2962,2965],\"valid\"],[[2966,2968],\"disallowed\"],[[2969,2970],\"valid\"],[[2971,2971],\"disallowed\"],[[2972,2972],\"valid\"],[[2973,2973],\"disallowed\"],[[2974,2975],\"valid\"],[[2976,2978],\"disallowed\"],[[2979,2980],\"valid\"],[[2981,2983],\"disallowed\"],[[2984,2986],\"valid\"],[[2987,2989],\"disallowed\"],[[2990,2997],\"valid\"],[[2998,2998],\"valid\"],[[2999,3001],\"valid\"],[[3002,3005],\"disallowed\"],[[3006,3010],\"valid\"],[[3011,3013],\"disallowed\"],[[3014,3016],\"valid\"],[[3017,3017],\"disallowed\"],[[3018,3021],\"valid\"],[[3022,3023],\"disallowed\"],[[3024,3024],\"valid\"],[[3025,3030],\"disallowed\"],[[3031,3031],\"valid\"],[[3032,3045],\"disallowed\"],[[3046,3046],\"valid\"],[[3047,3055],\"valid\"],[[3056,3058],\"valid\",[],\"NV8\"],[[3059,3066],\"valid\",[],\"NV8\"],[[3067,3071],\"disallowed\"],[[3072,3072],\"valid\"],[[3073,3075],\"valid\"],[[3076,3076],\"disallowed\"],[[3077,3084],\"valid\"],[[3085,3085],\"disallowed\"],[[3086,3088],\"valid\"],[[3089,3089],\"disallowed\"],[[3090,3112],\"valid\"],[[3113,3113],\"disallowed\"],[[3114,3123],\"valid\"],[[3124,3124],\"valid\"],[[3125,3129],\"valid\"],[[3130,3132],\"disallowed\"],[[3133,3133],\"valid\"],[[3134,3140],\"valid\"],[[3141,3141],\"disallowed\"],[[3142,3144],\"valid\"],[[3145,3145],\"disallowed\"],[[3146,3149],\"valid\"],[[3150,3156],\"disallowed\"],[[3157,3158],\"valid\"],[[3159,3159],\"disallowed\"],[[3160,3161],\"valid\"],[[3162,3162],\"valid\"],[[3163,3167],\"disallowed\"],[[3168,3169],\"valid\"],[[3170,3171],\"valid\"],[[3172,3173],\"disallowed\"],[[3174,3183],\"valid\"],[[3184,3191],\"disallowed\"],[[3192,3199],\"valid\",[],\"NV8\"],[[3200,3200],\"disallowed\"],[[3201,3201],\"valid\"],[[3202,3203],\"valid\"],[[3204,3204],\"disallowed\"],[[3205,3212],\"valid\"],[[3213,3213],\"disallowed\"],[[3214,3216],\"valid\"],[[3217,3217],\"disallowed\"],[[3218,3240],\"valid\"],[[3241,3241],\"disallowed\"],[[3242,3251],\"valid\"],[[3252,3252],\"disallowed\"],[[3253,3257],\"valid\"],[[3258,3259],\"disallowed\"],[[3260,3261],\"valid\"],[[3262,3268],\"valid\"],[[3269,3269],\"disallowed\"],[[3270,3272],\"valid\"],[[3273,3273],\"disallowed\"],[[3274,3277],\"valid\"],[[3278,3284],\"disallowed\"],[[3285,3286],\"valid\"],[[3287,3293],\"disallowed\"],[[3294,3294],\"valid\"],[[3295,3295],\"disallowed\"],[[3296,3297],\"valid\"],[[3298,3299],\"valid\"],[[3300,3301],\"disallowed\"],[[3302,3311],\"valid\"],[[3312,3312],\"disallowed\"],[[3313,3314],\"valid\"],[[3315,3328],\"disallowed\"],[[3329,3329],\"valid\"],[[3330,3331],\"valid\"],[[3332,3332],\"disallowed\"],[[3333,3340],\"valid\"],[[3341,3341],\"disallowed\"],[[3342,3344],\"valid\"],[[3345,3345],\"disallowed\"],[[3346,3368],\"valid\"],[[3369,3369],\"valid\"],[[3370,3385],\"valid\"],[[3386,3386],\"valid\"],[[3387,3388],\"disallowed\"],[[3389,3389],\"valid\"],[[3390,3395],\"valid\"],[[3396,3396],\"valid\"],[[3397,3397],\"disallowed\"],[[3398,3400],\"valid\"],[[3401,3401],\"disallowed\"],[[3402,3405],\"valid\"],[[3406,3406],\"valid\"],[[3407,3414],\"disallowed\"],[[3415,3415],\"valid\"],[[3416,3422],\"disallowed\"],[[3423,3423],\"valid\"],[[3424,3425],\"valid\"],[[3426,3427],\"valid\"],[[3428,3429],\"disallowed\"],[[3430,3439],\"valid\"],[[3440,3445],\"valid\",[],\"NV8\"],[[3446,3448],\"disallowed\"],[[3449,3449],\"valid\",[],\"NV8\"],[[3450,3455],\"valid\"],[[3456,3457],\"disallowed\"],[[3458,3459],\"valid\"],[[3460,3460],\"disallowed\"],[[3461,3478],\"valid\"],[[3479,3481],\"disallowed\"],[[3482,3505],\"valid\"],[[3506,3506],\"disallowed\"],[[3507,3515],\"valid\"],[[3516,3516],\"disallowed\"],[[3517,3517],\"valid\"],[[3518,3519],\"disallowed\"],[[3520,3526],\"valid\"],[[3527,3529],\"disallowed\"],[[3530,3530],\"valid\"],[[3531,3534],\"disallowed\"],[[3535,3540],\"valid\"],[[3541,3541],\"disallowed\"],[[3542,3542],\"valid\"],[[3543,3543],\"disallowed\"],[[3544,3551],\"valid\"],[[3552,3557],\"disallowed\"],[[3558,3567],\"valid\"],[[3568,3569],\"disallowed\"],[[3570,3571],\"valid\"],[[3572,3572],\"valid\",[],\"NV8\"],[[3573,3584],\"disallowed\"],[[3585,3634],\"valid\"],[[3635,3635],\"mapped\",[3661,3634]],[[3636,3642],\"valid\"],[[3643,3646],\"disallowed\"],[[3647,3647],\"valid\",[],\"NV8\"],[[3648,3662],\"valid\"],[[3663,3663],\"valid\",[],\"NV8\"],[[3664,3673],\"valid\"],[[3674,3675],\"valid\",[],\"NV8\"],[[3676,3712],\"disallowed\"],[[3713,3714],\"valid\"],[[3715,3715],\"disallowed\"],[[3716,3716],\"valid\"],[[3717,3718],\"disallowed\"],[[3719,3720],\"valid\"],[[3721,3721],\"disallowed\"],[[3722,3722],\"valid\"],[[3723,3724],\"disallowed\"],[[3725,3725],\"valid\"],[[3726,3731],\"disallowed\"],[[3732,3735],\"valid\"],[[3736,3736],\"disallowed\"],[[3737,3743],\"valid\"],[[3744,3744],\"disallowed\"],[[3745,3747],\"valid\"],[[3748,3748],\"disallowed\"],[[3749,3749],\"valid\"],[[3750,3750],\"disallowed\"],[[3751,3751],\"valid\"],[[3752,3753],\"disallowed\"],[[3754,3755],\"valid\"],[[3756,3756],\"disallowed\"],[[3757,3762],\"valid\"],[[3763,3763],\"mapped\",[3789,3762]],[[3764,3769],\"valid\"],[[3770,3770],\"disallowed\"],[[3771,3773],\"valid\"],[[3774,3775],\"disallowed\"],[[3776,3780],\"valid\"],[[3781,3781],\"disallowed\"],[[3782,3782],\"valid\"],[[3783,3783],\"disallowed\"],[[3784,3789],\"valid\"],[[3790,3791],\"disallowed\"],[[3792,3801],\"valid\"],[[3802,3803],\"disallowed\"],[[3804,3804],\"mapped\",[3755,3737]],[[3805,3805],\"mapped\",[3755,3745]],[[3806,3807],\"valid\"],[[3808,3839],\"disallowed\"],[[3840,3840],\"valid\"],[[3841,3850],\"valid\",[],\"NV8\"],[[3851,3851],\"valid\"],[[3852,3852],\"mapped\",[3851]],[[3853,3863],\"valid\",[],\"NV8\"],[[3864,3865],\"valid\"],[[3866,3871],\"valid\",[],\"NV8\"],[[3872,3881],\"valid\"],[[3882,3892],\"valid\",[],\"NV8\"],[[3893,3893],\"valid\"],[[3894,3894],\"valid\",[],\"NV8\"],[[3895,3895],\"valid\"],[[3896,3896],\"valid\",[],\"NV8\"],[[3897,3897],\"valid\"],[[3898,3901],\"valid\",[],\"NV8\"],[[3902,3906],\"valid\"],[[3907,3907],\"mapped\",[3906,4023]],[[3908,3911],\"valid\"],[[3912,3912],\"disallowed\"],[[3913,3916],\"valid\"],[[3917,3917],\"mapped\",[3916,4023]],[[3918,3921],\"valid\"],[[3922,3922],\"mapped\",[3921,4023]],[[3923,3926],\"valid\"],[[3927,3927],\"mapped\",[3926,4023]],[[3928,3931],\"valid\"],[[3932,3932],\"mapped\",[3931,4023]],[[3933,3944],\"valid\"],[[3945,3945],\"mapped\",[3904,4021]],[[3946,3946],\"valid\"],[[3947,3948],\"valid\"],[[3949,3952],\"disallowed\"],[[3953,3954],\"valid\"],[[3955,3955],\"mapped\",[3953,3954]],[[3956,3956],\"valid\"],[[3957,3957],\"mapped\",[3953,3956]],[[3958,3958],\"mapped\",[4018,3968]],[[3959,3959],\"mapped\",[4018,3953,3968]],[[3960,3960],\"mapped\",[4019,3968]],[[3961,3961],\"mapped\",[4019,3953,3968]],[[3962,3968],\"valid\"],[[3969,3969],\"mapped\",[3953,3968]],[[3970,3972],\"valid\"],[[3973,3973],\"valid\",[],\"NV8\"],[[3974,3979],\"valid\"],[[3980,3983],\"valid\"],[[3984,3986],\"valid\"],[[3987,3987],\"mapped\",[3986,4023]],[[3988,3989],\"valid\"],[[3990,3990],\"valid\"],[[3991,3991],\"valid\"],[[3992,3992],\"disallowed\"],[[3993,3996],\"valid\"],[[3997,3997],\"mapped\",[3996,4023]],[[3998,4001],\"valid\"],[[4002,4002],\"mapped\",[4001,4023]],[[4003,4006],\"valid\"],[[4007,4007],\"mapped\",[4006,4023]],[[4008,4011],\"valid\"],[[4012,4012],\"mapped\",[4011,4023]],[[4013,4013],\"valid\"],[[4014,4016],\"valid\"],[[4017,4023],\"valid\"],[[4024,4024],\"valid\"],[[4025,4025],\"mapped\",[3984,4021]],[[4026,4028],\"valid\"],[[4029,4029],\"disallowed\"],[[4030,4037],\"valid\",[],\"NV8\"],[[4038,4038],\"valid\"],[[4039,4044],\"valid\",[],\"NV8\"],[[4045,4045],\"disallowed\"],[[4046,4046],\"valid\",[],\"NV8\"],[[4047,4047],\"valid\",[],\"NV8\"],[[4048,4049],\"valid\",[],\"NV8\"],[[4050,4052],\"valid\",[],\"NV8\"],[[4053,4056],\"valid\",[],\"NV8\"],[[4057,4058],\"valid\",[],\"NV8\"],[[4059,4095],\"disallowed\"],[[4096,4129],\"valid\"],[[4130,4130],\"valid\"],[[4131,4135],\"valid\"],[[4136,4136],\"valid\"],[[4137,4138],\"valid\"],[[4139,4139],\"valid\"],[[4140,4146],\"valid\"],[[4147,4149],\"valid\"],[[4150,4153],\"valid\"],[[4154,4159],\"valid\"],[[4160,4169],\"valid\"],[[4170,4175],\"valid\",[],\"NV8\"],[[4176,4185],\"valid\"],[[4186,4249],\"valid\"],[[4250,4253],\"valid\"],[[4254,4255],\"valid\",[],\"NV8\"],[[4256,4293],\"disallowed\"],[[4294,4294],\"disallowed\"],[[4295,4295],\"mapped\",[11559]],[[4296,4300],\"disallowed\"],[[4301,4301],\"mapped\",[11565]],[[4302,4303],\"disallowed\"],[[4304,4342],\"valid\"],[[4343,4344],\"valid\"],[[4345,4346],\"valid\"],[[4347,4347],\"valid\",[],\"NV8\"],[[4348,4348],\"mapped\",[4316]],[[4349,4351],\"valid\"],[[4352,4441],\"valid\",[],\"NV8\"],[[4442,4446],\"valid\",[],\"NV8\"],[[4447,4448],\"disallowed\"],[[4449,4514],\"valid\",[],\"NV8\"],[[4515,4519],\"valid\",[],\"NV8\"],[[4520,4601],\"valid\",[],\"NV8\"],[[4602,4607],\"valid\",[],\"NV8\"],[[4608,4614],\"valid\"],[[4615,4615],\"valid\"],[[4616,4678],\"valid\"],[[4679,4679],\"valid\"],[[4680,4680],\"valid\"],[[4681,4681],\"disallowed\"],[[4682,4685],\"valid\"],[[4686,4687],\"disallowed\"],[[4688,4694],\"valid\"],[[4695,4695],\"disallowed\"],[[4696,4696],\"valid\"],[[4697,4697],\"disallowed\"],[[4698,4701],\"valid\"],[[4702,4703],\"disallowed\"],[[4704,4742],\"valid\"],[[4743,4743],\"valid\"],[[4744,4744],\"valid\"],[[4745,4745],\"disallowed\"],[[4746,4749],\"valid\"],[[4750,4751],\"disallowed\"],[[4752,4782],\"valid\"],[[4783,4783],\"valid\"],[[4784,4784],\"valid\"],[[4785,4785],\"disallowed\"],[[4786,4789],\"valid\"],[[4790,4791],\"disallowed\"],[[4792,4798],\"valid\"],[[4799,4799],\"disallowed\"],[[4800,4800],\"valid\"],[[4801,4801],\"disallowed\"],[[4802,4805],\"valid\"],[[4806,4807],\"disallowed\"],[[4808,4814],\"valid\"],[[4815,4815],\"valid\"],[[4816,4822],\"valid\"],[[4823,4823],\"disallowed\"],[[4824,4846],\"valid\"],[[4847,4847],\"valid\"],[[4848,4878],\"valid\"],[[4879,4879],\"valid\"],[[4880,4880],\"valid\"],[[4881,4881],\"disallowed\"],[[4882,4885],\"valid\"],[[4886,4887],\"disallowed\"],[[4888,4894],\"valid\"],[[4895,4895],\"valid\"],[[4896,4934],\"valid\"],[[4935,4935],\"valid\"],[[4936,4954],\"valid\"],[[4955,4956],\"disallowed\"],[[4957,4958],\"valid\"],[[4959,4959],\"valid\"],[[4960,4960],\"valid\",[],\"NV8\"],[[4961,4988],\"valid\",[],\"NV8\"],[[4989,4991],\"disallowed\"],[[4992,5007],\"valid\"],[[5008,5017],\"valid\",[],\"NV8\"],[[5018,5023],\"disallowed\"],[[5024,5108],\"valid\"],[[5109,5109],\"valid\"],[[5110,5111],\"disallowed\"],[[5112,5112],\"mapped\",[5104]],[[5113,5113],\"mapped\",[5105]],[[5114,5114],\"mapped\",[5106]],[[5115,5115],\"mapped\",[5107]],[[5116,5116],\"mapped\",[5108]],[[5117,5117],\"mapped\",[5109]],[[5118,5119],\"disallowed\"],[[5120,5120],\"valid\",[],\"NV8\"],[[5121,5740],\"valid\"],[[5741,5742],\"valid\",[],\"NV8\"],[[5743,5750],\"valid\"],[[5751,5759],\"valid\"],[[5760,5760],\"disallowed\"],[[5761,5786],\"valid\"],[[5787,5788],\"valid\",[],\"NV8\"],[[5789,5791],\"disallowed\"],[[5792,5866],\"valid\"],[[5867,5872],\"valid\",[],\"NV8\"],[[5873,5880],\"valid\"],[[5881,5887],\"disallowed\"],[[5888,5900],\"valid\"],[[5901,5901],\"disallowed\"],[[5902,5908],\"valid\"],[[5909,5919],\"disallowed\"],[[5920,5940],\"valid\"],[[5941,5942],\"valid\",[],\"NV8\"],[[5943,5951],\"disallowed\"],[[5952,5971],\"valid\"],[[5972,5983],\"disallowed\"],[[5984,5996],\"valid\"],[[5997,5997],\"disallowed\"],[[5998,6000],\"valid\"],[[6001,6001],\"disallowed\"],[[6002,6003],\"valid\"],[[6004,6015],\"disallowed\"],[[6016,6067],\"valid\"],[[6068,6069],\"disallowed\"],[[6070,6099],\"valid\"],[[6100,6102],\"valid\",[],\"NV8\"],[[6103,6103],\"valid\"],[[6104,6107],\"valid\",[],\"NV8\"],[[6108,6108],\"valid\"],[[6109,6109],\"valid\"],[[6110,6111],\"disallowed\"],[[6112,6121],\"valid\"],[[6122,6127],\"disallowed\"],[[6128,6137],\"valid\",[],\"NV8\"],[[6138,6143],\"disallowed\"],[[6144,6149],\"valid\",[],\"NV8\"],[[6150,6150],\"disallowed\"],[[6151,6154],\"valid\",[],\"NV8\"],[[6155,6157],\"ignored\"],[[6158,6158],\"disallowed\"],[[6159,6159],\"disallowed\"],[[6160,6169],\"valid\"],[[6170,6175],\"disallowed\"],[[6176,6263],\"valid\"],[[6264,6271],\"disallowed\"],[[6272,6313],\"valid\"],[[6314,6314],\"valid\"],[[6315,6319],\"disallowed\"],[[6320,6389],\"valid\"],[[6390,6399],\"disallowed\"],[[6400,6428],\"valid\"],[[6429,6430],\"valid\"],[[6431,6431],\"disallowed\"],[[6432,6443],\"valid\"],[[6444,6447],\"disallowed\"],[[6448,6459],\"valid\"],[[6460,6463],\"disallowed\"],[[6464,6464],\"valid\",[],\"NV8\"],[[6465,6467],\"disallowed\"],[[6468,6469],\"valid\",[],\"NV8\"],[[6470,6509],\"valid\"],[[6510,6511],\"disallowed\"],[[6512,6516],\"valid\"],[[6517,6527],\"disallowed\"],[[6528,6569],\"valid\"],[[6570,6571],\"valid\"],[[6572,6575],\"disallowed\"],[[6576,6601],\"valid\"],[[6602,6607],\"disallowed\"],[[6608,6617],\"valid\"],[[6618,6618],\"valid\",[],\"XV8\"],[[6619,6621],\"disallowed\"],[[6622,6623],\"valid\",[],\"NV8\"],[[6624,6655],\"valid\",[],\"NV8\"],[[6656,6683],\"valid\"],[[6684,6685],\"disallowed\"],[[6686,6687],\"valid\",[],\"NV8\"],[[6688,6750],\"valid\"],[[6751,6751],\"disallowed\"],[[6752,6780],\"valid\"],[[6781,6782],\"disallowed\"],[[6783,6793],\"valid\"],[[6794,6799],\"disallowed\"],[[6800,6809],\"valid\"],[[6810,6815],\"disallowed\"],[[6816,6822],\"valid\",[],\"NV8\"],[[6823,6823],\"valid\"],[[6824,6829],\"valid\",[],\"NV8\"],[[6830,6831],\"disallowed\"],[[6832,6845],\"valid\"],[[6846,6846],\"valid\",[],\"NV8\"],[[6847,6911],\"disallowed\"],[[6912,6987],\"valid\"],[[6988,6991],\"disallowed\"],[[6992,7001],\"valid\"],[[7002,7018],\"valid\",[],\"NV8\"],[[7019,7027],\"valid\"],[[7028,7036],\"valid\",[],\"NV8\"],[[7037,7039],\"disallowed\"],[[7040,7082],\"valid\"],[[7083,7085],\"valid\"],[[7086,7097],\"valid\"],[[7098,7103],\"valid\"],[[7104,7155],\"valid\"],[[7156,7163],\"disallowed\"],[[7164,7167],\"valid\",[],\"NV8\"],[[7168,7223],\"valid\"],[[7224,7226],\"disallowed\"],[[7227,7231],\"valid\",[],\"NV8\"],[[7232,7241],\"valid\"],[[7242,7244],\"disallowed\"],[[7245,7293],\"valid\"],[[7294,7295],\"valid\",[],\"NV8\"],[[7296,7359],\"disallowed\"],[[7360,7367],\"valid\",[],\"NV8\"],[[7368,7375],\"disallowed\"],[[7376,7378],\"valid\"],[[7379,7379],\"valid\",[],\"NV8\"],[[7380,7410],\"valid\"],[[7411,7414],\"valid\"],[[7415,7415],\"disallowed\"],[[7416,7417],\"valid\"],[[7418,7423],\"disallowed\"],[[7424,7467],\"valid\"],[[7468,7468],\"mapped\",[97]],[[7469,7469],\"mapped\",[230]],[[7470,7470],\"mapped\",[98]],[[7471,7471],\"valid\"],[[7472,7472],\"mapped\",[100]],[[7473,7473],\"mapped\",[101]],[[7474,7474],\"mapped\",[477]],[[7475,7475],\"mapped\",[103]],[[7476,7476],\"mapped\",[104]],[[7477,7477],\"mapped\",[105]],[[7478,7478],\"mapped\",[106]],[[7479,7479],\"mapped\",[107]],[[7480,7480],\"mapped\",[108]],[[7481,7481],\"mapped\",[109]],[[7482,7482],\"mapped\",[110]],[[7483,7483],\"valid\"],[[7484,7484],\"mapped\",[111]],[[7485,7485],\"mapped\",[547]],[[7486,7486],\"mapped\",[112]],[[7487,7487],\"mapped\",[114]],[[7488,7488],\"mapped\",[116]],[[7489,7489],\"mapped\",[117]],[[7490,7490],\"mapped\",[119]],[[7491,7491],\"mapped\",[97]],[[7492,7492],\"mapped\",[592]],[[7493,7493],\"mapped\",[593]],[[7494,7494],\"mapped\",[7426]],[[7495,7495],\"mapped\",[98]],[[7496,7496],\"mapped\",[100]],[[7497,7497],\"mapped\",[101]],[[7498,7498],\"mapped\",[601]],[[7499,7499],\"mapped\",[603]],[[7500,7500],\"mapped\",[604]],[[7501,7501],\"mapped\",[103]],[[7502,7502],\"valid\"],[[7503,7503],\"mapped\",[107]],[[7504,7504],\"mapped\",[109]],[[7505,7505],\"mapped\",[331]],[[7506,7506],\"mapped\",[111]],[[7507,7507],\"mapped\",[596]],[[7508,7508],\"mapped\",[7446]],[[7509,7509],\"mapped\",[7447]],[[7510,7510],\"mapped\",[112]],[[7511,7511],\"mapped\",[116]],[[7512,7512],\"mapped\",[117]],[[7513,7513],\"mapped\",[7453]],[[7514,7514],\"mapped\",[623]],[[7515,7515],\"mapped\",[118]],[[7516,7516],\"mapped\",[7461]],[[7517,7517],\"mapped\",[946]],[[7518,7518],\"mapped\",[947]],[[7519,7519],\"mapped\",[948]],[[7520,7520],\"mapped\",[966]],[[7521,7521],\"mapped\",[967]],[[7522,7522],\"mapped\",[105]],[[7523,7523],\"mapped\",[114]],[[7524,7524],\"mapped\",[117]],[[7525,7525],\"mapped\",[118]],[[7526,7526],\"mapped\",[946]],[[7527,7527],\"mapped\",[947]],[[7528,7528],\"mapped\",[961]],[[7529,7529],\"mapped\",[966]],[[7530,7530],\"mapped\",[967]],[[7531,7531],\"valid\"],[[7532,7543],\"valid\"],[[7544,7544],\"mapped\",[1085]],[[7545,7578],\"valid\"],[[7579,7579],\"mapped\",[594]],[[7580,7580],\"mapped\",[99]],[[7581,7581],\"mapped\",[597]],[[7582,7582],\"mapped\",[240]],[[7583,7583],\"mapped\",[604]],[[7584,7584],\"mapped\",[102]],[[7585,7585],\"mapped\",[607]],[[7586,7586],\"mapped\",[609]],[[7587,7587],\"mapped\",[613]],[[7588,7588],\"mapped\",[616]],[[7589,7589],\"mapped\",[617]],[[7590,7590],\"mapped\",[618]],[[7591,7591],\"mapped\",[7547]],[[7592,7592],\"mapped\",[669]],[[7593,7593],\"mapped\",[621]],[[7594,7594],\"mapped\",[7557]],[[7595,7595],\"mapped\",[671]],[[7596,7596],\"mapped\",[625]],[[7597,7597],\"mapped\",[624]],[[7598,7598],\"mapped\",[626]],[[7599,7599],\"mapped\",[627]],[[7600,7600],\"mapped\",[628]],[[7601,7601],\"mapped\",[629]],[[7602,7602],\"mapped\",[632]],[[7603,7603],\"mapped\",[642]],[[7604,7604],\"mapped\",[643]],[[7605,7605],\"mapped\",[427]],[[7606,7606],\"mapped\",[649]],[[7607,7607],\"mapped\",[650]],[[7608,7608],\"mapped\",[7452]],[[7609,7609],\"mapped\",[651]],[[7610,7610],\"mapped\",[652]],[[7611,7611],\"mapped\",[122]],[[7612,7612],\"mapped\",[656]],[[7613,7613],\"mapped\",[657]],[[7614,7614],\"mapped\",[658]],[[7615,7615],\"mapped\",[952]],[[7616,7619],\"valid\"],[[7620,7626],\"valid\"],[[7627,7654],\"valid\"],[[7655,7669],\"valid\"],[[7670,7675],\"disallowed\"],[[7676,7676],\"valid\"],[[7677,7677],\"valid\"],[[7678,7679],\"valid\"],[[7680,7680],\"mapped\",[7681]],[[7681,7681],\"valid\"],[[7682,7682],\"mapped\",[7683]],[[7683,7683],\"valid\"],[[7684,7684],\"mapped\",[7685]],[[7685,7685],\"valid\"],[[7686,7686],\"mapped\",[7687]],[[7687,7687],\"valid\"],[[7688,7688],\"mapped\",[7689]],[[7689,7689],\"valid\"],[[7690,7690],\"mapped\",[7691]],[[7691,7691],\"valid\"],[[7692,7692],\"mapped\",[7693]],[[7693,7693],\"valid\"],[[7694,7694],\"mapped\",[7695]],[[7695,7695],\"valid\"],[[7696,7696],\"mapped\",[7697]],[[7697,7697],\"valid\"],[[7698,7698],\"mapped\",[7699]],[[7699,7699],\"valid\"],[[7700,7700],\"mapped\",[7701]],[[7701,7701],\"valid\"],[[7702,7702],\"mapped\",[7703]],[[7703,7703],\"valid\"],[[7704,7704],\"mapped\",[7705]],[[7705,7705],\"valid\"],[[7706,7706],\"mapped\",[7707]],[[7707,7707],\"valid\"],[[7708,7708],\"mapped\",[7709]],[[7709,7709],\"valid\"],[[7710,7710],\"mapped\",[7711]],[[7711,7711],\"valid\"],[[7712,7712],\"mapped\",[7713]],[[7713,7713],\"valid\"],[[7714,7714],\"mapped\",[7715]],[[7715,7715],\"valid\"],[[7716,7716],\"mapped\",[7717]],[[7717,7717],\"valid\"],[[7718,7718],\"mapped\",[7719]],[[7719,7719],\"valid\"],[[7720,7720],\"mapped\",[7721]],[[7721,7721],\"valid\"],[[7722,7722],\"mapped\",[7723]],[[7723,7723],\"valid\"],[[7724,7724],\"mapped\",[7725]],[[7725,7725],\"valid\"],[[7726,7726],\"mapped\",[7727]],[[7727,7727],\"valid\"],[[7728,7728],\"mapped\",[7729]],[[7729,7729],\"valid\"],[[7730,7730],\"mapped\",[7731]],[[7731,7731],\"valid\"],[[7732,7732],\"mapped\",[7733]],[[7733,7733],\"valid\"],[[7734,7734],\"mapped\",[7735]],[[7735,7735],\"valid\"],[[7736,7736],\"mapped\",[7737]],[[7737,7737],\"valid\"],[[7738,7738],\"mapped\",[7739]],[[7739,7739],\"valid\"],[[7740,7740],\"mapped\",[7741]],[[7741,7741],\"valid\"],[[7742,7742],\"mapped\",[7743]],[[7743,7743],\"valid\"],[[7744,7744],\"mapped\",[7745]],[[7745,7745],\"valid\"],[[7746,7746],\"mapped\",[7747]],[[7747,7747],\"valid\"],[[7748,7748],\"mapped\",[7749]],[[7749,7749],\"valid\"],[[7750,7750],\"mapped\",[7751]],[[7751,7751],\"valid\"],[[7752,7752],\"mapped\",[7753]],[[7753,7753],\"valid\"],[[7754,7754],\"mapped\",[7755]],[[7755,7755],\"valid\"],[[7756,7756],\"mapped\",[7757]],[[7757,7757],\"valid\"],[[7758,7758],\"mapped\",[7759]],[[7759,7759],\"valid\"],[[7760,7760],\"mapped\",[7761]],[[7761,7761],\"valid\"],[[7762,7762],\"mapped\",[7763]],[[7763,7763],\"valid\"],[[7764,7764],\"mapped\",[7765]],[[7765,7765],\"valid\"],[[7766,7766],\"mapped\",[7767]],[[7767,7767],\"valid\"],[[7768,7768],\"mapped\",[7769]],[[7769,7769],\"valid\"],[[7770,7770],\"mapped\",[7771]],[[7771,7771],\"valid\"],[[7772,7772],\"mapped\",[7773]],[[7773,7773],\"valid\"],[[7774,7774],\"mapped\",[7775]],[[7775,7775],\"valid\"],[[7776,7776],\"mapped\",[7777]],[[7777,7777],\"valid\"],[[7778,7778],\"mapped\",[7779]],[[7779,7779],\"valid\"],[[7780,7780],\"mapped\",[7781]],[[7781,7781],\"valid\"],[[7782,7782],\"mapped\",[7783]],[[7783,7783],\"valid\"],[[7784,7784],\"mapped\",[7785]],[[7785,7785],\"valid\"],[[7786,7786],\"mapped\",[7787]],[[7787,7787],\"valid\"],[[7788,7788],\"mapped\",[7789]],[[7789,7789],\"valid\"],[[7790,7790],\"mapped\",[7791]],[[7791,7791],\"valid\"],[[7792,7792],\"mapped\",[7793]],[[7793,7793],\"valid\"],[[7794,7794],\"mapped\",[7795]],[[7795,7795],\"valid\"],[[7796,7796],\"mapped\",[7797]],[[7797,7797],\"valid\"],[[7798,7798],\"mapped\",[7799]],[[7799,7799],\"valid\"],[[7800,7800],\"mapped\",[7801]],[[7801,7801],\"valid\"],[[7802,7802],\"mapped\",[7803]],[[7803,7803],\"valid\"],[[7804,7804],\"mapped\",[7805]],[[7805,7805],\"valid\"],[[7806,7806],\"mapped\",[7807]],[[7807,7807],\"valid\"],[[7808,7808],\"mapped\",[7809]],[[7809,7809],\"valid\"],[[7810,7810],\"mapped\",[7811]],[[7811,7811],\"valid\"],[[7812,7812],\"mapped\",[7813]],[[7813,7813],\"valid\"],[[7814,7814],\"mapped\",[7815]],[[7815,7815],\"valid\"],[[7816,7816],\"mapped\",[7817]],[[7817,7817],\"valid\"],[[7818,7818],\"mapped\",[7819]],[[7819,7819],\"valid\"],[[7820,7820],\"mapped\",[7821]],[[7821,7821],\"valid\"],[[7822,7822],\"mapped\",[7823]],[[7823,7823],\"valid\"],[[7824,7824],\"mapped\",[7825]],[[7825,7825],\"valid\"],[[7826,7826],\"mapped\",[7827]],[[7827,7827],\"valid\"],[[7828,7828],\"mapped\",[7829]],[[7829,7833],\"valid\"],[[7834,7834],\"mapped\",[97,702]],[[7835,7835],\"mapped\",[7777]],[[7836,7837],\"valid\"],[[7838,7838],\"mapped\",[115,115]],[[7839,7839],\"valid\"],[[7840,7840],\"mapped\",[7841]],[[7841,7841],\"valid\"],[[7842,7842],\"mapped\",[7843]],[[7843,7843],\"valid\"],[[7844,7844],\"mapped\",[7845]],[[7845,7845],\"valid\"],[[7846,7846],\"mapped\",[7847]],[[7847,7847],\"valid\"],[[7848,7848],\"mapped\",[7849]],[[7849,7849],\"valid\"],[[7850,7850],\"mapped\",[7851]],[[7851,7851],\"valid\"],[[7852,7852],\"mapped\",[7853]],[[7853,7853],\"valid\"],[[7854,7854],\"mapped\",[7855]],[[7855,7855],\"valid\"],[[7856,7856],\"mapped\",[7857]],[[7857,7857],\"valid\"],[[7858,7858],\"mapped\",[7859]],[[7859,7859],\"valid\"],[[7860,7860],\"mapped\",[7861]],[[7861,7861],\"valid\"],[[7862,7862],\"mapped\",[7863]],[[7863,7863],\"valid\"],[[7864,7864],\"mapped\",[7865]],[[7865,7865],\"valid\"],[[7866,7866],\"mapped\",[7867]],[[7867,7867],\"valid\"],[[7868,7868],\"mapped\",[7869]],[[7869,7869],\"valid\"],[[7870,7870],\"mapped\",[7871]],[[7871,7871],\"valid\"],[[7872,7872],\"mapped\",[7873]],[[7873,7873],\"valid\"],[[7874,7874],\"mapped\",[7875]],[[7875,7875],\"valid\"],[[7876,7876],\"mapped\",[7877]],[[7877,7877],\"valid\"],[[7878,7878],\"mapped\",[7879]],[[7879,7879],\"valid\"],[[7880,7880],\"mapped\",[7881]],[[7881,7881],\"valid\"],[[7882,7882],\"mapped\",[7883]],[[7883,7883],\"valid\"],[[7884,7884],\"mapped\",[7885]],[[7885,7885],\"valid\"],[[7886,7886],\"mapped\",[7887]],[[7887,7887],\"valid\"],[[7888,7888],\"mapped\",[7889]],[[7889,7889],\"valid\"],[[7890,7890],\"mapped\",[7891]],[[7891,7891],\"valid\"],[[7892,7892],\"mapped\",[7893]],[[7893,7893],\"valid\"],[[7894,7894],\"mapped\",[7895]],[[7895,7895],\"valid\"],[[7896,7896],\"mapped\",[7897]],[[7897,7897],\"valid\"],[[7898,7898],\"mapped\",[7899]],[[7899,7899],\"valid\"],[[7900,7900],\"mapped\",[7901]],[[7901,7901],\"valid\"],[[7902,7902],\"mapped\",[7903]],[[7903,7903],\"valid\"],[[7904,7904],\"mapped\",[7905]],[[7905,7905],\"valid\"],[[7906,7906],\"mapped\",[7907]],[[7907,7907],\"valid\"],[[7908,7908],\"mapped\",[7909]],[[7909,7909],\"valid\"],[[7910,7910],\"mapped\",[7911]],[[7911,7911],\"valid\"],[[7912,7912],\"mapped\",[7913]],[[7913,7913],\"valid\"],[[7914,7914],\"mapped\",[7915]],[[7915,7915],\"valid\"],[[7916,7916],\"mapped\",[7917]],[[7917,7917],\"valid\"],[[7918,7918],\"mapped\",[7919]],[[7919,7919],\"valid\"],[[7920,7920],\"mapped\",[7921]],[[7921,7921],\"valid\"],[[7922,7922],\"mapped\",[7923]],[[7923,7923],\"valid\"],[[7924,7924],\"mapped\",[7925]],[[7925,7925],\"valid\"],[[7926,7926],\"mapped\",[7927]],[[7927,7927],\"valid\"],[[7928,7928],\"mapped\",[7929]],[[7929,7929],\"valid\"],[[7930,7930],\"mapped\",[7931]],[[7931,7931],\"valid\"],[[7932,7932],\"mapped\",[7933]],[[7933,7933],\"valid\"],[[7934,7934],\"mapped\",[7935]],[[7935,7935],\"valid\"],[[7936,7943],\"valid\"],[[7944,7944],\"mapped\",[7936]],[[7945,7945],\"mapped\",[7937]],[[7946,7946],\"mapped\",[7938]],[[7947,7947],\"mapped\",[7939]],[[7948,7948],\"mapped\",[7940]],[[7949,7949],\"mapped\",[7941]],[[7950,7950],\"mapped\",[7942]],[[7951,7951],\"mapped\",[7943]],[[7952,7957],\"valid\"],[[7958,7959],\"disallowed\"],[[7960,7960],\"mapped\",[7952]],[[7961,7961],\"mapped\",[7953]],[[7962,7962],\"mapped\",[7954]],[[7963,7963],\"mapped\",[7955]],[[7964,7964],\"mapped\",[7956]],[[7965,7965],\"mapped\",[7957]],[[7966,7967],\"disallowed\"],[[7968,7975],\"valid\"],[[7976,7976],\"mapped\",[7968]],[[7977,7977],\"mapped\",[7969]],[[7978,7978],\"mapped\",[7970]],[[7979,7979],\"mapped\",[7971]],[[7980,7980],\"mapped\",[7972]],[[7981,7981],\"mapped\",[7973]],[[7982,7982],\"mapped\",[7974]],[[7983,7983],\"mapped\",[7975]],[[7984,7991],\"valid\"],[[7992,7992],\"mapped\",[7984]],[[7993,7993],\"mapped\",[7985]],[[7994,7994],\"mapped\",[7986]],[[7995,7995],\"mapped\",[7987]],[[7996,7996],\"mapped\",[7988]],[[7997,7997],\"mapped\",[7989]],[[7998,7998],\"mapped\",[7990]],[[7999,7999],\"mapped\",[7991]],[[8000,8005],\"valid\"],[[8006,8007],\"disallowed\"],[[8008,8008],\"mapped\",[8000]],[[8009,8009],\"mapped\",[8001]],[[8010,8010],\"mapped\",[8002]],[[8011,8011],\"mapped\",[8003]],[[8012,8012],\"mapped\",[8004]],[[8013,8013],\"mapped\",[8005]],[[8014,8015],\"disallowed\"],[[8016,8023],\"valid\"],[[8024,8024],\"disallowed\"],[[8025,8025],\"mapped\",[8017]],[[8026,8026],\"disallowed\"],[[8027,8027],\"mapped\",[8019]],[[8028,8028],\"disallowed\"],[[8029,8029],\"mapped\",[8021]],[[8030,8030],\"disallowed\"],[[8031,8031],\"mapped\",[8023]],[[8032,8039],\"valid\"],[[8040,8040],\"mapped\",[8032]],[[8041,8041],\"mapped\",[8033]],[[8042,8042],\"mapped\",[8034]],[[8043,8043],\"mapped\",[8035]],[[8044,8044],\"mapped\",[8036]],[[8045,8045],\"mapped\",[8037]],[[8046,8046],\"mapped\",[8038]],[[8047,8047],\"mapped\",[8039]],[[8048,8048],\"valid\"],[[8049,8049],\"mapped\",[940]],[[8050,8050],\"valid\"],[[8051,8051],\"mapped\",[941]],[[8052,8052],\"valid\"],[[8053,8053],\"mapped\",[942]],[[8054,8054],\"valid\"],[[8055,8055],\"mapped\",[943]],[[8056,8056],\"valid\"],[[8057,8057],\"mapped\",[972]],[[8058,8058],\"valid\"],[[8059,8059],\"mapped\",[973]],[[8060,8060],\"valid\"],[[8061,8061],\"mapped\",[974]],[[8062,8063],\"disallowed\"],[[8064,8064],\"mapped\",[7936,953]],[[8065,8065],\"mapped\",[7937,953]],[[8066,8066],\"mapped\",[7938,953]],[[8067,8067],\"mapped\",[7939,953]],[[8068,8068],\"mapped\",[7940,953]],[[8069,8069],\"mapped\",[7941,953]],[[8070,8070],\"mapped\",[7942,953]],[[8071,8071],\"mapped\",[7943,953]],[[8072,8072],\"mapped\",[7936,953]],[[8073,8073],\"mapped\",[7937,953]],[[8074,8074],\"mapped\",[7938,953]],[[8075,8075],\"mapped\",[7939,953]],[[8076,8076],\"mapped\",[7940,953]],[[8077,8077],\"mapped\",[7941,953]],[[8078,8078],\"mapped\",[7942,953]],[[8079,8079],\"mapped\",[7943,953]],[[8080,8080],\"mapped\",[7968,953]],[[8081,8081],\"mapped\",[7969,953]],[[8082,8082],\"mapped\",[7970,953]],[[8083,8083],\"mapped\",[7971,953]],[[8084,8084],\"mapped\",[7972,953]],[[8085,8085],\"mapped\",[7973,953]],[[8086,8086],\"mapped\",[7974,953]],[[8087,8087],\"mapped\",[7975,953]],[[8088,8088],\"mapped\",[7968,953]],[[8089,8089],\"mapped\",[7969,953]],[[8090,8090],\"mapped\",[7970,953]],[[8091,8091],\"mapped\",[7971,953]],[[8092,8092],\"mapped\",[7972,953]],[[8093,8093],\"mapped\",[7973,953]],[[8094,8094],\"mapped\",[7974,953]],[[8095,8095],\"mapped\",[7975,953]],[[8096,8096],\"mapped\",[8032,953]],[[8097,8097],\"mapped\",[8033,953]],[[8098,8098],\"mapped\",[8034,953]],[[8099,8099],\"mapped\",[8035,953]],[[8100,8100],\"mapped\",[8036,953]],[[8101,8101],\"mapped\",[8037,953]],[[8102,8102],\"mapped\",[8038,953]],[[8103,8103],\"mapped\",[8039,953]],[[8104,8104],\"mapped\",[8032,953]],[[8105,8105],\"mapped\",[8033,953]],[[8106,8106],\"mapped\",[8034,953]],[[8107,8107],\"mapped\",[8035,953]],[[8108,8108],\"mapped\",[8036,953]],[[8109,8109],\"mapped\",[8037,953]],[[8110,8110],\"mapped\",[8038,953]],[[8111,8111],\"mapped\",[8039,953]],[[8112,8113],\"valid\"],[[8114,8114],\"mapped\",[8048,953]],[[8115,8115],\"mapped\",[945,953]],[[8116,8116],\"mapped\",[940,953]],[[8117,8117],\"disallowed\"],[[8118,8118],\"valid\"],[[8119,8119],\"mapped\",[8118,953]],[[8120,8120],\"mapped\",[8112]],[[8121,8121],\"mapped\",[8113]],[[8122,8122],\"mapped\",[8048]],[[8123,8123],\"mapped\",[940]],[[8124,8124],\"mapped\",[945,953]],[[8125,8125],\"disallowed_STD3_mapped\",[32,787]],[[8126,8126],\"mapped\",[953]],[[8127,8127],\"disallowed_STD3_mapped\",[32,787]],[[8128,8128],\"disallowed_STD3_mapped\",[32,834]],[[8129,8129],\"disallowed_STD3_mapped\",[32,776,834]],[[8130,8130],\"mapped\",[8052,953]],[[8131,8131],\"mapped\",[951,953]],[[8132,8132],\"mapped\",[942,953]],[[8133,8133],\"disallowed\"],[[8134,8134],\"valid\"],[[8135,8135],\"mapped\",[8134,953]],[[8136,8136],\"mapped\",[8050]],[[8137,8137],\"mapped\",[941]],[[8138,8138],\"mapped\",[8052]],[[8139,8139],\"mapped\",[942]],[[8140,8140],\"mapped\",[951,953]],[[8141,8141],\"disallowed_STD3_mapped\",[32,787,768]],[[8142,8142],\"disallowed_STD3_mapped\",[32,787,769]],[[8143,8143],\"disallowed_STD3_mapped\",[32,787,834]],[[8144,8146],\"valid\"],[[8147,8147],\"mapped\",[912]],[[8148,8149],\"disallowed\"],[[8150,8151],\"valid\"],[[8152,8152],\"mapped\",[8144]],[[8153,8153],\"mapped\",[8145]],[[8154,8154],\"mapped\",[8054]],[[8155,8155],\"mapped\",[943]],[[8156,8156],\"disallowed\"],[[8157,8157],\"disallowed_STD3_mapped\",[32,788,768]],[[8158,8158],\"disallowed_STD3_mapped\",[32,788,769]],[[8159,8159],\"disallowed_STD3_mapped\",[32,788,834]],[[8160,8162],\"valid\"],[[8163,8163],\"mapped\",[944]],[[8164,8167],\"valid\"],[[8168,8168],\"mapped\",[8160]],[[8169,8169],\"mapped\",[8161]],[[8170,8170],\"mapped\",[8058]],[[8171,8171],\"mapped\",[973]],[[8172,8172],\"mapped\",[8165]],[[8173,8173],\"disallowed_STD3_mapped\",[32,776,768]],[[8174,8174],\"disallowed_STD3_mapped\",[32,776,769]],[[8175,8175],\"disallowed_STD3_mapped\",[96]],[[8176,8177],\"disallowed\"],[[8178,8178],\"mapped\",[8060,953]],[[8179,8179],\"mapped\",[969,953]],[[8180,8180],\"mapped\",[974,953]],[[8181,8181],\"disallowed\"],[[8182,8182],\"valid\"],[[8183,8183],\"mapped\",[8182,953]],[[8184,8184],\"mapped\",[8056]],[[8185,8185],\"mapped\",[972]],[[8186,8186],\"mapped\",[8060]],[[8187,8187],\"mapped\",[974]],[[8188,8188],\"mapped\",[969,953]],[[8189,8189],\"disallowed_STD3_mapped\",[32,769]],[[8190,8190],\"disallowed_STD3_mapped\",[32,788]],[[8191,8191],\"disallowed\"],[[8192,8202],\"disallowed_STD3_mapped\",[32]],[[8203,8203],\"ignored\"],[[8204,8205],\"deviation\",[]],[[8206,8207],\"disallowed\"],[[8208,8208],\"valid\",[],\"NV8\"],[[8209,8209],\"mapped\",[8208]],[[8210,8214],\"valid\",[],\"NV8\"],[[8215,8215],\"disallowed_STD3_mapped\",[32,819]],[[8216,8227],\"valid\",[],\"NV8\"],[[8228,8230],\"disallowed\"],[[8231,8231],\"valid\",[],\"NV8\"],[[8232,8238],\"disallowed\"],[[8239,8239],\"disallowed_STD3_mapped\",[32]],[[8240,8242],\"valid\",[],\"NV8\"],[[8243,8243],\"mapped\",[8242,8242]],[[8244,8244],\"mapped\",[8242,8242,8242]],[[8245,8245],\"valid\",[],\"NV8\"],[[8246,8246],\"mapped\",[8245,8245]],[[8247,8247],\"mapped\",[8245,8245,8245]],[[8248,8251],\"valid\",[],\"NV8\"],[[8252,8252],\"disallowed_STD3_mapped\",[33,33]],[[8253,8253],\"valid\",[],\"NV8\"],[[8254,8254],\"disallowed_STD3_mapped\",[32,773]],[[8255,8262],\"valid\",[],\"NV8\"],[[8263,8263],\"disallowed_STD3_mapped\",[63,63]],[[8264,8264],\"disallowed_STD3_mapped\",[63,33]],[[8265,8265],\"disallowed_STD3_mapped\",[33,63]],[[8266,8269],\"valid\",[],\"NV8\"],[[8270,8274],\"valid\",[],\"NV8\"],[[8275,8276],\"valid\",[],\"NV8\"],[[8277,8278],\"valid\",[],\"NV8\"],[[8279,8279],\"mapped\",[8242,8242,8242,8242]],[[8280,8286],\"valid\",[],\"NV8\"],[[8287,8287],\"disallowed_STD3_mapped\",[32]],[[8288,8288],\"ignored\"],[[8289,8291],\"disallowed\"],[[8292,8292],\"ignored\"],[[8293,8293],\"disallowed\"],[[8294,8297],\"disallowed\"],[[8298,8303],\"disallowed\"],[[8304,8304],\"mapped\",[48]],[[8305,8305],\"mapped\",[105]],[[8306,8307],\"disallowed\"],[[8308,8308],\"mapped\",[52]],[[8309,8309],\"mapped\",[53]],[[8310,8310],\"mapped\",[54]],[[8311,8311],\"mapped\",[55]],[[8312,8312],\"mapped\",[56]],[[8313,8313],\"mapped\",[57]],[[8314,8314],\"disallowed_STD3_mapped\",[43]],[[8315,8315],\"mapped\",[8722]],[[8316,8316],\"disallowed_STD3_mapped\",[61]],[[8317,8317],\"disallowed_STD3_mapped\",[40]],[[8318,8318],\"disallowed_STD3_mapped\",[41]],[[8319,8319],\"mapped\",[110]],[[8320,8320],\"mapped\",[48]],[[8321,8321],\"mapped\",[49]],[[8322,8322],\"mapped\",[50]],[[8323,8323],\"mapped\",[51]],[[8324,8324],\"mapped\",[52]],[[8325,8325],\"mapped\",[53]],[[8326,8326],\"mapped\",[54]],[[8327,8327],\"mapped\",[55]],[[8328,8328],\"mapped\",[56]],[[8329,8329],\"mapped\",[57]],[[8330,8330],\"disallowed_STD3_mapped\",[43]],[[8331,8331],\"mapped\",[8722]],[[8332,8332],\"disallowed_STD3_mapped\",[61]],[[8333,8333],\"disallowed_STD3_mapped\",[40]],[[8334,8334],\"disallowed_STD3_mapped\",[41]],[[8335,8335],\"disallowed\"],[[8336,8336],\"mapped\",[97]],[[8337,8337],\"mapped\",[101]],[[8338,8338],\"mapped\",[111]],[[8339,8339],\"mapped\",[120]],[[8340,8340],\"mapped\",[601]],[[8341,8341],\"mapped\",[104]],[[8342,8342],\"mapped\",[107]],[[8343,8343],\"mapped\",[108]],[[8344,8344],\"mapped\",[109]],[[8345,8345],\"mapped\",[110]],[[8346,8346],\"mapped\",[112]],[[8347,8347],\"mapped\",[115]],[[8348,8348],\"mapped\",[116]],[[8349,8351],\"disallowed\"],[[8352,8359],\"valid\",[],\"NV8\"],[[8360,8360],\"mapped\",[114,115]],[[8361,8362],\"valid\",[],\"NV8\"],[[8363,8363],\"valid\",[],\"NV8\"],[[8364,8364],\"valid\",[],\"NV8\"],[[8365,8367],\"valid\",[],\"NV8\"],[[8368,8369],\"valid\",[],\"NV8\"],[[8370,8373],\"valid\",[],\"NV8\"],[[8374,8376],\"valid\",[],\"NV8\"],[[8377,8377],\"valid\",[],\"NV8\"],[[8378,8378],\"valid\",[],\"NV8\"],[[8379,8381],\"valid\",[],\"NV8\"],[[8382,8382],\"valid\",[],\"NV8\"],[[8383,8399],\"disallowed\"],[[8400,8417],\"valid\",[],\"NV8\"],[[8418,8419],\"valid\",[],\"NV8\"],[[8420,8426],\"valid\",[],\"NV8\"],[[8427,8427],\"valid\",[],\"NV8\"],[[8428,8431],\"valid\",[],\"NV8\"],[[8432,8432],\"valid\",[],\"NV8\"],[[8433,8447],\"disallowed\"],[[8448,8448],\"disallowed_STD3_mapped\",[97,47,99]],[[8449,8449],\"disallowed_STD3_mapped\",[97,47,115]],[[8450,8450],\"mapped\",[99]],[[8451,8451],\"mapped\",[176,99]],[[8452,8452],\"valid\",[],\"NV8\"],[[8453,8453],\"disallowed_STD3_mapped\",[99,47,111]],[[8454,8454],\"disallowed_STD3_mapped\",[99,47,117]],[[8455,8455],\"mapped\",[603]],[[8456,8456],\"valid\",[],\"NV8\"],[[8457,8457],\"mapped\",[176,102]],[[8458,8458],\"mapped\",[103]],[[8459,8462],\"mapped\",[104]],[[8463,8463],\"mapped\",[295]],[[8464,8465],\"mapped\",[105]],[[8466,8467],\"mapped\",[108]],[[8468,8468],\"valid\",[],\"NV8\"],[[8469,8469],\"mapped\",[110]],[[8470,8470],\"mapped\",[110,111]],[[8471,8472],\"valid\",[],\"NV8\"],[[8473,8473],\"mapped\",[112]],[[8474,8474],\"mapped\",[113]],[[8475,8477],\"mapped\",[114]],[[8478,8479],\"valid\",[],\"NV8\"],[[8480,8480],\"mapped\",[115,109]],[[8481,8481],\"mapped\",[116,101,108]],[[8482,8482],\"mapped\",[116,109]],[[8483,8483],\"valid\",[],\"NV8\"],[[8484,8484],\"mapped\",[122]],[[8485,8485],\"valid\",[],\"NV8\"],[[8486,8486],\"mapped\",[969]],[[8487,8487],\"valid\",[],\"NV8\"],[[8488,8488],\"mapped\",[122]],[[8489,8489],\"valid\",[],\"NV8\"],[[8490,8490],\"mapped\",[107]],[[8491,8491],\"mapped\",[229]],[[8492,8492],\"mapped\",[98]],[[8493,8493],\"mapped\",[99]],[[8494,8494],\"valid\",[],\"NV8\"],[[8495,8496],\"mapped\",[101]],[[8497,8497],\"mapped\",[102]],[[8498,8498],\"disallowed\"],[[8499,8499],\"mapped\",[109]],[[8500,8500],\"mapped\",[111]],[[8501,8501],\"mapped\",[1488]],[[8502,8502],\"mapped\",[1489]],[[8503,8503],\"mapped\",[1490]],[[8504,8504],\"mapped\",[1491]],[[8505,8505],\"mapped\",[105]],[[8506,8506],\"valid\",[],\"NV8\"],[[8507,8507],\"mapped\",[102,97,120]],[[8508,8508],\"mapped\",[960]],[[8509,8510],\"mapped\",[947]],[[8511,8511],\"mapped\",[960]],[[8512,8512],\"mapped\",[8721]],[[8513,8516],\"valid\",[],\"NV8\"],[[8517,8518],\"mapped\",[100]],[[8519,8519],\"mapped\",[101]],[[8520,8520],\"mapped\",[105]],[[8521,8521],\"mapped\",[106]],[[8522,8523],\"valid\",[],\"NV8\"],[[8524,8524],\"valid\",[],\"NV8\"],[[8525,8525],\"valid\",[],\"NV8\"],[[8526,8526],\"valid\"],[[8527,8527],\"valid\",[],\"NV8\"],[[8528,8528],\"mapped\",[49,8260,55]],[[8529,8529],\"mapped\",[49,8260,57]],[[8530,8530],\"mapped\",[49,8260,49,48]],[[8531,8531],\"mapped\",[49,8260,51]],[[8532,8532],\"mapped\",[50,8260,51]],[[8533,8533],\"mapped\",[49,8260,53]],[[8534,8534],\"mapped\",[50,8260,53]],[[8535,8535],\"mapped\",[51,8260,53]],[[8536,8536],\"mapped\",[52,8260,53]],[[8537,8537],\"mapped\",[49,8260,54]],[[8538,8538],\"mapped\",[53,8260,54]],[[8539,8539],\"mapped\",[49,8260,56]],[[8540,8540],\"mapped\",[51,8260,56]],[[8541,8541],\"mapped\",[53,8260,56]],[[8542,8542],\"mapped\",[55,8260,56]],[[8543,8543],\"mapped\",[49,8260]],[[8544,8544],\"mapped\",[105]],[[8545,8545],\"mapped\",[105,105]],[[8546,8546],\"mapped\",[105,105,105]],[[8547,8547],\"mapped\",[105,118]],[[8548,8548],\"mapped\",[118]],[[8549,8549],\"mapped\",[118,105]],[[8550,8550],\"mapped\",[118,105,105]],[[8551,8551],\"mapped\",[118,105,105,105]],[[8552,8552],\"mapped\",[105,120]],[[8553,8553],\"mapped\",[120]],[[8554,8554],\"mapped\",[120,105]],[[8555,8555],\"mapped\",[120,105,105]],[[8556,8556],\"mapped\",[108]],[[8557,8557],\"mapped\",[99]],[[8558,8558],\"mapped\",[100]],[[8559,8559],\"mapped\",[109]],[[8560,8560],\"mapped\",[105]],[[8561,8561],\"mapped\",[105,105]],[[8562,8562],\"mapped\",[105,105,105]],[[8563,8563],\"mapped\",[105,118]],[[8564,8564],\"mapped\",[118]],[[8565,8565],\"mapped\",[118,105]],[[8566,8566],\"mapped\",[118,105,105]],[[8567,8567],\"mapped\",[118,105,105,105]],[[8568,8568],\"mapped\",[105,120]],[[8569,8569],\"mapped\",[120]],[[8570,8570],\"mapped\",[120,105]],[[8571,8571],\"mapped\",[120,105,105]],[[8572,8572],\"mapped\",[108]],[[8573,8573],\"mapped\",[99]],[[8574,8574],\"mapped\",[100]],[[8575,8575],\"mapped\",[109]],[[8576,8578],\"valid\",[],\"NV8\"],[[8579,8579],\"disallowed\"],[[8580,8580],\"valid\"],[[8581,8584],\"valid\",[],\"NV8\"],[[8585,8585],\"mapped\",[48,8260,51]],[[8586,8587],\"valid\",[],\"NV8\"],[[8588,8591],\"disallowed\"],[[8592,8682],\"valid\",[],\"NV8\"],[[8683,8691],\"valid\",[],\"NV8\"],[[8692,8703],\"valid\",[],\"NV8\"],[[8704,8747],\"valid\",[],\"NV8\"],[[8748,8748],\"mapped\",[8747,8747]],[[8749,8749],\"mapped\",[8747,8747,8747]],[[8750,8750],\"valid\",[],\"NV8\"],[[8751,8751],\"mapped\",[8750,8750]],[[8752,8752],\"mapped\",[8750,8750,8750]],[[8753,8799],\"valid\",[],\"NV8\"],[[8800,8800],\"disallowed_STD3_valid\"],[[8801,8813],\"valid\",[],\"NV8\"],[[8814,8815],\"disallowed_STD3_valid\"],[[8816,8945],\"valid\",[],\"NV8\"],[[8946,8959],\"valid\",[],\"NV8\"],[[8960,8960],\"valid\",[],\"NV8\"],[[8961,8961],\"valid\",[],\"NV8\"],[[8962,9000],\"valid\",[],\"NV8\"],[[9001,9001],\"mapped\",[12296]],[[9002,9002],\"mapped\",[12297]],[[9003,9082],\"valid\",[],\"NV8\"],[[9083,9083],\"valid\",[],\"NV8\"],[[9084,9084],\"valid\",[],\"NV8\"],[[9085,9114],\"valid\",[],\"NV8\"],[[9115,9166],\"valid\",[],\"NV8\"],[[9167,9168],\"valid\",[],\"NV8\"],[[9169,9179],\"valid\",[],\"NV8\"],[[9180,9191],\"valid\",[],\"NV8\"],[[9192,9192],\"valid\",[],\"NV8\"],[[9193,9203],\"valid\",[],\"NV8\"],[[9204,9210],\"valid\",[],\"NV8\"],[[9211,9215],\"disallowed\"],[[9216,9252],\"valid\",[],\"NV8\"],[[9253,9254],\"valid\",[],\"NV8\"],[[9255,9279],\"disallowed\"],[[9280,9290],\"valid\",[],\"NV8\"],[[9291,9311],\"disallowed\"],[[9312,9312],\"mapped\",[49]],[[9313,9313],\"mapped\",[50]],[[9314,9314],\"mapped\",[51]],[[9315,9315],\"mapped\",[52]],[[9316,9316],\"mapped\",[53]],[[9317,9317],\"mapped\",[54]],[[9318,9318],\"mapped\",[55]],[[9319,9319],\"mapped\",[56]],[[9320,9320],\"mapped\",[57]],[[9321,9321],\"mapped\",[49,48]],[[9322,9322],\"mapped\",[49,49]],[[9323,9323],\"mapped\",[49,50]],[[9324,9324],\"mapped\",[49,51]],[[9325,9325],\"mapped\",[49,52]],[[9326,9326],\"mapped\",[49,53]],[[9327,9327],\"mapped\",[49,54]],[[9328,9328],\"mapped\",[49,55]],[[9329,9329],\"mapped\",[49,56]],[[9330,9330],\"mapped\",[49,57]],[[9331,9331],\"mapped\",[50,48]],[[9332,9332],\"disallowed_STD3_mapped\",[40,49,41]],[[9333,9333],\"disallowed_STD3_mapped\",[40,50,41]],[[9334,9334],\"disallowed_STD3_mapped\",[40,51,41]],[[9335,9335],\"disallowed_STD3_mapped\",[40,52,41]],[[9336,9336],\"disallowed_STD3_mapped\",[40,53,41]],[[9337,9337],\"disallowed_STD3_mapped\",[40,54,41]],[[9338,9338],\"disallowed_STD3_mapped\",[40,55,41]],[[9339,9339],\"disallowed_STD3_mapped\",[40,56,41]],[[9340,9340],\"disallowed_STD3_mapped\",[40,57,41]],[[9341,9341],\"disallowed_STD3_mapped\",[40,49,48,41]],[[9342,9342],\"disallowed_STD3_mapped\",[40,49,49,41]],[[9343,9343],\"disallowed_STD3_mapped\",[40,49,50,41]],[[9344,9344],\"disallowed_STD3_mapped\",[40,49,51,41]],[[9345,9345],\"disallowed_STD3_mapped\",[40,49,52,41]],[[9346,9346],\"disallowed_STD3_mapped\",[40,49,53,41]],[[9347,9347],\"disallowed_STD3_mapped\",[40,49,54,41]],[[9348,9348],\"disallowed_STD3_mapped\",[40,49,55,41]],[[9349,9349],\"disallowed_STD3_mapped\",[40,49,56,41]],[[9350,9350],\"disallowed_STD3_mapped\",[40,49,57,41]],[[9351,9351],\"disallowed_STD3_mapped\",[40,50,48,41]],[[9352,9371],\"disallowed\"],[[9372,9372],\"disallowed_STD3_mapped\",[40,97,41]],[[9373,9373],\"disallowed_STD3_mapped\",[40,98,41]],[[9374,9374],\"disallowed_STD3_mapped\",[40,99,41]],[[9375,9375],\"disallowed_STD3_mapped\",[40,100,41]],[[9376,9376],\"disallowed_STD3_mapped\",[40,101,41]],[[9377,9377],\"disallowed_STD3_mapped\",[40,102,41]],[[9378,9378],\"disallowed_STD3_mapped\",[40,103,41]],[[9379,9379],\"disallowed_STD3_mapped\",[40,104,41]],[[9380,9380],\"disallowed_STD3_mapped\",[40,105,41]],[[9381,9381],\"disallowed_STD3_mapped\",[40,106,41]],[[9382,9382],\"disallowed_STD3_mapped\",[40,107,41]],[[9383,9383],\"disallowed_STD3_mapped\",[40,108,41]],[[9384,9384],\"disallowed_STD3_mapped\",[40,109,41]],[[9385,9385],\"disallowed_STD3_mapped\",[40,110,41]],[[9386,9386],\"disallowed_STD3_mapped\",[40,111,41]],[[9387,9387],\"disallowed_STD3_mapped\",[40,112,41]],[[9388,9388],\"disallowed_STD3_mapped\",[40,113,41]],[[9389,9389],\"disallowed_STD3_mapped\",[40,114,41]],[[9390,9390],\"disallowed_STD3_mapped\",[40,115,41]],[[9391,9391],\"disallowed_STD3_mapped\",[40,116,41]],[[9392,9392],\"disallowed_STD3_mapped\",[40,117,41]],[[9393,9393],\"disallowed_STD3_mapped\",[40,118,41]],[[9394,9394],\"disallowed_STD3_mapped\",[40,119,41]],[[9395,9395],\"disallowed_STD3_mapped\",[40,120,41]],[[9396,9396],\"disallowed_STD3_mapped\",[40,121,41]],[[9397,9397],\"disallowed_STD3_mapped\",[40,122,41]],[[9398,9398],\"mapped\",[97]],[[9399,9399],\"mapped\",[98]],[[9400,9400],\"mapped\",[99]],[[9401,9401],\"mapped\",[100]],[[9402,9402],\"mapped\",[101]],[[9403,9403],\"mapped\",[102]],[[9404,9404],\"mapped\",[103]],[[9405,9405],\"mapped\",[104]],[[9406,9406],\"mapped\",[105]],[[9407,9407],\"mapped\",[106]],[[9408,9408],\"mapped\",[107]],[[9409,9409],\"mapped\",[108]],[[9410,9410],\"mapped\",[109]],[[9411,9411],\"mapped\",[110]],[[9412,9412],\"mapped\",[111]],[[9413,9413],\"mapped\",[112]],[[9414,9414],\"mapped\",[113]],[[9415,9415],\"mapped\",[114]],[[9416,9416],\"mapped\",[115]],[[9417,9417],\"mapped\",[116]],[[9418,9418],\"mapped\",[117]],[[9419,9419],\"mapped\",[118]],[[9420,9420],\"mapped\",[119]],[[9421,9421],\"mapped\",[120]],[[9422,9422],\"mapped\",[121]],[[9423,9423],\"mapped\",[122]],[[9424,9424],\"mapped\",[97]],[[9425,9425],\"mapped\",[98]],[[9426,9426],\"mapped\",[99]],[[9427,9427],\"mapped\",[100]],[[9428,9428],\"mapped\",[101]],[[9429,9429],\"mapped\",[102]],[[9430,9430],\"mapped\",[103]],[[9431,9431],\"mapped\",[104]],[[9432,9432],\"mapped\",[105]],[[9433,9433],\"mapped\",[106]],[[9434,9434],\"mapped\",[107]],[[9435,9435],\"mapped\",[108]],[[9436,9436],\"mapped\",[109]],[[9437,9437],\"mapped\",[110]],[[9438,9438],\"mapped\",[111]],[[9439,9439],\"mapped\",[112]],[[9440,9440],\"mapped\",[113]],[[9441,9441],\"mapped\",[114]],[[9442,9442],\"mapped\",[115]],[[9443,9443],\"mapped\",[116]],[[9444,9444],\"mapped\",[117]],[[9445,9445],\"mapped\",[118]],[[9446,9446],\"mapped\",[119]],[[9447,9447],\"mapped\",[120]],[[9448,9448],\"mapped\",[121]],[[9449,9449],\"mapped\",[122]],[[9450,9450],\"mapped\",[48]],[[9451,9470],\"valid\",[],\"NV8\"],[[9471,9471],\"valid\",[],\"NV8\"],[[9472,9621],\"valid\",[],\"NV8\"],[[9622,9631],\"valid\",[],\"NV8\"],[[9632,9711],\"valid\",[],\"NV8\"],[[9712,9719],\"valid\",[],\"NV8\"],[[9720,9727],\"valid\",[],\"NV8\"],[[9728,9747],\"valid\",[],\"NV8\"],[[9748,9749],\"valid\",[],\"NV8\"],[[9750,9751],\"valid\",[],\"NV8\"],[[9752,9752],\"valid\",[],\"NV8\"],[[9753,9753],\"valid\",[],\"NV8\"],[[9754,9839],\"valid\",[],\"NV8\"],[[9840,9841],\"valid\",[],\"NV8\"],[[9842,9853],\"valid\",[],\"NV8\"],[[9854,9855],\"valid\",[],\"NV8\"],[[9856,9865],\"valid\",[],\"NV8\"],[[9866,9873],\"valid\",[],\"NV8\"],[[9874,9884],\"valid\",[],\"NV8\"],[[9885,9885],\"valid\",[],\"NV8\"],[[9886,9887],\"valid\",[],\"NV8\"],[[9888,9889],\"valid\",[],\"NV8\"],[[9890,9905],\"valid\",[],\"NV8\"],[[9906,9906],\"valid\",[],\"NV8\"],[[9907,9916],\"valid\",[],\"NV8\"],[[9917,9919],\"valid\",[],\"NV8\"],[[9920,9923],\"valid\",[],\"NV8\"],[[9924,9933],\"valid\",[],\"NV8\"],[[9934,9934],\"valid\",[],\"NV8\"],[[9935,9953],\"valid\",[],\"NV8\"],[[9954,9954],\"valid\",[],\"NV8\"],[[9955,9955],\"valid\",[],\"NV8\"],[[9956,9959],\"valid\",[],\"NV8\"],[[9960,9983],\"valid\",[],\"NV8\"],[[9984,9984],\"valid\",[],\"NV8\"],[[9985,9988],\"valid\",[],\"NV8\"],[[9989,9989],\"valid\",[],\"NV8\"],[[9990,9993],\"valid\",[],\"NV8\"],[[9994,9995],\"valid\",[],\"NV8\"],[[9996,10023],\"valid\",[],\"NV8\"],[[10024,10024],\"valid\",[],\"NV8\"],[[10025,10059],\"valid\",[],\"NV8\"],[[10060,10060],\"valid\",[],\"NV8\"],[[10061,10061],\"valid\",[],\"NV8\"],[[10062,10062],\"valid\",[],\"NV8\"],[[10063,10066],\"valid\",[],\"NV8\"],[[10067,10069],\"valid\",[],\"NV8\"],[[10070,10070],\"valid\",[],\"NV8\"],[[10071,10071],\"valid\",[],\"NV8\"],[[10072,10078],\"valid\",[],\"NV8\"],[[10079,10080],\"valid\",[],\"NV8\"],[[10081,10087],\"valid\",[],\"NV8\"],[[10088,10101],\"valid\",[],\"NV8\"],[[10102,10132],\"valid\",[],\"NV8\"],[[10133,10135],\"valid\",[],\"NV8\"],[[10136,10159],\"valid\",[],\"NV8\"],[[10160,10160],\"valid\",[],\"NV8\"],[[10161,10174],\"valid\",[],\"NV8\"],[[10175,10175],\"valid\",[],\"NV8\"],[[10176,10182],\"valid\",[],\"NV8\"],[[10183,10186],\"valid\",[],\"NV8\"],[[10187,10187],\"valid\",[],\"NV8\"],[[10188,10188],\"valid\",[],\"NV8\"],[[10189,10189],\"valid\",[],\"NV8\"],[[10190,10191],\"valid\",[],\"NV8\"],[[10192,10219],\"valid\",[],\"NV8\"],[[10220,10223],\"valid\",[],\"NV8\"],[[10224,10239],\"valid\",[],\"NV8\"],[[10240,10495],\"valid\",[],\"NV8\"],[[10496,10763],\"valid\",[],\"NV8\"],[[10764,10764],\"mapped\",[8747,8747,8747,8747]],[[10765,10867],\"valid\",[],\"NV8\"],[[10868,10868],\"disallowed_STD3_mapped\",[58,58,61]],[[10869,10869],\"disallowed_STD3_mapped\",[61,61]],[[10870,10870],\"disallowed_STD3_mapped\",[61,61,61]],[[10871,10971],\"valid\",[],\"NV8\"],[[10972,10972],\"mapped\",[10973,824]],[[10973,11007],\"valid\",[],\"NV8\"],[[11008,11021],\"valid\",[],\"NV8\"],[[11022,11027],\"valid\",[],\"NV8\"],[[11028,11034],\"valid\",[],\"NV8\"],[[11035,11039],\"valid\",[],\"NV8\"],[[11040,11043],\"valid\",[],\"NV8\"],[[11044,11084],\"valid\",[],\"NV8\"],[[11085,11087],\"valid\",[],\"NV8\"],[[11088,11092],\"valid\",[],\"NV8\"],[[11093,11097],\"valid\",[],\"NV8\"],[[11098,11123],\"valid\",[],\"NV8\"],[[11124,11125],\"disallowed\"],[[11126,11157],\"valid\",[],\"NV8\"],[[11158,11159],\"disallowed\"],[[11160,11193],\"valid\",[],\"NV8\"],[[11194,11196],\"disallowed\"],[[11197,11208],\"valid\",[],\"NV8\"],[[11209,11209],\"disallowed\"],[[11210,11217],\"valid\",[],\"NV8\"],[[11218,11243],\"disallowed\"],[[11244,11247],\"valid\",[],\"NV8\"],[[11248,11263],\"disallowed\"],[[11264,11264],\"mapped\",[11312]],[[11265,11265],\"mapped\",[11313]],[[11266,11266],\"mapped\",[11314]],[[11267,11267],\"mapped\",[11315]],[[11268,11268],\"mapped\",[11316]],[[11269,11269],\"mapped\",[11317]],[[11270,11270],\"mapped\",[11318]],[[11271,11271],\"mapped\",[11319]],[[11272,11272],\"mapped\",[11320]],[[11273,11273],\"mapped\",[11321]],[[11274,11274],\"mapped\",[11322]],[[11275,11275],\"mapped\",[11323]],[[11276,11276],\"mapped\",[11324]],[[11277,11277],\"mapped\",[11325]],[[11278,11278],\"mapped\",[11326]],[[11279,11279],\"mapped\",[11327]],[[11280,11280],\"mapped\",[11328]],[[11281,11281],\"mapped\",[11329]],[[11282,11282],\"mapped\",[11330]],[[11283,11283],\"mapped\",[11331]],[[11284,11284],\"mapped\",[11332]],[[11285,11285],\"mapped\",[11333]],[[11286,11286],\"mapped\",[11334]],[[11287,11287],\"mapped\",[11335]],[[11288,11288],\"mapped\",[11336]],[[11289,11289],\"mapped\",[11337]],[[11290,11290],\"mapped\",[11338]],[[11291,11291],\"mapped\",[11339]],[[11292,11292],\"mapped\",[11340]],[[11293,11293],\"mapped\",[11341]],[[11294,11294],\"mapped\",[11342]],[[11295,11295],\"mapped\",[11343]],[[11296,11296],\"mapped\",[11344]],[[11297,11297],\"mapped\",[11345]],[[11298,11298],\"mapped\",[11346]],[[11299,11299],\"mapped\",[11347]],[[11300,11300],\"mapped\",[11348]],[[11301,11301],\"mapped\",[11349]],[[11302,11302],\"mapped\",[11350]],[[11303,11303],\"mapped\",[11351]],[[11304,11304],\"mapped\",[11352]],[[11305,11305],\"mapped\",[11353]],[[11306,11306],\"mapped\",[11354]],[[11307,11307],\"mapped\",[11355]],[[11308,11308],\"mapped\",[11356]],[[11309,11309],\"mapped\",[11357]],[[11310,11310],\"mapped\",[11358]],[[11311,11311],\"disallowed\"],[[11312,11358],\"valid\"],[[11359,11359],\"disallowed\"],[[11360,11360],\"mapped\",[11361]],[[11361,11361],\"valid\"],[[11362,11362],\"mapped\",[619]],[[11363,11363],\"mapped\",[7549]],[[11364,11364],\"mapped\",[637]],[[11365,11366],\"valid\"],[[11367,11367],\"mapped\",[11368]],[[11368,11368],\"valid\"],[[11369,11369],\"mapped\",[11370]],[[11370,11370],\"valid\"],[[11371,11371],\"mapped\",[11372]],[[11372,11372],\"valid\"],[[11373,11373],\"mapped\",[593]],[[11374,11374],\"mapped\",[625]],[[11375,11375],\"mapped\",[592]],[[11376,11376],\"mapped\",[594]],[[11377,11377],\"valid\"],[[11378,11378],\"mapped\",[11379]],[[11379,11379],\"valid\"],[[11380,11380],\"valid\"],[[11381,11381],\"mapped\",[11382]],[[11382,11383],\"valid\"],[[11384,11387],\"valid\"],[[11388,11388],\"mapped\",[106]],[[11389,11389],\"mapped\",[118]],[[11390,11390],\"mapped\",[575]],[[11391,11391],\"mapped\",[576]],[[11392,11392],\"mapped\",[11393]],[[11393,11393],\"valid\"],[[11394,11394],\"mapped\",[11395]],[[11395,11395],\"valid\"],[[11396,11396],\"mapped\",[11397]],[[11397,11397],\"valid\"],[[11398,11398],\"mapped\",[11399]],[[11399,11399],\"valid\"],[[11400,11400],\"mapped\",[11401]],[[11401,11401],\"valid\"],[[11402,11402],\"mapped\",[11403]],[[11403,11403],\"valid\"],[[11404,11404],\"mapped\",[11405]],[[11405,11405],\"valid\"],[[11406,11406],\"mapped\",[11407]],[[11407,11407],\"valid\"],[[11408,11408],\"mapped\",[11409]],[[11409,11409],\"valid\"],[[11410,11410],\"mapped\",[11411]],[[11411,11411],\"valid\"],[[11412,11412],\"mapped\",[11413]],[[11413,11413],\"valid\"],[[11414,11414],\"mapped\",[11415]],[[11415,11415],\"valid\"],[[11416,11416],\"mapped\",[11417]],[[11417,11417],\"valid\"],[[11418,11418],\"mapped\",[11419]],[[11419,11419],\"valid\"],[[11420,11420],\"mapped\",[11421]],[[11421,11421],\"valid\"],[[11422,11422],\"mapped\",[11423]],[[11423,11423],\"valid\"],[[11424,11424],\"mapped\",[11425]],[[11425,11425],\"valid\"],[[11426,11426],\"mapped\",[11427]],[[11427,11427],\"valid\"],[[11428,11428],\"mapped\",[11429]],[[11429,11429],\"valid\"],[[11430,11430],\"mapped\",[11431]],[[11431,11431],\"valid\"],[[11432,11432],\"mapped\",[11433]],[[11433,11433],\"valid\"],[[11434,11434],\"mapped\",[11435]],[[11435,11435],\"valid\"],[[11436,11436],\"mapped\",[11437]],[[11437,11437],\"valid\"],[[11438,11438],\"mapped\",[11439]],[[11439,11439],\"valid\"],[[11440,11440],\"mapped\",[11441]],[[11441,11441],\"valid\"],[[11442,11442],\"mapped\",[11443]],[[11443,11443],\"valid\"],[[11444,11444],\"mapped\",[11445]],[[11445,11445],\"valid\"],[[11446,11446],\"mapped\",[11447]],[[11447,11447],\"valid\"],[[11448,11448],\"mapped\",[11449]],[[11449,11449],\"valid\"],[[11450,11450],\"mapped\",[11451]],[[11451,11451],\"valid\"],[[11452,11452],\"mapped\",[11453]],[[11453,11453],\"valid\"],[[11454,11454],\"mapped\",[11455]],[[11455,11455],\"valid\"],[[11456,11456],\"mapped\",[11457]],[[11457,11457],\"valid\"],[[11458,11458],\"mapped\",[11459]],[[11459,11459],\"valid\"],[[11460,11460],\"mapped\",[11461]],[[11461,11461],\"valid\"],[[11462,11462],\"mapped\",[11463]],[[11463,11463],\"valid\"],[[11464,11464],\"mapped\",[11465]],[[11465,11465],\"valid\"],[[11466,11466],\"mapped\",[11467]],[[11467,11467],\"valid\"],[[11468,11468],\"mapped\",[11469]],[[11469,11469],\"valid\"],[[11470,11470],\"mapped\",[11471]],[[11471,11471],\"valid\"],[[11472,11472],\"mapped\",[11473]],[[11473,11473],\"valid\"],[[11474,11474],\"mapped\",[11475]],[[11475,11475],\"valid\"],[[11476,11476],\"mapped\",[11477]],[[11477,11477],\"valid\"],[[11478,11478],\"mapped\",[11479]],[[11479,11479],\"valid\"],[[11480,11480],\"mapped\",[11481]],[[11481,11481],\"valid\"],[[11482,11482],\"mapped\",[11483]],[[11483,11483],\"valid\"],[[11484,11484],\"mapped\",[11485]],[[11485,11485],\"valid\"],[[11486,11486],\"mapped\",[11487]],[[11487,11487],\"valid\"],[[11488,11488],\"mapped\",[11489]],[[11489,11489],\"valid\"],[[11490,11490],\"mapped\",[11491]],[[11491,11492],\"valid\"],[[11493,11498],\"valid\",[],\"NV8\"],[[11499,11499],\"mapped\",[11500]],[[11500,11500],\"valid\"],[[11501,11501],\"mapped\",[11502]],[[11502,11505],\"valid\"],[[11506,11506],\"mapped\",[11507]],[[11507,11507],\"valid\"],[[11508,11512],\"disallowed\"],[[11513,11519],\"valid\",[],\"NV8\"],[[11520,11557],\"valid\"],[[11558,11558],\"disallowed\"],[[11559,11559],\"valid\"],[[11560,11564],\"disallowed\"],[[11565,11565],\"valid\"],[[11566,11567],\"disallowed\"],[[11568,11621],\"valid\"],[[11622,11623],\"valid\"],[[11624,11630],\"disallowed\"],[[11631,11631],\"mapped\",[11617]],[[11632,11632],\"valid\",[],\"NV8\"],[[11633,11646],\"disallowed\"],[[11647,11647],\"valid\"],[[11648,11670],\"valid\"],[[11671,11679],\"disallowed\"],[[11680,11686],\"valid\"],[[11687,11687],\"disallowed\"],[[11688,11694],\"valid\"],[[11695,11695],\"disallowed\"],[[11696,11702],\"valid\"],[[11703,11703],\"disallowed\"],[[11704,11710],\"valid\"],[[11711,11711],\"disallowed\"],[[11712,11718],\"valid\"],[[11719,11719],\"disallowed\"],[[11720,11726],\"valid\"],[[11727,11727],\"disallowed\"],[[11728,11734],\"valid\"],[[11735,11735],\"disallowed\"],[[11736,11742],\"valid\"],[[11743,11743],\"disallowed\"],[[11744,11775],\"valid\"],[[11776,11799],\"valid\",[],\"NV8\"],[[11800,11803],\"valid\",[],\"NV8\"],[[11804,11805],\"valid\",[],\"NV8\"],[[11806,11822],\"valid\",[],\"NV8\"],[[11823,11823],\"valid\"],[[11824,11824],\"valid\",[],\"NV8\"],[[11825,11825],\"valid\",[],\"NV8\"],[[11826,11835],\"valid\",[],\"NV8\"],[[11836,11842],\"valid\",[],\"NV8\"],[[11843,11903],\"disallowed\"],[[11904,11929],\"valid\",[],\"NV8\"],[[11930,11930],\"disallowed\"],[[11931,11934],\"valid\",[],\"NV8\"],[[11935,11935],\"mapped\",[27597]],[[11936,12018],\"valid\",[],\"NV8\"],[[12019,12019],\"mapped\",[40863]],[[12020,12031],\"disallowed\"],[[12032,12032],\"mapped\",[19968]],[[12033,12033],\"mapped\",[20008]],[[12034,12034],\"mapped\",[20022]],[[12035,12035],\"mapped\",[20031]],[[12036,12036],\"mapped\",[20057]],[[12037,12037],\"mapped\",[20101]],[[12038,12038],\"mapped\",[20108]],[[12039,12039],\"mapped\",[20128]],[[12040,12040],\"mapped\",[20154]],[[12041,12041],\"mapped\",[20799]],[[12042,12042],\"mapped\",[20837]],[[12043,12043],\"mapped\",[20843]],[[12044,12044],\"mapped\",[20866]],[[12045,12045],\"mapped\",[20886]],[[12046,12046],\"mapped\",[20907]],[[12047,12047],\"mapped\",[20960]],[[12048,12048],\"mapped\",[20981]],[[12049,12049],\"mapped\",[20992]],[[12050,12050],\"mapped\",[21147]],[[12051,12051],\"mapped\",[21241]],[[12052,12052],\"mapped\",[21269]],[[12053,12053],\"mapped\",[21274]],[[12054,12054],\"mapped\",[21304]],[[12055,12055],\"mapped\",[21313]],[[12056,12056],\"mapped\",[21340]],[[12057,12057],\"mapped\",[21353]],[[12058,12058],\"mapped\",[21378]],[[12059,12059],\"mapped\",[21430]],[[12060,12060],\"mapped\",[21448]],[[12061,12061],\"mapped\",[21475]],[[12062,12062],\"mapped\",[22231]],[[12063,12063],\"mapped\",[22303]],[[12064,12064],\"mapped\",[22763]],[[12065,12065],\"mapped\",[22786]],[[12066,12066],\"mapped\",[22794]],[[12067,12067],\"mapped\",[22805]],[[12068,12068],\"mapped\",[22823]],[[12069,12069],\"mapped\",[22899]],[[12070,12070],\"mapped\",[23376]],[[12071,12071],\"mapped\",[23424]],[[12072,12072],\"mapped\",[23544]],[[12073,12073],\"mapped\",[23567]],[[12074,12074],\"mapped\",[23586]],[[12075,12075],\"mapped\",[23608]],[[12076,12076],\"mapped\",[23662]],[[12077,12077],\"mapped\",[23665]],[[12078,12078],\"mapped\",[24027]],[[12079,12079],\"mapped\",[24037]],[[12080,12080],\"mapped\",[24049]],[[12081,12081],\"mapped\",[24062]],[[12082,12082],\"mapped\",[24178]],[[12083,12083],\"mapped\",[24186]],[[12084,12084],\"mapped\",[24191]],[[12085,12085],\"mapped\",[24308]],[[12086,12086],\"mapped\",[24318]],[[12087,12087],\"mapped\",[24331]],[[12088,12088],\"mapped\",[24339]],[[12089,12089],\"mapped\",[24400]],[[12090,12090],\"mapped\",[24417]],[[12091,12091],\"mapped\",[24435]],[[12092,12092],\"mapped\",[24515]],[[12093,12093],\"mapped\",[25096]],[[12094,12094],\"mapped\",[25142]],[[12095,12095],\"mapped\",[25163]],[[12096,12096],\"mapped\",[25903]],[[12097,12097],\"mapped\",[25908]],[[12098,12098],\"mapped\",[25991]],[[12099,12099],\"mapped\",[26007]],[[12100,12100],\"mapped\",[26020]],[[12101,12101],\"mapped\",[26041]],[[12102,12102],\"mapped\",[26080]],[[12103,12103],\"mapped\",[26085]],[[12104,12104],\"mapped\",[26352]],[[12105,12105],\"mapped\",[26376]],[[12106,12106],\"mapped\",[26408]],[[12107,12107],\"mapped\",[27424]],[[12108,12108],\"mapped\",[27490]],[[12109,12109],\"mapped\",[27513]],[[12110,12110],\"mapped\",[27571]],[[12111,12111],\"mapped\",[27595]],[[12112,12112],\"mapped\",[27604]],[[12113,12113],\"mapped\",[27611]],[[12114,12114],\"mapped\",[27663]],[[12115,12115],\"mapped\",[27668]],[[12116,12116],\"mapped\",[27700]],[[12117,12117],\"mapped\",[28779]],[[12118,12118],\"mapped\",[29226]],[[12119,12119],\"mapped\",[29238]],[[12120,12120],\"mapped\",[29243]],[[12121,12121],\"mapped\",[29247]],[[12122,12122],\"mapped\",[29255]],[[12123,12123],\"mapped\",[29273]],[[12124,12124],\"mapped\",[29275]],[[12125,12125],\"mapped\",[29356]],[[12126,12126],\"mapped\",[29572]],[[12127,12127],\"mapped\",[29577]],[[12128,12128],\"mapped\",[29916]],[[12129,12129],\"mapped\",[29926]],[[12130,12130],\"mapped\",[29976]],[[12131,12131],\"mapped\",[29983]],[[12132,12132],\"mapped\",[29992]],[[12133,12133],\"mapped\",[30000]],[[12134,12134],\"mapped\",[30091]],[[12135,12135],\"mapped\",[30098]],[[12136,12136],\"mapped\",[30326]],[[12137,12137],\"mapped\",[30333]],[[12138,12138],\"mapped\",[30382]],[[12139,12139],\"mapped\",[30399]],[[12140,12140],\"mapped\",[30446]],[[12141,12141],\"mapped\",[30683]],[[12142,12142],\"mapped\",[30690]],[[12143,12143],\"mapped\",[30707]],[[12144,12144],\"mapped\",[31034]],[[12145,12145],\"mapped\",[31160]],[[12146,12146],\"mapped\",[31166]],[[12147,12147],\"mapped\",[31348]],[[12148,12148],\"mapped\",[31435]],[[12149,12149],\"mapped\",[31481]],[[12150,12150],\"mapped\",[31859]],[[12151,12151],\"mapped\",[31992]],[[12152,12152],\"mapped\",[32566]],[[12153,12153],\"mapped\",[32593]],[[12154,12154],\"mapped\",[32650]],[[12155,12155],\"mapped\",[32701]],[[12156,12156],\"mapped\",[32769]],[[12157,12157],\"mapped\",[32780]],[[12158,12158],\"mapped\",[32786]],[[12159,12159],\"mapped\",[32819]],[[12160,12160],\"mapped\",[32895]],[[12161,12161],\"mapped\",[32905]],[[12162,12162],\"mapped\",[33251]],[[12163,12163],\"mapped\",[33258]],[[12164,12164],\"mapped\",[33267]],[[12165,12165],\"mapped\",[33276]],[[12166,12166],\"mapped\",[33292]],[[12167,12167],\"mapped\",[33307]],[[12168,12168],\"mapped\",[33311]],[[12169,12169],\"mapped\",[33390]],[[12170,12170],\"mapped\",[33394]],[[12171,12171],\"mapped\",[33400]],[[12172,12172],\"mapped\",[34381]],[[12173,12173],\"mapped\",[34411]],[[12174,12174],\"mapped\",[34880]],[[12175,12175],\"mapped\",[34892]],[[12176,12176],\"mapped\",[34915]],[[12177,12177],\"mapped\",[35198]],[[12178,12178],\"mapped\",[35211]],[[12179,12179],\"mapped\",[35282]],[[12180,12180],\"mapped\",[35328]],[[12181,12181],\"mapped\",[35895]],[[12182,12182],\"mapped\",[35910]],[[12183,12183],\"mapped\",[35925]],[[12184,12184],\"mapped\",[35960]],[[12185,12185],\"mapped\",[35997]],[[12186,12186],\"mapped\",[36196]],[[12187,12187],\"mapped\",[36208]],[[12188,12188],\"mapped\",[36275]],[[12189,12189],\"mapped\",[36523]],[[12190,12190],\"mapped\",[36554]],[[12191,12191],\"mapped\",[36763]],[[12192,12192],\"mapped\",[36784]],[[12193,12193],\"mapped\",[36789]],[[12194,12194],\"mapped\",[37009]],[[12195,12195],\"mapped\",[37193]],[[12196,12196],\"mapped\",[37318]],[[12197,12197],\"mapped\",[37324]],[[12198,12198],\"mapped\",[37329]],[[12199,12199],\"mapped\",[38263]],[[12200,12200],\"mapped\",[38272]],[[12201,12201],\"mapped\",[38428]],[[12202,12202],\"mapped\",[38582]],[[12203,12203],\"mapped\",[38585]],[[12204,12204],\"mapped\",[38632]],[[12205,12205],\"mapped\",[38737]],[[12206,12206],\"mapped\",[38750]],[[12207,12207],\"mapped\",[38754]],[[12208,12208],\"mapped\",[38761]],[[12209,12209],\"mapped\",[38859]],[[12210,12210],\"mapped\",[38893]],[[12211,12211],\"mapped\",[38899]],[[12212,12212],\"mapped\",[38913]],[[12213,12213],\"mapped\",[39080]],[[12214,12214],\"mapped\",[39131]],[[12215,12215],\"mapped\",[39135]],[[12216,12216],\"mapped\",[39318]],[[12217,12217],\"mapped\",[39321]],[[12218,12218],\"mapped\",[39340]],[[12219,12219],\"mapped\",[39592]],[[12220,12220],\"mapped\",[39640]],[[12221,12221],\"mapped\",[39647]],[[12222,12222],\"mapped\",[39717]],[[12223,12223],\"mapped\",[39727]],[[12224,12224],\"mapped\",[39730]],[[12225,12225],\"mapped\",[39740]],[[12226,12226],\"mapped\",[39770]],[[12227,12227],\"mapped\",[40165]],[[12228,12228],\"mapped\",[40565]],[[12229,12229],\"mapped\",[40575]],[[12230,12230],\"mapped\",[40613]],[[12231,12231],\"mapped\",[40635]],[[12232,12232],\"mapped\",[40643]],[[12233,12233],\"mapped\",[40653]],[[12234,12234],\"mapped\",[40657]],[[12235,12235],\"mapped\",[40697]],[[12236,12236],\"mapped\",[40701]],[[12237,12237],\"mapped\",[40718]],[[12238,12238],\"mapped\",[40723]],[[12239,12239],\"mapped\",[40736]],[[12240,12240],\"mapped\",[40763]],[[12241,12241],\"mapped\",[40778]],[[12242,12242],\"mapped\",[40786]],[[12243,12243],\"mapped\",[40845]],[[12244,12244],\"mapped\",[40860]],[[12245,12245],\"mapped\",[40864]],[[12246,12271],\"disallowed\"],[[12272,12283],\"disallowed\"],[[12284,12287],\"disallowed\"],[[12288,12288],\"disallowed_STD3_mapped\",[32]],[[12289,12289],\"valid\",[],\"NV8\"],[[12290,12290],\"mapped\",[46]],[[12291,12292],\"valid\",[],\"NV8\"],[[12293,12295],\"valid\"],[[12296,12329],\"valid\",[],\"NV8\"],[[12330,12333],\"valid\"],[[12334,12341],\"valid\",[],\"NV8\"],[[12342,12342],\"mapped\",[12306]],[[12343,12343],\"valid\",[],\"NV8\"],[[12344,12344],\"mapped\",[21313]],[[12345,12345],\"mapped\",[21316]],[[12346,12346],\"mapped\",[21317]],[[12347,12347],\"valid\",[],\"NV8\"],[[12348,12348],\"valid\"],[[12349,12349],\"valid\",[],\"NV8\"],[[12350,12350],\"valid\",[],\"NV8\"],[[12351,12351],\"valid\",[],\"NV8\"],[[12352,12352],\"disallowed\"],[[12353,12436],\"valid\"],[[12437,12438],\"valid\"],[[12439,12440],\"disallowed\"],[[12441,12442],\"valid\"],[[12443,12443],\"disallowed_STD3_mapped\",[32,12441]],[[12444,12444],\"disallowed_STD3_mapped\",[32,12442]],[[12445,12446],\"valid\"],[[12447,12447],\"mapped\",[12424,12426]],[[12448,12448],\"valid\",[],\"NV8\"],[[12449,12542],\"valid\"],[[12543,12543],\"mapped\",[12467,12488]],[[12544,12548],\"disallowed\"],[[12549,12588],\"valid\"],[[12589,12589],\"valid\"],[[12590,12592],\"disallowed\"],[[12593,12593],\"mapped\",[4352]],[[12594,12594],\"mapped\",[4353]],[[12595,12595],\"mapped\",[4522]],[[12596,12596],\"mapped\",[4354]],[[12597,12597],\"mapped\",[4524]],[[12598,12598],\"mapped\",[4525]],[[12599,12599],\"mapped\",[4355]],[[12600,12600],\"mapped\",[4356]],[[12601,12601],\"mapped\",[4357]],[[12602,12602],\"mapped\",[4528]],[[12603,12603],\"mapped\",[4529]],[[12604,12604],\"mapped\",[4530]],[[12605,12605],\"mapped\",[4531]],[[12606,12606],\"mapped\",[4532]],[[12607,12607],\"mapped\",[4533]],[[12608,12608],\"mapped\",[4378]],[[12609,12609],\"mapped\",[4358]],[[12610,12610],\"mapped\",[4359]],[[12611,12611],\"mapped\",[4360]],[[12612,12612],\"mapped\",[4385]],[[12613,12613],\"mapped\",[4361]],[[12614,12614],\"mapped\",[4362]],[[12615,12615],\"mapped\",[4363]],[[12616,12616],\"mapped\",[4364]],[[12617,12617],\"mapped\",[4365]],[[12618,12618],\"mapped\",[4366]],[[12619,12619],\"mapped\",[4367]],[[12620,12620],\"mapped\",[4368]],[[12621,12621],\"mapped\",[4369]],[[12622,12622],\"mapped\",[4370]],[[12623,12623],\"mapped\",[4449]],[[12624,12624],\"mapped\",[4450]],[[12625,12625],\"mapped\",[4451]],[[12626,12626],\"mapped\",[4452]],[[12627,12627],\"mapped\",[4453]],[[12628,12628],\"mapped\",[4454]],[[12629,12629],\"mapped\",[4455]],[[12630,12630],\"mapped\",[4456]],[[12631,12631],\"mapped\",[4457]],[[12632,12632],\"mapped\",[4458]],[[12633,12633],\"mapped\",[4459]],[[12634,12634],\"mapped\",[4460]],[[12635,12635],\"mapped\",[4461]],[[12636,12636],\"mapped\",[4462]],[[12637,12637],\"mapped\",[4463]],[[12638,12638],\"mapped\",[4464]],[[12639,12639],\"mapped\",[4465]],[[12640,12640],\"mapped\",[4466]],[[12641,12641],\"mapped\",[4467]],[[12642,12642],\"mapped\",[4468]],[[12643,12643],\"mapped\",[4469]],[[12644,12644],\"disallowed\"],[[12645,12645],\"mapped\",[4372]],[[12646,12646],\"mapped\",[4373]],[[12647,12647],\"mapped\",[4551]],[[12648,12648],\"mapped\",[4552]],[[12649,12649],\"mapped\",[4556]],[[12650,12650],\"mapped\",[4558]],[[12651,12651],\"mapped\",[4563]],[[12652,12652],\"mapped\",[4567]],[[12653,12653],\"mapped\",[4569]],[[12654,12654],\"mapped\",[4380]],[[12655,12655],\"mapped\",[4573]],[[12656,12656],\"mapped\",[4575]],[[12657,12657],\"mapped\",[4381]],[[12658,12658],\"mapped\",[4382]],[[12659,12659],\"mapped\",[4384]],[[12660,12660],\"mapped\",[4386]],[[12661,12661],\"mapped\",[4387]],[[12662,12662],\"mapped\",[4391]],[[12663,12663],\"mapped\",[4393]],[[12664,12664],\"mapped\",[4395]],[[12665,12665],\"mapped\",[4396]],[[12666,12666],\"mapped\",[4397]],[[12667,12667],\"mapped\",[4398]],[[12668,12668],\"mapped\",[4399]],[[12669,12669],\"mapped\",[4402]],[[12670,12670],\"mapped\",[4406]],[[12671,12671],\"mapped\",[4416]],[[12672,12672],\"mapped\",[4423]],[[12673,12673],\"mapped\",[4428]],[[12674,12674],\"mapped\",[4593]],[[12675,12675],\"mapped\",[4594]],[[12676,12676],\"mapped\",[4439]],[[12677,12677],\"mapped\",[4440]],[[12678,12678],\"mapped\",[4441]],[[12679,12679],\"mapped\",[4484]],[[12680,12680],\"mapped\",[4485]],[[12681,12681],\"mapped\",[4488]],[[12682,12682],\"mapped\",[4497]],[[12683,12683],\"mapped\",[4498]],[[12684,12684],\"mapped\",[4500]],[[12685,12685],\"mapped\",[4510]],[[12686,12686],\"mapped\",[4513]],[[12687,12687],\"disallowed\"],[[12688,12689],\"valid\",[],\"NV8\"],[[12690,12690],\"mapped\",[19968]],[[12691,12691],\"mapped\",[20108]],[[12692,12692],\"mapped\",[19977]],[[12693,12693],\"mapped\",[22235]],[[12694,12694],\"mapped\",[19978]],[[12695,12695],\"mapped\",[20013]],[[12696,12696],\"mapped\",[19979]],[[12697,12697],\"mapped\",[30002]],[[12698,12698],\"mapped\",[20057]],[[12699,12699],\"mapped\",[19993]],[[12700,12700],\"mapped\",[19969]],[[12701,12701],\"mapped\",[22825]],[[12702,12702],\"mapped\",[22320]],[[12703,12703],\"mapped\",[20154]],[[12704,12727],\"valid\"],[[12728,12730],\"valid\"],[[12731,12735],\"disallowed\"],[[12736,12751],\"valid\",[],\"NV8\"],[[12752,12771],\"valid\",[],\"NV8\"],[[12772,12783],\"disallowed\"],[[12784,12799],\"valid\"],[[12800,12800],\"disallowed_STD3_mapped\",[40,4352,41]],[[12801,12801],\"disallowed_STD3_mapped\",[40,4354,41]],[[12802,12802],\"disallowed_STD3_mapped\",[40,4355,41]],[[12803,12803],\"disallowed_STD3_mapped\",[40,4357,41]],[[12804,12804],\"disallowed_STD3_mapped\",[40,4358,41]],[[12805,12805],\"disallowed_STD3_mapped\",[40,4359,41]],[[12806,12806],\"disallowed_STD3_mapped\",[40,4361,41]],[[12807,12807],\"disallowed_STD3_mapped\",[40,4363,41]],[[12808,12808],\"disallowed_STD3_mapped\",[40,4364,41]],[[12809,12809],\"disallowed_STD3_mapped\",[40,4366,41]],[[12810,12810],\"disallowed_STD3_mapped\",[40,4367,41]],[[12811,12811],\"disallowed_STD3_mapped\",[40,4368,41]],[[12812,12812],\"disallowed_STD3_mapped\",[40,4369,41]],[[12813,12813],\"disallowed_STD3_mapped\",[40,4370,41]],[[12814,12814],\"disallowed_STD3_mapped\",[40,44032,41]],[[12815,12815],\"disallowed_STD3_mapped\",[40,45208,41]],[[12816,12816],\"disallowed_STD3_mapped\",[40,45796,41]],[[12817,12817],\"disallowed_STD3_mapped\",[40,46972,41]],[[12818,12818],\"disallowed_STD3_mapped\",[40,47560,41]],[[12819,12819],\"disallowed_STD3_mapped\",[40,48148,41]],[[12820,12820],\"disallowed_STD3_mapped\",[40,49324,41]],[[12821,12821],\"disallowed_STD3_mapped\",[40,50500,41]],[[12822,12822],\"disallowed_STD3_mapped\",[40,51088,41]],[[12823,12823],\"disallowed_STD3_mapped\",[40,52264,41]],[[12824,12824],\"disallowed_STD3_mapped\",[40,52852,41]],[[12825,12825],\"disallowed_STD3_mapped\",[40,53440,41]],[[12826,12826],\"disallowed_STD3_mapped\",[40,54028,41]],[[12827,12827],\"disallowed_STD3_mapped\",[40,54616,41]],[[12828,12828],\"disallowed_STD3_mapped\",[40,51452,41]],[[12829,12829],\"disallowed_STD3_mapped\",[40,50724,51204,41]],[[12830,12830],\"disallowed_STD3_mapped\",[40,50724,54980,41]],[[12831,12831],\"disallowed\"],[[12832,12832],\"disallowed_STD3_mapped\",[40,19968,41]],[[12833,12833],\"disallowed_STD3_mapped\",[40,20108,41]],[[12834,12834],\"disallowed_STD3_mapped\",[40,19977,41]],[[12835,12835],\"disallowed_STD3_mapped\",[40,22235,41]],[[12836,12836],\"disallowed_STD3_mapped\",[40,20116,41]],[[12837,12837],\"disallowed_STD3_mapped\",[40,20845,41]],[[12838,12838],\"disallowed_STD3_mapped\",[40,19971,41]],[[12839,12839],\"disallowed_STD3_mapped\",[40,20843,41]],[[12840,12840],\"disallowed_STD3_mapped\",[40,20061,41]],[[12841,12841],\"disallowed_STD3_mapped\",[40,21313,41]],[[12842,12842],\"disallowed_STD3_mapped\",[40,26376,41]],[[12843,12843],\"disallowed_STD3_mapped\",[40,28779,41]],[[12844,12844],\"disallowed_STD3_mapped\",[40,27700,41]],[[12845,12845],\"disallowed_STD3_mapped\",[40,26408,41]],[[12846,12846],\"disallowed_STD3_mapped\",[40,37329,41]],[[12847,12847],\"disallowed_STD3_mapped\",[40,22303,41]],[[12848,12848],\"disallowed_STD3_mapped\",[40,26085,41]],[[12849,12849],\"disallowed_STD3_mapped\",[40,26666,41]],[[12850,12850],\"disallowed_STD3_mapped\",[40,26377,41]],[[12851,12851],\"disallowed_STD3_mapped\",[40,31038,41]],[[12852,12852],\"disallowed_STD3_mapped\",[40,21517,41]],[[12853,12853],\"disallowed_STD3_mapped\",[40,29305,41]],[[12854,12854],\"disallowed_STD3_mapped\",[40,36001,41]],[[12855,12855],\"disallowed_STD3_mapped\",[40,31069,41]],[[12856,12856],\"disallowed_STD3_mapped\",[40,21172,41]],[[12857,12857],\"disallowed_STD3_mapped\",[40,20195,41]],[[12858,12858],\"disallowed_STD3_mapped\",[40,21628,41]],[[12859,12859],\"disallowed_STD3_mapped\",[40,23398,41]],[[12860,12860],\"disallowed_STD3_mapped\",[40,30435,41]],[[12861,12861],\"disallowed_STD3_mapped\",[40,20225,41]],[[12862,12862],\"disallowed_STD3_mapped\",[40,36039,41]],[[12863,12863],\"disallowed_STD3_mapped\",[40,21332,41]],[[12864,12864],\"disallowed_STD3_mapped\",[40,31085,41]],[[12865,12865],\"disallowed_STD3_mapped\",[40,20241,41]],[[12866,12866],\"disallowed_STD3_mapped\",[40,33258,41]],[[12867,12867],\"disallowed_STD3_mapped\",[40,33267,41]],[[12868,12868],\"mapped\",[21839]],[[12869,12869],\"mapped\",[24188]],[[12870,12870],\"mapped\",[25991]],[[12871,12871],\"mapped\",[31631]],[[12872,12879],\"valid\",[],\"NV8\"],[[12880,12880],\"mapped\",[112,116,101]],[[12881,12881],\"mapped\",[50,49]],[[12882,12882],\"mapped\",[50,50]],[[12883,12883],\"mapped\",[50,51]],[[12884,12884],\"mapped\",[50,52]],[[12885,12885],\"mapped\",[50,53]],[[12886,12886],\"mapped\",[50,54]],[[12887,12887],\"mapped\",[50,55]],[[12888,12888],\"mapped\",[50,56]],[[12889,12889],\"mapped\",[50,57]],[[12890,12890],\"mapped\",[51,48]],[[12891,12891],\"mapped\",[51,49]],[[12892,12892],\"mapped\",[51,50]],[[12893,12893],\"mapped\",[51,51]],[[12894,12894],\"mapped\",[51,52]],[[12895,12895],\"mapped\",[51,53]],[[12896,12896],\"mapped\",[4352]],[[12897,12897],\"mapped\",[4354]],[[12898,12898],\"mapped\",[4355]],[[12899,12899],\"mapped\",[4357]],[[12900,12900],\"mapped\",[4358]],[[12901,12901],\"mapped\",[4359]],[[12902,12902],\"mapped\",[4361]],[[12903,12903],\"mapped\",[4363]],[[12904,12904],\"mapped\",[4364]],[[12905,12905],\"mapped\",[4366]],[[12906,12906],\"mapped\",[4367]],[[12907,12907],\"mapped\",[4368]],[[12908,12908],\"mapped\",[4369]],[[12909,12909],\"mapped\",[4370]],[[12910,12910],\"mapped\",[44032]],[[12911,12911],\"mapped\",[45208]],[[12912,12912],\"mapped\",[45796]],[[12913,12913],\"mapped\",[46972]],[[12914,12914],\"mapped\",[47560]],[[12915,12915],\"mapped\",[48148]],[[12916,12916],\"mapped\",[49324]],[[12917,12917],\"mapped\",[50500]],[[12918,12918],\"mapped\",[51088]],[[12919,12919],\"mapped\",[52264]],[[12920,12920],\"mapped\",[52852]],[[12921,12921],\"mapped\",[53440]],[[12922,12922],\"mapped\",[54028]],[[12923,12923],\"mapped\",[54616]],[[12924,12924],\"mapped\",[52280,44256]],[[12925,12925],\"mapped\",[51452,51032]],[[12926,12926],\"mapped\",[50864]],[[12927,12927],\"valid\",[],\"NV8\"],[[12928,12928],\"mapped\",[19968]],[[12929,12929],\"mapped\",[20108]],[[12930,12930],\"mapped\",[19977]],[[12931,12931],\"mapped\",[22235]],[[12932,12932],\"mapped\",[20116]],[[12933,12933],\"mapped\",[20845]],[[12934,12934],\"mapped\",[19971]],[[12935,12935],\"mapped\",[20843]],[[12936,12936],\"mapped\",[20061]],[[12937,12937],\"mapped\",[21313]],[[12938,12938],\"mapped\",[26376]],[[12939,12939],\"mapped\",[28779]],[[12940,12940],\"mapped\",[27700]],[[12941,12941],\"mapped\",[26408]],[[12942,12942],\"mapped\",[37329]],[[12943,12943],\"mapped\",[22303]],[[12944,12944],\"mapped\",[26085]],[[12945,12945],\"mapped\",[26666]],[[12946,12946],\"mapped\",[26377]],[[12947,12947],\"mapped\",[31038]],[[12948,12948],\"mapped\",[21517]],[[12949,12949],\"mapped\",[29305]],[[12950,12950],\"mapped\",[36001]],[[12951,12951],\"mapped\",[31069]],[[12952,12952],\"mapped\",[21172]],[[12953,12953],\"mapped\",[31192]],[[12954,12954],\"mapped\",[30007]],[[12955,12955],\"mapped\",[22899]],[[12956,12956],\"mapped\",[36969]],[[12957,12957],\"mapped\",[20778]],[[12958,12958],\"mapped\",[21360]],[[12959,12959],\"mapped\",[27880]],[[12960,12960],\"mapped\",[38917]],[[12961,12961],\"mapped\",[20241]],[[12962,12962],\"mapped\",[20889]],[[12963,12963],\"mapped\",[27491]],[[12964,12964],\"mapped\",[19978]],[[12965,12965],\"mapped\",[20013]],[[12966,12966],\"mapped\",[19979]],[[12967,12967],\"mapped\",[24038]],[[12968,12968],\"mapped\",[21491]],[[12969,12969],\"mapped\",[21307]],[[12970,12970],\"mapped\",[23447]],[[12971,12971],\"mapped\",[23398]],[[12972,12972],\"mapped\",[30435]],[[12973,12973],\"mapped\",[20225]],[[12974,12974],\"mapped\",[36039]],[[12975,12975],\"mapped\",[21332]],[[12976,12976],\"mapped\",[22812]],[[12977,12977],\"mapped\",[51,54]],[[12978,12978],\"mapped\",[51,55]],[[12979,12979],\"mapped\",[51,56]],[[12980,12980],\"mapped\",[51,57]],[[12981,12981],\"mapped\",[52,48]],[[12982,12982],\"mapped\",[52,49]],[[12983,12983],\"mapped\",[52,50]],[[12984,12984],\"mapped\",[52,51]],[[12985,12985],\"mapped\",[52,52]],[[12986,12986],\"mapped\",[52,53]],[[12987,12987],\"mapped\",[52,54]],[[12988,12988],\"mapped\",[52,55]],[[12989,12989],\"mapped\",[52,56]],[[12990,12990],\"mapped\",[52,57]],[[12991,12991],\"mapped\",[53,48]],[[12992,12992],\"mapped\",[49,26376]],[[12993,12993],\"mapped\",[50,26376]],[[12994,12994],\"mapped\",[51,26376]],[[12995,12995],\"mapped\",[52,26376]],[[12996,12996],\"mapped\",[53,26376]],[[12997,12997],\"mapped\",[54,26376]],[[12998,12998],\"mapped\",[55,26376]],[[12999,12999],\"mapped\",[56,26376]],[[13000,13000],\"mapped\",[57,26376]],[[13001,13001],\"mapped\",[49,48,26376]],[[13002,13002],\"mapped\",[49,49,26376]],[[13003,13003],\"mapped\",[49,50,26376]],[[13004,13004],\"mapped\",[104,103]],[[13005,13005],\"mapped\",[101,114,103]],[[13006,13006],\"mapped\",[101,118]],[[13007,13007],\"mapped\",[108,116,100]],[[13008,13008],\"mapped\",[12450]],[[13009,13009],\"mapped\",[12452]],[[13010,13010],\"mapped\",[12454]],[[13011,13011],\"mapped\",[12456]],[[13012,13012],\"mapped\",[12458]],[[13013,13013],\"mapped\",[12459]],[[13014,13014],\"mapped\",[12461]],[[13015,13015],\"mapped\",[12463]],[[13016,13016],\"mapped\",[12465]],[[13017,13017],\"mapped\",[12467]],[[13018,13018],\"mapped\",[12469]],[[13019,13019],\"mapped\",[12471]],[[13020,13020],\"mapped\",[12473]],[[13021,13021],\"mapped\",[12475]],[[13022,13022],\"mapped\",[12477]],[[13023,13023],\"mapped\",[12479]],[[13024,13024],\"mapped\",[12481]],[[13025,13025],\"mapped\",[12484]],[[13026,13026],\"mapped\",[12486]],[[13027,13027],\"mapped\",[12488]],[[13028,13028],\"mapped\",[12490]],[[13029,13029],\"mapped\",[12491]],[[13030,13030],\"mapped\",[12492]],[[13031,13031],\"mapped\",[12493]],[[13032,13032],\"mapped\",[12494]],[[13033,13033],\"mapped\",[12495]],[[13034,13034],\"mapped\",[12498]],[[13035,13035],\"mapped\",[12501]],[[13036,13036],\"mapped\",[12504]],[[13037,13037],\"mapped\",[12507]],[[13038,13038],\"mapped\",[12510]],[[13039,13039],\"mapped\",[12511]],[[13040,13040],\"mapped\",[12512]],[[13041,13041],\"mapped\",[12513]],[[13042,13042],\"mapped\",[12514]],[[13043,13043],\"mapped\",[12516]],[[13044,13044],\"mapped\",[12518]],[[13045,13045],\"mapped\",[12520]],[[13046,13046],\"mapped\",[12521]],[[13047,13047],\"mapped\",[12522]],[[13048,13048],\"mapped\",[12523]],[[13049,13049],\"mapped\",[12524]],[[13050,13050],\"mapped\",[12525]],[[13051,13051],\"mapped\",[12527]],[[13052,13052],\"mapped\",[12528]],[[13053,13053],\"mapped\",[12529]],[[13054,13054],\"mapped\",[12530]],[[13055,13055],\"disallowed\"],[[13056,13056],\"mapped\",[12450,12497,12540,12488]],[[13057,13057],\"mapped\",[12450,12523,12501,12449]],[[13058,13058],\"mapped\",[12450,12531,12506,12450]],[[13059,13059],\"mapped\",[12450,12540,12523]],[[13060,13060],\"mapped\",[12452,12491,12531,12464]],[[13061,13061],\"mapped\",[12452,12531,12481]],[[13062,13062],\"mapped\",[12454,12457,12531]],[[13063,13063],\"mapped\",[12456,12473,12463,12540,12489]],[[13064,13064],\"mapped\",[12456,12540,12459,12540]],[[13065,13065],\"mapped\",[12458,12531,12473]],[[13066,13066],\"mapped\",[12458,12540,12512]],[[13067,13067],\"mapped\",[12459,12452,12522]],[[13068,13068],\"mapped\",[12459,12521,12483,12488]],[[13069,13069],\"mapped\",[12459,12525,12522,12540]],[[13070,13070],\"mapped\",[12460,12525,12531]],[[13071,13071],\"mapped\",[12460,12531,12510]],[[13072,13072],\"mapped\",[12462,12460]],[[13073,13073],\"mapped\",[12462,12491,12540]],[[13074,13074],\"mapped\",[12461,12517,12522,12540]],[[13075,13075],\"mapped\",[12462,12523,12480,12540]],[[13076,13076],\"mapped\",[12461,12525]],[[13077,13077],\"mapped\",[12461,12525,12464,12521,12512]],[[13078,13078],\"mapped\",[12461,12525,12513,12540,12488,12523]],[[13079,13079],\"mapped\",[12461,12525,12527,12483,12488]],[[13080,13080],\"mapped\",[12464,12521,12512]],[[13081,13081],\"mapped\",[12464,12521,12512,12488,12531]],[[13082,13082],\"mapped\",[12463,12523,12476,12452,12525]],[[13083,13083],\"mapped\",[12463,12525,12540,12493]],[[13084,13084],\"mapped\",[12465,12540,12473]],[[13085,13085],\"mapped\",[12467,12523,12490]],[[13086,13086],\"mapped\",[12467,12540,12509]],[[13087,13087],\"mapped\",[12469,12452,12463,12523]],[[13088,13088],\"mapped\",[12469,12531,12481,12540,12512]],[[13089,13089],\"mapped\",[12471,12522,12531,12464]],[[13090,13090],\"mapped\",[12475,12531,12481]],[[13091,13091],\"mapped\",[12475,12531,12488]],[[13092,13092],\"mapped\",[12480,12540,12473]],[[13093,13093],\"mapped\",[12487,12471]],[[13094,13094],\"mapped\",[12489,12523]],[[13095,13095],\"mapped\",[12488,12531]],[[13096,13096],\"mapped\",[12490,12494]],[[13097,13097],\"mapped\",[12494,12483,12488]],[[13098,13098],\"mapped\",[12495,12452,12484]],[[13099,13099],\"mapped\",[12497,12540,12475,12531,12488]],[[13100,13100],\"mapped\",[12497,12540,12484]],[[13101,13101],\"mapped\",[12496,12540,12524,12523]],[[13102,13102],\"mapped\",[12500,12450,12473,12488,12523]],[[13103,13103],\"mapped\",[12500,12463,12523]],[[13104,13104],\"mapped\",[12500,12467]],[[13105,13105],\"mapped\",[12499,12523]],[[13106,13106],\"mapped\",[12501,12449,12521,12483,12489]],[[13107,13107],\"mapped\",[12501,12451,12540,12488]],[[13108,13108],\"mapped\",[12502,12483,12471,12455,12523]],[[13109,13109],\"mapped\",[12501,12521,12531]],[[13110,13110],\"mapped\",[12504,12463,12479,12540,12523]],[[13111,13111],\"mapped\",[12506,12477]],[[13112,13112],\"mapped\",[12506,12491,12498]],[[13113,13113],\"mapped\",[12504,12523,12484]],[[13114,13114],\"mapped\",[12506,12531,12473]],[[13115,13115],\"mapped\",[12506,12540,12472]],[[13116,13116],\"mapped\",[12505,12540,12479]],[[13117,13117],\"mapped\",[12509,12452,12531,12488]],[[13118,13118],\"mapped\",[12508,12523,12488]],[[13119,13119],\"mapped\",[12507,12531]],[[13120,13120],\"mapped\",[12509,12531,12489]],[[13121,13121],\"mapped\",[12507,12540,12523]],[[13122,13122],\"mapped\",[12507,12540,12531]],[[13123,13123],\"mapped\",[12510,12452,12463,12525]],[[13124,13124],\"mapped\",[12510,12452,12523]],[[13125,13125],\"mapped\",[12510,12483,12495]],[[13126,13126],\"mapped\",[12510,12523,12463]],[[13127,13127],\"mapped\",[12510,12531,12471,12519,12531]],[[13128,13128],\"mapped\",[12511,12463,12525,12531]],[[13129,13129],\"mapped\",[12511,12522]],[[13130,13130],\"mapped\",[12511,12522,12496,12540,12523]],[[13131,13131],\"mapped\",[12513,12460]],[[13132,13132],\"mapped\",[12513,12460,12488,12531]],[[13133,13133],\"mapped\",[12513,12540,12488,12523]],[[13134,13134],\"mapped\",[12516,12540,12489]],[[13135,13135],\"mapped\",[12516,12540,12523]],[[13136,13136],\"mapped\",[12518,12450,12531]],[[13137,13137],\"mapped\",[12522,12483,12488,12523]],[[13138,13138],\"mapped\",[12522,12521]],[[13139,13139],\"mapped\",[12523,12500,12540]],[[13140,13140],\"mapped\",[12523,12540,12502,12523]],[[13141,13141],\"mapped\",[12524,12512]],[[13142,13142],\"mapped\",[12524,12531,12488,12466,12531]],[[13143,13143],\"mapped\",[12527,12483,12488]],[[13144,13144],\"mapped\",[48,28857]],[[13145,13145],\"mapped\",[49,28857]],[[13146,13146],\"mapped\",[50,28857]],[[13147,13147],\"mapped\",[51,28857]],[[13148,13148],\"mapped\",[52,28857]],[[13149,13149],\"mapped\",[53,28857]],[[13150,13150],\"mapped\",[54,28857]],[[13151,13151],\"mapped\",[55,28857]],[[13152,13152],\"mapped\",[56,28857]],[[13153,13153],\"mapped\",[57,28857]],[[13154,13154],\"mapped\",[49,48,28857]],[[13155,13155],\"mapped\",[49,49,28857]],[[13156,13156],\"mapped\",[49,50,28857]],[[13157,13157],\"mapped\",[49,51,28857]],[[13158,13158],\"mapped\",[49,52,28857]],[[13159,13159],\"mapped\",[49,53,28857]],[[13160,13160],\"mapped\",[49,54,28857]],[[13161,13161],\"mapped\",[49,55,28857]],[[13162,13162],\"mapped\",[49,56,28857]],[[13163,13163],\"mapped\",[49,57,28857]],[[13164,13164],\"mapped\",[50,48,28857]],[[13165,13165],\"mapped\",[50,49,28857]],[[13166,13166],\"mapped\",[50,50,28857]],[[13167,13167],\"mapped\",[50,51,28857]],[[13168,13168],\"mapped\",[50,52,28857]],[[13169,13169],\"mapped\",[104,112,97]],[[13170,13170],\"mapped\",[100,97]],[[13171,13171],\"mapped\",[97,117]],[[13172,13172],\"mapped\",[98,97,114]],[[13173,13173],\"mapped\",[111,118]],[[13174,13174],\"mapped\",[112,99]],[[13175,13175],\"mapped\",[100,109]],[[13176,13176],\"mapped\",[100,109,50]],[[13177,13177],\"mapped\",[100,109,51]],[[13178,13178],\"mapped\",[105,117]],[[13179,13179],\"mapped\",[24179,25104]],[[13180,13180],\"mapped\",[26157,21644]],[[13181,13181],\"mapped\",[22823,27491]],[[13182,13182],\"mapped\",[26126,27835]],[[13183,13183],\"mapped\",[26666,24335,20250,31038]],[[13184,13184],\"mapped\",[112,97]],[[13185,13185],\"mapped\",[110,97]],[[13186,13186],\"mapped\",[956,97]],[[13187,13187],\"mapped\",[109,97]],[[13188,13188],\"mapped\",[107,97]],[[13189,13189],\"mapped\",[107,98]],[[13190,13190],\"mapped\",[109,98]],[[13191,13191],\"mapped\",[103,98]],[[13192,13192],\"mapped\",[99,97,108]],[[13193,13193],\"mapped\",[107,99,97,108]],[[13194,13194],\"mapped\",[112,102]],[[13195,13195],\"mapped\",[110,102]],[[13196,13196],\"mapped\",[956,102]],[[13197,13197],\"mapped\",[956,103]],[[13198,13198],\"mapped\",[109,103]],[[13199,13199],\"mapped\",[107,103]],[[13200,13200],\"mapped\",[104,122]],[[13201,13201],\"mapped\",[107,104,122]],[[13202,13202],\"mapped\",[109,104,122]],[[13203,13203],\"mapped\",[103,104,122]],[[13204,13204],\"mapped\",[116,104,122]],[[13205,13205],\"mapped\",[956,108]],[[13206,13206],\"mapped\",[109,108]],[[13207,13207],\"mapped\",[100,108]],[[13208,13208],\"mapped\",[107,108]],[[13209,13209],\"mapped\",[102,109]],[[13210,13210],\"mapped\",[110,109]],[[13211,13211],\"mapped\",[956,109]],[[13212,13212],\"mapped\",[109,109]],[[13213,13213],\"mapped\",[99,109]],[[13214,13214],\"mapped\",[107,109]],[[13215,13215],\"mapped\",[109,109,50]],[[13216,13216],\"mapped\",[99,109,50]],[[13217,13217],\"mapped\",[109,50]],[[13218,13218],\"mapped\",[107,109,50]],[[13219,13219],\"mapped\",[109,109,51]],[[13220,13220],\"mapped\",[99,109,51]],[[13221,13221],\"mapped\",[109,51]],[[13222,13222],\"mapped\",[107,109,51]],[[13223,13223],\"mapped\",[109,8725,115]],[[13224,13224],\"mapped\",[109,8725,115,50]],[[13225,13225],\"mapped\",[112,97]],[[13226,13226],\"mapped\",[107,112,97]],[[13227,13227],\"mapped\",[109,112,97]],[[13228,13228],\"mapped\",[103,112,97]],[[13229,13229],\"mapped\",[114,97,100]],[[13230,13230],\"mapped\",[114,97,100,8725,115]],[[13231,13231],\"mapped\",[114,97,100,8725,115,50]],[[13232,13232],\"mapped\",[112,115]],[[13233,13233],\"mapped\",[110,115]],[[13234,13234],\"mapped\",[956,115]],[[13235,13235],\"mapped\",[109,115]],[[13236,13236],\"mapped\",[112,118]],[[13237,13237],\"mapped\",[110,118]],[[13238,13238],\"mapped\",[956,118]],[[13239,13239],\"mapped\",[109,118]],[[13240,13240],\"mapped\",[107,118]],[[13241,13241],\"mapped\",[109,118]],[[13242,13242],\"mapped\",[112,119]],[[13243,13243],\"mapped\",[110,119]],[[13244,13244],\"mapped\",[956,119]],[[13245,13245],\"mapped\",[109,119]],[[13246,13246],\"mapped\",[107,119]],[[13247,13247],\"mapped\",[109,119]],[[13248,13248],\"mapped\",[107,969]],[[13249,13249],\"mapped\",[109,969]],[[13250,13250],\"disallowed\"],[[13251,13251],\"mapped\",[98,113]],[[13252,13252],\"mapped\",[99,99]],[[13253,13253],\"mapped\",[99,100]],[[13254,13254],\"mapped\",[99,8725,107,103]],[[13255,13255],\"disallowed\"],[[13256,13256],\"mapped\",[100,98]],[[13257,13257],\"mapped\",[103,121]],[[13258,13258],\"mapped\",[104,97]],[[13259,13259],\"mapped\",[104,112]],[[13260,13260],\"mapped\",[105,110]],[[13261,13261],\"mapped\",[107,107]],[[13262,13262],\"mapped\",[107,109]],[[13263,13263],\"mapped\",[107,116]],[[13264,13264],\"mapped\",[108,109]],[[13265,13265],\"mapped\",[108,110]],[[13266,13266],\"mapped\",[108,111,103]],[[13267,13267],\"mapped\",[108,120]],[[13268,13268],\"mapped\",[109,98]],[[13269,13269],\"mapped\",[109,105,108]],[[13270,13270],\"mapped\",[109,111,108]],[[13271,13271],\"mapped\",[112,104]],[[13272,13272],\"disallowed\"],[[13273,13273],\"mapped\",[112,112,109]],[[13274,13274],\"mapped\",[112,114]],[[13275,13275],\"mapped\",[115,114]],[[13276,13276],\"mapped\",[115,118]],[[13277,13277],\"mapped\",[119,98]],[[13278,13278],\"mapped\",[118,8725,109]],[[13279,13279],\"mapped\",[97,8725,109]],[[13280,13280],\"mapped\",[49,26085]],[[13281,13281],\"mapped\",[50,26085]],[[13282,13282],\"mapped\",[51,26085]],[[13283,13283],\"mapped\",[52,26085]],[[13284,13284],\"mapped\",[53,26085]],[[13285,13285],\"mapped\",[54,26085]],[[13286,13286],\"mapped\",[55,26085]],[[13287,13287],\"mapped\",[56,26085]],[[13288,13288],\"mapped\",[57,26085]],[[13289,13289],\"mapped\",[49,48,26085]],[[13290,13290],\"mapped\",[49,49,26085]],[[13291,13291],\"mapped\",[49,50,26085]],[[13292,13292],\"mapped\",[49,51,26085]],[[13293,13293],\"mapped\",[49,52,26085]],[[13294,13294],\"mapped\",[49,53,26085]],[[13295,13295],\"mapped\",[49,54,26085]],[[13296,13296],\"mapped\",[49,55,26085]],[[13297,13297],\"mapped\",[49,56,26085]],[[13298,13298],\"mapped\",[49,57,26085]],[[13299,13299],\"mapped\",[50,48,26085]],[[13300,13300],\"mapped\",[50,49,26085]],[[13301,13301],\"mapped\",[50,50,26085]],[[13302,13302],\"mapped\",[50,51,26085]],[[13303,13303],\"mapped\",[50,52,26085]],[[13304,13304],\"mapped\",[50,53,26085]],[[13305,13305],\"mapped\",[50,54,26085]],[[13306,13306],\"mapped\",[50,55,26085]],[[13307,13307],\"mapped\",[50,56,26085]],[[13308,13308],\"mapped\",[50,57,26085]],[[13309,13309],\"mapped\",[51,48,26085]],[[13310,13310],\"mapped\",[51,49,26085]],[[13311,13311],\"mapped\",[103,97,108]],[[13312,19893],\"valid\"],[[19894,19903],\"disallowed\"],[[19904,19967],\"valid\",[],\"NV8\"],[[19968,40869],\"valid\"],[[40870,40891],\"valid\"],[[40892,40899],\"valid\"],[[40900,40907],\"valid\"],[[40908,40908],\"valid\"],[[40909,40917],\"valid\"],[[40918,40959],\"disallowed\"],[[40960,42124],\"valid\"],[[42125,42127],\"disallowed\"],[[42128,42145],\"valid\",[],\"NV8\"],[[42146,42147],\"valid\",[],\"NV8\"],[[42148,42163],\"valid\",[],\"NV8\"],[[42164,42164],\"valid\",[],\"NV8\"],[[42165,42176],\"valid\",[],\"NV8\"],[[42177,42177],\"valid\",[],\"NV8\"],[[42178,42180],\"valid\",[],\"NV8\"],[[42181,42181],\"valid\",[],\"NV8\"],[[42182,42182],\"valid\",[],\"NV8\"],[[42183,42191],\"disallowed\"],[[42192,42237],\"valid\"],[[42238,42239],\"valid\",[],\"NV8\"],[[42240,42508],\"valid\"],[[42509,42511],\"valid\",[],\"NV8\"],[[42512,42539],\"valid\"],[[42540,42559],\"disallowed\"],[[42560,42560],\"mapped\",[42561]],[[42561,42561],\"valid\"],[[42562,42562],\"mapped\",[42563]],[[42563,42563],\"valid\"],[[42564,42564],\"mapped\",[42565]],[[42565,42565],\"valid\"],[[42566,42566],\"mapped\",[42567]],[[42567,42567],\"valid\"],[[42568,42568],\"mapped\",[42569]],[[42569,42569],\"valid\"],[[42570,42570],\"mapped\",[42571]],[[42571,42571],\"valid\"],[[42572,42572],\"mapped\",[42573]],[[42573,42573],\"valid\"],[[42574,42574],\"mapped\",[42575]],[[42575,42575],\"valid\"],[[42576,42576],\"mapped\",[42577]],[[42577,42577],\"valid\"],[[42578,42578],\"mapped\",[42579]],[[42579,42579],\"valid\"],[[42580,42580],\"mapped\",[42581]],[[42581,42581],\"valid\"],[[42582,42582],\"mapped\",[42583]],[[42583,42583],\"valid\"],[[42584,42584],\"mapped\",[42585]],[[42585,42585],\"valid\"],[[42586,42586],\"mapped\",[42587]],[[42587,42587],\"valid\"],[[42588,42588],\"mapped\",[42589]],[[42589,42589],\"valid\"],[[42590,42590],\"mapped\",[42591]],[[42591,42591],\"valid\"],[[42592,42592],\"mapped\",[42593]],[[42593,42593],\"valid\"],[[42594,42594],\"mapped\",[42595]],[[42595,42595],\"valid\"],[[42596,42596],\"mapped\",[42597]],[[42597,42597],\"valid\"],[[42598,42598],\"mapped\",[42599]],[[42599,42599],\"valid\"],[[42600,42600],\"mapped\",[42601]],[[42601,42601],\"valid\"],[[42602,42602],\"mapped\",[42603]],[[42603,42603],\"valid\"],[[42604,42604],\"mapped\",[42605]],[[42605,42607],\"valid\"],[[42608,42611],\"valid\",[],\"NV8\"],[[42612,42619],\"valid\"],[[42620,42621],\"valid\"],[[42622,42622],\"valid\",[],\"NV8\"],[[42623,42623],\"valid\"],[[42624,42624],\"mapped\",[42625]],[[42625,42625],\"valid\"],[[42626,42626],\"mapped\",[42627]],[[42627,42627],\"valid\"],[[42628,42628],\"mapped\",[42629]],[[42629,42629],\"valid\"],[[42630,42630],\"mapped\",[42631]],[[42631,42631],\"valid\"],[[42632,42632],\"mapped\",[42633]],[[42633,42633],\"valid\"],[[42634,42634],\"mapped\",[42635]],[[42635,42635],\"valid\"],[[42636,42636],\"mapped\",[42637]],[[42637,42637],\"valid\"],[[42638,42638],\"mapped\",[42639]],[[42639,42639],\"valid\"],[[42640,42640],\"mapped\",[42641]],[[42641,42641],\"valid\"],[[42642,42642],\"mapped\",[42643]],[[42643,42643],\"valid\"],[[42644,42644],\"mapped\",[42645]],[[42645,42645],\"valid\"],[[42646,42646],\"mapped\",[42647]],[[42647,42647],\"valid\"],[[42648,42648],\"mapped\",[42649]],[[42649,42649],\"valid\"],[[42650,42650],\"mapped\",[42651]],[[42651,42651],\"valid\"],[[42652,42652],\"mapped\",[1098]],[[42653,42653],\"mapped\",[1100]],[[42654,42654],\"valid\"],[[42655,42655],\"valid\"],[[42656,42725],\"valid\"],[[42726,42735],\"valid\",[],\"NV8\"],[[42736,42737],\"valid\"],[[42738,42743],\"valid\",[],\"NV8\"],[[42744,42751],\"disallowed\"],[[42752,42774],\"valid\",[],\"NV8\"],[[42775,42778],\"valid\"],[[42779,42783],\"valid\"],[[42784,42785],\"valid\",[],\"NV8\"],[[42786,42786],\"mapped\",[42787]],[[42787,42787],\"valid\"],[[42788,42788],\"mapped\",[42789]],[[42789,42789],\"valid\"],[[42790,42790],\"mapped\",[42791]],[[42791,42791],\"valid\"],[[42792,42792],\"mapped\",[42793]],[[42793,42793],\"valid\"],[[42794,42794],\"mapped\",[42795]],[[42795,42795],\"valid\"],[[42796,42796],\"mapped\",[42797]],[[42797,42797],\"valid\"],[[42798,42798],\"mapped\",[42799]],[[42799,42801],\"valid\"],[[42802,42802],\"mapped\",[42803]],[[42803,42803],\"valid\"],[[42804,42804],\"mapped\",[42805]],[[42805,42805],\"valid\"],[[42806,42806],\"mapped\",[42807]],[[42807,42807],\"valid\"],[[42808,42808],\"mapped\",[42809]],[[42809,42809],\"valid\"],[[42810,42810],\"mapped\",[42811]],[[42811,42811],\"valid\"],[[42812,42812],\"mapped\",[42813]],[[42813,42813],\"valid\"],[[42814,42814],\"mapped\",[42815]],[[42815,42815],\"valid\"],[[42816,42816],\"mapped\",[42817]],[[42817,42817],\"valid\"],[[42818,42818],\"mapped\",[42819]],[[42819,42819],\"valid\"],[[42820,42820],\"mapped\",[42821]],[[42821,42821],\"valid\"],[[42822,42822],\"mapped\",[42823]],[[42823,42823],\"valid\"],[[42824,42824],\"mapped\",[42825]],[[42825,42825],\"valid\"],[[42826,42826],\"mapped\",[42827]],[[42827,42827],\"valid\"],[[42828,42828],\"mapped\",[42829]],[[42829,42829],\"valid\"],[[42830,42830],\"mapped\",[42831]],[[42831,42831],\"valid\"],[[42832,42832],\"mapped\",[42833]],[[42833,42833],\"valid\"],[[42834,42834],\"mapped\",[42835]],[[42835,42835],\"valid\"],[[42836,42836],\"mapped\",[42837]],[[42837,42837],\"valid\"],[[42838,42838],\"mapped\",[42839]],[[42839,42839],\"valid\"],[[42840,42840],\"mapped\",[42841]],[[42841,42841],\"valid\"],[[42842,42842],\"mapped\",[42843]],[[42843,42843],\"valid\"],[[42844,42844],\"mapped\",[42845]],[[42845,42845],\"valid\"],[[42846,42846],\"mapped\",[42847]],[[42847,42847],\"valid\"],[[42848,42848],\"mapped\",[42849]],[[42849,42849],\"valid\"],[[42850,42850],\"mapped\",[42851]],[[42851,42851],\"valid\"],[[42852,42852],\"mapped\",[42853]],[[42853,42853],\"valid\"],[[42854,42854],\"mapped\",[42855]],[[42855,42855],\"valid\"],[[42856,42856],\"mapped\",[42857]],[[42857,42857],\"valid\"],[[42858,42858],\"mapped\",[42859]],[[42859,42859],\"valid\"],[[42860,42860],\"mapped\",[42861]],[[42861,42861],\"valid\"],[[42862,42862],\"mapped\",[42863]],[[42863,42863],\"valid\"],[[42864,42864],\"mapped\",[42863]],[[42865,42872],\"valid\"],[[42873,42873],\"mapped\",[42874]],[[42874,42874],\"valid\"],[[42875,42875],\"mapped\",[42876]],[[42876,42876],\"valid\"],[[42877,42877],\"mapped\",[7545]],[[42878,42878],\"mapped\",[42879]],[[42879,42879],\"valid\"],[[42880,42880],\"mapped\",[42881]],[[42881,42881],\"valid\"],[[42882,42882],\"mapped\",[42883]],[[42883,42883],\"valid\"],[[42884,42884],\"mapped\",[42885]],[[42885,42885],\"valid\"],[[42886,42886],\"mapped\",[42887]],[[42887,42888],\"valid\"],[[42889,42890],\"valid\",[],\"NV8\"],[[42891,42891],\"mapped\",[42892]],[[42892,42892],\"valid\"],[[42893,42893],\"mapped\",[613]],[[42894,42894],\"valid\"],[[42895,42895],\"valid\"],[[42896,42896],\"mapped\",[42897]],[[42897,42897],\"valid\"],[[42898,42898],\"mapped\",[42899]],[[42899,42899],\"valid\"],[[42900,42901],\"valid\"],[[42902,42902],\"mapped\",[42903]],[[42903,42903],\"valid\"],[[42904,42904],\"mapped\",[42905]],[[42905,42905],\"valid\"],[[42906,42906],\"mapped\",[42907]],[[42907,42907],\"valid\"],[[42908,42908],\"mapped\",[42909]],[[42909,42909],\"valid\"],[[42910,42910],\"mapped\",[42911]],[[42911,42911],\"valid\"],[[42912,42912],\"mapped\",[42913]],[[42913,42913],\"valid\"],[[42914,42914],\"mapped\",[42915]],[[42915,42915],\"valid\"],[[42916,42916],\"mapped\",[42917]],[[42917,42917],\"valid\"],[[42918,42918],\"mapped\",[42919]],[[42919,42919],\"valid\"],[[42920,42920],\"mapped\",[42921]],[[42921,42921],\"valid\"],[[42922,42922],\"mapped\",[614]],[[42923,42923],\"mapped\",[604]],[[42924,42924],\"mapped\",[609]],[[42925,42925],\"mapped\",[620]],[[42926,42927],\"disallowed\"],[[42928,42928],\"mapped\",[670]],[[42929,42929],\"mapped\",[647]],[[42930,42930],\"mapped\",[669]],[[42931,42931],\"mapped\",[43859]],[[42932,42932],\"mapped\",[42933]],[[42933,42933],\"valid\"],[[42934,42934],\"mapped\",[42935]],[[42935,42935],\"valid\"],[[42936,42998],\"disallowed\"],[[42999,42999],\"valid\"],[[43000,43000],\"mapped\",[295]],[[43001,43001],\"mapped\",[339]],[[43002,43002],\"valid\"],[[43003,43007],\"valid\"],[[43008,43047],\"valid\"],[[43048,43051],\"valid\",[],\"NV8\"],[[43052,43055],\"disallowed\"],[[43056,43065],\"valid\",[],\"NV8\"],[[43066,43071],\"disallowed\"],[[43072,43123],\"valid\"],[[43124,43127],\"valid\",[],\"NV8\"],[[43128,43135],\"disallowed\"],[[43136,43204],\"valid\"],[[43205,43213],\"disallowed\"],[[43214,43215],\"valid\",[],\"NV8\"],[[43216,43225],\"valid\"],[[43226,43231],\"disallowed\"],[[43232,43255],\"valid\"],[[43256,43258],\"valid\",[],\"NV8\"],[[43259,43259],\"valid\"],[[43260,43260],\"valid\",[],\"NV8\"],[[43261,43261],\"valid\"],[[43262,43263],\"disallowed\"],[[43264,43309],\"valid\"],[[43310,43311],\"valid\",[],\"NV8\"],[[43312,43347],\"valid\"],[[43348,43358],\"disallowed\"],[[43359,43359],\"valid\",[],\"NV8\"],[[43360,43388],\"valid\",[],\"NV8\"],[[43389,43391],\"disallowed\"],[[43392,43456],\"valid\"],[[43457,43469],\"valid\",[],\"NV8\"],[[43470,43470],\"disallowed\"],[[43471,43481],\"valid\"],[[43482,43485],\"disallowed\"],[[43486,43487],\"valid\",[],\"NV8\"],[[43488,43518],\"valid\"],[[43519,43519],\"disallowed\"],[[43520,43574],\"valid\"],[[43575,43583],\"disallowed\"],[[43584,43597],\"valid\"],[[43598,43599],\"disallowed\"],[[43600,43609],\"valid\"],[[43610,43611],\"disallowed\"],[[43612,43615],\"valid\",[],\"NV8\"],[[43616,43638],\"valid\"],[[43639,43641],\"valid\",[],\"NV8\"],[[43642,43643],\"valid\"],[[43644,43647],\"valid\"],[[43648,43714],\"valid\"],[[43715,43738],\"disallowed\"],[[43739,43741],\"valid\"],[[43742,43743],\"valid\",[],\"NV8\"],[[43744,43759],\"valid\"],[[43760,43761],\"valid\",[],\"NV8\"],[[43762,43766],\"valid\"],[[43767,43776],\"disallowed\"],[[43777,43782],\"valid\"],[[43783,43784],\"disallowed\"],[[43785,43790],\"valid\"],[[43791,43792],\"disallowed\"],[[43793,43798],\"valid\"],[[43799,43807],\"disallowed\"],[[43808,43814],\"valid\"],[[43815,43815],\"disallowed\"],[[43816,43822],\"valid\"],[[43823,43823],\"disallowed\"],[[43824,43866],\"valid\"],[[43867,43867],\"valid\",[],\"NV8\"],[[43868,43868],\"mapped\",[42791]],[[43869,43869],\"mapped\",[43831]],[[43870,43870],\"mapped\",[619]],[[43871,43871],\"mapped\",[43858]],[[43872,43875],\"valid\"],[[43876,43877],\"valid\"],[[43878,43887],\"disallowed\"],[[43888,43888],\"mapped\",[5024]],[[43889,43889],\"mapped\",[5025]],[[43890,43890],\"mapped\",[5026]],[[43891,43891],\"mapped\",[5027]],[[43892,43892],\"mapped\",[5028]],[[43893,43893],\"mapped\",[5029]],[[43894,43894],\"mapped\",[5030]],[[43895,43895],\"mapped\",[5031]],[[43896,43896],\"mapped\",[5032]],[[43897,43897],\"mapped\",[5033]],[[43898,43898],\"mapped\",[5034]],[[43899,43899],\"mapped\",[5035]],[[43900,43900],\"mapped\",[5036]],[[43901,43901],\"mapped\",[5037]],[[43902,43902],\"mapped\",[5038]],[[43903,43903],\"mapped\",[5039]],[[43904,43904],\"mapped\",[5040]],[[43905,43905],\"mapped\",[5041]],[[43906,43906],\"mapped\",[5042]],[[43907,43907],\"mapped\",[5043]],[[43908,43908],\"mapped\",[5044]],[[43909,43909],\"mapped\",[5045]],[[43910,43910],\"mapped\",[5046]],[[43911,43911],\"mapped\",[5047]],[[43912,43912],\"mapped\",[5048]],[[43913,43913],\"mapped\",[5049]],[[43914,43914],\"mapped\",[5050]],[[43915,43915],\"mapped\",[5051]],[[43916,43916],\"mapped\",[5052]],[[43917,43917],\"mapped\",[5053]],[[43918,43918],\"mapped\",[5054]],[[43919,43919],\"mapped\",[5055]],[[43920,43920],\"mapped\",[5056]],[[43921,43921],\"mapped\",[5057]],[[43922,43922],\"mapped\",[5058]],[[43923,43923],\"mapped\",[5059]],[[43924,43924],\"mapped\",[5060]],[[43925,43925],\"mapped\",[5061]],[[43926,43926],\"mapped\",[5062]],[[43927,43927],\"mapped\",[5063]],[[43928,43928],\"mapped\",[5064]],[[43929,43929],\"mapped\",[5065]],[[43930,43930],\"mapped\",[5066]],[[43931,43931],\"mapped\",[5067]],[[43932,43932],\"mapped\",[5068]],[[43933,43933],\"mapped\",[5069]],[[43934,43934],\"mapped\",[5070]],[[43935,43935],\"mapped\",[5071]],[[43936,43936],\"mapped\",[5072]],[[43937,43937],\"mapped\",[5073]],[[43938,43938],\"mapped\",[5074]],[[43939,43939],\"mapped\",[5075]],[[43940,43940],\"mapped\",[5076]],[[43941,43941],\"mapped\",[5077]],[[43942,43942],\"mapped\",[5078]],[[43943,43943],\"mapped\",[5079]],[[43944,43944],\"mapped\",[5080]],[[43945,43945],\"mapped\",[5081]],[[43946,43946],\"mapped\",[5082]],[[43947,43947],\"mapped\",[5083]],[[43948,43948],\"mapped\",[5084]],[[43949,43949],\"mapped\",[5085]],[[43950,43950],\"mapped\",[5086]],[[43951,43951],\"mapped\",[5087]],[[43952,43952],\"mapped\",[5088]],[[43953,43953],\"mapped\",[5089]],[[43954,43954],\"mapped\",[5090]],[[43955,43955],\"mapped\",[5091]],[[43956,43956],\"mapped\",[5092]],[[43957,43957],\"mapped\",[5093]],[[43958,43958],\"mapped\",[5094]],[[43959,43959],\"mapped\",[5095]],[[43960,43960],\"mapped\",[5096]],[[43961,43961],\"mapped\",[5097]],[[43962,43962],\"mapped\",[5098]],[[43963,43963],\"mapped\",[5099]],[[43964,43964],\"mapped\",[5100]],[[43965,43965],\"mapped\",[5101]],[[43966,43966],\"mapped\",[5102]],[[43967,43967],\"mapped\",[5103]],[[43968,44010],\"valid\"],[[44011,44011],\"valid\",[],\"NV8\"],[[44012,44013],\"valid\"],[[44014,44015],\"disallowed\"],[[44016,44025],\"valid\"],[[44026,44031],\"disallowed\"],[[44032,55203],\"valid\"],[[55204,55215],\"disallowed\"],[[55216,55238],\"valid\",[],\"NV8\"],[[55239,55242],\"disallowed\"],[[55243,55291],\"valid\",[],\"NV8\"],[[55292,55295],\"disallowed\"],[[55296,57343],\"disallowed\"],[[57344,63743],\"disallowed\"],[[63744,63744],\"mapped\",[35912]],[[63745,63745],\"mapped\",[26356]],[[63746,63746],\"mapped\",[36554]],[[63747,63747],\"mapped\",[36040]],[[63748,63748],\"mapped\",[28369]],[[63749,63749],\"mapped\",[20018]],[[63750,63750],\"mapped\",[21477]],[[63751,63752],\"mapped\",[40860]],[[63753,63753],\"mapped\",[22865]],[[63754,63754],\"mapped\",[37329]],[[63755,63755],\"mapped\",[21895]],[[63756,63756],\"mapped\",[22856]],[[63757,63757],\"mapped\",[25078]],[[63758,63758],\"mapped\",[30313]],[[63759,63759],\"mapped\",[32645]],[[63760,63760],\"mapped\",[34367]],[[63761,63761],\"mapped\",[34746]],[[63762,63762],\"mapped\",[35064]],[[63763,63763],\"mapped\",[37007]],[[63764,63764],\"mapped\",[27138]],[[63765,63765],\"mapped\",[27931]],[[63766,63766],\"mapped\",[28889]],[[63767,63767],\"mapped\",[29662]],[[63768,63768],\"mapped\",[33853]],[[63769,63769],\"mapped\",[37226]],[[63770,63770],\"mapped\",[39409]],[[63771,63771],\"mapped\",[20098]],[[63772,63772],\"mapped\",[21365]],[[63773,63773],\"mapped\",[27396]],[[63774,63774],\"mapped\",[29211]],[[63775,63775],\"mapped\",[34349]],[[63776,63776],\"mapped\",[40478]],[[63777,63777],\"mapped\",[23888]],[[63778,63778],\"mapped\",[28651]],[[63779,63779],\"mapped\",[34253]],[[63780,63780],\"mapped\",[35172]],[[63781,63781],\"mapped\",[25289]],[[63782,63782],\"mapped\",[33240]],[[63783,63783],\"mapped\",[34847]],[[63784,63784],\"mapped\",[24266]],[[63785,63785],\"mapped\",[26391]],[[63786,63786],\"mapped\",[28010]],[[63787,63787],\"mapped\",[29436]],[[63788,63788],\"mapped\",[37070]],[[63789,63789],\"mapped\",[20358]],[[63790,63790],\"mapped\",[20919]],[[63791,63791],\"mapped\",[21214]],[[63792,63792],\"mapped\",[25796]],[[63793,63793],\"mapped\",[27347]],[[63794,63794],\"mapped\",[29200]],[[63795,63795],\"mapped\",[30439]],[[63796,63796],\"mapped\",[32769]],[[63797,63797],\"mapped\",[34310]],[[63798,63798],\"mapped\",[34396]],[[63799,63799],\"mapped\",[36335]],[[63800,63800],\"mapped\",[38706]],[[63801,63801],\"mapped\",[39791]],[[63802,63802],\"mapped\",[40442]],[[63803,63803],\"mapped\",[30860]],[[63804,63804],\"mapped\",[31103]],[[63805,63805],\"mapped\",[32160]],[[63806,63806],\"mapped\",[33737]],[[63807,63807],\"mapped\",[37636]],[[63808,63808],\"mapped\",[40575]],[[63809,63809],\"mapped\",[35542]],[[63810,63810],\"mapped\",[22751]],[[63811,63811],\"mapped\",[24324]],[[63812,63812],\"mapped\",[31840]],[[63813,63813],\"mapped\",[32894]],[[63814,63814],\"mapped\",[29282]],[[63815,63815],\"mapped\",[30922]],[[63816,63816],\"mapped\",[36034]],[[63817,63817],\"mapped\",[38647]],[[63818,63818],\"mapped\",[22744]],[[63819,63819],\"mapped\",[23650]],[[63820,63820],\"mapped\",[27155]],[[63821,63821],\"mapped\",[28122]],[[63822,63822],\"mapped\",[28431]],[[63823,63823],\"mapped\",[32047]],[[63824,63824],\"mapped\",[32311]],[[63825,63825],\"mapped\",[38475]],[[63826,63826],\"mapped\",[21202]],[[63827,63827],\"mapped\",[32907]],[[63828,63828],\"mapped\",[20956]],[[63829,63829],\"mapped\",[20940]],[[63830,63830],\"mapped\",[31260]],[[63831,63831],\"mapped\",[32190]],[[63832,63832],\"mapped\",[33777]],[[63833,63833],\"mapped\",[38517]],[[63834,63834],\"mapped\",[35712]],[[63835,63835],\"mapped\",[25295]],[[63836,63836],\"mapped\",[27138]],[[63837,63837],\"mapped\",[35582]],[[63838,63838],\"mapped\",[20025]],[[63839,63839],\"mapped\",[23527]],[[63840,63840],\"mapped\",[24594]],[[63841,63841],\"mapped\",[29575]],[[63842,63842],\"mapped\",[30064]],[[63843,63843],\"mapped\",[21271]],[[63844,63844],\"mapped\",[30971]],[[63845,63845],\"mapped\",[20415]],[[63846,63846],\"mapped\",[24489]],[[63847,63847],\"mapped\",[19981]],[[63848,63848],\"mapped\",[27852]],[[63849,63849],\"mapped\",[25976]],[[63850,63850],\"mapped\",[32034]],[[63851,63851],\"mapped\",[21443]],[[63852,63852],\"mapped\",[22622]],[[63853,63853],\"mapped\",[30465]],[[63854,63854],\"mapped\",[33865]],[[63855,63855],\"mapped\",[35498]],[[63856,63856],\"mapped\",[27578]],[[63857,63857],\"mapped\",[36784]],[[63858,63858],\"mapped\",[27784]],[[63859,63859],\"mapped\",[25342]],[[63860,63860],\"mapped\",[33509]],[[63861,63861],\"mapped\",[25504]],[[63862,63862],\"mapped\",[30053]],[[63863,63863],\"mapped\",[20142]],[[63864,63864],\"mapped\",[20841]],[[63865,63865],\"mapped\",[20937]],[[63866,63866],\"mapped\",[26753]],[[63867,63867],\"mapped\",[31975]],[[63868,63868],\"mapped\",[33391]],[[63869,63869],\"mapped\",[35538]],[[63870,63870],\"mapped\",[37327]],[[63871,63871],\"mapped\",[21237]],[[63872,63872],\"mapped\",[21570]],[[63873,63873],\"mapped\",[22899]],[[63874,63874],\"mapped\",[24300]],[[63875,63875],\"mapped\",[26053]],[[63876,63876],\"mapped\",[28670]],[[63877,63877],\"mapped\",[31018]],[[63878,63878],\"mapped\",[38317]],[[63879,63879],\"mapped\",[39530]],[[63880,63880],\"mapped\",[40599]],[[63881,63881],\"mapped\",[40654]],[[63882,63882],\"mapped\",[21147]],[[63883,63883],\"mapped\",[26310]],[[63884,63884],\"mapped\",[27511]],[[63885,63885],\"mapped\",[36706]],[[63886,63886],\"mapped\",[24180]],[[63887,63887],\"mapped\",[24976]],[[63888,63888],\"mapped\",[25088]],[[63889,63889],\"mapped\",[25754]],[[63890,63890],\"mapped\",[28451]],[[63891,63891],\"mapped\",[29001]],[[63892,63892],\"mapped\",[29833]],[[63893,63893],\"mapped\",[31178]],[[63894,63894],\"mapped\",[32244]],[[63895,63895],\"mapped\",[32879]],[[63896,63896],\"mapped\",[36646]],[[63897,63897],\"mapped\",[34030]],[[63898,63898],\"mapped\",[36899]],[[63899,63899],\"mapped\",[37706]],[[63900,63900],\"mapped\",[21015]],[[63901,63901],\"mapped\",[21155]],[[63902,63902],\"mapped\",[21693]],[[63903,63903],\"mapped\",[28872]],[[63904,63904],\"mapped\",[35010]],[[63905,63905],\"mapped\",[35498]],[[63906,63906],\"mapped\",[24265]],[[63907,63907],\"mapped\",[24565]],[[63908,63908],\"mapped\",[25467]],[[63909,63909],\"mapped\",[27566]],[[63910,63910],\"mapped\",[31806]],[[63911,63911],\"mapped\",[29557]],[[63912,63912],\"mapped\",[20196]],[[63913,63913],\"mapped\",[22265]],[[63914,63914],\"mapped\",[23527]],[[63915,63915],\"mapped\",[23994]],[[63916,63916],\"mapped\",[24604]],[[63917,63917],\"mapped\",[29618]],[[63918,63918],\"mapped\",[29801]],[[63919,63919],\"mapped\",[32666]],[[63920,63920],\"mapped\",[32838]],[[63921,63921],\"mapped\",[37428]],[[63922,63922],\"mapped\",[38646]],[[63923,63923],\"mapped\",[38728]],[[63924,63924],\"mapped\",[38936]],[[63925,63925],\"mapped\",[20363]],[[63926,63926],\"mapped\",[31150]],[[63927,63927],\"mapped\",[37300]],[[63928,63928],\"mapped\",[38584]],[[63929,63929],\"mapped\",[24801]],[[63930,63930],\"mapped\",[20102]],[[63931,63931],\"mapped\",[20698]],[[63932,63932],\"mapped\",[23534]],[[63933,63933],\"mapped\",[23615]],[[63934,63934],\"mapped\",[26009]],[[63935,63935],\"mapped\",[27138]],[[63936,63936],\"mapped\",[29134]],[[63937,63937],\"mapped\",[30274]],[[63938,63938],\"mapped\",[34044]],[[63939,63939],\"mapped\",[36988]],[[63940,63940],\"mapped\",[40845]],[[63941,63941],\"mapped\",[26248]],[[63942,63942],\"mapped\",[38446]],[[63943,63943],\"mapped\",[21129]],[[63944,63944],\"mapped\",[26491]],[[63945,63945],\"mapped\",[26611]],[[63946,63946],\"mapped\",[27969]],[[63947,63947],\"mapped\",[28316]],[[63948,63948],\"mapped\",[29705]],[[63949,63949],\"mapped\",[30041]],[[63950,63950],\"mapped\",[30827]],[[63951,63951],\"mapped\",[32016]],[[63952,63952],\"mapped\",[39006]],[[63953,63953],\"mapped\",[20845]],[[63954,63954],\"mapped\",[25134]],[[63955,63955],\"mapped\",[38520]],[[63956,63956],\"mapped\",[20523]],[[63957,63957],\"mapped\",[23833]],[[63958,63958],\"mapped\",[28138]],[[63959,63959],\"mapped\",[36650]],[[63960,63960],\"mapped\",[24459]],[[63961,63961],\"mapped\",[24900]],[[63962,63962],\"mapped\",[26647]],[[63963,63963],\"mapped\",[29575]],[[63964,63964],\"mapped\",[38534]],[[63965,63965],\"mapped\",[21033]],[[63966,63966],\"mapped\",[21519]],[[63967,63967],\"mapped\",[23653]],[[63968,63968],\"mapped\",[26131]],[[63969,63969],\"mapped\",[26446]],[[63970,63970],\"mapped\",[26792]],[[63971,63971],\"mapped\",[27877]],[[63972,63972],\"mapped\",[29702]],[[63973,63973],\"mapped\",[30178]],[[63974,63974],\"mapped\",[32633]],[[63975,63975],\"mapped\",[35023]],[[63976,63976],\"mapped\",[35041]],[[63977,63977],\"mapped\",[37324]],[[63978,63978],\"mapped\",[38626]],[[63979,63979],\"mapped\",[21311]],[[63980,63980],\"mapped\",[28346]],[[63981,63981],\"mapped\",[21533]],[[63982,63982],\"mapped\",[29136]],[[63983,63983],\"mapped\",[29848]],[[63984,63984],\"mapped\",[34298]],[[63985,63985],\"mapped\",[38563]],[[63986,63986],\"mapped\",[40023]],[[63987,63987],\"mapped\",[40607]],[[63988,63988],\"mapped\",[26519]],[[63989,63989],\"mapped\",[28107]],[[63990,63990],\"mapped\",[33256]],[[63991,63991],\"mapped\",[31435]],[[63992,63992],\"mapped\",[31520]],[[63993,63993],\"mapped\",[31890]],[[63994,63994],\"mapped\",[29376]],[[63995,63995],\"mapped\",[28825]],[[63996,63996],\"mapped\",[35672]],[[63997,63997],\"mapped\",[20160]],[[63998,63998],\"mapped\",[33590]],[[63999,63999],\"mapped\",[21050]],[[64000,64000],\"mapped\",[20999]],[[64001,64001],\"mapped\",[24230]],[[64002,64002],\"mapped\",[25299]],[[64003,64003],\"mapped\",[31958]],[[64004,64004],\"mapped\",[23429]],[[64005,64005],\"mapped\",[27934]],[[64006,64006],\"mapped\",[26292]],[[64007,64007],\"mapped\",[36667]],[[64008,64008],\"mapped\",[34892]],[[64009,64009],\"mapped\",[38477]],[[64010,64010],\"mapped\",[35211]],[[64011,64011],\"mapped\",[24275]],[[64012,64012],\"mapped\",[20800]],[[64013,64013],\"mapped\",[21952]],[[64014,64015],\"valid\"],[[64016,64016],\"mapped\",[22618]],[[64017,64017],\"valid\"],[[64018,64018],\"mapped\",[26228]],[[64019,64020],\"valid\"],[[64021,64021],\"mapped\",[20958]],[[64022,64022],\"mapped\",[29482]],[[64023,64023],\"mapped\",[30410]],[[64024,64024],\"mapped\",[31036]],[[64025,64025],\"mapped\",[31070]],[[64026,64026],\"mapped\",[31077]],[[64027,64027],\"mapped\",[31119]],[[64028,64028],\"mapped\",[38742]],[[64029,64029],\"mapped\",[31934]],[[64030,64030],\"mapped\",[32701]],[[64031,64031],\"valid\"],[[64032,64032],\"mapped\",[34322]],[[64033,64033],\"valid\"],[[64034,64034],\"mapped\",[35576]],[[64035,64036],\"valid\"],[[64037,64037],\"mapped\",[36920]],[[64038,64038],\"mapped\",[37117]],[[64039,64041],\"valid\"],[[64042,64042],\"mapped\",[39151]],[[64043,64043],\"mapped\",[39164]],[[64044,64044],\"mapped\",[39208]],[[64045,64045],\"mapped\",[40372]],[[64046,64046],\"mapped\",[37086]],[[64047,64047],\"mapped\",[38583]],[[64048,64048],\"mapped\",[20398]],[[64049,64049],\"mapped\",[20711]],[[64050,64050],\"mapped\",[20813]],[[64051,64051],\"mapped\",[21193]],[[64052,64052],\"mapped\",[21220]],[[64053,64053],\"mapped\",[21329]],[[64054,64054],\"mapped\",[21917]],[[64055,64055],\"mapped\",[22022]],[[64056,64056],\"mapped\",[22120]],[[64057,64057],\"mapped\",[22592]],[[64058,64058],\"mapped\",[22696]],[[64059,64059],\"mapped\",[23652]],[[64060,64060],\"mapped\",[23662]],[[64061,64061],\"mapped\",[24724]],[[64062,64062],\"mapped\",[24936]],[[64063,64063],\"mapped\",[24974]],[[64064,64064],\"mapped\",[25074]],[[64065,64065],\"mapped\",[25935]],[[64066,64066],\"mapped\",[26082]],[[64067,64067],\"mapped\",[26257]],[[64068,64068],\"mapped\",[26757]],[[64069,64069],\"mapped\",[28023]],[[64070,64070],\"mapped\",[28186]],[[64071,64071],\"mapped\",[28450]],[[64072,64072],\"mapped\",[29038]],[[64073,64073],\"mapped\",[29227]],[[64074,64074],\"mapped\",[29730]],[[64075,64075],\"mapped\",[30865]],[[64076,64076],\"mapped\",[31038]],[[64077,64077],\"mapped\",[31049]],[[64078,64078],\"mapped\",[31048]],[[64079,64079],\"mapped\",[31056]],[[64080,64080],\"mapped\",[31062]],[[64081,64081],\"mapped\",[31069]],[[64082,64082],\"mapped\",[31117]],[[64083,64083],\"mapped\",[31118]],[[64084,64084],\"mapped\",[31296]],[[64085,64085],\"mapped\",[31361]],[[64086,64086],\"mapped\",[31680]],[[64087,64087],\"mapped\",[32244]],[[64088,64088],\"mapped\",[32265]],[[64089,64089],\"mapped\",[32321]],[[64090,64090],\"mapped\",[32626]],[[64091,64091],\"mapped\",[32773]],[[64092,64092],\"mapped\",[33261]],[[64093,64094],\"mapped\",[33401]],[[64095,64095],\"mapped\",[33879]],[[64096,64096],\"mapped\",[35088]],[[64097,64097],\"mapped\",[35222]],[[64098,64098],\"mapped\",[35585]],[[64099,64099],\"mapped\",[35641]],[[64100,64100],\"mapped\",[36051]],[[64101,64101],\"mapped\",[36104]],[[64102,64102],\"mapped\",[36790]],[[64103,64103],\"mapped\",[36920]],[[64104,64104],\"mapped\",[38627]],[[64105,64105],\"mapped\",[38911]],[[64106,64106],\"mapped\",[38971]],[[64107,64107],\"mapped\",[24693]],[[64108,64108],\"mapped\",[148206]],[[64109,64109],\"mapped\",[33304]],[[64110,64111],\"disallowed\"],[[64112,64112],\"mapped\",[20006]],[[64113,64113],\"mapped\",[20917]],[[64114,64114],\"mapped\",[20840]],[[64115,64115],\"mapped\",[20352]],[[64116,64116],\"mapped\",[20805]],[[64117,64117],\"mapped\",[20864]],[[64118,64118],\"mapped\",[21191]],[[64119,64119],\"mapped\",[21242]],[[64120,64120],\"mapped\",[21917]],[[64121,64121],\"mapped\",[21845]],[[64122,64122],\"mapped\",[21913]],[[64123,64123],\"mapped\",[21986]],[[64124,64124],\"mapped\",[22618]],[[64125,64125],\"mapped\",[22707]],[[64126,64126],\"mapped\",[22852]],[[64127,64127],\"mapped\",[22868]],[[64128,64128],\"mapped\",[23138]],[[64129,64129],\"mapped\",[23336]],[[64130,64130],\"mapped\",[24274]],[[64131,64131],\"mapped\",[24281]],[[64132,64132],\"mapped\",[24425]],[[64133,64133],\"mapped\",[24493]],[[64134,64134],\"mapped\",[24792]],[[64135,64135],\"mapped\",[24910]],[[64136,64136],\"mapped\",[24840]],[[64137,64137],\"mapped\",[24974]],[[64138,64138],\"mapped\",[24928]],[[64139,64139],\"mapped\",[25074]],[[64140,64140],\"mapped\",[25140]],[[64141,64141],\"mapped\",[25540]],[[64142,64142],\"mapped\",[25628]],[[64143,64143],\"mapped\",[25682]],[[64144,64144],\"mapped\",[25942]],[[64145,64145],\"mapped\",[26228]],[[64146,64146],\"mapped\",[26391]],[[64147,64147],\"mapped\",[26395]],[[64148,64148],\"mapped\",[26454]],[[64149,64149],\"mapped\",[27513]],[[64150,64150],\"mapped\",[27578]],[[64151,64151],\"mapped\",[27969]],[[64152,64152],\"mapped\",[28379]],[[64153,64153],\"mapped\",[28363]],[[64154,64154],\"mapped\",[28450]],[[64155,64155],\"mapped\",[28702]],[[64156,64156],\"mapped\",[29038]],[[64157,64157],\"mapped\",[30631]],[[64158,64158],\"mapped\",[29237]],[[64159,64159],\"mapped\",[29359]],[[64160,64160],\"mapped\",[29482]],[[64161,64161],\"mapped\",[29809]],[[64162,64162],\"mapped\",[29958]],[[64163,64163],\"mapped\",[30011]],[[64164,64164],\"mapped\",[30237]],[[64165,64165],\"mapped\",[30239]],[[64166,64166],\"mapped\",[30410]],[[64167,64167],\"mapped\",[30427]],[[64168,64168],\"mapped\",[30452]],[[64169,64169],\"mapped\",[30538]],[[64170,64170],\"mapped\",[30528]],[[64171,64171],\"mapped\",[30924]],[[64172,64172],\"mapped\",[31409]],[[64173,64173],\"mapped\",[31680]],[[64174,64174],\"mapped\",[31867]],[[64175,64175],\"mapped\",[32091]],[[64176,64176],\"mapped\",[32244]],[[64177,64177],\"mapped\",[32574]],[[64178,64178],\"mapped\",[32773]],[[64179,64179],\"mapped\",[33618]],[[64180,64180],\"mapped\",[33775]],[[64181,64181],\"mapped\",[34681]],[[64182,64182],\"mapped\",[35137]],[[64183,64183],\"mapped\",[35206]],[[64184,64184],\"mapped\",[35222]],[[64185,64185],\"mapped\",[35519]],[[64186,64186],\"mapped\",[35576]],[[64187,64187],\"mapped\",[35531]],[[64188,64188],\"mapped\",[35585]],[[64189,64189],\"mapped\",[35582]],[[64190,64190],\"mapped\",[35565]],[[64191,64191],\"mapped\",[35641]],[[64192,64192],\"mapped\",[35722]],[[64193,64193],\"mapped\",[36104]],[[64194,64194],\"mapped\",[36664]],[[64195,64195],\"mapped\",[36978]],[[64196,64196],\"mapped\",[37273]],[[64197,64197],\"mapped\",[37494]],[[64198,64198],\"mapped\",[38524]],[[64199,64199],\"mapped\",[38627]],[[64200,64200],\"mapped\",[38742]],[[64201,64201],\"mapped\",[38875]],[[64202,64202],\"mapped\",[38911]],[[64203,64203],\"mapped\",[38923]],[[64204,64204],\"mapped\",[38971]],[[64205,64205],\"mapped\",[39698]],[[64206,64206],\"mapped\",[40860]],[[64207,64207],\"mapped\",[141386]],[[64208,64208],\"mapped\",[141380]],[[64209,64209],\"mapped\",[144341]],[[64210,64210],\"mapped\",[15261]],[[64211,64211],\"mapped\",[16408]],[[64212,64212],\"mapped\",[16441]],[[64213,64213],\"mapped\",[152137]],[[64214,64214],\"mapped\",[154832]],[[64215,64215],\"mapped\",[163539]],[[64216,64216],\"mapped\",[40771]],[[64217,64217],\"mapped\",[40846]],[[64218,64255],\"disallowed\"],[[64256,64256],\"mapped\",[102,102]],[[64257,64257],\"mapped\",[102,105]],[[64258,64258],\"mapped\",[102,108]],[[64259,64259],\"mapped\",[102,102,105]],[[64260,64260],\"mapped\",[102,102,108]],[[64261,64262],\"mapped\",[115,116]],[[64263,64274],\"disallowed\"],[[64275,64275],\"mapped\",[1396,1398]],[[64276,64276],\"mapped\",[1396,1381]],[[64277,64277],\"mapped\",[1396,1387]],[[64278,64278],\"mapped\",[1406,1398]],[[64279,64279],\"mapped\",[1396,1389]],[[64280,64284],\"disallowed\"],[[64285,64285],\"mapped\",[1497,1460]],[[64286,64286],\"valid\"],[[64287,64287],\"mapped\",[1522,1463]],[[64288,64288],\"mapped\",[1506]],[[64289,64289],\"mapped\",[1488]],[[64290,64290],\"mapped\",[1491]],[[64291,64291],\"mapped\",[1492]],[[64292,64292],\"mapped\",[1499]],[[64293,64293],\"mapped\",[1500]],[[64294,64294],\"mapped\",[1501]],[[64295,64295],\"mapped\",[1512]],[[64296,64296],\"mapped\",[1514]],[[64297,64297],\"disallowed_STD3_mapped\",[43]],[[64298,64298],\"mapped\",[1513,1473]],[[64299,64299],\"mapped\",[1513,1474]],[[64300,64300],\"mapped\",[1513,1468,1473]],[[64301,64301],\"mapped\",[1513,1468,1474]],[[64302,64302],\"mapped\",[1488,1463]],[[64303,64303],\"mapped\",[1488,1464]],[[64304,64304],\"mapped\",[1488,1468]],[[64305,64305],\"mapped\",[1489,1468]],[[64306,64306],\"mapped\",[1490,1468]],[[64307,64307],\"mapped\",[1491,1468]],[[64308,64308],\"mapped\",[1492,1468]],[[64309,64309],\"mapped\",[1493,1468]],[[64310,64310],\"mapped\",[1494,1468]],[[64311,64311],\"disallowed\"],[[64312,64312],\"mapped\",[1496,1468]],[[64313,64313],\"mapped\",[1497,1468]],[[64314,64314],\"mapped\",[1498,1468]],[[64315,64315],\"mapped\",[1499,1468]],[[64316,64316],\"mapped\",[1500,1468]],[[64317,64317],\"disallowed\"],[[64318,64318],\"mapped\",[1502,1468]],[[64319,64319],\"disallowed\"],[[64320,64320],\"mapped\",[1504,1468]],[[64321,64321],\"mapped\",[1505,1468]],[[64322,64322],\"disallowed\"],[[64323,64323],\"mapped\",[1507,1468]],[[64324,64324],\"mapped\",[1508,1468]],[[64325,64325],\"disallowed\"],[[64326,64326],\"mapped\",[1510,1468]],[[64327,64327],\"mapped\",[1511,1468]],[[64328,64328],\"mapped\",[1512,1468]],[[64329,64329],\"mapped\",[1513,1468]],[[64330,64330],\"mapped\",[1514,1468]],[[64331,64331],\"mapped\",[1493,1465]],[[64332,64332],\"mapped\",[1489,1471]],[[64333,64333],\"mapped\",[1499,1471]],[[64334,64334],\"mapped\",[1508,1471]],[[64335,64335],\"mapped\",[1488,1500]],[[64336,64337],\"mapped\",[1649]],[[64338,64341],\"mapped\",[1659]],[[64342,64345],\"mapped\",[1662]],[[64346,64349],\"mapped\",[1664]],[[64350,64353],\"mapped\",[1658]],[[64354,64357],\"mapped\",[1663]],[[64358,64361],\"mapped\",[1657]],[[64362,64365],\"mapped\",[1700]],[[64366,64369],\"mapped\",[1702]],[[64370,64373],\"mapped\",[1668]],[[64374,64377],\"mapped\",[1667]],[[64378,64381],\"mapped\",[1670]],[[64382,64385],\"mapped\",[1671]],[[64386,64387],\"mapped\",[1677]],[[64388,64389],\"mapped\",[1676]],[[64390,64391],\"mapped\",[1678]],[[64392,64393],\"mapped\",[1672]],[[64394,64395],\"mapped\",[1688]],[[64396,64397],\"mapped\",[1681]],[[64398,64401],\"mapped\",[1705]],[[64402,64405],\"mapped\",[1711]],[[64406,64409],\"mapped\",[1715]],[[64410,64413],\"mapped\",[1713]],[[64414,64415],\"mapped\",[1722]],[[64416,64419],\"mapped\",[1723]],[[64420,64421],\"mapped\",[1728]],[[64422,64425],\"mapped\",[1729]],[[64426,64429],\"mapped\",[1726]],[[64430,64431],\"mapped\",[1746]],[[64432,64433],\"mapped\",[1747]],[[64434,64449],\"valid\",[],\"NV8\"],[[64450,64466],\"disallowed\"],[[64467,64470],\"mapped\",[1709]],[[64471,64472],\"mapped\",[1735]],[[64473,64474],\"mapped\",[1734]],[[64475,64476],\"mapped\",[1736]],[[64477,64477],\"mapped\",[1735,1652]],[[64478,64479],\"mapped\",[1739]],[[64480,64481],\"mapped\",[1733]],[[64482,64483],\"mapped\",[1737]],[[64484,64487],\"mapped\",[1744]],[[64488,64489],\"mapped\",[1609]],[[64490,64491],\"mapped\",[1574,1575]],[[64492,64493],\"mapped\",[1574,1749]],[[64494,64495],\"mapped\",[1574,1608]],[[64496,64497],\"mapped\",[1574,1735]],[[64498,64499],\"mapped\",[1574,1734]],[[64500,64501],\"mapped\",[1574,1736]],[[64502,64504],\"mapped\",[1574,1744]],[[64505,64507],\"mapped\",[1574,1609]],[[64508,64511],\"mapped\",[1740]],[[64512,64512],\"mapped\",[1574,1580]],[[64513,64513],\"mapped\",[1574,1581]],[[64514,64514],\"mapped\",[1574,1605]],[[64515,64515],\"mapped\",[1574,1609]],[[64516,64516],\"mapped\",[1574,1610]],[[64517,64517],\"mapped\",[1576,1580]],[[64518,64518],\"mapped\",[1576,1581]],[[64519,64519],\"mapped\",[1576,1582]],[[64520,64520],\"mapped\",[1576,1605]],[[64521,64521],\"mapped\",[1576,1609]],[[64522,64522],\"mapped\",[1576,1610]],[[64523,64523],\"mapped\",[1578,1580]],[[64524,64524],\"mapped\",[1578,1581]],[[64525,64525],\"mapped\",[1578,1582]],[[64526,64526],\"mapped\",[1578,1605]],[[64527,64527],\"mapped\",[1578,1609]],[[64528,64528],\"mapped\",[1578,1610]],[[64529,64529],\"mapped\",[1579,1580]],[[64530,64530],\"mapped\",[1579,1605]],[[64531,64531],\"mapped\",[1579,1609]],[[64532,64532],\"mapped\",[1579,1610]],[[64533,64533],\"mapped\",[1580,1581]],[[64534,64534],\"mapped\",[1580,1605]],[[64535,64535],\"mapped\",[1581,1580]],[[64536,64536],\"mapped\",[1581,1605]],[[64537,64537],\"mapped\",[1582,1580]],[[64538,64538],\"mapped\",[1582,1581]],[[64539,64539],\"mapped\",[1582,1605]],[[64540,64540],\"mapped\",[1587,1580]],[[64541,64541],\"mapped\",[1587,1581]],[[64542,64542],\"mapped\",[1587,1582]],[[64543,64543],\"mapped\",[1587,1605]],[[64544,64544],\"mapped\",[1589,1581]],[[64545,64545],\"mapped\",[1589,1605]],[[64546,64546],\"mapped\",[1590,1580]],[[64547,64547],\"mapped\",[1590,1581]],[[64548,64548],\"mapped\",[1590,1582]],[[64549,64549],\"mapped\",[1590,1605]],[[64550,64550],\"mapped\",[1591,1581]],[[64551,64551],\"mapped\",[1591,1605]],[[64552,64552],\"mapped\",[1592,1605]],[[64553,64553],\"mapped\",[1593,1580]],[[64554,64554],\"mapped\",[1593,1605]],[[64555,64555],\"mapped\",[1594,1580]],[[64556,64556],\"mapped\",[1594,1605]],[[64557,64557],\"mapped\",[1601,1580]],[[64558,64558],\"mapped\",[1601,1581]],[[64559,64559],\"mapped\",[1601,1582]],[[64560,64560],\"mapped\",[1601,1605]],[[64561,64561],\"mapped\",[1601,1609]],[[64562,64562],\"mapped\",[1601,1610]],[[64563,64563],\"mapped\",[1602,1581]],[[64564,64564],\"mapped\",[1602,1605]],[[64565,64565],\"mapped\",[1602,1609]],[[64566,64566],\"mapped\",[1602,1610]],[[64567,64567],\"mapped\",[1603,1575]],[[64568,64568],\"mapped\",[1603,1580]],[[64569,64569],\"mapped\",[1603,1581]],[[64570,64570],\"mapped\",[1603,1582]],[[64571,64571],\"mapped\",[1603,1604]],[[64572,64572],\"mapped\",[1603,1605]],[[64573,64573],\"mapped\",[1603,1609]],[[64574,64574],\"mapped\",[1603,1610]],[[64575,64575],\"mapped\",[1604,1580]],[[64576,64576],\"mapped\",[1604,1581]],[[64577,64577],\"mapped\",[1604,1582]],[[64578,64578],\"mapped\",[1604,1605]],[[64579,64579],\"mapped\",[1604,1609]],[[64580,64580],\"mapped\",[1604,1610]],[[64581,64581],\"mapped\",[1605,1580]],[[64582,64582],\"mapped\",[1605,1581]],[[64583,64583],\"mapped\",[1605,1582]],[[64584,64584],\"mapped\",[1605,1605]],[[64585,64585],\"mapped\",[1605,1609]],[[64586,64586],\"mapped\",[1605,1610]],[[64587,64587],\"mapped\",[1606,1580]],[[64588,64588],\"mapped\",[1606,1581]],[[64589,64589],\"mapped\",[1606,1582]],[[64590,64590],\"mapped\",[1606,1605]],[[64591,64591],\"mapped\",[1606,1609]],[[64592,64592],\"mapped\",[1606,1610]],[[64593,64593],\"mapped\",[1607,1580]],[[64594,64594],\"mapped\",[1607,1605]],[[64595,64595],\"mapped\",[1607,1609]],[[64596,64596],\"mapped\",[1607,1610]],[[64597,64597],\"mapped\",[1610,1580]],[[64598,64598],\"mapped\",[1610,1581]],[[64599,64599],\"mapped\",[1610,1582]],[[64600,64600],\"mapped\",[1610,1605]],[[64601,64601],\"mapped\",[1610,1609]],[[64602,64602],\"mapped\",[1610,1610]],[[64603,64603],\"mapped\",[1584,1648]],[[64604,64604],\"mapped\",[1585,1648]],[[64605,64605],\"mapped\",[1609,1648]],[[64606,64606],\"disallowed_STD3_mapped\",[32,1612,1617]],[[64607,64607],\"disallowed_STD3_mapped\",[32,1613,1617]],[[64608,64608],\"disallowed_STD3_mapped\",[32,1614,1617]],[[64609,64609],\"disallowed_STD3_mapped\",[32,1615,1617]],[[64610,64610],\"disallowed_STD3_mapped\",[32,1616,1617]],[[64611,64611],\"disallowed_STD3_mapped\",[32,1617,1648]],[[64612,64612],\"mapped\",[1574,1585]],[[64613,64613],\"mapped\",[1574,1586]],[[64614,64614],\"mapped\",[1574,1605]],[[64615,64615],\"mapped\",[1574,1606]],[[64616,64616],\"mapped\",[1574,1609]],[[64617,64617],\"mapped\",[1574,1610]],[[64618,64618],\"mapped\",[1576,1585]],[[64619,64619],\"mapped\",[1576,1586]],[[64620,64620],\"mapped\",[1576,1605]],[[64621,64621],\"mapped\",[1576,1606]],[[64622,64622],\"mapped\",[1576,1609]],[[64623,64623],\"mapped\",[1576,1610]],[[64624,64624],\"mapped\",[1578,1585]],[[64625,64625],\"mapped\",[1578,1586]],[[64626,64626],\"mapped\",[1578,1605]],[[64627,64627],\"mapped\",[1578,1606]],[[64628,64628],\"mapped\",[1578,1609]],[[64629,64629],\"mapped\",[1578,1610]],[[64630,64630],\"mapped\",[1579,1585]],[[64631,64631],\"mapped\",[1579,1586]],[[64632,64632],\"mapped\",[1579,1605]],[[64633,64633],\"mapped\",[1579,1606]],[[64634,64634],\"mapped\",[1579,1609]],[[64635,64635],\"mapped\",[1579,1610]],[[64636,64636],\"mapped\",[1601,1609]],[[64637,64637],\"mapped\",[1601,1610]],[[64638,64638],\"mapped\",[1602,1609]],[[64639,64639],\"mapped\",[1602,1610]],[[64640,64640],\"mapped\",[1603,1575]],[[64641,64641],\"mapped\",[1603,1604]],[[64642,64642],\"mapped\",[1603,1605]],[[64643,64643],\"mapped\",[1603,1609]],[[64644,64644],\"mapped\",[1603,1610]],[[64645,64645],\"mapped\",[1604,1605]],[[64646,64646],\"mapped\",[1604,1609]],[[64647,64647],\"mapped\",[1604,1610]],[[64648,64648],\"mapped\",[1605,1575]],[[64649,64649],\"mapped\",[1605,1605]],[[64650,64650],\"mapped\",[1606,1585]],[[64651,64651],\"mapped\",[1606,1586]],[[64652,64652],\"mapped\",[1606,1605]],[[64653,64653],\"mapped\",[1606,1606]],[[64654,64654],\"mapped\",[1606,1609]],[[64655,64655],\"mapped\",[1606,1610]],[[64656,64656],\"mapped\",[1609,1648]],[[64657,64657],\"mapped\",[1610,1585]],[[64658,64658],\"mapped\",[1610,1586]],[[64659,64659],\"mapped\",[1610,1605]],[[64660,64660],\"mapped\",[1610,1606]],[[64661,64661],\"mapped\",[1610,1609]],[[64662,64662],\"mapped\",[1610,1610]],[[64663,64663],\"mapped\",[1574,1580]],[[64664,64664],\"mapped\",[1574,1581]],[[64665,64665],\"mapped\",[1574,1582]],[[64666,64666],\"mapped\",[1574,1605]],[[64667,64667],\"mapped\",[1574,1607]],[[64668,64668],\"mapped\",[1576,1580]],[[64669,64669],\"mapped\",[1576,1581]],[[64670,64670],\"mapped\",[1576,1582]],[[64671,64671],\"mapped\",[1576,1605]],[[64672,64672],\"mapped\",[1576,1607]],[[64673,64673],\"mapped\",[1578,1580]],[[64674,64674],\"mapped\",[1578,1581]],[[64675,64675],\"mapped\",[1578,1582]],[[64676,64676],\"mapped\",[1578,1605]],[[64677,64677],\"mapped\",[1578,1607]],[[64678,64678],\"mapped\",[1579,1605]],[[64679,64679],\"mapped\",[1580,1581]],[[64680,64680],\"mapped\",[1580,1605]],[[64681,64681],\"mapped\",[1581,1580]],[[64682,64682],\"mapped\",[1581,1605]],[[64683,64683],\"mapped\",[1582,1580]],[[64684,64684],\"mapped\",[1582,1605]],[[64685,64685],\"mapped\",[1587,1580]],[[64686,64686],\"mapped\",[1587,1581]],[[64687,64687],\"mapped\",[1587,1582]],[[64688,64688],\"mapped\",[1587,1605]],[[64689,64689],\"mapped\",[1589,1581]],[[64690,64690],\"mapped\",[1589,1582]],[[64691,64691],\"mapped\",[1589,1605]],[[64692,64692],\"mapped\",[1590,1580]],[[64693,64693],\"mapped\",[1590,1581]],[[64694,64694],\"mapped\",[1590,1582]],[[64695,64695],\"mapped\",[1590,1605]],[[64696,64696],\"mapped\",[1591,1581]],[[64697,64697],\"mapped\",[1592,1605]],[[64698,64698],\"mapped\",[1593,1580]],[[64699,64699],\"mapped\",[1593,1605]],[[64700,64700],\"mapped\",[1594,1580]],[[64701,64701],\"mapped\",[1594,1605]],[[64702,64702],\"mapped\",[1601,1580]],[[64703,64703],\"mapped\",[1601,1581]],[[64704,64704],\"mapped\",[1601,1582]],[[64705,64705],\"mapped\",[1601,1605]],[[64706,64706],\"mapped\",[1602,1581]],[[64707,64707],\"mapped\",[1602,1605]],[[64708,64708],\"mapped\",[1603,1580]],[[64709,64709],\"mapped\",[1603,1581]],[[64710,64710],\"mapped\",[1603,1582]],[[64711,64711],\"mapped\",[1603,1604]],[[64712,64712],\"mapped\",[1603,1605]],[[64713,64713],\"mapped\",[1604,1580]],[[64714,64714],\"mapped\",[1604,1581]],[[64715,64715],\"mapped\",[1604,1582]],[[64716,64716],\"mapped\",[1604,1605]],[[64717,64717],\"mapped\",[1604,1607]],[[64718,64718],\"mapped\",[1605,1580]],[[64719,64719],\"mapped\",[1605,1581]],[[64720,64720],\"mapped\",[1605,1582]],[[64721,64721],\"mapped\",[1605,1605]],[[64722,64722],\"mapped\",[1606,1580]],[[64723,64723],\"mapped\",[1606,1581]],[[64724,64724],\"mapped\",[1606,1582]],[[64725,64725],\"mapped\",[1606,1605]],[[64726,64726],\"mapped\",[1606,1607]],[[64727,64727],\"mapped\",[1607,1580]],[[64728,64728],\"mapped\",[1607,1605]],[[64729,64729],\"mapped\",[1607,1648]],[[64730,64730],\"mapped\",[1610,1580]],[[64731,64731],\"mapped\",[1610,1581]],[[64732,64732],\"mapped\",[1610,1582]],[[64733,64733],\"mapped\",[1610,1605]],[[64734,64734],\"mapped\",[1610,1607]],[[64735,64735],\"mapped\",[1574,1605]],[[64736,64736],\"mapped\",[1574,1607]],[[64737,64737],\"mapped\",[1576,1605]],[[64738,64738],\"mapped\",[1576,1607]],[[64739,64739],\"mapped\",[1578,1605]],[[64740,64740],\"mapped\",[1578,1607]],[[64741,64741],\"mapped\",[1579,1605]],[[64742,64742],\"mapped\",[1579,1607]],[[64743,64743],\"mapped\",[1587,1605]],[[64744,64744],\"mapped\",[1587,1607]],[[64745,64745],\"mapped\",[1588,1605]],[[64746,64746],\"mapped\",[1588,1607]],[[64747,64747],\"mapped\",[1603,1604]],[[64748,64748],\"mapped\",[1603,1605]],[[64749,64749],\"mapped\",[1604,1605]],[[64750,64750],\"mapped\",[1606,1605]],[[64751,64751],\"mapped\",[1606,1607]],[[64752,64752],\"mapped\",[1610,1605]],[[64753,64753],\"mapped\",[1610,1607]],[[64754,64754],\"mapped\",[1600,1614,1617]],[[64755,64755],\"mapped\",[1600,1615,1617]],[[64756,64756],\"mapped\",[1600,1616,1617]],[[64757,64757],\"mapped\",[1591,1609]],[[64758,64758],\"mapped\",[1591,1610]],[[64759,64759],\"mapped\",[1593,1609]],[[64760,64760],\"mapped\",[1593,1610]],[[64761,64761],\"mapped\",[1594,1609]],[[64762,64762],\"mapped\",[1594,1610]],[[64763,64763],\"mapped\",[1587,1609]],[[64764,64764],\"mapped\",[1587,1610]],[[64765,64765],\"mapped\",[1588,1609]],[[64766,64766],\"mapped\",[1588,1610]],[[64767,64767],\"mapped\",[1581,1609]],[[64768,64768],\"mapped\",[1581,1610]],[[64769,64769],\"mapped\",[1580,1609]],[[64770,64770],\"mapped\",[1580,1610]],[[64771,64771],\"mapped\",[1582,1609]],[[64772,64772],\"mapped\",[1582,1610]],[[64773,64773],\"mapped\",[1589,1609]],[[64774,64774],\"mapped\",[1589,1610]],[[64775,64775],\"mapped\",[1590,1609]],[[64776,64776],\"mapped\",[1590,1610]],[[64777,64777],\"mapped\",[1588,1580]],[[64778,64778],\"mapped\",[1588,1581]],[[64779,64779],\"mapped\",[1588,1582]],[[64780,64780],\"mapped\",[1588,1605]],[[64781,64781],\"mapped\",[1588,1585]],[[64782,64782],\"mapped\",[1587,1585]],[[64783,64783],\"mapped\",[1589,1585]],[[64784,64784],\"mapped\",[1590,1585]],[[64785,64785],\"mapped\",[1591,1609]],[[64786,64786],\"mapped\",[1591,1610]],[[64787,64787],\"mapped\",[1593,1609]],[[64788,64788],\"mapped\",[1593,1610]],[[64789,64789],\"mapped\",[1594,1609]],[[64790,64790],\"mapped\",[1594,1610]],[[64791,64791],\"mapped\",[1587,1609]],[[64792,64792],\"mapped\",[1587,1610]],[[64793,64793],\"mapped\",[1588,1609]],[[64794,64794],\"mapped\",[1588,1610]],[[64795,64795],\"mapped\",[1581,1609]],[[64796,64796],\"mapped\",[1581,1610]],[[64797,64797],\"mapped\",[1580,1609]],[[64798,64798],\"mapped\",[1580,1610]],[[64799,64799],\"mapped\",[1582,1609]],[[64800,64800],\"mapped\",[1582,1610]],[[64801,64801],\"mapped\",[1589,1609]],[[64802,64802],\"mapped\",[1589,1610]],[[64803,64803],\"mapped\",[1590,1609]],[[64804,64804],\"mapped\",[1590,1610]],[[64805,64805],\"mapped\",[1588,1580]],[[64806,64806],\"mapped\",[1588,1581]],[[64807,64807],\"mapped\",[1588,1582]],[[64808,64808],\"mapped\",[1588,1605]],[[64809,64809],\"mapped\",[1588,1585]],[[64810,64810],\"mapped\",[1587,1585]],[[64811,64811],\"mapped\",[1589,1585]],[[64812,64812],\"mapped\",[1590,1585]],[[64813,64813],\"mapped\",[1588,1580]],[[64814,64814],\"mapped\",[1588,1581]],[[64815,64815],\"mapped\",[1588,1582]],[[64816,64816],\"mapped\",[1588,1605]],[[64817,64817],\"mapped\",[1587,1607]],[[64818,64818],\"mapped\",[1588,1607]],[[64819,64819],\"mapped\",[1591,1605]],[[64820,64820],\"mapped\",[1587,1580]],[[64821,64821],\"mapped\",[1587,1581]],[[64822,64822],\"mapped\",[1587,1582]],[[64823,64823],\"mapped\",[1588,1580]],[[64824,64824],\"mapped\",[1588,1581]],[[64825,64825],\"mapped\",[1588,1582]],[[64826,64826],\"mapped\",[1591,1605]],[[64827,64827],\"mapped\",[1592,1605]],[[64828,64829],\"mapped\",[1575,1611]],[[64830,64831],\"valid\",[],\"NV8\"],[[64832,64847],\"disallowed\"],[[64848,64848],\"mapped\",[1578,1580,1605]],[[64849,64850],\"mapped\",[1578,1581,1580]],[[64851,64851],\"mapped\",[1578,1581,1605]],[[64852,64852],\"mapped\",[1578,1582,1605]],[[64853,64853],\"mapped\",[1578,1605,1580]],[[64854,64854],\"mapped\",[1578,1605,1581]],[[64855,64855],\"mapped\",[1578,1605,1582]],[[64856,64857],\"mapped\",[1580,1605,1581]],[[64858,64858],\"mapped\",[1581,1605,1610]],[[64859,64859],\"mapped\",[1581,1605,1609]],[[64860,64860],\"mapped\",[1587,1581,1580]],[[64861,64861],\"mapped\",[1587,1580,1581]],[[64862,64862],\"mapped\",[1587,1580,1609]],[[64863,64864],\"mapped\",[1587,1605,1581]],[[64865,64865],\"mapped\",[1587,1605,1580]],[[64866,64867],\"mapped\",[1587,1605,1605]],[[64868,64869],\"mapped\",[1589,1581,1581]],[[64870,64870],\"mapped\",[1589,1605,1605]],[[64871,64872],\"mapped\",[1588,1581,1605]],[[64873,64873],\"mapped\",[1588,1580,1610]],[[64874,64875],\"mapped\",[1588,1605,1582]],[[64876,64877],\"mapped\",[1588,1605,1605]],[[64878,64878],\"mapped\",[1590,1581,1609]],[[64879,64880],\"mapped\",[1590,1582,1605]],[[64881,64882],\"mapped\",[1591,1605,1581]],[[64883,64883],\"mapped\",[1591,1605,1605]],[[64884,64884],\"mapped\",[1591,1605,1610]],[[64885,64885],\"mapped\",[1593,1580,1605]],[[64886,64887],\"mapped\",[1593,1605,1605]],[[64888,64888],\"mapped\",[1593,1605,1609]],[[64889,64889],\"mapped\",[1594,1605,1605]],[[64890,64890],\"mapped\",[1594,1605,1610]],[[64891,64891],\"mapped\",[1594,1605,1609]],[[64892,64893],\"mapped\",[1601,1582,1605]],[[64894,64894],\"mapped\",[1602,1605,1581]],[[64895,64895],\"mapped\",[1602,1605,1605]],[[64896,64896],\"mapped\",[1604,1581,1605]],[[64897,64897],\"mapped\",[1604,1581,1610]],[[64898,64898],\"mapped\",[1604,1581,1609]],[[64899,64900],\"mapped\",[1604,1580,1580]],[[64901,64902],\"mapped\",[1604,1582,1605]],[[64903,64904],\"mapped\",[1604,1605,1581]],[[64905,64905],\"mapped\",[1605,1581,1580]],[[64906,64906],\"mapped\",[1605,1581,1605]],[[64907,64907],\"mapped\",[1605,1581,1610]],[[64908,64908],\"mapped\",[1605,1580,1581]],[[64909,64909],\"mapped\",[1605,1580,1605]],[[64910,64910],\"mapped\",[1605,1582,1580]],[[64911,64911],\"mapped\",[1605,1582,1605]],[[64912,64913],\"disallowed\"],[[64914,64914],\"mapped\",[1605,1580,1582]],[[64915,64915],\"mapped\",[1607,1605,1580]],[[64916,64916],\"mapped\",[1607,1605,1605]],[[64917,64917],\"mapped\",[1606,1581,1605]],[[64918,64918],\"mapped\",[1606,1581,1609]],[[64919,64920],\"mapped\",[1606,1580,1605]],[[64921,64921],\"mapped\",[1606,1580,1609]],[[64922,64922],\"mapped\",[1606,1605,1610]],[[64923,64923],\"mapped\",[1606,1605,1609]],[[64924,64925],\"mapped\",[1610,1605,1605]],[[64926,64926],\"mapped\",[1576,1582,1610]],[[64927,64927],\"mapped\",[1578,1580,1610]],[[64928,64928],\"mapped\",[1578,1580,1609]],[[64929,64929],\"mapped\",[1578,1582,1610]],[[64930,64930],\"mapped\",[1578,1582,1609]],[[64931,64931],\"mapped\",[1578,1605,1610]],[[64932,64932],\"mapped\",[1578,1605,1609]],[[64933,64933],\"mapped\",[1580,1605,1610]],[[64934,64934],\"mapped\",[1580,1581,1609]],[[64935,64935],\"mapped\",[1580,1605,1609]],[[64936,64936],\"mapped\",[1587,1582,1609]],[[64937,64937],\"mapped\",[1589,1581,1610]],[[64938,64938],\"mapped\",[1588,1581,1610]],[[64939,64939],\"mapped\",[1590,1581,1610]],[[64940,64940],\"mapped\",[1604,1580,1610]],[[64941,64941],\"mapped\",[1604,1605,1610]],[[64942,64942],\"mapped\",[1610,1581,1610]],[[64943,64943],\"mapped\",[1610,1580,1610]],[[64944,64944],\"mapped\",[1610,1605,1610]],[[64945,64945],\"mapped\",[1605,1605,1610]],[[64946,64946],\"mapped\",[1602,1605,1610]],[[64947,64947],\"mapped\",[1606,1581,1610]],[[64948,64948],\"mapped\",[1602,1605,1581]],[[64949,64949],\"mapped\",[1604,1581,1605]],[[64950,64950],\"mapped\",[1593,1605,1610]],[[64951,64951],\"mapped\",[1603,1605,1610]],[[64952,64952],\"mapped\",[1606,1580,1581]],[[64953,64953],\"mapped\",[1605,1582,1610]],[[64954,64954],\"mapped\",[1604,1580,1605]],[[64955,64955],\"mapped\",[1603,1605,1605]],[[64956,64956],\"mapped\",[1604,1580,1605]],[[64957,64957],\"mapped\",[1606,1580,1581]],[[64958,64958],\"mapped\",[1580,1581,1610]],[[64959,64959],\"mapped\",[1581,1580,1610]],[[64960,64960],\"mapped\",[1605,1580,1610]],[[64961,64961],\"mapped\",[1601,1605,1610]],[[64962,64962],\"mapped\",[1576,1581,1610]],[[64963,64963],\"mapped\",[1603,1605,1605]],[[64964,64964],\"mapped\",[1593,1580,1605]],[[64965,64965],\"mapped\",[1589,1605,1605]],[[64966,64966],\"mapped\",[1587,1582,1610]],[[64967,64967],\"mapped\",[1606,1580,1610]],[[64968,64975],\"disallowed\"],[[64976,65007],\"disallowed\"],[[65008,65008],\"mapped\",[1589,1604,1746]],[[65009,65009],\"mapped\",[1602,1604,1746]],[[65010,65010],\"mapped\",[1575,1604,1604,1607]],[[65011,65011],\"mapped\",[1575,1603,1576,1585]],[[65012,65012],\"mapped\",[1605,1581,1605,1583]],[[65013,65013],\"mapped\",[1589,1604,1593,1605]],[[65014,65014],\"mapped\",[1585,1587,1608,1604]],[[65015,65015],\"mapped\",[1593,1604,1610,1607]],[[65016,65016],\"mapped\",[1608,1587,1604,1605]],[[65017,65017],\"mapped\",[1589,1604,1609]],[[65018,65018],\"disallowed_STD3_mapped\",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],\"disallowed_STD3_mapped\",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],\"mapped\",[1585,1740,1575,1604]],[[65021,65021],\"valid\",[],\"NV8\"],[[65022,65023],\"disallowed\"],[[65024,65039],\"ignored\"],[[65040,65040],\"disallowed_STD3_mapped\",[44]],[[65041,65041],\"mapped\",[12289]],[[65042,65042],\"disallowed\"],[[65043,65043],\"disallowed_STD3_mapped\",[58]],[[65044,65044],\"disallowed_STD3_mapped\",[59]],[[65045,65045],\"disallowed_STD3_mapped\",[33]],[[65046,65046],\"disallowed_STD3_mapped\",[63]],[[65047,65047],\"mapped\",[12310]],[[65048,65048],\"mapped\",[12311]],[[65049,65049],\"disallowed\"],[[65050,65055],\"disallowed\"],[[65056,65059],\"valid\"],[[65060,65062],\"valid\"],[[65063,65069],\"valid\"],[[65070,65071],\"valid\"],[[65072,65072],\"disallowed\"],[[65073,65073],\"mapped\",[8212]],[[65074,65074],\"mapped\",[8211]],[[65075,65076],\"disallowed_STD3_mapped\",[95]],[[65077,65077],\"disallowed_STD3_mapped\",[40]],[[65078,65078],\"disallowed_STD3_mapped\",[41]],[[65079,65079],\"disallowed_STD3_mapped\",[123]],[[65080,65080],\"disallowed_STD3_mapped\",[125]],[[65081,65081],\"mapped\",[12308]],[[65082,65082],\"mapped\",[12309]],[[65083,65083],\"mapped\",[12304]],[[65084,65084],\"mapped\",[12305]],[[65085,65085],\"mapped\",[12298]],[[65086,65086],\"mapped\",[12299]],[[65087,65087],\"mapped\",[12296]],[[65088,65088],\"mapped\",[12297]],[[65089,65089],\"mapped\",[12300]],[[65090,65090],\"mapped\",[12301]],[[65091,65091],\"mapped\",[12302]],[[65092,65092],\"mapped\",[12303]],[[65093,65094],\"valid\",[],\"NV8\"],[[65095,65095],\"disallowed_STD3_mapped\",[91]],[[65096,65096],\"disallowed_STD3_mapped\",[93]],[[65097,65100],\"disallowed_STD3_mapped\",[32,773]],[[65101,65103],\"disallowed_STD3_mapped\",[95]],[[65104,65104],\"disallowed_STD3_mapped\",[44]],[[65105,65105],\"mapped\",[12289]],[[65106,65106],\"disallowed\"],[[65107,65107],\"disallowed\"],[[65108,65108],\"disallowed_STD3_mapped\",[59]],[[65109,65109],\"disallowed_STD3_mapped\",[58]],[[65110,65110],\"disallowed_STD3_mapped\",[63]],[[65111,65111],\"disallowed_STD3_mapped\",[33]],[[65112,65112],\"mapped\",[8212]],[[65113,65113],\"disallowed_STD3_mapped\",[40]],[[65114,65114],\"disallowed_STD3_mapped\",[41]],[[65115,65115],\"disallowed_STD3_mapped\",[123]],[[65116,65116],\"disallowed_STD3_mapped\",[125]],[[65117,65117],\"mapped\",[12308]],[[65118,65118],\"mapped\",[12309]],[[65119,65119],\"disallowed_STD3_mapped\",[35]],[[65120,65120],\"disallowed_STD3_mapped\",[38]],[[65121,65121],\"disallowed_STD3_mapped\",[42]],[[65122,65122],\"disallowed_STD3_mapped\",[43]],[[65123,65123],\"mapped\",[45]],[[65124,65124],\"disallowed_STD3_mapped\",[60]],[[65125,65125],\"disallowed_STD3_mapped\",[62]],[[65126,65126],\"disallowed_STD3_mapped\",[61]],[[65127,65127],\"disallowed\"],[[65128,65128],\"disallowed_STD3_mapped\",[92]],[[65129,65129],\"disallowed_STD3_mapped\",[36]],[[65130,65130],\"disallowed_STD3_mapped\",[37]],[[65131,65131],\"disallowed_STD3_mapped\",[64]],[[65132,65135],\"disallowed\"],[[65136,65136],\"disallowed_STD3_mapped\",[32,1611]],[[65137,65137],\"mapped\",[1600,1611]],[[65138,65138],\"disallowed_STD3_mapped\",[32,1612]],[[65139,65139],\"valid\"],[[65140,65140],\"disallowed_STD3_mapped\",[32,1613]],[[65141,65141],\"disallowed\"],[[65142,65142],\"disallowed_STD3_mapped\",[32,1614]],[[65143,65143],\"mapped\",[1600,1614]],[[65144,65144],\"disallowed_STD3_mapped\",[32,1615]],[[65145,65145],\"mapped\",[1600,1615]],[[65146,65146],\"disallowed_STD3_mapped\",[32,1616]],[[65147,65147],\"mapped\",[1600,1616]],[[65148,65148],\"disallowed_STD3_mapped\",[32,1617]],[[65149,65149],\"mapped\",[1600,1617]],[[65150,65150],\"disallowed_STD3_mapped\",[32,1618]],[[65151,65151],\"mapped\",[1600,1618]],[[65152,65152],\"mapped\",[1569]],[[65153,65154],\"mapped\",[1570]],[[65155,65156],\"mapped\",[1571]],[[65157,65158],\"mapped\",[1572]],[[65159,65160],\"mapped\",[1573]],[[65161,65164],\"mapped\",[1574]],[[65165,65166],\"mapped\",[1575]],[[65167,65170],\"mapped\",[1576]],[[65171,65172],\"mapped\",[1577]],[[65173,65176],\"mapped\",[1578]],[[65177,65180],\"mapped\",[1579]],[[65181,65184],\"mapped\",[1580]],[[65185,65188],\"mapped\",[1581]],[[65189,65192],\"mapped\",[1582]],[[65193,65194],\"mapped\",[1583]],[[65195,65196],\"mapped\",[1584]],[[65197,65198],\"mapped\",[1585]],[[65199,65200],\"mapped\",[1586]],[[65201,65204],\"mapped\",[1587]],[[65205,65208],\"mapped\",[1588]],[[65209,65212],\"mapped\",[1589]],[[65213,65216],\"mapped\",[1590]],[[65217,65220],\"mapped\",[1591]],[[65221,65224],\"mapped\",[1592]],[[65225,65228],\"mapped\",[1593]],[[65229,65232],\"mapped\",[1594]],[[65233,65236],\"mapped\",[1601]],[[65237,65240],\"mapped\",[1602]],[[65241,65244],\"mapped\",[1603]],[[65245,65248],\"mapped\",[1604]],[[65249,65252],\"mapped\",[1605]],[[65253,65256],\"mapped\",[1606]],[[65257,65260],\"mapped\",[1607]],[[65261,65262],\"mapped\",[1608]],[[65263,65264],\"mapped\",[1609]],[[65265,65268],\"mapped\",[1610]],[[65269,65270],\"mapped\",[1604,1570]],[[65271,65272],\"mapped\",[1604,1571]],[[65273,65274],\"mapped\",[1604,1573]],[[65275,65276],\"mapped\",[1604,1575]],[[65277,65278],\"disallowed\"],[[65279,65279],\"ignored\"],[[65280,65280],\"disallowed\"],[[65281,65281],\"disallowed_STD3_mapped\",[33]],[[65282,65282],\"disallowed_STD3_mapped\",[34]],[[65283,65283],\"disallowed_STD3_mapped\",[35]],[[65284,65284],\"disallowed_STD3_mapped\",[36]],[[65285,65285],\"disallowed_STD3_mapped\",[37]],[[65286,65286],\"disallowed_STD3_mapped\",[38]],[[65287,65287],\"disallowed_STD3_mapped\",[39]],[[65288,65288],\"disallowed_STD3_mapped\",[40]],[[65289,65289],\"disallowed_STD3_mapped\",[41]],[[65290,65290],\"disallowed_STD3_mapped\",[42]],[[65291,65291],\"disallowed_STD3_mapped\",[43]],[[65292,65292],\"disallowed_STD3_mapped\",[44]],[[65293,65293],\"mapped\",[45]],[[65294,65294],\"mapped\",[46]],[[65295,65295],\"disallowed_STD3_mapped\",[47]],[[65296,65296],\"mapped\",[48]],[[65297,65297],\"mapped\",[49]],[[65298,65298],\"mapped\",[50]],[[65299,65299],\"mapped\",[51]],[[65300,65300],\"mapped\",[52]],[[65301,65301],\"mapped\",[53]],[[65302,65302],\"mapped\",[54]],[[65303,65303],\"mapped\",[55]],[[65304,65304],\"mapped\",[56]],[[65305,65305],\"mapped\",[57]],[[65306,65306],\"disallowed_STD3_mapped\",[58]],[[65307,65307],\"disallowed_STD3_mapped\",[59]],[[65308,65308],\"disallowed_STD3_mapped\",[60]],[[65309,65309],\"disallowed_STD3_mapped\",[61]],[[65310,65310],\"disallowed_STD3_mapped\",[62]],[[65311,65311],\"disallowed_STD3_mapped\",[63]],[[65312,65312],\"disallowed_STD3_mapped\",[64]],[[65313,65313],\"mapped\",[97]],[[65314,65314],\"mapped\",[98]],[[65315,65315],\"mapped\",[99]],[[65316,65316],\"mapped\",[100]],[[65317,65317],\"mapped\",[101]],[[65318,65318],\"mapped\",[102]],[[65319,65319],\"mapped\",[103]],[[65320,65320],\"mapped\",[104]],[[65321,65321],\"mapped\",[105]],[[65322,65322],\"mapped\",[106]],[[65323,65323],\"mapped\",[107]],[[65324,65324],\"mapped\",[108]],[[65325,65325],\"mapped\",[109]],[[65326,65326],\"mapped\",[110]],[[65327,65327],\"mapped\",[111]],[[65328,65328],\"mapped\",[112]],[[65329,65329],\"mapped\",[113]],[[65330,65330],\"mapped\",[114]],[[65331,65331],\"mapped\",[115]],[[65332,65332],\"mapped\",[116]],[[65333,65333],\"mapped\",[117]],[[65334,65334],\"mapped\",[118]],[[65335,65335],\"mapped\",[119]],[[65336,65336],\"mapped\",[120]],[[65337,65337],\"mapped\",[121]],[[65338,65338],\"mapped\",[122]],[[65339,65339],\"disallowed_STD3_mapped\",[91]],[[65340,65340],\"disallowed_STD3_mapped\",[92]],[[65341,65341],\"disallowed_STD3_mapped\",[93]],[[65342,65342],\"disallowed_STD3_mapped\",[94]],[[65343,65343],\"disallowed_STD3_mapped\",[95]],[[65344,65344],\"disallowed_STD3_mapped\",[96]],[[65345,65345],\"mapped\",[97]],[[65346,65346],\"mapped\",[98]],[[65347,65347],\"mapped\",[99]],[[65348,65348],\"mapped\",[100]],[[65349,65349],\"mapped\",[101]],[[65350,65350],\"mapped\",[102]],[[65351,65351],\"mapped\",[103]],[[65352,65352],\"mapped\",[104]],[[65353,65353],\"mapped\",[105]],[[65354,65354],\"mapped\",[106]],[[65355,65355],\"mapped\",[107]],[[65356,65356],\"mapped\",[108]],[[65357,65357],\"mapped\",[109]],[[65358,65358],\"mapped\",[110]],[[65359,65359],\"mapped\",[111]],[[65360,65360],\"mapped\",[112]],[[65361,65361],\"mapped\",[113]],[[65362,65362],\"mapped\",[114]],[[65363,65363],\"mapped\",[115]],[[65364,65364],\"mapped\",[116]],[[65365,65365],\"mapped\",[117]],[[65366,65366],\"mapped\",[118]],[[65367,65367],\"mapped\",[119]],[[65368,65368],\"mapped\",[120]],[[65369,65369],\"mapped\",[121]],[[65370,65370],\"mapped\",[122]],[[65371,65371],\"disallowed_STD3_mapped\",[123]],[[65372,65372],\"disallowed_STD3_mapped\",[124]],[[65373,65373],\"disallowed_STD3_mapped\",[125]],[[65374,65374],\"disallowed_STD3_mapped\",[126]],[[65375,65375],\"mapped\",[10629]],[[65376,65376],\"mapped\",[10630]],[[65377,65377],\"mapped\",[46]],[[65378,65378],\"mapped\",[12300]],[[65379,65379],\"mapped\",[12301]],[[65380,65380],\"mapped\",[12289]],[[65381,65381],\"mapped\",[12539]],[[65382,65382],\"mapped\",[12530]],[[65383,65383],\"mapped\",[12449]],[[65384,65384],\"mapped\",[12451]],[[65385,65385],\"mapped\",[12453]],[[65386,65386],\"mapped\",[12455]],[[65387,65387],\"mapped\",[12457]],[[65388,65388],\"mapped\",[12515]],[[65389,65389],\"mapped\",[12517]],[[65390,65390],\"mapped\",[12519]],[[65391,65391],\"mapped\",[12483]],[[65392,65392],\"mapped\",[12540]],[[65393,65393],\"mapped\",[12450]],[[65394,65394],\"mapped\",[12452]],[[65395,65395],\"mapped\",[12454]],[[65396,65396],\"mapped\",[12456]],[[65397,65397],\"mapped\",[12458]],[[65398,65398],\"mapped\",[12459]],[[65399,65399],\"mapped\",[12461]],[[65400,65400],\"mapped\",[12463]],[[65401,65401],\"mapped\",[12465]],[[65402,65402],\"mapped\",[12467]],[[65403,65403],\"mapped\",[12469]],[[65404,65404],\"mapped\",[12471]],[[65405,65405],\"mapped\",[12473]],[[65406,65406],\"mapped\",[12475]],[[65407,65407],\"mapped\",[12477]],[[65408,65408],\"mapped\",[12479]],[[65409,65409],\"mapped\",[12481]],[[65410,65410],\"mapped\",[12484]],[[65411,65411],\"mapped\",[12486]],[[65412,65412],\"mapped\",[12488]],[[65413,65413],\"mapped\",[12490]],[[65414,65414],\"mapped\",[12491]],[[65415,65415],\"mapped\",[12492]],[[65416,65416],\"mapped\",[12493]],[[65417,65417],\"mapped\",[12494]],[[65418,65418],\"mapped\",[12495]],[[65419,65419],\"mapped\",[12498]],[[65420,65420],\"mapped\",[12501]],[[65421,65421],\"mapped\",[12504]],[[65422,65422],\"mapped\",[12507]],[[65423,65423],\"mapped\",[12510]],[[65424,65424],\"mapped\",[12511]],[[65425,65425],\"mapped\",[12512]],[[65426,65426],\"mapped\",[12513]],[[65427,65427],\"mapped\",[12514]],[[65428,65428],\"mapped\",[12516]],[[65429,65429],\"mapped\",[12518]],[[65430,65430],\"mapped\",[12520]],[[65431,65431],\"mapped\",[12521]],[[65432,65432],\"mapped\",[12522]],[[65433,65433],\"mapped\",[12523]],[[65434,65434],\"mapped\",[12524]],[[65435,65435],\"mapped\",[12525]],[[65436,65436],\"mapped\",[12527]],[[65437,65437],\"mapped\",[12531]],[[65438,65438],\"mapped\",[12441]],[[65439,65439],\"mapped\",[12442]],[[65440,65440],\"disallowed\"],[[65441,65441],\"mapped\",[4352]],[[65442,65442],\"mapped\",[4353]],[[65443,65443],\"mapped\",[4522]],[[65444,65444],\"mapped\",[4354]],[[65445,65445],\"mapped\",[4524]],[[65446,65446],\"mapped\",[4525]],[[65447,65447],\"mapped\",[4355]],[[65448,65448],\"mapped\",[4356]],[[65449,65449],\"mapped\",[4357]],[[65450,65450],\"mapped\",[4528]],[[65451,65451],\"mapped\",[4529]],[[65452,65452],\"mapped\",[4530]],[[65453,65453],\"mapped\",[4531]],[[65454,65454],\"mapped\",[4532]],[[65455,65455],\"mapped\",[4533]],[[65456,65456],\"mapped\",[4378]],[[65457,65457],\"mapped\",[4358]],[[65458,65458],\"mapped\",[4359]],[[65459,65459],\"mapped\",[4360]],[[65460,65460],\"mapped\",[4385]],[[65461,65461],\"mapped\",[4361]],[[65462,65462],\"mapped\",[4362]],[[65463,65463],\"mapped\",[4363]],[[65464,65464],\"mapped\",[4364]],[[65465,65465],\"mapped\",[4365]],[[65466,65466],\"mapped\",[4366]],[[65467,65467],\"mapped\",[4367]],[[65468,65468],\"mapped\",[4368]],[[65469,65469],\"mapped\",[4369]],[[65470,65470],\"mapped\",[4370]],[[65471,65473],\"disallowed\"],[[65474,65474],\"mapped\",[4449]],[[65475,65475],\"mapped\",[4450]],[[65476,65476],\"mapped\",[4451]],[[65477,65477],\"mapped\",[4452]],[[65478,65478],\"mapped\",[4453]],[[65479,65479],\"mapped\",[4454]],[[65480,65481],\"disallowed\"],[[65482,65482],\"mapped\",[4455]],[[65483,65483],\"mapped\",[4456]],[[65484,65484],\"mapped\",[4457]],[[65485,65485],\"mapped\",[4458]],[[65486,65486],\"mapped\",[4459]],[[65487,65487],\"mapped\",[4460]],[[65488,65489],\"disallowed\"],[[65490,65490],\"mapped\",[4461]],[[65491,65491],\"mapped\",[4462]],[[65492,65492],\"mapped\",[4463]],[[65493,65493],\"mapped\",[4464]],[[65494,65494],\"mapped\",[4465]],[[65495,65495],\"mapped\",[4466]],[[65496,65497],\"disallowed\"],[[65498,65498],\"mapped\",[4467]],[[65499,65499],\"mapped\",[4468]],[[65500,65500],\"mapped\",[4469]],[[65501,65503],\"disallowed\"],[[65504,65504],\"mapped\",[162]],[[65505,65505],\"mapped\",[163]],[[65506,65506],\"mapped\",[172]],[[65507,65507],\"disallowed_STD3_mapped\",[32,772]],[[65508,65508],\"mapped\",[166]],[[65509,65509],\"mapped\",[165]],[[65510,65510],\"mapped\",[8361]],[[65511,65511],\"disallowed\"],[[65512,65512],\"mapped\",[9474]],[[65513,65513],\"mapped\",[8592]],[[65514,65514],\"mapped\",[8593]],[[65515,65515],\"mapped\",[8594]],[[65516,65516],\"mapped\",[8595]],[[65517,65517],\"mapped\",[9632]],[[65518,65518],\"mapped\",[9675]],[[65519,65528],\"disallowed\"],[[65529,65531],\"disallowed\"],[[65532,65532],\"disallowed\"],[[65533,65533],\"disallowed\"],[[65534,65535],\"disallowed\"],[[65536,65547],\"valid\"],[[65548,65548],\"disallowed\"],[[65549,65574],\"valid\"],[[65575,65575],\"disallowed\"],[[65576,65594],\"valid\"],[[65595,65595],\"disallowed\"],[[65596,65597],\"valid\"],[[65598,65598],\"disallowed\"],[[65599,65613],\"valid\"],[[65614,65615],\"disallowed\"],[[65616,65629],\"valid\"],[[65630,65663],\"disallowed\"],[[65664,65786],\"valid\"],[[65787,65791],\"disallowed\"],[[65792,65794],\"valid\",[],\"NV8\"],[[65795,65798],\"disallowed\"],[[65799,65843],\"valid\",[],\"NV8\"],[[65844,65846],\"disallowed\"],[[65847,65855],\"valid\",[],\"NV8\"],[[65856,65930],\"valid\",[],\"NV8\"],[[65931,65932],\"valid\",[],\"NV8\"],[[65933,65935],\"disallowed\"],[[65936,65947],\"valid\",[],\"NV8\"],[[65948,65951],\"disallowed\"],[[65952,65952],\"valid\",[],\"NV8\"],[[65953,65999],\"disallowed\"],[[66000,66044],\"valid\",[],\"NV8\"],[[66045,66045],\"valid\"],[[66046,66175],\"disallowed\"],[[66176,66204],\"valid\"],[[66205,66207],\"disallowed\"],[[66208,66256],\"valid\"],[[66257,66271],\"disallowed\"],[[66272,66272],\"valid\"],[[66273,66299],\"valid\",[],\"NV8\"],[[66300,66303],\"disallowed\"],[[66304,66334],\"valid\"],[[66335,66335],\"valid\"],[[66336,66339],\"valid\",[],\"NV8\"],[[66340,66351],\"disallowed\"],[[66352,66368],\"valid\"],[[66369,66369],\"valid\",[],\"NV8\"],[[66370,66377],\"valid\"],[[66378,66378],\"valid\",[],\"NV8\"],[[66379,66383],\"disallowed\"],[[66384,66426],\"valid\"],[[66427,66431],\"disallowed\"],[[66432,66461],\"valid\"],[[66462,66462],\"disallowed\"],[[66463,66463],\"valid\",[],\"NV8\"],[[66464,66499],\"valid\"],[[66500,66503],\"disallowed\"],[[66504,66511],\"valid\"],[[66512,66517],\"valid\",[],\"NV8\"],[[66518,66559],\"disallowed\"],[[66560,66560],\"mapped\",[66600]],[[66561,66561],\"mapped\",[66601]],[[66562,66562],\"mapped\",[66602]],[[66563,66563],\"mapped\",[66603]],[[66564,66564],\"mapped\",[66604]],[[66565,66565],\"mapped\",[66605]],[[66566,66566],\"mapped\",[66606]],[[66567,66567],\"mapped\",[66607]],[[66568,66568],\"mapped\",[66608]],[[66569,66569],\"mapped\",[66609]],[[66570,66570],\"mapped\",[66610]],[[66571,66571],\"mapped\",[66611]],[[66572,66572],\"mapped\",[66612]],[[66573,66573],\"mapped\",[66613]],[[66574,66574],\"mapped\",[66614]],[[66575,66575],\"mapped\",[66615]],[[66576,66576],\"mapped\",[66616]],[[66577,66577],\"mapped\",[66617]],[[66578,66578],\"mapped\",[66618]],[[66579,66579],\"mapped\",[66619]],[[66580,66580],\"mapped\",[66620]],[[66581,66581],\"mapped\",[66621]],[[66582,66582],\"mapped\",[66622]],[[66583,66583],\"mapped\",[66623]],[[66584,66584],\"mapped\",[66624]],[[66585,66585],\"mapped\",[66625]],[[66586,66586],\"mapped\",[66626]],[[66587,66587],\"mapped\",[66627]],[[66588,66588],\"mapped\",[66628]],[[66589,66589],\"mapped\",[66629]],[[66590,66590],\"mapped\",[66630]],[[66591,66591],\"mapped\",[66631]],[[66592,66592],\"mapped\",[66632]],[[66593,66593],\"mapped\",[66633]],[[66594,66594],\"mapped\",[66634]],[[66595,66595],\"mapped\",[66635]],[[66596,66596],\"mapped\",[66636]],[[66597,66597],\"mapped\",[66637]],[[66598,66598],\"mapped\",[66638]],[[66599,66599],\"mapped\",[66639]],[[66600,66637],\"valid\"],[[66638,66717],\"valid\"],[[66718,66719],\"disallowed\"],[[66720,66729],\"valid\"],[[66730,66815],\"disallowed\"],[[66816,66855],\"valid\"],[[66856,66863],\"disallowed\"],[[66864,66915],\"valid\"],[[66916,66926],\"disallowed\"],[[66927,66927],\"valid\",[],\"NV8\"],[[66928,67071],\"disallowed\"],[[67072,67382],\"valid\"],[[67383,67391],\"disallowed\"],[[67392,67413],\"valid\"],[[67414,67423],\"disallowed\"],[[67424,67431],\"valid\"],[[67432,67583],\"disallowed\"],[[67584,67589],\"valid\"],[[67590,67591],\"disallowed\"],[[67592,67592],\"valid\"],[[67593,67593],\"disallowed\"],[[67594,67637],\"valid\"],[[67638,67638],\"disallowed\"],[[67639,67640],\"valid\"],[[67641,67643],\"disallowed\"],[[67644,67644],\"valid\"],[[67645,67646],\"disallowed\"],[[67647,67647],\"valid\"],[[67648,67669],\"valid\"],[[67670,67670],\"disallowed\"],[[67671,67679],\"valid\",[],\"NV8\"],[[67680,67702],\"valid\"],[[67703,67711],\"valid\",[],\"NV8\"],[[67712,67742],\"valid\"],[[67743,67750],\"disallowed\"],[[67751,67759],\"valid\",[],\"NV8\"],[[67760,67807],\"disallowed\"],[[67808,67826],\"valid\"],[[67827,67827],\"disallowed\"],[[67828,67829],\"valid\"],[[67830,67834],\"disallowed\"],[[67835,67839],\"valid\",[],\"NV8\"],[[67840,67861],\"valid\"],[[67862,67865],\"valid\",[],\"NV8\"],[[67866,67867],\"valid\",[],\"NV8\"],[[67868,67870],\"disallowed\"],[[67871,67871],\"valid\",[],\"NV8\"],[[67872,67897],\"valid\"],[[67898,67902],\"disallowed\"],[[67903,67903],\"valid\",[],\"NV8\"],[[67904,67967],\"disallowed\"],[[67968,68023],\"valid\"],[[68024,68027],\"disallowed\"],[[68028,68029],\"valid\",[],\"NV8\"],[[68030,68031],\"valid\"],[[68032,68047],\"valid\",[],\"NV8\"],[[68048,68049],\"disallowed\"],[[68050,68095],\"valid\",[],\"NV8\"],[[68096,68099],\"valid\"],[[68100,68100],\"disallowed\"],[[68101,68102],\"valid\"],[[68103,68107],\"disallowed\"],[[68108,68115],\"valid\"],[[68116,68116],\"disallowed\"],[[68117,68119],\"valid\"],[[68120,68120],\"disallowed\"],[[68121,68147],\"valid\"],[[68148,68151],\"disallowed\"],[[68152,68154],\"valid\"],[[68155,68158],\"disallowed\"],[[68159,68159],\"valid\"],[[68160,68167],\"valid\",[],\"NV8\"],[[68168,68175],\"disallowed\"],[[68176,68184],\"valid\",[],\"NV8\"],[[68185,68191],\"disallowed\"],[[68192,68220],\"valid\"],[[68221,68223],\"valid\",[],\"NV8\"],[[68224,68252],\"valid\"],[[68253,68255],\"valid\",[],\"NV8\"],[[68256,68287],\"disallowed\"],[[68288,68295],\"valid\"],[[68296,68296],\"valid\",[],\"NV8\"],[[68297,68326],\"valid\"],[[68327,68330],\"disallowed\"],[[68331,68342],\"valid\",[],\"NV8\"],[[68343,68351],\"disallowed\"],[[68352,68405],\"valid\"],[[68406,68408],\"disallowed\"],[[68409,68415],\"valid\",[],\"NV8\"],[[68416,68437],\"valid\"],[[68438,68439],\"disallowed\"],[[68440,68447],\"valid\",[],\"NV8\"],[[68448,68466],\"valid\"],[[68467,68471],\"disallowed\"],[[68472,68479],\"valid\",[],\"NV8\"],[[68480,68497],\"valid\"],[[68498,68504],\"disallowed\"],[[68505,68508],\"valid\",[],\"NV8\"],[[68509,68520],\"disallowed\"],[[68521,68527],\"valid\",[],\"NV8\"],[[68528,68607],\"disallowed\"],[[68608,68680],\"valid\"],[[68681,68735],\"disallowed\"],[[68736,68736],\"mapped\",[68800]],[[68737,68737],\"mapped\",[68801]],[[68738,68738],\"mapped\",[68802]],[[68739,68739],\"mapped\",[68803]],[[68740,68740],\"mapped\",[68804]],[[68741,68741],\"mapped\",[68805]],[[68742,68742],\"mapped\",[68806]],[[68743,68743],\"mapped\",[68807]],[[68744,68744],\"mapped\",[68808]],[[68745,68745],\"mapped\",[68809]],[[68746,68746],\"mapped\",[68810]],[[68747,68747],\"mapped\",[68811]],[[68748,68748],\"mapped\",[68812]],[[68749,68749],\"mapped\",[68813]],[[68750,68750],\"mapped\",[68814]],[[68751,68751],\"mapped\",[68815]],[[68752,68752],\"mapped\",[68816]],[[68753,68753],\"mapped\",[68817]],[[68754,68754],\"mapped\",[68818]],[[68755,68755],\"mapped\",[68819]],[[68756,68756],\"mapped\",[68820]],[[68757,68757],\"mapped\",[68821]],[[68758,68758],\"mapped\",[68822]],[[68759,68759],\"mapped\",[68823]],[[68760,68760],\"mapped\",[68824]],[[68761,68761],\"mapped\",[68825]],[[68762,68762],\"mapped\",[68826]],[[68763,68763],\"mapped\",[68827]],[[68764,68764],\"mapped\",[68828]],[[68765,68765],\"mapped\",[68829]],[[68766,68766],\"mapped\",[68830]],[[68767,68767],\"mapped\",[68831]],[[68768,68768],\"mapped\",[68832]],[[68769,68769],\"mapped\",[68833]],[[68770,68770],\"mapped\",[68834]],[[68771,68771],\"mapped\",[68835]],[[68772,68772],\"mapped\",[68836]],[[68773,68773],\"mapped\",[68837]],[[68774,68774],\"mapped\",[68838]],[[68775,68775],\"mapped\",[68839]],[[68776,68776],\"mapped\",[68840]],[[68777,68777],\"mapped\",[68841]],[[68778,68778],\"mapped\",[68842]],[[68779,68779],\"mapped\",[68843]],[[68780,68780],\"mapped\",[68844]],[[68781,68781],\"mapped\",[68845]],[[68782,68782],\"mapped\",[68846]],[[68783,68783],\"mapped\",[68847]],[[68784,68784],\"mapped\",[68848]],[[68785,68785],\"mapped\",[68849]],[[68786,68786],\"mapped\",[68850]],[[68787,68799],\"disallowed\"],[[68800,68850],\"valid\"],[[68851,68857],\"disallowed\"],[[68858,68863],\"valid\",[],\"NV8\"],[[68864,69215],\"disallowed\"],[[69216,69246],\"valid\",[],\"NV8\"],[[69247,69631],\"disallowed\"],[[69632,69702],\"valid\"],[[69703,69709],\"valid\",[],\"NV8\"],[[69710,69713],\"disallowed\"],[[69714,69733],\"valid\",[],\"NV8\"],[[69734,69743],\"valid\"],[[69744,69758],\"disallowed\"],[[69759,69759],\"valid\"],[[69760,69818],\"valid\"],[[69819,69820],\"valid\",[],\"NV8\"],[[69821,69821],\"disallowed\"],[[69822,69825],\"valid\",[],\"NV8\"],[[69826,69839],\"disallowed\"],[[69840,69864],\"valid\"],[[69865,69871],\"disallowed\"],[[69872,69881],\"valid\"],[[69882,69887],\"disallowed\"],[[69888,69940],\"valid\"],[[69941,69941],\"disallowed\"],[[69942,69951],\"valid\"],[[69952,69955],\"valid\",[],\"NV8\"],[[69956,69967],\"disallowed\"],[[69968,70003],\"valid\"],[[70004,70005],\"valid\",[],\"NV8\"],[[70006,70006],\"valid\"],[[70007,70015],\"disallowed\"],[[70016,70084],\"valid\"],[[70085,70088],\"valid\",[],\"NV8\"],[[70089,70089],\"valid\",[],\"NV8\"],[[70090,70092],\"valid\"],[[70093,70093],\"valid\",[],\"NV8\"],[[70094,70095],\"disallowed\"],[[70096,70105],\"valid\"],[[70106,70106],\"valid\"],[[70107,70107],\"valid\",[],\"NV8\"],[[70108,70108],\"valid\"],[[70109,70111],\"valid\",[],\"NV8\"],[[70112,70112],\"disallowed\"],[[70113,70132],\"valid\",[],\"NV8\"],[[70133,70143],\"disallowed\"],[[70144,70161],\"valid\"],[[70162,70162],\"disallowed\"],[[70163,70199],\"valid\"],[[70200,70205],\"valid\",[],\"NV8\"],[[70206,70271],\"disallowed\"],[[70272,70278],\"valid\"],[[70279,70279],\"disallowed\"],[[70280,70280],\"valid\"],[[70281,70281],\"disallowed\"],[[70282,70285],\"valid\"],[[70286,70286],\"disallowed\"],[[70287,70301],\"valid\"],[[70302,70302],\"disallowed\"],[[70303,70312],\"valid\"],[[70313,70313],\"valid\",[],\"NV8\"],[[70314,70319],\"disallowed\"],[[70320,70378],\"valid\"],[[70379,70383],\"disallowed\"],[[70384,70393],\"valid\"],[[70394,70399],\"disallowed\"],[[70400,70400],\"valid\"],[[70401,70403],\"valid\"],[[70404,70404],\"disallowed\"],[[70405,70412],\"valid\"],[[70413,70414],\"disallowed\"],[[70415,70416],\"valid\"],[[70417,70418],\"disallowed\"],[[70419,70440],\"valid\"],[[70441,70441],\"disallowed\"],[[70442,70448],\"valid\"],[[70449,70449],\"disallowed\"],[[70450,70451],\"valid\"],[[70452,70452],\"disallowed\"],[[70453,70457],\"valid\"],[[70458,70459],\"disallowed\"],[[70460,70468],\"valid\"],[[70469,70470],\"disallowed\"],[[70471,70472],\"valid\"],[[70473,70474],\"disallowed\"],[[70475,70477],\"valid\"],[[70478,70479],\"disallowed\"],[[70480,70480],\"valid\"],[[70481,70486],\"disallowed\"],[[70487,70487],\"valid\"],[[70488,70492],\"disallowed\"],[[70493,70499],\"valid\"],[[70500,70501],\"disallowed\"],[[70502,70508],\"valid\"],[[70509,70511],\"disallowed\"],[[70512,70516],\"valid\"],[[70517,70783],\"disallowed\"],[[70784,70853],\"valid\"],[[70854,70854],\"valid\",[],\"NV8\"],[[70855,70855],\"valid\"],[[70856,70863],\"disallowed\"],[[70864,70873],\"valid\"],[[70874,71039],\"disallowed\"],[[71040,71093],\"valid\"],[[71094,71095],\"disallowed\"],[[71096,71104],\"valid\"],[[71105,71113],\"valid\",[],\"NV8\"],[[71114,71127],\"valid\",[],\"NV8\"],[[71128,71133],\"valid\"],[[71134,71167],\"disallowed\"],[[71168,71232],\"valid\"],[[71233,71235],\"valid\",[],\"NV8\"],[[71236,71236],\"valid\"],[[71237,71247],\"disallowed\"],[[71248,71257],\"valid\"],[[71258,71295],\"disallowed\"],[[71296,71351],\"valid\"],[[71352,71359],\"disallowed\"],[[71360,71369],\"valid\"],[[71370,71423],\"disallowed\"],[[71424,71449],\"valid\"],[[71450,71452],\"disallowed\"],[[71453,71467],\"valid\"],[[71468,71471],\"disallowed\"],[[71472,71481],\"valid\"],[[71482,71487],\"valid\",[],\"NV8\"],[[71488,71839],\"disallowed\"],[[71840,71840],\"mapped\",[71872]],[[71841,71841],\"mapped\",[71873]],[[71842,71842],\"mapped\",[71874]],[[71843,71843],\"mapped\",[71875]],[[71844,71844],\"mapped\",[71876]],[[71845,71845],\"mapped\",[71877]],[[71846,71846],\"mapped\",[71878]],[[71847,71847],\"mapped\",[71879]],[[71848,71848],\"mapped\",[71880]],[[71849,71849],\"mapped\",[71881]],[[71850,71850],\"mapped\",[71882]],[[71851,71851],\"mapped\",[71883]],[[71852,71852],\"mapped\",[71884]],[[71853,71853],\"mapped\",[71885]],[[71854,71854],\"mapped\",[71886]],[[71855,71855],\"mapped\",[71887]],[[71856,71856],\"mapped\",[71888]],[[71857,71857],\"mapped\",[71889]],[[71858,71858],\"mapped\",[71890]],[[71859,71859],\"mapped\",[71891]],[[71860,71860],\"mapped\",[71892]],[[71861,71861],\"mapped\",[71893]],[[71862,71862],\"mapped\",[71894]],[[71863,71863],\"mapped\",[71895]],[[71864,71864],\"mapped\",[71896]],[[71865,71865],\"mapped\",[71897]],[[71866,71866],\"mapped\",[71898]],[[71867,71867],\"mapped\",[71899]],[[71868,71868],\"mapped\",[71900]],[[71869,71869],\"mapped\",[71901]],[[71870,71870],\"mapped\",[71902]],[[71871,71871],\"mapped\",[71903]],[[71872,71913],\"valid\"],[[71914,71922],\"valid\",[],\"NV8\"],[[71923,71934],\"disallowed\"],[[71935,71935],\"valid\"],[[71936,72383],\"disallowed\"],[[72384,72440],\"valid\"],[[72441,73727],\"disallowed\"],[[73728,74606],\"valid\"],[[74607,74648],\"valid\"],[[74649,74649],\"valid\"],[[74650,74751],\"disallowed\"],[[74752,74850],\"valid\",[],\"NV8\"],[[74851,74862],\"valid\",[],\"NV8\"],[[74863,74863],\"disallowed\"],[[74864,74867],\"valid\",[],\"NV8\"],[[74868,74868],\"valid\",[],\"NV8\"],[[74869,74879],\"disallowed\"],[[74880,75075],\"valid\"],[[75076,77823],\"disallowed\"],[[77824,78894],\"valid\"],[[78895,82943],\"disallowed\"],[[82944,83526],\"valid\"],[[83527,92159],\"disallowed\"],[[92160,92728],\"valid\"],[[92729,92735],\"disallowed\"],[[92736,92766],\"valid\"],[[92767,92767],\"disallowed\"],[[92768,92777],\"valid\"],[[92778,92781],\"disallowed\"],[[92782,92783],\"valid\",[],\"NV8\"],[[92784,92879],\"disallowed\"],[[92880,92909],\"valid\"],[[92910,92911],\"disallowed\"],[[92912,92916],\"valid\"],[[92917,92917],\"valid\",[],\"NV8\"],[[92918,92927],\"disallowed\"],[[92928,92982],\"valid\"],[[92983,92991],\"valid\",[],\"NV8\"],[[92992,92995],\"valid\"],[[92996,92997],\"valid\",[],\"NV8\"],[[92998,93007],\"disallowed\"],[[93008,93017],\"valid\"],[[93018,93018],\"disallowed\"],[[93019,93025],\"valid\",[],\"NV8\"],[[93026,93026],\"disallowed\"],[[93027,93047],\"valid\"],[[93048,93052],\"disallowed\"],[[93053,93071],\"valid\"],[[93072,93951],\"disallowed\"],[[93952,94020],\"valid\"],[[94021,94031],\"disallowed\"],[[94032,94078],\"valid\"],[[94079,94094],\"disallowed\"],[[94095,94111],\"valid\"],[[94112,110591],\"disallowed\"],[[110592,110593],\"valid\"],[[110594,113663],\"disallowed\"],[[113664,113770],\"valid\"],[[113771,113775],\"disallowed\"],[[113776,113788],\"valid\"],[[113789,113791],\"disallowed\"],[[113792,113800],\"valid\"],[[113801,113807],\"disallowed\"],[[113808,113817],\"valid\"],[[113818,113819],\"disallowed\"],[[113820,113820],\"valid\",[],\"NV8\"],[[113821,113822],\"valid\"],[[113823,113823],\"valid\",[],\"NV8\"],[[113824,113827],\"ignored\"],[[113828,118783],\"disallowed\"],[[118784,119029],\"valid\",[],\"NV8\"],[[119030,119039],\"disallowed\"],[[119040,119078],\"valid\",[],\"NV8\"],[[119079,119080],\"disallowed\"],[[119081,119081],\"valid\",[],\"NV8\"],[[119082,119133],\"valid\",[],\"NV8\"],[[119134,119134],\"mapped\",[119127,119141]],[[119135,119135],\"mapped\",[119128,119141]],[[119136,119136],\"mapped\",[119128,119141,119150]],[[119137,119137],\"mapped\",[119128,119141,119151]],[[119138,119138],\"mapped\",[119128,119141,119152]],[[119139,119139],\"mapped\",[119128,119141,119153]],[[119140,119140],\"mapped\",[119128,119141,119154]],[[119141,119154],\"valid\",[],\"NV8\"],[[119155,119162],\"disallowed\"],[[119163,119226],\"valid\",[],\"NV8\"],[[119227,119227],\"mapped\",[119225,119141]],[[119228,119228],\"mapped\",[119226,119141]],[[119229,119229],\"mapped\",[119225,119141,119150]],[[119230,119230],\"mapped\",[119226,119141,119150]],[[119231,119231],\"mapped\",[119225,119141,119151]],[[119232,119232],\"mapped\",[119226,119141,119151]],[[119233,119261],\"valid\",[],\"NV8\"],[[119262,119272],\"valid\",[],\"NV8\"],[[119273,119295],\"disallowed\"],[[119296,119365],\"valid\",[],\"NV8\"],[[119366,119551],\"disallowed\"],[[119552,119638],\"valid\",[],\"NV8\"],[[119639,119647],\"disallowed\"],[[119648,119665],\"valid\",[],\"NV8\"],[[119666,119807],\"disallowed\"],[[119808,119808],\"mapped\",[97]],[[119809,119809],\"mapped\",[98]],[[119810,119810],\"mapped\",[99]],[[119811,119811],\"mapped\",[100]],[[119812,119812],\"mapped\",[101]],[[119813,119813],\"mapped\",[102]],[[119814,119814],\"mapped\",[103]],[[119815,119815],\"mapped\",[104]],[[119816,119816],\"mapped\",[105]],[[119817,119817],\"mapped\",[106]],[[119818,119818],\"mapped\",[107]],[[119819,119819],\"mapped\",[108]],[[119820,119820],\"mapped\",[109]],[[119821,119821],\"mapped\",[110]],[[119822,119822],\"mapped\",[111]],[[119823,119823],\"mapped\",[112]],[[119824,119824],\"mapped\",[113]],[[119825,119825],\"mapped\",[114]],[[119826,119826],\"mapped\",[115]],[[119827,119827],\"mapped\",[116]],[[119828,119828],\"mapped\",[117]],[[119829,119829],\"mapped\",[118]],[[119830,119830],\"mapped\",[119]],[[119831,119831],\"mapped\",[120]],[[119832,119832],\"mapped\",[121]],[[119833,119833],\"mapped\",[122]],[[119834,119834],\"mapped\",[97]],[[119835,119835],\"mapped\",[98]],[[119836,119836],\"mapped\",[99]],[[119837,119837],\"mapped\",[100]],[[119838,119838],\"mapped\",[101]],[[119839,119839],\"mapped\",[102]],[[119840,119840],\"mapped\",[103]],[[119841,119841],\"mapped\",[104]],[[119842,119842],\"mapped\",[105]],[[119843,119843],\"mapped\",[106]],[[119844,119844],\"mapped\",[107]],[[119845,119845],\"mapped\",[108]],[[119846,119846],\"mapped\",[109]],[[119847,119847],\"mapped\",[110]],[[119848,119848],\"mapped\",[111]],[[119849,119849],\"mapped\",[112]],[[119850,119850],\"mapped\",[113]],[[119851,119851],\"mapped\",[114]],[[119852,119852],\"mapped\",[115]],[[119853,119853],\"mapped\",[116]],[[119854,119854],\"mapped\",[117]],[[119855,119855],\"mapped\",[118]],[[119856,119856],\"mapped\",[119]],[[119857,119857],\"mapped\",[120]],[[119858,119858],\"mapped\",[121]],[[119859,119859],\"mapped\",[122]],[[119860,119860],\"mapped\",[97]],[[119861,119861],\"mapped\",[98]],[[119862,119862],\"mapped\",[99]],[[119863,119863],\"mapped\",[100]],[[119864,119864],\"mapped\",[101]],[[119865,119865],\"mapped\",[102]],[[119866,119866],\"mapped\",[103]],[[119867,119867],\"mapped\",[104]],[[119868,119868],\"mapped\",[105]],[[119869,119869],\"mapped\",[106]],[[119870,119870],\"mapped\",[107]],[[119871,119871],\"mapped\",[108]],[[119872,119872],\"mapped\",[109]],[[119873,119873],\"mapped\",[110]],[[119874,119874],\"mapped\",[111]],[[119875,119875],\"mapped\",[112]],[[119876,119876],\"mapped\",[113]],[[119877,119877],\"mapped\",[114]],[[119878,119878],\"mapped\",[115]],[[119879,119879],\"mapped\",[116]],[[119880,119880],\"mapped\",[117]],[[119881,119881],\"mapped\",[118]],[[119882,119882],\"mapped\",[119]],[[119883,119883],\"mapped\",[120]],[[119884,119884],\"mapped\",[121]],[[119885,119885],\"mapped\",[122]],[[119886,119886],\"mapped\",[97]],[[119887,119887],\"mapped\",[98]],[[119888,119888],\"mapped\",[99]],[[119889,119889],\"mapped\",[100]],[[119890,119890],\"mapped\",[101]],[[119891,119891],\"mapped\",[102]],[[119892,119892],\"mapped\",[103]],[[119893,119893],\"disallowed\"],[[119894,119894],\"mapped\",[105]],[[119895,119895],\"mapped\",[106]],[[119896,119896],\"mapped\",[107]],[[119897,119897],\"mapped\",[108]],[[119898,119898],\"mapped\",[109]],[[119899,119899],\"mapped\",[110]],[[119900,119900],\"mapped\",[111]],[[119901,119901],\"mapped\",[112]],[[119902,119902],\"mapped\",[113]],[[119903,119903],\"mapped\",[114]],[[119904,119904],\"mapped\",[115]],[[119905,119905],\"mapped\",[116]],[[119906,119906],\"mapped\",[117]],[[119907,119907],\"mapped\",[118]],[[119908,119908],\"mapped\",[119]],[[119909,119909],\"mapped\",[120]],[[119910,119910],\"mapped\",[121]],[[119911,119911],\"mapped\",[122]],[[119912,119912],\"mapped\",[97]],[[119913,119913],\"mapped\",[98]],[[119914,119914],\"mapped\",[99]],[[119915,119915],\"mapped\",[100]],[[119916,119916],\"mapped\",[101]],[[119917,119917],\"mapped\",[102]],[[119918,119918],\"mapped\",[103]],[[119919,119919],\"mapped\",[104]],[[119920,119920],\"mapped\",[105]],[[119921,119921],\"mapped\",[106]],[[119922,119922],\"mapped\",[107]],[[119923,119923],\"mapped\",[108]],[[119924,119924],\"mapped\",[109]],[[119925,119925],\"mapped\",[110]],[[119926,119926],\"mapped\",[111]],[[119927,119927],\"mapped\",[112]],[[119928,119928],\"mapped\",[113]],[[119929,119929],\"mapped\",[114]],[[119930,119930],\"mapped\",[115]],[[119931,119931],\"mapped\",[116]],[[119932,119932],\"mapped\",[117]],[[119933,119933],\"mapped\",[118]],[[119934,119934],\"mapped\",[119]],[[119935,119935],\"mapped\",[120]],[[119936,119936],\"mapped\",[121]],[[119937,119937],\"mapped\",[122]],[[119938,119938],\"mapped\",[97]],[[119939,119939],\"mapped\",[98]],[[119940,119940],\"mapped\",[99]],[[119941,119941],\"mapped\",[100]],[[119942,119942],\"mapped\",[101]],[[119943,119943],\"mapped\",[102]],[[119944,119944],\"mapped\",[103]],[[119945,119945],\"mapped\",[104]],[[119946,119946],\"mapped\",[105]],[[119947,119947],\"mapped\",[106]],[[119948,119948],\"mapped\",[107]],[[119949,119949],\"mapped\",[108]],[[119950,119950],\"mapped\",[109]],[[119951,119951],\"mapped\",[110]],[[119952,119952],\"mapped\",[111]],[[119953,119953],\"mapped\",[112]],[[119954,119954],\"mapped\",[113]],[[119955,119955],\"mapped\",[114]],[[119956,119956],\"mapped\",[115]],[[119957,119957],\"mapped\",[116]],[[119958,119958],\"mapped\",[117]],[[119959,119959],\"mapped\",[118]],[[119960,119960],\"mapped\",[119]],[[119961,119961],\"mapped\",[120]],[[119962,119962],\"mapped\",[121]],[[119963,119963],\"mapped\",[122]],[[119964,119964],\"mapped\",[97]],[[119965,119965],\"disallowed\"],[[119966,119966],\"mapped\",[99]],[[119967,119967],\"mapped\",[100]],[[119968,119969],\"disallowed\"],[[119970,119970],\"mapped\",[103]],[[119971,119972],\"disallowed\"],[[119973,119973],\"mapped\",[106]],[[119974,119974],\"mapped\",[107]],[[119975,119976],\"disallowed\"],[[119977,119977],\"mapped\",[110]],[[119978,119978],\"mapped\",[111]],[[119979,119979],\"mapped\",[112]],[[119980,119980],\"mapped\",[113]],[[119981,119981],\"disallowed\"],[[119982,119982],\"mapped\",[115]],[[119983,119983],\"mapped\",[116]],[[119984,119984],\"mapped\",[117]],[[119985,119985],\"mapped\",[118]],[[119986,119986],\"mapped\",[119]],[[119987,119987],\"mapped\",[120]],[[119988,119988],\"mapped\",[121]],[[119989,119989],\"mapped\",[122]],[[119990,119990],\"mapped\",[97]],[[119991,119991],\"mapped\",[98]],[[119992,119992],\"mapped\",[99]],[[119993,119993],\"mapped\",[100]],[[119994,119994],\"disallowed\"],[[119995,119995],\"mapped\",[102]],[[119996,119996],\"disallowed\"],[[119997,119997],\"mapped\",[104]],[[119998,119998],\"mapped\",[105]],[[119999,119999],\"mapped\",[106]],[[120000,120000],\"mapped\",[107]],[[120001,120001],\"mapped\",[108]],[[120002,120002],\"mapped\",[109]],[[120003,120003],\"mapped\",[110]],[[120004,120004],\"disallowed\"],[[120005,120005],\"mapped\",[112]],[[120006,120006],\"mapped\",[113]],[[120007,120007],\"mapped\",[114]],[[120008,120008],\"mapped\",[115]],[[120009,120009],\"mapped\",[116]],[[120010,120010],\"mapped\",[117]],[[120011,120011],\"mapped\",[118]],[[120012,120012],\"mapped\",[119]],[[120013,120013],\"mapped\",[120]],[[120014,120014],\"mapped\",[121]],[[120015,120015],\"mapped\",[122]],[[120016,120016],\"mapped\",[97]],[[120017,120017],\"mapped\",[98]],[[120018,120018],\"mapped\",[99]],[[120019,120019],\"mapped\",[100]],[[120020,120020],\"mapped\",[101]],[[120021,120021],\"mapped\",[102]],[[120022,120022],\"mapped\",[103]],[[120023,120023],\"mapped\",[104]],[[120024,120024],\"mapped\",[105]],[[120025,120025],\"mapped\",[106]],[[120026,120026],\"mapped\",[107]],[[120027,120027],\"mapped\",[108]],[[120028,120028],\"mapped\",[109]],[[120029,120029],\"mapped\",[110]],[[120030,120030],\"mapped\",[111]],[[120031,120031],\"mapped\",[112]],[[120032,120032],\"mapped\",[113]],[[120033,120033],\"mapped\",[114]],[[120034,120034],\"mapped\",[115]],[[120035,120035],\"mapped\",[116]],[[120036,120036],\"mapped\",[117]],[[120037,120037],\"mapped\",[118]],[[120038,120038],\"mapped\",[119]],[[120039,120039],\"mapped\",[120]],[[120040,120040],\"mapped\",[121]],[[120041,120041],\"mapped\",[122]],[[120042,120042],\"mapped\",[97]],[[120043,120043],\"mapped\",[98]],[[120044,120044],\"mapped\",[99]],[[120045,120045],\"mapped\",[100]],[[120046,120046],\"mapped\",[101]],[[120047,120047],\"mapped\",[102]],[[120048,120048],\"mapped\",[103]],[[120049,120049],\"mapped\",[104]],[[120050,120050],\"mapped\",[105]],[[120051,120051],\"mapped\",[106]],[[120052,120052],\"mapped\",[107]],[[120053,120053],\"mapped\",[108]],[[120054,120054],\"mapped\",[109]],[[120055,120055],\"mapped\",[110]],[[120056,120056],\"mapped\",[111]],[[120057,120057],\"mapped\",[112]],[[120058,120058],\"mapped\",[113]],[[120059,120059],\"mapped\",[114]],[[120060,120060],\"mapped\",[115]],[[120061,120061],\"mapped\",[116]],[[120062,120062],\"mapped\",[117]],[[120063,120063],\"mapped\",[118]],[[120064,120064],\"mapped\",[119]],[[120065,120065],\"mapped\",[120]],[[120066,120066],\"mapped\",[121]],[[120067,120067],\"mapped\",[122]],[[120068,120068],\"mapped\",[97]],[[120069,120069],\"mapped\",[98]],[[120070,120070],\"disallowed\"],[[120071,120071],\"mapped\",[100]],[[120072,120072],\"mapped\",[101]],[[120073,120073],\"mapped\",[102]],[[120074,120074],\"mapped\",[103]],[[120075,120076],\"disallowed\"],[[120077,120077],\"mapped\",[106]],[[120078,120078],\"mapped\",[107]],[[120079,120079],\"mapped\",[108]],[[120080,120080],\"mapped\",[109]],[[120081,120081],\"mapped\",[110]],[[120082,120082],\"mapped\",[111]],[[120083,120083],\"mapped\",[112]],[[120084,120084],\"mapped\",[113]],[[120085,120085],\"disallowed\"],[[120086,120086],\"mapped\",[115]],[[120087,120087],\"mapped\",[116]],[[120088,120088],\"mapped\",[117]],[[120089,120089],\"mapped\",[118]],[[120090,120090],\"mapped\",[119]],[[120091,120091],\"mapped\",[120]],[[120092,120092],\"mapped\",[121]],[[120093,120093],\"disallowed\"],[[120094,120094],\"mapped\",[97]],[[120095,120095],\"mapped\",[98]],[[120096,120096],\"mapped\",[99]],[[120097,120097],\"mapped\",[100]],[[120098,120098],\"mapped\",[101]],[[120099,120099],\"mapped\",[102]],[[120100,120100],\"mapped\",[103]],[[120101,120101],\"mapped\",[104]],[[120102,120102],\"mapped\",[105]],[[120103,120103],\"mapped\",[106]],[[120104,120104],\"mapped\",[107]],[[120105,120105],\"mapped\",[108]],[[120106,120106],\"mapped\",[109]],[[120107,120107],\"mapped\",[110]],[[120108,120108],\"mapped\",[111]],[[120109,120109],\"mapped\",[112]],[[120110,120110],\"mapped\",[113]],[[120111,120111],\"mapped\",[114]],[[120112,120112],\"mapped\",[115]],[[120113,120113],\"mapped\",[116]],[[120114,120114],\"mapped\",[117]],[[120115,120115],\"mapped\",[118]],[[120116,120116],\"mapped\",[119]],[[120117,120117],\"mapped\",[120]],[[120118,120118],\"mapped\",[121]],[[120119,120119],\"mapped\",[122]],[[120120,120120],\"mapped\",[97]],[[120121,120121],\"mapped\",[98]],[[120122,120122],\"disallowed\"],[[120123,120123],\"mapped\",[100]],[[120124,120124],\"mapped\",[101]],[[120125,120125],\"mapped\",[102]],[[120126,120126],\"mapped\",[103]],[[120127,120127],\"disallowed\"],[[120128,120128],\"mapped\",[105]],[[120129,120129],\"mapped\",[106]],[[120130,120130],\"mapped\",[107]],[[120131,120131],\"mapped\",[108]],[[120132,120132],\"mapped\",[109]],[[120133,120133],\"disallowed\"],[[120134,120134],\"mapped\",[111]],[[120135,120137],\"disallowed\"],[[120138,120138],\"mapped\",[115]],[[120139,120139],\"mapped\",[116]],[[120140,120140],\"mapped\",[117]],[[120141,120141],\"mapped\",[118]],[[120142,120142],\"mapped\",[119]],[[120143,120143],\"mapped\",[120]],[[120144,120144],\"mapped\",[121]],[[120145,120145],\"disallowed\"],[[120146,120146],\"mapped\",[97]],[[120147,120147],\"mapped\",[98]],[[120148,120148],\"mapped\",[99]],[[120149,120149],\"mapped\",[100]],[[120150,120150],\"mapped\",[101]],[[120151,120151],\"mapped\",[102]],[[120152,120152],\"mapped\",[103]],[[120153,120153],\"mapped\",[104]],[[120154,120154],\"mapped\",[105]],[[120155,120155],\"mapped\",[106]],[[120156,120156],\"mapped\",[107]],[[120157,120157],\"mapped\",[108]],[[120158,120158],\"mapped\",[109]],[[120159,120159],\"mapped\",[110]],[[120160,120160],\"mapped\",[111]],[[120161,120161],\"mapped\",[112]],[[120162,120162],\"mapped\",[113]],[[120163,120163],\"mapped\",[114]],[[120164,120164],\"mapped\",[115]],[[120165,120165],\"mapped\",[116]],[[120166,120166],\"mapped\",[117]],[[120167,120167],\"mapped\",[118]],[[120168,120168],\"mapped\",[119]],[[120169,120169],\"mapped\",[120]],[[120170,120170],\"mapped\",[121]],[[120171,120171],\"mapped\",[122]],[[120172,120172],\"mapped\",[97]],[[120173,120173],\"mapped\",[98]],[[120174,120174],\"mapped\",[99]],[[120175,120175],\"mapped\",[100]],[[120176,120176],\"mapped\",[101]],[[120177,120177],\"mapped\",[102]],[[120178,120178],\"mapped\",[103]],[[120179,120179],\"mapped\",[104]],[[120180,120180],\"mapped\",[105]],[[120181,120181],\"mapped\",[106]],[[120182,120182],\"mapped\",[107]],[[120183,120183],\"mapped\",[108]],[[120184,120184],\"mapped\",[109]],[[120185,120185],\"mapped\",[110]],[[120186,120186],\"mapped\",[111]],[[120187,120187],\"mapped\",[112]],[[120188,120188],\"mapped\",[113]],[[120189,120189],\"mapped\",[114]],[[120190,120190],\"mapped\",[115]],[[120191,120191],\"mapped\",[116]],[[120192,120192],\"mapped\",[117]],[[120193,120193],\"mapped\",[118]],[[120194,120194],\"mapped\",[119]],[[120195,120195],\"mapped\",[120]],[[120196,120196],\"mapped\",[121]],[[120197,120197],\"mapped\",[122]],[[120198,120198],\"mapped\",[97]],[[120199,120199],\"mapped\",[98]],[[120200,120200],\"mapped\",[99]],[[120201,120201],\"mapped\",[100]],[[120202,120202],\"mapped\",[101]],[[120203,120203],\"mapped\",[102]],[[120204,120204],\"mapped\",[103]],[[120205,120205],\"mapped\",[104]],[[120206,120206],\"mapped\",[105]],[[120207,120207],\"mapped\",[106]],[[120208,120208],\"mapped\",[107]],[[120209,120209],\"mapped\",[108]],[[120210,120210],\"mapped\",[109]],[[120211,120211],\"mapped\",[110]],[[120212,120212],\"mapped\",[111]],[[120213,120213],\"mapped\",[112]],[[120214,120214],\"mapped\",[113]],[[120215,120215],\"mapped\",[114]],[[120216,120216],\"mapped\",[115]],[[120217,120217],\"mapped\",[116]],[[120218,120218],\"mapped\",[117]],[[120219,120219],\"mapped\",[118]],[[120220,120220],\"mapped\",[119]],[[120221,120221],\"mapped\",[120]],[[120222,120222],\"mapped\",[121]],[[120223,120223],\"mapped\",[122]],[[120224,120224],\"mapped\",[97]],[[120225,120225],\"mapped\",[98]],[[120226,120226],\"mapped\",[99]],[[120227,120227],\"mapped\",[100]],[[120228,120228],\"mapped\",[101]],[[120229,120229],\"mapped\",[102]],[[120230,120230],\"mapped\",[103]],[[120231,120231],\"mapped\",[104]],[[120232,120232],\"mapped\",[105]],[[120233,120233],\"mapped\",[106]],[[120234,120234],\"mapped\",[107]],[[120235,120235],\"mapped\",[108]],[[120236,120236],\"mapped\",[109]],[[120237,120237],\"mapped\",[110]],[[120238,120238],\"mapped\",[111]],[[120239,120239],\"mapped\",[112]],[[120240,120240],\"mapped\",[113]],[[120241,120241],\"mapped\",[114]],[[120242,120242],\"mapped\",[115]],[[120243,120243],\"mapped\",[116]],[[120244,120244],\"mapped\",[117]],[[120245,120245],\"mapped\",[118]],[[120246,120246],\"mapped\",[119]],[[120247,120247],\"mapped\",[120]],[[120248,120248],\"mapped\",[121]],[[120249,120249],\"mapped\",[122]],[[120250,120250],\"mapped\",[97]],[[120251,120251],\"mapped\",[98]],[[120252,120252],\"mapped\",[99]],[[120253,120253],\"mapped\",[100]],[[120254,120254],\"mapped\",[101]],[[120255,120255],\"mapped\",[102]],[[120256,120256],\"mapped\",[103]],[[120257,120257],\"mapped\",[104]],[[120258,120258],\"mapped\",[105]],[[120259,120259],\"mapped\",[106]],[[120260,120260],\"mapped\",[107]],[[120261,120261],\"mapped\",[108]],[[120262,120262],\"mapped\",[109]],[[120263,120263],\"mapped\",[110]],[[120264,120264],\"mapped\",[111]],[[120265,120265],\"mapped\",[112]],[[120266,120266],\"mapped\",[113]],[[120267,120267],\"mapped\",[114]],[[120268,120268],\"mapped\",[115]],[[120269,120269],\"mapped\",[116]],[[120270,120270],\"mapped\",[117]],[[120271,120271],\"mapped\",[118]],[[120272,120272],\"mapped\",[119]],[[120273,120273],\"mapped\",[120]],[[120274,120274],\"mapped\",[121]],[[120275,120275],\"mapped\",[122]],[[120276,120276],\"mapped\",[97]],[[120277,120277],\"mapped\",[98]],[[120278,120278],\"mapped\",[99]],[[120279,120279],\"mapped\",[100]],[[120280,120280],\"mapped\",[101]],[[120281,120281],\"mapped\",[102]],[[120282,120282],\"mapped\",[103]],[[120283,120283],\"mapped\",[104]],[[120284,120284],\"mapped\",[105]],[[120285,120285],\"mapped\",[106]],[[120286,120286],\"mapped\",[107]],[[120287,120287],\"mapped\",[108]],[[120288,120288],\"mapped\",[109]],[[120289,120289],\"mapped\",[110]],[[120290,120290],\"mapped\",[111]],[[120291,120291],\"mapped\",[112]],[[120292,120292],\"mapped\",[113]],[[120293,120293],\"mapped\",[114]],[[120294,120294],\"mapped\",[115]],[[120295,120295],\"mapped\",[116]],[[120296,120296],\"mapped\",[117]],[[120297,120297],\"mapped\",[118]],[[120298,120298],\"mapped\",[119]],[[120299,120299],\"mapped\",[120]],[[120300,120300],\"mapped\",[121]],[[120301,120301],\"mapped\",[122]],[[120302,120302],\"mapped\",[97]],[[120303,120303],\"mapped\",[98]],[[120304,120304],\"mapped\",[99]],[[120305,120305],\"mapped\",[100]],[[120306,120306],\"mapped\",[101]],[[120307,120307],\"mapped\",[102]],[[120308,120308],\"mapped\",[103]],[[120309,120309],\"mapped\",[104]],[[120310,120310],\"mapped\",[105]],[[120311,120311],\"mapped\",[106]],[[120312,120312],\"mapped\",[107]],[[120313,120313],\"mapped\",[108]],[[120314,120314],\"mapped\",[109]],[[120315,120315],\"mapped\",[110]],[[120316,120316],\"mapped\",[111]],[[120317,120317],\"mapped\",[112]],[[120318,120318],\"mapped\",[113]],[[120319,120319],\"mapped\",[114]],[[120320,120320],\"mapped\",[115]],[[120321,120321],\"mapped\",[116]],[[120322,120322],\"mapped\",[117]],[[120323,120323],\"mapped\",[118]],[[120324,120324],\"mapped\",[119]],[[120325,120325],\"mapped\",[120]],[[120326,120326],\"mapped\",[121]],[[120327,120327],\"mapped\",[122]],[[120328,120328],\"mapped\",[97]],[[120329,120329],\"mapped\",[98]],[[120330,120330],\"mapped\",[99]],[[120331,120331],\"mapped\",[100]],[[120332,120332],\"mapped\",[101]],[[120333,120333],\"mapped\",[102]],[[120334,120334],\"mapped\",[103]],[[120335,120335],\"mapped\",[104]],[[120336,120336],\"mapped\",[105]],[[120337,120337],\"mapped\",[106]],[[120338,120338],\"mapped\",[107]],[[120339,120339],\"mapped\",[108]],[[120340,120340],\"mapped\",[109]],[[120341,120341],\"mapped\",[110]],[[120342,120342],\"mapped\",[111]],[[120343,120343],\"mapped\",[112]],[[120344,120344],\"mapped\",[113]],[[120345,120345],\"mapped\",[114]],[[120346,120346],\"mapped\",[115]],[[120347,120347],\"mapped\",[116]],[[120348,120348],\"mapped\",[117]],[[120349,120349],\"mapped\",[118]],[[120350,120350],\"mapped\",[119]],[[120351,120351],\"mapped\",[120]],[[120352,120352],\"mapped\",[121]],[[120353,120353],\"mapped\",[122]],[[120354,120354],\"mapped\",[97]],[[120355,120355],\"mapped\",[98]],[[120356,120356],\"mapped\",[99]],[[120357,120357],\"mapped\",[100]],[[120358,120358],\"mapped\",[101]],[[120359,120359],\"mapped\",[102]],[[120360,120360],\"mapped\",[103]],[[120361,120361],\"mapped\",[104]],[[120362,120362],\"mapped\",[105]],[[120363,120363],\"mapped\",[106]],[[120364,120364],\"mapped\",[107]],[[120365,120365],\"mapped\",[108]],[[120366,120366],\"mapped\",[109]],[[120367,120367],\"mapped\",[110]],[[120368,120368],\"mapped\",[111]],[[120369,120369],\"mapped\",[112]],[[120370,120370],\"mapped\",[113]],[[120371,120371],\"mapped\",[114]],[[120372,120372],\"mapped\",[115]],[[120373,120373],\"mapped\",[116]],[[120374,120374],\"mapped\",[117]],[[120375,120375],\"mapped\",[118]],[[120376,120376],\"mapped\",[119]],[[120377,120377],\"mapped\",[120]],[[120378,120378],\"mapped\",[121]],[[120379,120379],\"mapped\",[122]],[[120380,120380],\"mapped\",[97]],[[120381,120381],\"mapped\",[98]],[[120382,120382],\"mapped\",[99]],[[120383,120383],\"mapped\",[100]],[[120384,120384],\"mapped\",[101]],[[120385,120385],\"mapped\",[102]],[[120386,120386],\"mapped\",[103]],[[120387,120387],\"mapped\",[104]],[[120388,120388],\"mapped\",[105]],[[120389,120389],\"mapped\",[106]],[[120390,120390],\"mapped\",[107]],[[120391,120391],\"mapped\",[108]],[[120392,120392],\"mapped\",[109]],[[120393,120393],\"mapped\",[110]],[[120394,120394],\"mapped\",[111]],[[120395,120395],\"mapped\",[112]],[[120396,120396],\"mapped\",[113]],[[120397,120397],\"mapped\",[114]],[[120398,120398],\"mapped\",[115]],[[120399,120399],\"mapped\",[116]],[[120400,120400],\"mapped\",[117]],[[120401,120401],\"mapped\",[118]],[[120402,120402],\"mapped\",[119]],[[120403,120403],\"mapped\",[120]],[[120404,120404],\"mapped\",[121]],[[120405,120405],\"mapped\",[122]],[[120406,120406],\"mapped\",[97]],[[120407,120407],\"mapped\",[98]],[[120408,120408],\"mapped\",[99]],[[120409,120409],\"mapped\",[100]],[[120410,120410],\"mapped\",[101]],[[120411,120411],\"mapped\",[102]],[[120412,120412],\"mapped\",[103]],[[120413,120413],\"mapped\",[104]],[[120414,120414],\"mapped\",[105]],[[120415,120415],\"mapped\",[106]],[[120416,120416],\"mapped\",[107]],[[120417,120417],\"mapped\",[108]],[[120418,120418],\"mapped\",[109]],[[120419,120419],\"mapped\",[110]],[[120420,120420],\"mapped\",[111]],[[120421,120421],\"mapped\",[112]],[[120422,120422],\"mapped\",[113]],[[120423,120423],\"mapped\",[114]],[[120424,120424],\"mapped\",[115]],[[120425,120425],\"mapped\",[116]],[[120426,120426],\"mapped\",[117]],[[120427,120427],\"mapped\",[118]],[[120428,120428],\"mapped\",[119]],[[120429,120429],\"mapped\",[120]],[[120430,120430],\"mapped\",[121]],[[120431,120431],\"mapped\",[122]],[[120432,120432],\"mapped\",[97]],[[120433,120433],\"mapped\",[98]],[[120434,120434],\"mapped\",[99]],[[120435,120435],\"mapped\",[100]],[[120436,120436],\"mapped\",[101]],[[120437,120437],\"mapped\",[102]],[[120438,120438],\"mapped\",[103]],[[120439,120439],\"mapped\",[104]],[[120440,120440],\"mapped\",[105]],[[120441,120441],\"mapped\",[106]],[[120442,120442],\"mapped\",[107]],[[120443,120443],\"mapped\",[108]],[[120444,120444],\"mapped\",[109]],[[120445,120445],\"mapped\",[110]],[[120446,120446],\"mapped\",[111]],[[120447,120447],\"mapped\",[112]],[[120448,120448],\"mapped\",[113]],[[120449,120449],\"mapped\",[114]],[[120450,120450],\"mapped\",[115]],[[120451,120451],\"mapped\",[116]],[[120452,120452],\"mapped\",[117]],[[120453,120453],\"mapped\",[118]],[[120454,120454],\"mapped\",[119]],[[120455,120455],\"mapped\",[120]],[[120456,120456],\"mapped\",[121]],[[120457,120457],\"mapped\",[122]],[[120458,120458],\"mapped\",[97]],[[120459,120459],\"mapped\",[98]],[[120460,120460],\"mapped\",[99]],[[120461,120461],\"mapped\",[100]],[[120462,120462],\"mapped\",[101]],[[120463,120463],\"mapped\",[102]],[[120464,120464],\"mapped\",[103]],[[120465,120465],\"mapped\",[104]],[[120466,120466],\"mapped\",[105]],[[120467,120467],\"mapped\",[106]],[[120468,120468],\"mapped\",[107]],[[120469,120469],\"mapped\",[108]],[[120470,120470],\"mapped\",[109]],[[120471,120471],\"mapped\",[110]],[[120472,120472],\"mapped\",[111]],[[120473,120473],\"mapped\",[112]],[[120474,120474],\"mapped\",[113]],[[120475,120475],\"mapped\",[114]],[[120476,120476],\"mapped\",[115]],[[120477,120477],\"mapped\",[116]],[[120478,120478],\"mapped\",[117]],[[120479,120479],\"mapped\",[118]],[[120480,120480],\"mapped\",[119]],[[120481,120481],\"mapped\",[120]],[[120482,120482],\"mapped\",[121]],[[120483,120483],\"mapped\",[122]],[[120484,120484],\"mapped\",[305]],[[120485,120485],\"mapped\",[567]],[[120486,120487],\"disallowed\"],[[120488,120488],\"mapped\",[945]],[[120489,120489],\"mapped\",[946]],[[120490,120490],\"mapped\",[947]],[[120491,120491],\"mapped\",[948]],[[120492,120492],\"mapped\",[949]],[[120493,120493],\"mapped\",[950]],[[120494,120494],\"mapped\",[951]],[[120495,120495],\"mapped\",[952]],[[120496,120496],\"mapped\",[953]],[[120497,120497],\"mapped\",[954]],[[120498,120498],\"mapped\",[955]],[[120499,120499],\"mapped\",[956]],[[120500,120500],\"mapped\",[957]],[[120501,120501],\"mapped\",[958]],[[120502,120502],\"mapped\",[959]],[[120503,120503],\"mapped\",[960]],[[120504,120504],\"mapped\",[961]],[[120505,120505],\"mapped\",[952]],[[120506,120506],\"mapped\",[963]],[[120507,120507],\"mapped\",[964]],[[120508,120508],\"mapped\",[965]],[[120509,120509],\"mapped\",[966]],[[120510,120510],\"mapped\",[967]],[[120511,120511],\"mapped\",[968]],[[120512,120512],\"mapped\",[969]],[[120513,120513],\"mapped\",[8711]],[[120514,120514],\"mapped\",[945]],[[120515,120515],\"mapped\",[946]],[[120516,120516],\"mapped\",[947]],[[120517,120517],\"mapped\",[948]],[[120518,120518],\"mapped\",[949]],[[120519,120519],\"mapped\",[950]],[[120520,120520],\"mapped\",[951]],[[120521,120521],\"mapped\",[952]],[[120522,120522],\"mapped\",[953]],[[120523,120523],\"mapped\",[954]],[[120524,120524],\"mapped\",[955]],[[120525,120525],\"mapped\",[956]],[[120526,120526],\"mapped\",[957]],[[120527,120527],\"mapped\",[958]],[[120528,120528],\"mapped\",[959]],[[120529,120529],\"mapped\",[960]],[[120530,120530],\"mapped\",[961]],[[120531,120532],\"mapped\",[963]],[[120533,120533],\"mapped\",[964]],[[120534,120534],\"mapped\",[965]],[[120535,120535],\"mapped\",[966]],[[120536,120536],\"mapped\",[967]],[[120537,120537],\"mapped\",[968]],[[120538,120538],\"mapped\",[969]],[[120539,120539],\"mapped\",[8706]],[[120540,120540],\"mapped\",[949]],[[120541,120541],\"mapped\",[952]],[[120542,120542],\"mapped\",[954]],[[120543,120543],\"mapped\",[966]],[[120544,120544],\"mapped\",[961]],[[120545,120545],\"mapped\",[960]],[[120546,120546],\"mapped\",[945]],[[120547,120547],\"mapped\",[946]],[[120548,120548],\"mapped\",[947]],[[120549,120549],\"mapped\",[948]],[[120550,120550],\"mapped\",[949]],[[120551,120551],\"mapped\",[950]],[[120552,120552],\"mapped\",[951]],[[120553,120553],\"mapped\",[952]],[[120554,120554],\"mapped\",[953]],[[120555,120555],\"mapped\",[954]],[[120556,120556],\"mapped\",[955]],[[120557,120557],\"mapped\",[956]],[[120558,120558],\"mapped\",[957]],[[120559,120559],\"mapped\",[958]],[[120560,120560],\"mapped\",[959]],[[120561,120561],\"mapped\",[960]],[[120562,120562],\"mapped\",[961]],[[120563,120563],\"mapped\",[952]],[[120564,120564],\"mapped\",[963]],[[120565,120565],\"mapped\",[964]],[[120566,120566],\"mapped\",[965]],[[120567,120567],\"mapped\",[966]],[[120568,120568],\"mapped\",[967]],[[120569,120569],\"mapped\",[968]],[[120570,120570],\"mapped\",[969]],[[120571,120571],\"mapped\",[8711]],[[120572,120572],\"mapped\",[945]],[[120573,120573],\"mapped\",[946]],[[120574,120574],\"mapped\",[947]],[[120575,120575],\"mapped\",[948]],[[120576,120576],\"mapped\",[949]],[[120577,120577],\"mapped\",[950]],[[120578,120578],\"mapped\",[951]],[[120579,120579],\"mapped\",[952]],[[120580,120580],\"mapped\",[953]],[[120581,120581],\"mapped\",[954]],[[120582,120582],\"mapped\",[955]],[[120583,120583],\"mapped\",[956]],[[120584,120584],\"mapped\",[957]],[[120585,120585],\"mapped\",[958]],[[120586,120586],\"mapped\",[959]],[[120587,120587],\"mapped\",[960]],[[120588,120588],\"mapped\",[961]],[[120589,120590],\"mapped\",[963]],[[120591,120591],\"mapped\",[964]],[[120592,120592],\"mapped\",[965]],[[120593,120593],\"mapped\",[966]],[[120594,120594],\"mapped\",[967]],[[120595,120595],\"mapped\",[968]],[[120596,120596],\"mapped\",[969]],[[120597,120597],\"mapped\",[8706]],[[120598,120598],\"mapped\",[949]],[[120599,120599],\"mapped\",[952]],[[120600,120600],\"mapped\",[954]],[[120601,120601],\"mapped\",[966]],[[120602,120602],\"mapped\",[961]],[[120603,120603],\"mapped\",[960]],[[120604,120604],\"mapped\",[945]],[[120605,120605],\"mapped\",[946]],[[120606,120606],\"mapped\",[947]],[[120607,120607],\"mapped\",[948]],[[120608,120608],\"mapped\",[949]],[[120609,120609],\"mapped\",[950]],[[120610,120610],\"mapped\",[951]],[[120611,120611],\"mapped\",[952]],[[120612,120612],\"mapped\",[953]],[[120613,120613],\"mapped\",[954]],[[120614,120614],\"mapped\",[955]],[[120615,120615],\"mapped\",[956]],[[120616,120616],\"mapped\",[957]],[[120617,120617],\"mapped\",[958]],[[120618,120618],\"mapped\",[959]],[[120619,120619],\"mapped\",[960]],[[120620,120620],\"mapped\",[961]],[[120621,120621],\"mapped\",[952]],[[120622,120622],\"mapped\",[963]],[[120623,120623],\"mapped\",[964]],[[120624,120624],\"mapped\",[965]],[[120625,120625],\"mapped\",[966]],[[120626,120626],\"mapped\",[967]],[[120627,120627],\"mapped\",[968]],[[120628,120628],\"mapped\",[969]],[[120629,120629],\"mapped\",[8711]],[[120630,120630],\"mapped\",[945]],[[120631,120631],\"mapped\",[946]],[[120632,120632],\"mapped\",[947]],[[120633,120633],\"mapped\",[948]],[[120634,120634],\"mapped\",[949]],[[120635,120635],\"mapped\",[950]],[[120636,120636],\"mapped\",[951]],[[120637,120637],\"mapped\",[952]],[[120638,120638],\"mapped\",[953]],[[120639,120639],\"mapped\",[954]],[[120640,120640],\"mapped\",[955]],[[120641,120641],\"mapped\",[956]],[[120642,120642],\"mapped\",[957]],[[120643,120643],\"mapped\",[958]],[[120644,120644],\"mapped\",[959]],[[120645,120645],\"mapped\",[960]],[[120646,120646],\"mapped\",[961]],[[120647,120648],\"mapped\",[963]],[[120649,120649],\"mapped\",[964]],[[120650,120650],\"mapped\",[965]],[[120651,120651],\"mapped\",[966]],[[120652,120652],\"mapped\",[967]],[[120653,120653],\"mapped\",[968]],[[120654,120654],\"mapped\",[969]],[[120655,120655],\"mapped\",[8706]],[[120656,120656],\"mapped\",[949]],[[120657,120657],\"mapped\",[952]],[[120658,120658],\"mapped\",[954]],[[120659,120659],\"mapped\",[966]],[[120660,120660],\"mapped\",[961]],[[120661,120661],\"mapped\",[960]],[[120662,120662],\"mapped\",[945]],[[120663,120663],\"mapped\",[946]],[[120664,120664],\"mapped\",[947]],[[120665,120665],\"mapped\",[948]],[[120666,120666],\"mapped\",[949]],[[120667,120667],\"mapped\",[950]],[[120668,120668],\"mapped\",[951]],[[120669,120669],\"mapped\",[952]],[[120670,120670],\"mapped\",[953]],[[120671,120671],\"mapped\",[954]],[[120672,120672],\"mapped\",[955]],[[120673,120673],\"mapped\",[956]],[[120674,120674],\"mapped\",[957]],[[120675,120675],\"mapped\",[958]],[[120676,120676],\"mapped\",[959]],[[120677,120677],\"mapped\",[960]],[[120678,120678],\"mapped\",[961]],[[120679,120679],\"mapped\",[952]],[[120680,120680],\"mapped\",[963]],[[120681,120681],\"mapped\",[964]],[[120682,120682],\"mapped\",[965]],[[120683,120683],\"mapped\",[966]],[[120684,120684],\"mapped\",[967]],[[120685,120685],\"mapped\",[968]],[[120686,120686],\"mapped\",[969]],[[120687,120687],\"mapped\",[8711]],[[120688,120688],\"mapped\",[945]],[[120689,120689],\"mapped\",[946]],[[120690,120690],\"mapped\",[947]],[[120691,120691],\"mapped\",[948]],[[120692,120692],\"mapped\",[949]],[[120693,120693],\"mapped\",[950]],[[120694,120694],\"mapped\",[951]],[[120695,120695],\"mapped\",[952]],[[120696,120696],\"mapped\",[953]],[[120697,120697],\"mapped\",[954]],[[120698,120698],\"mapped\",[955]],[[120699,120699],\"mapped\",[956]],[[120700,120700],\"mapped\",[957]],[[120701,120701],\"mapped\",[958]],[[120702,120702],\"mapped\",[959]],[[120703,120703],\"mapped\",[960]],[[120704,120704],\"mapped\",[961]],[[120705,120706],\"mapped\",[963]],[[120707,120707],\"mapped\",[964]],[[120708,120708],\"mapped\",[965]],[[120709,120709],\"mapped\",[966]],[[120710,120710],\"mapped\",[967]],[[120711,120711],\"mapped\",[968]],[[120712,120712],\"mapped\",[969]],[[120713,120713],\"mapped\",[8706]],[[120714,120714],\"mapped\",[949]],[[120715,120715],\"mapped\",[952]],[[120716,120716],\"mapped\",[954]],[[120717,120717],\"mapped\",[966]],[[120718,120718],\"mapped\",[961]],[[120719,120719],\"mapped\",[960]],[[120720,120720],\"mapped\",[945]],[[120721,120721],\"mapped\",[946]],[[120722,120722],\"mapped\",[947]],[[120723,120723],\"mapped\",[948]],[[120724,120724],\"mapped\",[949]],[[120725,120725],\"mapped\",[950]],[[120726,120726],\"mapped\",[951]],[[120727,120727],\"mapped\",[952]],[[120728,120728],\"mapped\",[953]],[[120729,120729],\"mapped\",[954]],[[120730,120730],\"mapped\",[955]],[[120731,120731],\"mapped\",[956]],[[120732,120732],\"mapped\",[957]],[[120733,120733],\"mapped\",[958]],[[120734,120734],\"mapped\",[959]],[[120735,120735],\"mapped\",[960]],[[120736,120736],\"mapped\",[961]],[[120737,120737],\"mapped\",[952]],[[120738,120738],\"mapped\",[963]],[[120739,120739],\"mapped\",[964]],[[120740,120740],\"mapped\",[965]],[[120741,120741],\"mapped\",[966]],[[120742,120742],\"mapped\",[967]],[[120743,120743],\"mapped\",[968]],[[120744,120744],\"mapped\",[969]],[[120745,120745],\"mapped\",[8711]],[[120746,120746],\"mapped\",[945]],[[120747,120747],\"mapped\",[946]],[[120748,120748],\"mapped\",[947]],[[120749,120749],\"mapped\",[948]],[[120750,120750],\"mapped\",[949]],[[120751,120751],\"mapped\",[950]],[[120752,120752],\"mapped\",[951]],[[120753,120753],\"mapped\",[952]],[[120754,120754],\"mapped\",[953]],[[120755,120755],\"mapped\",[954]],[[120756,120756],\"mapped\",[955]],[[120757,120757],\"mapped\",[956]],[[120758,120758],\"mapped\",[957]],[[120759,120759],\"mapped\",[958]],[[120760,120760],\"mapped\",[959]],[[120761,120761],\"mapped\",[960]],[[120762,120762],\"mapped\",[961]],[[120763,120764],\"mapped\",[963]],[[120765,120765],\"mapped\",[964]],[[120766,120766],\"mapped\",[965]],[[120767,120767],\"mapped\",[966]],[[120768,120768],\"mapped\",[967]],[[120769,120769],\"mapped\",[968]],[[120770,120770],\"mapped\",[969]],[[120771,120771],\"mapped\",[8706]],[[120772,120772],\"mapped\",[949]],[[120773,120773],\"mapped\",[952]],[[120774,120774],\"mapped\",[954]],[[120775,120775],\"mapped\",[966]],[[120776,120776],\"mapped\",[961]],[[120777,120777],\"mapped\",[960]],[[120778,120779],\"mapped\",[989]],[[120780,120781],\"disallowed\"],[[120782,120782],\"mapped\",[48]],[[120783,120783],\"mapped\",[49]],[[120784,120784],\"mapped\",[50]],[[120785,120785],\"mapped\",[51]],[[120786,120786],\"mapped\",[52]],[[120787,120787],\"mapped\",[53]],[[120788,120788],\"mapped\",[54]],[[120789,120789],\"mapped\",[55]],[[120790,120790],\"mapped\",[56]],[[120791,120791],\"mapped\",[57]],[[120792,120792],\"mapped\",[48]],[[120793,120793],\"mapped\",[49]],[[120794,120794],\"mapped\",[50]],[[120795,120795],\"mapped\",[51]],[[120796,120796],\"mapped\",[52]],[[120797,120797],\"mapped\",[53]],[[120798,120798],\"mapped\",[54]],[[120799,120799],\"mapped\",[55]],[[120800,120800],\"mapped\",[56]],[[120801,120801],\"mapped\",[57]],[[120802,120802],\"mapped\",[48]],[[120803,120803],\"mapped\",[49]],[[120804,120804],\"mapped\",[50]],[[120805,120805],\"mapped\",[51]],[[120806,120806],\"mapped\",[52]],[[120807,120807],\"mapped\",[53]],[[120808,120808],\"mapped\",[54]],[[120809,120809],\"mapped\",[55]],[[120810,120810],\"mapped\",[56]],[[120811,120811],\"mapped\",[57]],[[120812,120812],\"mapped\",[48]],[[120813,120813],\"mapped\",[49]],[[120814,120814],\"mapped\",[50]],[[120815,120815],\"mapped\",[51]],[[120816,120816],\"mapped\",[52]],[[120817,120817],\"mapped\",[53]],[[120818,120818],\"mapped\",[54]],[[120819,120819],\"mapped\",[55]],[[120820,120820],\"mapped\",[56]],[[120821,120821],\"mapped\",[57]],[[120822,120822],\"mapped\",[48]],[[120823,120823],\"mapped\",[49]],[[120824,120824],\"mapped\",[50]],[[120825,120825],\"mapped\",[51]],[[120826,120826],\"mapped\",[52]],[[120827,120827],\"mapped\",[53]],[[120828,120828],\"mapped\",[54]],[[120829,120829],\"mapped\",[55]],[[120830,120830],\"mapped\",[56]],[[120831,120831],\"mapped\",[57]],[[120832,121343],\"valid\",[],\"NV8\"],[[121344,121398],\"valid\"],[[121399,121402],\"valid\",[],\"NV8\"],[[121403,121452],\"valid\"],[[121453,121460],\"valid\",[],\"NV8\"],[[121461,121461],\"valid\"],[[121462,121475],\"valid\",[],\"NV8\"],[[121476,121476],\"valid\"],[[121477,121483],\"valid\",[],\"NV8\"],[[121484,121498],\"disallowed\"],[[121499,121503],\"valid\"],[[121504,121504],\"disallowed\"],[[121505,121519],\"valid\"],[[121520,124927],\"disallowed\"],[[124928,125124],\"valid\"],[[125125,125126],\"disallowed\"],[[125127,125135],\"valid\",[],\"NV8\"],[[125136,125142],\"valid\"],[[125143,126463],\"disallowed\"],[[126464,126464],\"mapped\",[1575]],[[126465,126465],\"mapped\",[1576]],[[126466,126466],\"mapped\",[1580]],[[126467,126467],\"mapped\",[1583]],[[126468,126468],\"disallowed\"],[[126469,126469],\"mapped\",[1608]],[[126470,126470],\"mapped\",[1586]],[[126471,126471],\"mapped\",[1581]],[[126472,126472],\"mapped\",[1591]],[[126473,126473],\"mapped\",[1610]],[[126474,126474],\"mapped\",[1603]],[[126475,126475],\"mapped\",[1604]],[[126476,126476],\"mapped\",[1605]],[[126477,126477],\"mapped\",[1606]],[[126478,126478],\"mapped\",[1587]],[[126479,126479],\"mapped\",[1593]],[[126480,126480],\"mapped\",[1601]],[[126481,126481],\"mapped\",[1589]],[[126482,126482],\"mapped\",[1602]],[[126483,126483],\"mapped\",[1585]],[[126484,126484],\"mapped\",[1588]],[[126485,126485],\"mapped\",[1578]],[[126486,126486],\"mapped\",[1579]],[[126487,126487],\"mapped\",[1582]],[[126488,126488],\"mapped\",[1584]],[[126489,126489],\"mapped\",[1590]],[[126490,126490],\"mapped\",[1592]],[[126491,126491],\"mapped\",[1594]],[[126492,126492],\"mapped\",[1646]],[[126493,126493],\"mapped\",[1722]],[[126494,126494],\"mapped\",[1697]],[[126495,126495],\"mapped\",[1647]],[[126496,126496],\"disallowed\"],[[126497,126497],\"mapped\",[1576]],[[126498,126498],\"mapped\",[1580]],[[126499,126499],\"disallowed\"],[[126500,126500],\"mapped\",[1607]],[[126501,126502],\"disallowed\"],[[126503,126503],\"mapped\",[1581]],[[126504,126504],\"disallowed\"],[[126505,126505],\"mapped\",[1610]],[[126506,126506],\"mapped\",[1603]],[[126507,126507],\"mapped\",[1604]],[[126508,126508],\"mapped\",[1605]],[[126509,126509],\"mapped\",[1606]],[[126510,126510],\"mapped\",[1587]],[[126511,126511],\"mapped\",[1593]],[[126512,126512],\"mapped\",[1601]],[[126513,126513],\"mapped\",[1589]],[[126514,126514],\"mapped\",[1602]],[[126515,126515],\"disallowed\"],[[126516,126516],\"mapped\",[1588]],[[126517,126517],\"mapped\",[1578]],[[126518,126518],\"mapped\",[1579]],[[126519,126519],\"mapped\",[1582]],[[126520,126520],\"disallowed\"],[[126521,126521],\"mapped\",[1590]],[[126522,126522],\"disallowed\"],[[126523,126523],\"mapped\",[1594]],[[126524,126529],\"disallowed\"],[[126530,126530],\"mapped\",[1580]],[[126531,126534],\"disallowed\"],[[126535,126535],\"mapped\",[1581]],[[126536,126536],\"disallowed\"],[[126537,126537],\"mapped\",[1610]],[[126538,126538],\"disallowed\"],[[126539,126539],\"mapped\",[1604]],[[126540,126540],\"disallowed\"],[[126541,126541],\"mapped\",[1606]],[[126542,126542],\"mapped\",[1587]],[[126543,126543],\"mapped\",[1593]],[[126544,126544],\"disallowed\"],[[126545,126545],\"mapped\",[1589]],[[126546,126546],\"mapped\",[1602]],[[126547,126547],\"disallowed\"],[[126548,126548],\"mapped\",[1588]],[[126549,126550],\"disallowed\"],[[126551,126551],\"mapped\",[1582]],[[126552,126552],\"disallowed\"],[[126553,126553],\"mapped\",[1590]],[[126554,126554],\"disallowed\"],[[126555,126555],\"mapped\",[1594]],[[126556,126556],\"disallowed\"],[[126557,126557],\"mapped\",[1722]],[[126558,126558],\"disallowed\"],[[126559,126559],\"mapped\",[1647]],[[126560,126560],\"disallowed\"],[[126561,126561],\"mapped\",[1576]],[[126562,126562],\"mapped\",[1580]],[[126563,126563],\"disallowed\"],[[126564,126564],\"mapped\",[1607]],[[126565,126566],\"disallowed\"],[[126567,126567],\"mapped\",[1581]],[[126568,126568],\"mapped\",[1591]],[[126569,126569],\"mapped\",[1610]],[[126570,126570],\"mapped\",[1603]],[[126571,126571],\"disallowed\"],[[126572,126572],\"mapped\",[1605]],[[126573,126573],\"mapped\",[1606]],[[126574,126574],\"mapped\",[1587]],[[126575,126575],\"mapped\",[1593]],[[126576,126576],\"mapped\",[1601]],[[126577,126577],\"mapped\",[1589]],[[126578,126578],\"mapped\",[1602]],[[126579,126579],\"disallowed\"],[[126580,126580],\"mapped\",[1588]],[[126581,126581],\"mapped\",[1578]],[[126582,126582],\"mapped\",[1579]],[[126583,126583],\"mapped\",[1582]],[[126584,126584],\"disallowed\"],[[126585,126585],\"mapped\",[1590]],[[126586,126586],\"mapped\",[1592]],[[126587,126587],\"mapped\",[1594]],[[126588,126588],\"mapped\",[1646]],[[126589,126589],\"disallowed\"],[[126590,126590],\"mapped\",[1697]],[[126591,126591],\"disallowed\"],[[126592,126592],\"mapped\",[1575]],[[126593,126593],\"mapped\",[1576]],[[126594,126594],\"mapped\",[1580]],[[126595,126595],\"mapped\",[1583]],[[126596,126596],\"mapped\",[1607]],[[126597,126597],\"mapped\",[1608]],[[126598,126598],\"mapped\",[1586]],[[126599,126599],\"mapped\",[1581]],[[126600,126600],\"mapped\",[1591]],[[126601,126601],\"mapped\",[1610]],[[126602,126602],\"disallowed\"],[[126603,126603],\"mapped\",[1604]],[[126604,126604],\"mapped\",[1605]],[[126605,126605],\"mapped\",[1606]],[[126606,126606],\"mapped\",[1587]],[[126607,126607],\"mapped\",[1593]],[[126608,126608],\"mapped\",[1601]],[[126609,126609],\"mapped\",[1589]],[[126610,126610],\"mapped\",[1602]],[[126611,126611],\"mapped\",[1585]],[[126612,126612],\"mapped\",[1588]],[[126613,126613],\"mapped\",[1578]],[[126614,126614],\"mapped\",[1579]],[[126615,126615],\"mapped\",[1582]],[[126616,126616],\"mapped\",[1584]],[[126617,126617],\"mapped\",[1590]],[[126618,126618],\"mapped\",[1592]],[[126619,126619],\"mapped\",[1594]],[[126620,126624],\"disallowed\"],[[126625,126625],\"mapped\",[1576]],[[126626,126626],\"mapped\",[1580]],[[126627,126627],\"mapped\",[1583]],[[126628,126628],\"disallowed\"],[[126629,126629],\"mapped\",[1608]],[[126630,126630],\"mapped\",[1586]],[[126631,126631],\"mapped\",[1581]],[[126632,126632],\"mapped\",[1591]],[[126633,126633],\"mapped\",[1610]],[[126634,126634],\"disallowed\"],[[126635,126635],\"mapped\",[1604]],[[126636,126636],\"mapped\",[1605]],[[126637,126637],\"mapped\",[1606]],[[126638,126638],\"mapped\",[1587]],[[126639,126639],\"mapped\",[1593]],[[126640,126640],\"mapped\",[1601]],[[126641,126641],\"mapped\",[1589]],[[126642,126642],\"mapped\",[1602]],[[126643,126643],\"mapped\",[1585]],[[126644,126644],\"mapped\",[1588]],[[126645,126645],\"mapped\",[1578]],[[126646,126646],\"mapped\",[1579]],[[126647,126647],\"mapped\",[1582]],[[126648,126648],\"mapped\",[1584]],[[126649,126649],\"mapped\",[1590]],[[126650,126650],\"mapped\",[1592]],[[126651,126651],\"mapped\",[1594]],[[126652,126703],\"disallowed\"],[[126704,126705],\"valid\",[],\"NV8\"],[[126706,126975],\"disallowed\"],[[126976,127019],\"valid\",[],\"NV8\"],[[127020,127023],\"disallowed\"],[[127024,127123],\"valid\",[],\"NV8\"],[[127124,127135],\"disallowed\"],[[127136,127150],\"valid\",[],\"NV8\"],[[127151,127152],\"disallowed\"],[[127153,127166],\"valid\",[],\"NV8\"],[[127167,127167],\"valid\",[],\"NV8\"],[[127168,127168],\"disallowed\"],[[127169,127183],\"valid\",[],\"NV8\"],[[127184,127184],\"disallowed\"],[[127185,127199],\"valid\",[],\"NV8\"],[[127200,127221],\"valid\",[],\"NV8\"],[[127222,127231],\"disallowed\"],[[127232,127232],\"disallowed\"],[[127233,127233],\"disallowed_STD3_mapped\",[48,44]],[[127234,127234],\"disallowed_STD3_mapped\",[49,44]],[[127235,127235],\"disallowed_STD3_mapped\",[50,44]],[[127236,127236],\"disallowed_STD3_mapped\",[51,44]],[[127237,127237],\"disallowed_STD3_mapped\",[52,44]],[[127238,127238],\"disallowed_STD3_mapped\",[53,44]],[[127239,127239],\"disallowed_STD3_mapped\",[54,44]],[[127240,127240],\"disallowed_STD3_mapped\",[55,44]],[[127241,127241],\"disallowed_STD3_mapped\",[56,44]],[[127242,127242],\"disallowed_STD3_mapped\",[57,44]],[[127243,127244],\"valid\",[],\"NV8\"],[[127245,127247],\"disallowed\"],[[127248,127248],\"disallowed_STD3_mapped\",[40,97,41]],[[127249,127249],\"disallowed_STD3_mapped\",[40,98,41]],[[127250,127250],\"disallowed_STD3_mapped\",[40,99,41]],[[127251,127251],\"disallowed_STD3_mapped\",[40,100,41]],[[127252,127252],\"disallowed_STD3_mapped\",[40,101,41]],[[127253,127253],\"disallowed_STD3_mapped\",[40,102,41]],[[127254,127254],\"disallowed_STD3_mapped\",[40,103,41]],[[127255,127255],\"disallowed_STD3_mapped\",[40,104,41]],[[127256,127256],\"disallowed_STD3_mapped\",[40,105,41]],[[127257,127257],\"disallowed_STD3_mapped\",[40,106,41]],[[127258,127258],\"disallowed_STD3_mapped\",[40,107,41]],[[127259,127259],\"disallowed_STD3_mapped\",[40,108,41]],[[127260,127260],\"disallowed_STD3_mapped\",[40,109,41]],[[127261,127261],\"disallowed_STD3_mapped\",[40,110,41]],[[127262,127262],\"disallowed_STD3_mapped\",[40,111,41]],[[127263,127263],\"disallowed_STD3_mapped\",[40,112,41]],[[127264,127264],\"disallowed_STD3_mapped\",[40,113,41]],[[127265,127265],\"disallowed_STD3_mapped\",[40,114,41]],[[127266,127266],\"disallowed_STD3_mapped\",[40,115,41]],[[127267,127267],\"disallowed_STD3_mapped\",[40,116,41]],[[127268,127268],\"disallowed_STD3_mapped\",[40,117,41]],[[127269,127269],\"disallowed_STD3_mapped\",[40,118,41]],[[127270,127270],\"disallowed_STD3_mapped\",[40,119,41]],[[127271,127271],\"disallowed_STD3_mapped\",[40,120,41]],[[127272,127272],\"disallowed_STD3_mapped\",[40,121,41]],[[127273,127273],\"disallowed_STD3_mapped\",[40,122,41]],[[127274,127274],\"mapped\",[12308,115,12309]],[[127275,127275],\"mapped\",[99]],[[127276,127276],\"mapped\",[114]],[[127277,127277],\"mapped\",[99,100]],[[127278,127278],\"mapped\",[119,122]],[[127279,127279],\"disallowed\"],[[127280,127280],\"mapped\",[97]],[[127281,127281],\"mapped\",[98]],[[127282,127282],\"mapped\",[99]],[[127283,127283],\"mapped\",[100]],[[127284,127284],\"mapped\",[101]],[[127285,127285],\"mapped\",[102]],[[127286,127286],\"mapped\",[103]],[[127287,127287],\"mapped\",[104]],[[127288,127288],\"mapped\",[105]],[[127289,127289],\"mapped\",[106]],[[127290,127290],\"mapped\",[107]],[[127291,127291],\"mapped\",[108]],[[127292,127292],\"mapped\",[109]],[[127293,127293],\"mapped\",[110]],[[127294,127294],\"mapped\",[111]],[[127295,127295],\"mapped\",[112]],[[127296,127296],\"mapped\",[113]],[[127297,127297],\"mapped\",[114]],[[127298,127298],\"mapped\",[115]],[[127299,127299],\"mapped\",[116]],[[127300,127300],\"mapped\",[117]],[[127301,127301],\"mapped\",[118]],[[127302,127302],\"mapped\",[119]],[[127303,127303],\"mapped\",[120]],[[127304,127304],\"mapped\",[121]],[[127305,127305],\"mapped\",[122]],[[127306,127306],\"mapped\",[104,118]],[[127307,127307],\"mapped\",[109,118]],[[127308,127308],\"mapped\",[115,100]],[[127309,127309],\"mapped\",[115,115]],[[127310,127310],\"mapped\",[112,112,118]],[[127311,127311],\"mapped\",[119,99]],[[127312,127318],\"valid\",[],\"NV8\"],[[127319,127319],\"valid\",[],\"NV8\"],[[127320,127326],\"valid\",[],\"NV8\"],[[127327,127327],\"valid\",[],\"NV8\"],[[127328,127337],\"valid\",[],\"NV8\"],[[127338,127338],\"mapped\",[109,99]],[[127339,127339],\"mapped\",[109,100]],[[127340,127343],\"disallowed\"],[[127344,127352],\"valid\",[],\"NV8\"],[[127353,127353],\"valid\",[],\"NV8\"],[[127354,127354],\"valid\",[],\"NV8\"],[[127355,127356],\"valid\",[],\"NV8\"],[[127357,127358],\"valid\",[],\"NV8\"],[[127359,127359],\"valid\",[],\"NV8\"],[[127360,127369],\"valid\",[],\"NV8\"],[[127370,127373],\"valid\",[],\"NV8\"],[[127374,127375],\"valid\",[],\"NV8\"],[[127376,127376],\"mapped\",[100,106]],[[127377,127386],\"valid\",[],\"NV8\"],[[127387,127461],\"disallowed\"],[[127462,127487],\"valid\",[],\"NV8\"],[[127488,127488],\"mapped\",[12411,12363]],[[127489,127489],\"mapped\",[12467,12467]],[[127490,127490],\"mapped\",[12469]],[[127491,127503],\"disallowed\"],[[127504,127504],\"mapped\",[25163]],[[127505,127505],\"mapped\",[23383]],[[127506,127506],\"mapped\",[21452]],[[127507,127507],\"mapped\",[12487]],[[127508,127508],\"mapped\",[20108]],[[127509,127509],\"mapped\",[22810]],[[127510,127510],\"mapped\",[35299]],[[127511,127511],\"mapped\",[22825]],[[127512,127512],\"mapped\",[20132]],[[127513,127513],\"mapped\",[26144]],[[127514,127514],\"mapped\",[28961]],[[127515,127515],\"mapped\",[26009]],[[127516,127516],\"mapped\",[21069]],[[127517,127517],\"mapped\",[24460]],[[127518,127518],\"mapped\",[20877]],[[127519,127519],\"mapped\",[26032]],[[127520,127520],\"mapped\",[21021]],[[127521,127521],\"mapped\",[32066]],[[127522,127522],\"mapped\",[29983]],[[127523,127523],\"mapped\",[36009]],[[127524,127524],\"mapped\",[22768]],[[127525,127525],\"mapped\",[21561]],[[127526,127526],\"mapped\",[28436]],[[127527,127527],\"mapped\",[25237]],[[127528,127528],\"mapped\",[25429]],[[127529,127529],\"mapped\",[19968]],[[127530,127530],\"mapped\",[19977]],[[127531,127531],\"mapped\",[36938]],[[127532,127532],\"mapped\",[24038]],[[127533,127533],\"mapped\",[20013]],[[127534,127534],\"mapped\",[21491]],[[127535,127535],\"mapped\",[25351]],[[127536,127536],\"mapped\",[36208]],[[127537,127537],\"mapped\",[25171]],[[127538,127538],\"mapped\",[31105]],[[127539,127539],\"mapped\",[31354]],[[127540,127540],\"mapped\",[21512]],[[127541,127541],\"mapped\",[28288]],[[127542,127542],\"mapped\",[26377]],[[127543,127543],\"mapped\",[26376]],[[127544,127544],\"mapped\",[30003]],[[127545,127545],\"mapped\",[21106]],[[127546,127546],\"mapped\",[21942]],[[127547,127551],\"disallowed\"],[[127552,127552],\"mapped\",[12308,26412,12309]],[[127553,127553],\"mapped\",[12308,19977,12309]],[[127554,127554],\"mapped\",[12308,20108,12309]],[[127555,127555],\"mapped\",[12308,23433,12309]],[[127556,127556],\"mapped\",[12308,28857,12309]],[[127557,127557],\"mapped\",[12308,25171,12309]],[[127558,127558],\"mapped\",[12308,30423,12309]],[[127559,127559],\"mapped\",[12308,21213,12309]],[[127560,127560],\"mapped\",[12308,25943,12309]],[[127561,127567],\"disallowed\"],[[127568,127568],\"mapped\",[24471]],[[127569,127569],\"mapped\",[21487]],[[127570,127743],\"disallowed\"],[[127744,127776],\"valid\",[],\"NV8\"],[[127777,127788],\"valid\",[],\"NV8\"],[[127789,127791],\"valid\",[],\"NV8\"],[[127792,127797],\"valid\",[],\"NV8\"],[[127798,127798],\"valid\",[],\"NV8\"],[[127799,127868],\"valid\",[],\"NV8\"],[[127869,127869],\"valid\",[],\"NV8\"],[[127870,127871],\"valid\",[],\"NV8\"],[[127872,127891],\"valid\",[],\"NV8\"],[[127892,127903],\"valid\",[],\"NV8\"],[[127904,127940],\"valid\",[],\"NV8\"],[[127941,127941],\"valid\",[],\"NV8\"],[[127942,127946],\"valid\",[],\"NV8\"],[[127947,127950],\"valid\",[],\"NV8\"],[[127951,127955],\"valid\",[],\"NV8\"],[[127956,127967],\"valid\",[],\"NV8\"],[[127968,127984],\"valid\",[],\"NV8\"],[[127985,127991],\"valid\",[],\"NV8\"],[[127992,127999],\"valid\",[],\"NV8\"],[[128000,128062],\"valid\",[],\"NV8\"],[[128063,128063],\"valid\",[],\"NV8\"],[[128064,128064],\"valid\",[],\"NV8\"],[[128065,128065],\"valid\",[],\"NV8\"],[[128066,128247],\"valid\",[],\"NV8\"],[[128248,128248],\"valid\",[],\"NV8\"],[[128249,128252],\"valid\",[],\"NV8\"],[[128253,128254],\"valid\",[],\"NV8\"],[[128255,128255],\"valid\",[],\"NV8\"],[[128256,128317],\"valid\",[],\"NV8\"],[[128318,128319],\"valid\",[],\"NV8\"],[[128320,128323],\"valid\",[],\"NV8\"],[[128324,128330],\"valid\",[],\"NV8\"],[[128331,128335],\"valid\",[],\"NV8\"],[[128336,128359],\"valid\",[],\"NV8\"],[[128360,128377],\"valid\",[],\"NV8\"],[[128378,128378],\"disallowed\"],[[128379,128419],\"valid\",[],\"NV8\"],[[128420,128420],\"disallowed\"],[[128421,128506],\"valid\",[],\"NV8\"],[[128507,128511],\"valid\",[],\"NV8\"],[[128512,128512],\"valid\",[],\"NV8\"],[[128513,128528],\"valid\",[],\"NV8\"],[[128529,128529],\"valid\",[],\"NV8\"],[[128530,128532],\"valid\",[],\"NV8\"],[[128533,128533],\"valid\",[],\"NV8\"],[[128534,128534],\"valid\",[],\"NV8\"],[[128535,128535],\"valid\",[],\"NV8\"],[[128536,128536],\"valid\",[],\"NV8\"],[[128537,128537],\"valid\",[],\"NV8\"],[[128538,128538],\"valid\",[],\"NV8\"],[[128539,128539],\"valid\",[],\"NV8\"],[[128540,128542],\"valid\",[],\"NV8\"],[[128543,128543],\"valid\",[],\"NV8\"],[[128544,128549],\"valid\",[],\"NV8\"],[[128550,128551],\"valid\",[],\"NV8\"],[[128552,128555],\"valid\",[],\"NV8\"],[[128556,128556],\"valid\",[],\"NV8\"],[[128557,128557],\"valid\",[],\"NV8\"],[[128558,128559],\"valid\",[],\"NV8\"],[[128560,128563],\"valid\",[],\"NV8\"],[[128564,128564],\"valid\",[],\"NV8\"],[[128565,128576],\"valid\",[],\"NV8\"],[[128577,128578],\"valid\",[],\"NV8\"],[[128579,128580],\"valid\",[],\"NV8\"],[[128581,128591],\"valid\",[],\"NV8\"],[[128592,128639],\"valid\",[],\"NV8\"],[[128640,128709],\"valid\",[],\"NV8\"],[[128710,128719],\"valid\",[],\"NV8\"],[[128720,128720],\"valid\",[],\"NV8\"],[[128721,128735],\"disallowed\"],[[128736,128748],\"valid\",[],\"NV8\"],[[128749,128751],\"disallowed\"],[[128752,128755],\"valid\",[],\"NV8\"],[[128756,128767],\"disallowed\"],[[128768,128883],\"valid\",[],\"NV8\"],[[128884,128895],\"disallowed\"],[[128896,128980],\"valid\",[],\"NV8\"],[[128981,129023],\"disallowed\"],[[129024,129035],\"valid\",[],\"NV8\"],[[129036,129039],\"disallowed\"],[[129040,129095],\"valid\",[],\"NV8\"],[[129096,129103],\"disallowed\"],[[129104,129113],\"valid\",[],\"NV8\"],[[129114,129119],\"disallowed\"],[[129120,129159],\"valid\",[],\"NV8\"],[[129160,129167],\"disallowed\"],[[129168,129197],\"valid\",[],\"NV8\"],[[129198,129295],\"disallowed\"],[[129296,129304],\"valid\",[],\"NV8\"],[[129305,129407],\"disallowed\"],[[129408,129412],\"valid\",[],\"NV8\"],[[129413,129471],\"disallowed\"],[[129472,129472],\"valid\",[],\"NV8\"],[[129473,131069],\"disallowed\"],[[131070,131071],\"disallowed\"],[[131072,173782],\"valid\"],[[173783,173823],\"disallowed\"],[[173824,177972],\"valid\"],[[177973,177983],\"disallowed\"],[[177984,178205],\"valid\"],[[178206,178207],\"disallowed\"],[[178208,183969],\"valid\"],[[183970,194559],\"disallowed\"],[[194560,194560],\"mapped\",[20029]],[[194561,194561],\"mapped\",[20024]],[[194562,194562],\"mapped\",[20033]],[[194563,194563],\"mapped\",[131362]],[[194564,194564],\"mapped\",[20320]],[[194565,194565],\"mapped\",[20398]],[[194566,194566],\"mapped\",[20411]],[[194567,194567],\"mapped\",[20482]],[[194568,194568],\"mapped\",[20602]],[[194569,194569],\"mapped\",[20633]],[[194570,194570],\"mapped\",[20711]],[[194571,194571],\"mapped\",[20687]],[[194572,194572],\"mapped\",[13470]],[[194573,194573],\"mapped\",[132666]],[[194574,194574],\"mapped\",[20813]],[[194575,194575],\"mapped\",[20820]],[[194576,194576],\"mapped\",[20836]],[[194577,194577],\"mapped\",[20855]],[[194578,194578],\"mapped\",[132380]],[[194579,194579],\"mapped\",[13497]],[[194580,194580],\"mapped\",[20839]],[[194581,194581],\"mapped\",[20877]],[[194582,194582],\"mapped\",[132427]],[[194583,194583],\"mapped\",[20887]],[[194584,194584],\"mapped\",[20900]],[[194585,194585],\"mapped\",[20172]],[[194586,194586],\"mapped\",[20908]],[[194587,194587],\"mapped\",[20917]],[[194588,194588],\"mapped\",[168415]],[[194589,194589],\"mapped\",[20981]],[[194590,194590],\"mapped\",[20995]],[[194591,194591],\"mapped\",[13535]],[[194592,194592],\"mapped\",[21051]],[[194593,194593],\"mapped\",[21062]],[[194594,194594],\"mapped\",[21106]],[[194595,194595],\"mapped\",[21111]],[[194596,194596],\"mapped\",[13589]],[[194597,194597],\"mapped\",[21191]],[[194598,194598],\"mapped\",[21193]],[[194599,194599],\"mapped\",[21220]],[[194600,194600],\"mapped\",[21242]],[[194601,194601],\"mapped\",[21253]],[[194602,194602],\"mapped\",[21254]],[[194603,194603],\"mapped\",[21271]],[[194604,194604],\"mapped\",[21321]],[[194605,194605],\"mapped\",[21329]],[[194606,194606],\"mapped\",[21338]],[[194607,194607],\"mapped\",[21363]],[[194608,194608],\"mapped\",[21373]],[[194609,194611],\"mapped\",[21375]],[[194612,194612],\"mapped\",[133676]],[[194613,194613],\"mapped\",[28784]],[[194614,194614],\"mapped\",[21450]],[[194615,194615],\"mapped\",[21471]],[[194616,194616],\"mapped\",[133987]],[[194617,194617],\"mapped\",[21483]],[[194618,194618],\"mapped\",[21489]],[[194619,194619],\"mapped\",[21510]],[[194620,194620],\"mapped\",[21662]],[[194621,194621],\"mapped\",[21560]],[[194622,194622],\"mapped\",[21576]],[[194623,194623],\"mapped\",[21608]],[[194624,194624],\"mapped\",[21666]],[[194625,194625],\"mapped\",[21750]],[[194626,194626],\"mapped\",[21776]],[[194627,194627],\"mapped\",[21843]],[[194628,194628],\"mapped\",[21859]],[[194629,194630],\"mapped\",[21892]],[[194631,194631],\"mapped\",[21913]],[[194632,194632],\"mapped\",[21931]],[[194633,194633],\"mapped\",[21939]],[[194634,194634],\"mapped\",[21954]],[[194635,194635],\"mapped\",[22294]],[[194636,194636],\"mapped\",[22022]],[[194637,194637],\"mapped\",[22295]],[[194638,194638],\"mapped\",[22097]],[[194639,194639],\"mapped\",[22132]],[[194640,194640],\"mapped\",[20999]],[[194641,194641],\"mapped\",[22766]],[[194642,194642],\"mapped\",[22478]],[[194643,194643],\"mapped\",[22516]],[[194644,194644],\"mapped\",[22541]],[[194645,194645],\"mapped\",[22411]],[[194646,194646],\"mapped\",[22578]],[[194647,194647],\"mapped\",[22577]],[[194648,194648],\"mapped\",[22700]],[[194649,194649],\"mapped\",[136420]],[[194650,194650],\"mapped\",[22770]],[[194651,194651],\"mapped\",[22775]],[[194652,194652],\"mapped\",[22790]],[[194653,194653],\"mapped\",[22810]],[[194654,194654],\"mapped\",[22818]],[[194655,194655],\"mapped\",[22882]],[[194656,194656],\"mapped\",[136872]],[[194657,194657],\"mapped\",[136938]],[[194658,194658],\"mapped\",[23020]],[[194659,194659],\"mapped\",[23067]],[[194660,194660],\"mapped\",[23079]],[[194661,194661],\"mapped\",[23000]],[[194662,194662],\"mapped\",[23142]],[[194663,194663],\"mapped\",[14062]],[[194664,194664],\"disallowed\"],[[194665,194665],\"mapped\",[23304]],[[194666,194667],\"mapped\",[23358]],[[194668,194668],\"mapped\",[137672]],[[194669,194669],\"mapped\",[23491]],[[194670,194670],\"mapped\",[23512]],[[194671,194671],\"mapped\",[23527]],[[194672,194672],\"mapped\",[23539]],[[194673,194673],\"mapped\",[138008]],[[194674,194674],\"mapped\",[23551]],[[194675,194675],\"mapped\",[23558]],[[194676,194676],\"disallowed\"],[[194677,194677],\"mapped\",[23586]],[[194678,194678],\"mapped\",[14209]],[[194679,194679],\"mapped\",[23648]],[[194680,194680],\"mapped\",[23662]],[[194681,194681],\"mapped\",[23744]],[[194682,194682],\"mapped\",[23693]],[[194683,194683],\"mapped\",[138724]],[[194684,194684],\"mapped\",[23875]],[[194685,194685],\"mapped\",[138726]],[[194686,194686],\"mapped\",[23918]],[[194687,194687],\"mapped\",[23915]],[[194688,194688],\"mapped\",[23932]],[[194689,194689],\"mapped\",[24033]],[[194690,194690],\"mapped\",[24034]],[[194691,194691],\"mapped\",[14383]],[[194692,194692],\"mapped\",[24061]],[[194693,194693],\"mapped\",[24104]],[[194694,194694],\"mapped\",[24125]],[[194695,194695],\"mapped\",[24169]],[[194696,194696],\"mapped\",[14434]],[[194697,194697],\"mapped\",[139651]],[[194698,194698],\"mapped\",[14460]],[[194699,194699],\"mapped\",[24240]],[[194700,194700],\"mapped\",[24243]],[[194701,194701],\"mapped\",[24246]],[[194702,194702],\"mapped\",[24266]],[[194703,194703],\"mapped\",[172946]],[[194704,194704],\"mapped\",[24318]],[[194705,194706],\"mapped\",[140081]],[[194707,194707],\"mapped\",[33281]],[[194708,194709],\"mapped\",[24354]],[[194710,194710],\"mapped\",[14535]],[[194711,194711],\"mapped\",[144056]],[[194712,194712],\"mapped\",[156122]],[[194713,194713],\"mapped\",[24418]],[[194714,194714],\"mapped\",[24427]],[[194715,194715],\"mapped\",[14563]],[[194716,194716],\"mapped\",[24474]],[[194717,194717],\"mapped\",[24525]],[[194718,194718],\"mapped\",[24535]],[[194719,194719],\"mapped\",[24569]],[[194720,194720],\"mapped\",[24705]],[[194721,194721],\"mapped\",[14650]],[[194722,194722],\"mapped\",[14620]],[[194723,194723],\"mapped\",[24724]],[[194724,194724],\"mapped\",[141012]],[[194725,194725],\"mapped\",[24775]],[[194726,194726],\"mapped\",[24904]],[[194727,194727],\"mapped\",[24908]],[[194728,194728],\"mapped\",[24910]],[[194729,194729],\"mapped\",[24908]],[[194730,194730],\"mapped\",[24954]],[[194731,194731],\"mapped\",[24974]],[[194732,194732],\"mapped\",[25010]],[[194733,194733],\"mapped\",[24996]],[[194734,194734],\"mapped\",[25007]],[[194735,194735],\"mapped\",[25054]],[[194736,194736],\"mapped\",[25074]],[[194737,194737],\"mapped\",[25078]],[[194738,194738],\"mapped\",[25104]],[[194739,194739],\"mapped\",[25115]],[[194740,194740],\"mapped\",[25181]],[[194741,194741],\"mapped\",[25265]],[[194742,194742],\"mapped\",[25300]],[[194743,194743],\"mapped\",[25424]],[[194744,194744],\"mapped\",[142092]],[[194745,194745],\"mapped\",[25405]],[[194746,194746],\"mapped\",[25340]],[[194747,194747],\"mapped\",[25448]],[[194748,194748],\"mapped\",[25475]],[[194749,194749],\"mapped\",[25572]],[[194750,194750],\"mapped\",[142321]],[[194751,194751],\"mapped\",[25634]],[[194752,194752],\"mapped\",[25541]],[[194753,194753],\"mapped\",[25513]],[[194754,194754],\"mapped\",[14894]],[[194755,194755],\"mapped\",[25705]],[[194756,194756],\"mapped\",[25726]],[[194757,194757],\"mapped\",[25757]],[[194758,194758],\"mapped\",[25719]],[[194759,194759],\"mapped\",[14956]],[[194760,194760],\"mapped\",[25935]],[[194761,194761],\"mapped\",[25964]],[[194762,194762],\"mapped\",[143370]],[[194763,194763],\"mapped\",[26083]],[[194764,194764],\"mapped\",[26360]],[[194765,194765],\"mapped\",[26185]],[[194766,194766],\"mapped\",[15129]],[[194767,194767],\"mapped\",[26257]],[[194768,194768],\"mapped\",[15112]],[[194769,194769],\"mapped\",[15076]],[[194770,194770],\"mapped\",[20882]],[[194771,194771],\"mapped\",[20885]],[[194772,194772],\"mapped\",[26368]],[[194773,194773],\"mapped\",[26268]],[[194774,194774],\"mapped\",[32941]],[[194775,194775],\"mapped\",[17369]],[[194776,194776],\"mapped\",[26391]],[[194777,194777],\"mapped\",[26395]],[[194778,194778],\"mapped\",[26401]],[[194779,194779],\"mapped\",[26462]],[[194780,194780],\"mapped\",[26451]],[[194781,194781],\"mapped\",[144323]],[[194782,194782],\"mapped\",[15177]],[[194783,194783],\"mapped\",[26618]],[[194784,194784],\"mapped\",[26501]],[[194785,194785],\"mapped\",[26706]],[[194786,194786],\"mapped\",[26757]],[[194787,194787],\"mapped\",[144493]],[[194788,194788],\"mapped\",[26766]],[[194789,194789],\"mapped\",[26655]],[[194790,194790],\"mapped\",[26900]],[[194791,194791],\"mapped\",[15261]],[[194792,194792],\"mapped\",[26946]],[[194793,194793],\"mapped\",[27043]],[[194794,194794],\"mapped\",[27114]],[[194795,194795],\"mapped\",[27304]],[[194796,194796],\"mapped\",[145059]],[[194797,194797],\"mapped\",[27355]],[[194798,194798],\"mapped\",[15384]],[[194799,194799],\"mapped\",[27425]],[[194800,194800],\"mapped\",[145575]],[[194801,194801],\"mapped\",[27476]],[[194802,194802],\"mapped\",[15438]],[[194803,194803],\"mapped\",[27506]],[[194804,194804],\"mapped\",[27551]],[[194805,194805],\"mapped\",[27578]],[[194806,194806],\"mapped\",[27579]],[[194807,194807],\"mapped\",[146061]],[[194808,194808],\"mapped\",[138507]],[[194809,194809],\"mapped\",[146170]],[[194810,194810],\"mapped\",[27726]],[[194811,194811],\"mapped\",[146620]],[[194812,194812],\"mapped\",[27839]],[[194813,194813],\"mapped\",[27853]],[[194814,194814],\"mapped\",[27751]],[[194815,194815],\"mapped\",[27926]],[[194816,194816],\"mapped\",[27966]],[[194817,194817],\"mapped\",[28023]],[[194818,194818],\"mapped\",[27969]],[[194819,194819],\"mapped\",[28009]],[[194820,194820],\"mapped\",[28024]],[[194821,194821],\"mapped\",[28037]],[[194822,194822],\"mapped\",[146718]],[[194823,194823],\"mapped\",[27956]],[[194824,194824],\"mapped\",[28207]],[[194825,194825],\"mapped\",[28270]],[[194826,194826],\"mapped\",[15667]],[[194827,194827],\"mapped\",[28363]],[[194828,194828],\"mapped\",[28359]],[[194829,194829],\"mapped\",[147153]],[[194830,194830],\"mapped\",[28153]],[[194831,194831],\"mapped\",[28526]],[[194832,194832],\"mapped\",[147294]],[[194833,194833],\"mapped\",[147342]],[[194834,194834],\"mapped\",[28614]],[[194835,194835],\"mapped\",[28729]],[[194836,194836],\"mapped\",[28702]],[[194837,194837],\"mapped\",[28699]],[[194838,194838],\"mapped\",[15766]],[[194839,194839],\"mapped\",[28746]],[[194840,194840],\"mapped\",[28797]],[[194841,194841],\"mapped\",[28791]],[[194842,194842],\"mapped\",[28845]],[[194843,194843],\"mapped\",[132389]],[[194844,194844],\"mapped\",[28997]],[[194845,194845],\"mapped\",[148067]],[[194846,194846],\"mapped\",[29084]],[[194847,194847],\"disallowed\"],[[194848,194848],\"mapped\",[29224]],[[194849,194849],\"mapped\",[29237]],[[194850,194850],\"mapped\",[29264]],[[194851,194851],\"mapped\",[149000]],[[194852,194852],\"mapped\",[29312]],[[194853,194853],\"mapped\",[29333]],[[194854,194854],\"mapped\",[149301]],[[194855,194855],\"mapped\",[149524]],[[194856,194856],\"mapped\",[29562]],[[194857,194857],\"mapped\",[29579]],[[194858,194858],\"mapped\",[16044]],[[194859,194859],\"mapped\",[29605]],[[194860,194861],\"mapped\",[16056]],[[194862,194862],\"mapped\",[29767]],[[194863,194863],\"mapped\",[29788]],[[194864,194864],\"mapped\",[29809]],[[194865,194865],\"mapped\",[29829]],[[194866,194866],\"mapped\",[29898]],[[194867,194867],\"mapped\",[16155]],[[194868,194868],\"mapped\",[29988]],[[194869,194869],\"mapped\",[150582]],[[194870,194870],\"mapped\",[30014]],[[194871,194871],\"mapped\",[150674]],[[194872,194872],\"mapped\",[30064]],[[194873,194873],\"mapped\",[139679]],[[194874,194874],\"mapped\",[30224]],[[194875,194875],\"mapped\",[151457]],[[194876,194876],\"mapped\",[151480]],[[194877,194877],\"mapped\",[151620]],[[194878,194878],\"mapped\",[16380]],[[194879,194879],\"mapped\",[16392]],[[194880,194880],\"mapped\",[30452]],[[194881,194881],\"mapped\",[151795]],[[194882,194882],\"mapped\",[151794]],[[194883,194883],\"mapped\",[151833]],[[194884,194884],\"mapped\",[151859]],[[194885,194885],\"mapped\",[30494]],[[194886,194887],\"mapped\",[30495]],[[194888,194888],\"mapped\",[30538]],[[194889,194889],\"mapped\",[16441]],[[194890,194890],\"mapped\",[30603]],[[194891,194891],\"mapped\",[16454]],[[194892,194892],\"mapped\",[16534]],[[194893,194893],\"mapped\",[152605]],[[194894,194894],\"mapped\",[30798]],[[194895,194895],\"mapped\",[30860]],[[194896,194896],\"mapped\",[30924]],[[194897,194897],\"mapped\",[16611]],[[194898,194898],\"mapped\",[153126]],[[194899,194899],\"mapped\",[31062]],[[194900,194900],\"mapped\",[153242]],[[194901,194901],\"mapped\",[153285]],[[194902,194902],\"mapped\",[31119]],[[194903,194903],\"mapped\",[31211]],[[194904,194904],\"mapped\",[16687]],[[194905,194905],\"mapped\",[31296]],[[194906,194906],\"mapped\",[31306]],[[194907,194907],\"mapped\",[31311]],[[194908,194908],\"mapped\",[153980]],[[194909,194910],\"mapped\",[154279]],[[194911,194911],\"disallowed\"],[[194912,194912],\"mapped\",[16898]],[[194913,194913],\"mapped\",[154539]],[[194914,194914],\"mapped\",[31686]],[[194915,194915],\"mapped\",[31689]],[[194916,194916],\"mapped\",[16935]],[[194917,194917],\"mapped\",[154752]],[[194918,194918],\"mapped\",[31954]],[[194919,194919],\"mapped\",[17056]],[[194920,194920],\"mapped\",[31976]],[[194921,194921],\"mapped\",[31971]],[[194922,194922],\"mapped\",[32000]],[[194923,194923],\"mapped\",[155526]],[[194924,194924],\"mapped\",[32099]],[[194925,194925],\"mapped\",[17153]],[[194926,194926],\"mapped\",[32199]],[[194927,194927],\"mapped\",[32258]],[[194928,194928],\"mapped\",[32325]],[[194929,194929],\"mapped\",[17204]],[[194930,194930],\"mapped\",[156200]],[[194931,194931],\"mapped\",[156231]],[[194932,194932],\"mapped\",[17241]],[[194933,194933],\"mapped\",[156377]],[[194934,194934],\"mapped\",[32634]],[[194935,194935],\"mapped\",[156478]],[[194936,194936],\"mapped\",[32661]],[[194937,194937],\"mapped\",[32762]],[[194938,194938],\"mapped\",[32773]],[[194939,194939],\"mapped\",[156890]],[[194940,194940],\"mapped\",[156963]],[[194941,194941],\"mapped\",[32864]],[[194942,194942],\"mapped\",[157096]],[[194943,194943],\"mapped\",[32880]],[[194944,194944],\"mapped\",[144223]],[[194945,194945],\"mapped\",[17365]],[[194946,194946],\"mapped\",[32946]],[[194947,194947],\"mapped\",[33027]],[[194948,194948],\"mapped\",[17419]],[[194949,194949],\"mapped\",[33086]],[[194950,194950],\"mapped\",[23221]],[[194951,194951],\"mapped\",[157607]],[[194952,194952],\"mapped\",[157621]],[[194953,194953],\"mapped\",[144275]],[[194954,194954],\"mapped\",[144284]],[[194955,194955],\"mapped\",[33281]],[[194956,194956],\"mapped\",[33284]],[[194957,194957],\"mapped\",[36766]],[[194958,194958],\"mapped\",[17515]],[[194959,194959],\"mapped\",[33425]],[[194960,194960],\"mapped\",[33419]],[[194961,194961],\"mapped\",[33437]],[[194962,194962],\"mapped\",[21171]],[[194963,194963],\"mapped\",[33457]],[[194964,194964],\"mapped\",[33459]],[[194965,194965],\"mapped\",[33469]],[[194966,194966],\"mapped\",[33510]],[[194967,194967],\"mapped\",[158524]],[[194968,194968],\"mapped\",[33509]],[[194969,194969],\"mapped\",[33565]],[[194970,194970],\"mapped\",[33635]],[[194971,194971],\"mapped\",[33709]],[[194972,194972],\"mapped\",[33571]],[[194973,194973],\"mapped\",[33725]],[[194974,194974],\"mapped\",[33767]],[[194975,194975],\"mapped\",[33879]],[[194976,194976],\"mapped\",[33619]],[[194977,194977],\"mapped\",[33738]],[[194978,194978],\"mapped\",[33740]],[[194979,194979],\"mapped\",[33756]],[[194980,194980],\"mapped\",[158774]],[[194981,194981],\"mapped\",[159083]],[[194982,194982],\"mapped\",[158933]],[[194983,194983],\"mapped\",[17707]],[[194984,194984],\"mapped\",[34033]],[[194985,194985],\"mapped\",[34035]],[[194986,194986],\"mapped\",[34070]],[[194987,194987],\"mapped\",[160714]],[[194988,194988],\"mapped\",[34148]],[[194989,194989],\"mapped\",[159532]],[[194990,194990],\"mapped\",[17757]],[[194991,194991],\"mapped\",[17761]],[[194992,194992],\"mapped\",[159665]],[[194993,194993],\"mapped\",[159954]],[[194994,194994],\"mapped\",[17771]],[[194995,194995],\"mapped\",[34384]],[[194996,194996],\"mapped\",[34396]],[[194997,194997],\"mapped\",[34407]],[[194998,194998],\"mapped\",[34409]],[[194999,194999],\"mapped\",[34473]],[[195000,195000],\"mapped\",[34440]],[[195001,195001],\"mapped\",[34574]],[[195002,195002],\"mapped\",[34530]],[[195003,195003],\"mapped\",[34681]],[[195004,195004],\"mapped\",[34600]],[[195005,195005],\"mapped\",[34667]],[[195006,195006],\"mapped\",[34694]],[[195007,195007],\"disallowed\"],[[195008,195008],\"mapped\",[34785]],[[195009,195009],\"mapped\",[34817]],[[195010,195010],\"mapped\",[17913]],[[195011,195011],\"mapped\",[34912]],[[195012,195012],\"mapped\",[34915]],[[195013,195013],\"mapped\",[161383]],[[195014,195014],\"mapped\",[35031]],[[195015,195015],\"mapped\",[35038]],[[195016,195016],\"mapped\",[17973]],[[195017,195017],\"mapped\",[35066]],[[195018,195018],\"mapped\",[13499]],[[195019,195019],\"mapped\",[161966]],[[195020,195020],\"mapped\",[162150]],[[195021,195021],\"mapped\",[18110]],[[195022,195022],\"mapped\",[18119]],[[195023,195023],\"mapped\",[35488]],[[195024,195024],\"mapped\",[35565]],[[195025,195025],\"mapped\",[35722]],[[195026,195026],\"mapped\",[35925]],[[195027,195027],\"mapped\",[162984]],[[195028,195028],\"mapped\",[36011]],[[195029,195029],\"mapped\",[36033]],[[195030,195030],\"mapped\",[36123]],[[195031,195031],\"mapped\",[36215]],[[195032,195032],\"mapped\",[163631]],[[195033,195033],\"mapped\",[133124]],[[195034,195034],\"mapped\",[36299]],[[195035,195035],\"mapped\",[36284]],[[195036,195036],\"mapped\",[36336]],[[195037,195037],\"mapped\",[133342]],[[195038,195038],\"mapped\",[36564]],[[195039,195039],\"mapped\",[36664]],[[195040,195040],\"mapped\",[165330]],[[195041,195041],\"mapped\",[165357]],[[195042,195042],\"mapped\",[37012]],[[195043,195043],\"mapped\",[37105]],[[195044,195044],\"mapped\",[37137]],[[195045,195045],\"mapped\",[165678]],[[195046,195046],\"mapped\",[37147]],[[195047,195047],\"mapped\",[37432]],[[195048,195048],\"mapped\",[37591]],[[195049,195049],\"mapped\",[37592]],[[195050,195050],\"mapped\",[37500]],[[195051,195051],\"mapped\",[37881]],[[195052,195052],\"mapped\",[37909]],[[195053,195053],\"mapped\",[166906]],[[195054,195054],\"mapped\",[38283]],[[195055,195055],\"mapped\",[18837]],[[195056,195056],\"mapped\",[38327]],[[195057,195057],\"mapped\",[167287]],[[195058,195058],\"mapped\",[18918]],[[195059,195059],\"mapped\",[38595]],[[195060,195060],\"mapped\",[23986]],[[195061,195061],\"mapped\",[38691]],[[195062,195062],\"mapped\",[168261]],[[195063,195063],\"mapped\",[168474]],[[195064,195064],\"mapped\",[19054]],[[195065,195065],\"mapped\",[19062]],[[195066,195066],\"mapped\",[38880]],[[195067,195067],\"mapped\",[168970]],[[195068,195068],\"mapped\",[19122]],[[195069,195069],\"mapped\",[169110]],[[195070,195071],\"mapped\",[38923]],[[195072,195072],\"mapped\",[38953]],[[195073,195073],\"mapped\",[169398]],[[195074,195074],\"mapped\",[39138]],[[195075,195075],\"mapped\",[19251]],[[195076,195076],\"mapped\",[39209]],[[195077,195077],\"mapped\",[39335]],[[195078,195078],\"mapped\",[39362]],[[195079,195079],\"mapped\",[39422]],[[195080,195080],\"mapped\",[19406]],[[195081,195081],\"mapped\",[170800]],[[195082,195082],\"mapped\",[39698]],[[195083,195083],\"mapped\",[40000]],[[195084,195084],\"mapped\",[40189]],[[195085,195085],\"mapped\",[19662]],[[195086,195086],\"mapped\",[19693]],[[195087,195087],\"mapped\",[40295]],[[195088,195088],\"mapped\",[172238]],[[195089,195089],\"mapped\",[19704]],[[195090,195090],\"mapped\",[172293]],[[195091,195091],\"mapped\",[172558]],[[195092,195092],\"mapped\",[172689]],[[195093,195093],\"mapped\",[40635]],[[195094,195094],\"mapped\",[19798]],[[195095,195095],\"mapped\",[40697]],[[195096,195096],\"mapped\",[40702]],[[195097,195097],\"mapped\",[40709]],[[195098,195098],\"mapped\",[40719]],[[195099,195099],\"mapped\",[40726]],[[195100,195100],\"mapped\",[40763]],[[195101,195101],\"mapped\",[173568]],[[195102,196605],\"disallowed\"],[[196606,196607],\"disallowed\"],[[196608,262141],\"disallowed\"],[[262142,262143],\"disallowed\"],[[262144,327677],\"disallowed\"],[[327678,327679],\"disallowed\"],[[327680,393213],\"disallowed\"],[[393214,393215],\"disallowed\"],[[393216,458749],\"disallowed\"],[[458750,458751],\"disallowed\"],[[458752,524285],\"disallowed\"],[[524286,524287],\"disallowed\"],[[524288,589821],\"disallowed\"],[[589822,589823],\"disallowed\"],[[589824,655357],\"disallowed\"],[[655358,655359],\"disallowed\"],[[655360,720893],\"disallowed\"],[[720894,720895],\"disallowed\"],[[720896,786429],\"disallowed\"],[[786430,786431],\"disallowed\"],[[786432,851965],\"disallowed\"],[[851966,851967],\"disallowed\"],[[851968,917501],\"disallowed\"],[[917502,917503],\"disallowed\"],[[917504,917504],\"disallowed\"],[[917505,917505],\"disallowed\"],[[917506,917535],\"disallowed\"],[[917536,917631],\"disallowed\"],[[917632,917759],\"disallowed\"],[[917760,917999],\"ignored\"],[[918000,983037],\"disallowed\"],[[983038,983039],\"disallowed\"],[[983040,1048573],\"disallowed\"],[[1048574,1048575],\"disallowed\"],[[1048576,1114109],\"disallowed\"],[[1114110,1114111],\"disallowed\"]]", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\nexports.AbortError = AbortError;\n", "import type { Handler } from \"@netlify/functions\"\n\n\nconst { MongoClient } = require('mongodb');\nconst fetch = require('node-fetch');\n\nconst username = process.env.USERNAME;\nconst password = process.env.PASSWORD;\n\nconst uri = `mongodb+srv://${username}:${password}@shakespeare-yt-data.2msvzwp.mongodb.net/?retryWrites=true&w=majority&appName=Shakespeare-YT-data`\n\nconst handler: Handler = async () => {\n    const apiKey = process.env.YT_API_KEY;\n    const client = new MongoClient(uri);\n\n\n    if (!apiKey) {\n        return {\n            statusCode: 500,\n            body: JSON.stringify({ error: \"Missing API Key\" })\n        };\n    }\n\n    try {\n\n        await client.connect();\n        const db = client.db(\"youtube_data\");\n        const collection = db.collection(\"videos\");\n\n        const existing = await collection.findOne({ _id: \"latest\" });\n        const now = new Date();\n        const lastFetched = existing?.fetchedAt ? new Date(existing.fetchedAt) : new Date(0);\n        const hoursSince = (now.getTime() - lastFetched.getTime()) / (1000 * 60 * 60);\n\n\n        if (hoursSince < 24 && existing?.data) {\n            return {\n                statusCode: 200,\n                body: JSON.stringify(existing.data)\n            }\n        }\n\n        const searchURL = `https://youtube.googleapis.com/youtube/v3/search?key=${apiKey}&part=snippet&channelId=UCyAA_HbOJZ_-quwmcLIKNXA&order=viewCount&pageInfo.resultsPerPage=25&maxResults=25`\n\n        const searchRes = await fetch(searchURL);\n        const searchData = await searchRes.json();\n\n        const videoIds = searchData.items\n            .filter((item: any) => item.id.kind === \"youtube#video\")\n            .map((item: any) => item.id.videoId)\n            .join(\",\");\n\n        if (!videoIds) {\n            return {\n                statusCode: 404,\n                body: JSON.stringify({ error: \"No videos found!\" })\n            }\n        }\n\n        const detailsURL = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&id=${videoIds}&part=contentDetails,statistics,snippet`\n\n        const detailsRes = await fetch(detailsURL);\n        const detailsData = await detailsRes.json();\n\n        await collection.updateOne(\n            { _id: \"latest\" },\n            {\n                $set: {\n                    fetchedAt: now.toISOString(),\n                    data: detailsData.items,\n                },\n            },\n            { upsert: true }\n        )\n\n        return {\n            statusCode: 200,\n            body: JSON.stringify(detailsData.items)\n        };\n\n    } catch (error: any) {\n        return {\n            statusCode: 500,\n            body: JSON.stringify({ error: error.message || \"Unexpected error!\" })\n        }\n    } finally {\n        await client.close();\n    }\n}\n\nexport { handler };"],
  "mappings": "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GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,ccAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,ccAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,ccAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,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AG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,OAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,OAAI,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,MAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MA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CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,GAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,ccAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,gBAAM,GAAE,CAAC,OAAM,GAAE,gBAAM,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,ccAAI,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,sCAAQ,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,MAAM,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,WAAM,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,YAAO,GAAE,CAAC,OAAM,GAAE,acAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,+FAAoB,GAAE,CAAC,OAAM,GAAE,6CAAU,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,SAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,coBAAM,GAAE,CAAC,QAAO,GAAE,oBAAM,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,oBAAM,GAAE,CAAC,QAAO,GAAE,oeAAK,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,KAAK,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,cAAI,GAAE,CAAC,QAAO,GAAE,cAAI,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE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AS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,YAAY,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CA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AE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,YAAY,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,IAAG,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,0BAAyB,CAAC,IAAG,KAAI,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,GAAG,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,MAAK,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,MAAK,MAAK,MAAK,IAAI,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,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,IAAI,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,KAAK,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,SAAQ,CAAC,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,OAAO,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,MAAK,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,YAAY,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,IAAG,OAAM,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BA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0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,0BAAyB,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,UAAS,CAAC,EAAE,CAAC,GAAE,C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",
  "names": ["regexp", "buffer", "console", "StringUtils.validateStringCharacters", "StringUtils.removeLeadingZerosAndExplicitPlus", "constants.JS_INT_MIN", "constants.JS_INT_MAX", "constants.BSON_INT32_MIN", "constants.BSON_INT32_MAX", "constants.BSON_VERSION_SYMBOL", "constants.BSON_MAJOR_VERSION", "constants.BSON_DATA_STRING", "constants.BSON_DATA_OID", "i", "constants.BSON_DATA_INT", "constants.BSON_DATA_NUMBER", "constants.BSON_DATA_DATE", "constants.BSON_DATA_BOOLEAN", "constants.BSON_DATA_OBJECT", "constants.BSON_DATA_ARRAY", "constants.BSON_DATA_UNDEFINED", "constants.BSON_DATA_NULL", "constants.BSON_DATA_LONG", "constants.BSON_DATA_DECIMAL128", "constants.BSON_DATA_BINARY", "constants.BSON_BINARY_SUBTYPE_UUID_NEW", "constants.BSON_DATA_REGEXP", "constants.BSON_DATA_SYMBOL", "constants.BSON_DATA_TIMESTAMP", "constants.BSON_DATA_MIN_KEY", "constants.BSON_DATA_MAX_KEY", "constants.BSON_DATA_CODE", "constants.BSON_DATA_CODE_W_SCOPE", "constants.BSON_DATA_DBPOINTER", "constants.BSON_BINARY_SUBTYPE_DEFAULT", "exports", "exports", "isNotWritablePrimaryError", "exports", "exports", "exports", "sameServerSelector", "exports", "exports", "exports", "cachedElement", "exports", "exports", "exports", "exports", "filterOptions", "ns", "url", "request", "uri", "exports", "exports", "exports", "exports", "maxDocumentLengthEnsurer", "value", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "writeResult", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "username", "exports", "exports", "exports", "username", "exports", "error", "exports", "exports", "exports", "exports", "username", "password", "exports", "exports", "exports", "require_utils", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "res", "username", "password", "exports", "module", "exports", "exports", "exports", "Function", "V", "tmp", "nextItem", "exports", "exports", "URL", "exports", "URL", "exports", "URL", "exports", "uri", "exports", "uri", "username", "password", "exports", "module", "exports", "process", "name", "exports", "exports", "ResponseType", "messageBody", "exports", "exports", "exports", "exports", "exports", "username", "exports", "exports", "exports", "exports", "result", "exports", "exports", "uri", "exports", "exports", "exports", "exports", "serverDescription", "maxSetVersion", "maxElectionId", "exports", "exports", "exports", "session", "exports", "exports", "exports", "exports", "exports", "message", "handshakeDoc", "handshakeOptions", "provider", "exports", "exports", "exports", "exports", "exports", "exports", "connection", "exports", "value", "uri", "options", "password", "exports", "exports", "exports", "username", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "username", "password", "exports", "module", "exports", "module", "exports", "module", "exports", "exports", "module", "username", "password", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "sd", "exports", "exports", "MongoClient", "exports", "MongoClient", "exports", "error", "exports", "exports", "exports", "exports", "username", "exports", "exports", "remainingTimeMS", "exports", "index", "exports", "exports", "require_lib", "exports", "module", "require_utils", "exports", "module", "require_mappingTable", "exports", "module", "require_tr46", "exports", "module", "require_url_state_machine", "exports", "module", "res", "username", "password", "require_URL_impl", "exports", "require_URL", "exports", "module", "URL", "exports", "require_lib", "exports", "module", "URL", "isDomainOrSubdomain", "isSameProtocol", "fetch", "abort", "abortAndFinalize"]
}
